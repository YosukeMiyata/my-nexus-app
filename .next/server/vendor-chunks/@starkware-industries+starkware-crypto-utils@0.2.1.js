"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@starkware-industries+starkware-crypto-utils@0.2.1";
exports.ids = ["vendor-chunks/@starkware-industries+starkware-crypto-utils@0.2.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@starkware-industries+starkware-crypto-utils@0.2.1/node_modules/@starkware-industries/starkware-crypto-utils/dist/index.es.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@starkware-industries+starkware-crypto-utils@0.2.1/node_modules/@starkware-industries/starkware-crypto-utils/dist/index.es.js ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Range: () => (/* binding */ l0),\n/* harmony export */   assertInMultiRange: () => (/* binding */ ca),\n/* harmony export */   assertInRange: () => (/* binding */ Ue),\n/* harmony export */   asset: () => (/* binding */ W8),\n/* harmony export */   constantPoints: () => (/* binding */ fu),\n/* harmony export */   ec: () => (/* binding */ Mt),\n/* harmony export */   getLimitOrderMsgHash: () => (/* binding */ J8),\n/* harmony export */   getLimitOrderMsgHashWithFee: () => (/* binding */ Y8),\n/* harmony export */   getTransferMsgHash: () => (/* binding */ X8),\n/* harmony export */   getTransferMsgHashWithFee: () => (/* binding */ Q8),\n/* harmony export */   keyDerivation: () => (/* binding */ t5),\n/* harmony export */   maxEcdsaVal: () => (/* binding */ Tt),\n/* harmony export */   messageUtils: () => (/* binding */ Z8),\n/* harmony export */   pedersen: () => (/* binding */ zr),\n/* harmony export */   prime: () => (/* binding */ Ur),\n/* harmony export */   shiftPoint: () => (/* binding */ N8),\n/* harmony export */   sign: () => (/* binding */ e5),\n/* harmony export */   verify: () => (/* binding */ r5)\n/* harmony export */ });\nvar be = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction Ki(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction Pc(e) {\n  if (e.__esModule)\n    return e;\n  var r = e.default;\n  if (typeof r == \"function\") {\n    var t = function i() {\n      return this instanceof i ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);\n    };\n    t.prototype = r.prototype;\n  } else\n    t = {};\n  return Object.defineProperty(t, \"__esModule\", { value: !0 }), Object.keys(e).forEach(function(i) {\n    var c = Object.getOwnPropertyDescriptor(e, i);\n    Object.defineProperty(t, i, c.get ? c : {\n      enumerable: !0,\n      get: function() {\n        return e[i];\n      }\n    });\n  }), t;\n}\nvar qn = { exports: {} }, Nn = {}, Ma = {}, Oc = {}, qc = function() {\n  if (typeof Symbol != \"function\" || typeof Object.getOwnPropertySymbols != \"function\")\n    return !1;\n  if (typeof Symbol.iterator == \"symbol\")\n    return !0;\n  var r = {}, t = Symbol(\"test\"), i = Object(t);\n  if (typeof t == \"string\" || Object.prototype.toString.call(t) !== \"[object Symbol]\" || Object.prototype.toString.call(i) !== \"[object Symbol]\")\n    return !1;\n  var c = 42;\n  r[t] = c;\n  for (t in r)\n    return !1;\n  if (typeof Object.keys == \"function\" && Object.keys(r).length !== 0 || typeof Object.getOwnPropertyNames == \"function\" && Object.getOwnPropertyNames(r).length !== 0)\n    return !1;\n  var n = Object.getOwnPropertySymbols(r);\n  if (n.length !== 1 || n[0] !== t || !Object.prototype.propertyIsEnumerable.call(r, t))\n    return !1;\n  if (typeof Object.getOwnPropertyDescriptor == \"function\") {\n    var x = Object.getOwnPropertyDescriptor(r, t);\n    if (x.value !== c || x.enumerable !== !0)\n      return !1;\n  }\n  return !0;\n}, su = qc, b0 = function() {\n  return su() && !!Symbol.toStringTag;\n}, Fn, oo;\nfunction uu() {\n  if (oo)\n    return Fn;\n  oo = 1;\n  var e = typeof Symbol < \"u\" && Symbol, r = qc;\n  return Fn = function() {\n    return typeof e != \"function\" || typeof Symbol != \"function\" || typeof e(\"foo\") != \"symbol\" || typeof Symbol(\"bar\") != \"symbol\" ? !1 : r();\n  }, Fn;\n}\nvar Cn, co;\nfunction lu() {\n  if (co)\n    return Cn;\n  co = 1;\n  var e = {\n    foo: {}\n  }, r = Object;\n  return Cn = function() {\n    return { __proto__: e }.foo === e.foo && !({ __proto__: null } instanceof r);\n  }, Cn;\n}\nvar Ln, so;\nfunction bu() {\n  if (so)\n    return Ln;\n  so = 1;\n  var e = \"Function.prototype.bind called on incompatible \", r = Array.prototype.slice, t = Object.prototype.toString, i = \"[object Function]\";\n  return Ln = function(n) {\n    var x = this;\n    if (typeof x != \"function\" || t.call(x) !== i)\n      throw new TypeError(e + x);\n    for (var m = r.call(arguments, 1), k, B = function() {\n      if (this instanceof k) {\n        var L = x.apply(\n          this,\n          m.concat(r.call(arguments))\n        );\n        return Object(L) === L ? L : this;\n      } else\n        return x.apply(\n          n,\n          m.concat(r.call(arguments))\n        );\n    }, z = Math.max(0, x.length - m.length), C = [], F = 0; F < z; F++)\n      C.push(\"$\" + F);\n    if (k = Function(\"binder\", \"return function (\" + C.join(\",\") + \"){ return binder.apply(this,arguments); }\")(B), x.prototype) {\n      var T = function() {\n      };\n      T.prototype = x.prototype, k.prototype = new T(), T.prototype = null;\n    }\n    return k;\n  }, Ln;\n}\nvar Un, uo;\nfunction h0() {\n  if (uo)\n    return Un;\n  uo = 1;\n  var e = bu();\n  return Un = Function.prototype.bind || e, Un;\n}\nvar $n, lo;\nfunction hu() {\n  if (lo)\n    return $n;\n  lo = 1;\n  var e = h0();\n  return $n = e.call(Function.call, Object.prototype.hasOwnProperty), $n;\n}\nvar Dn, bo;\nfunction Hi() {\n  if (bo)\n    return Dn;\n  bo = 1;\n  var e, r = SyntaxError, t = Function, i = TypeError, c = function(p) {\n    try {\n      return t('\"use strict\"; return (' + p + \").constructor;\")();\n    } catch {\n    }\n  }, n = Object.getOwnPropertyDescriptor;\n  if (n)\n    try {\n      n({}, \"\");\n    } catch {\n      n = null;\n    }\n  var x = function() {\n    throw new i();\n  }, m = n ? function() {\n    try {\n      return arguments.callee, x;\n    } catch {\n      try {\n        return n(arguments, \"callee\").get;\n      } catch {\n        return x;\n      }\n    }\n  }() : x, k = uu()(), B = lu()(), z = Object.getPrototypeOf || (B ? function(p) {\n    return p.__proto__;\n  } : null), C = {}, F = typeof Uint8Array > \"u\" || !z ? e : z(Uint8Array), T = {\n    \"%AggregateError%\": typeof AggregateError > \"u\" ? e : AggregateError,\n    \"%Array%\": Array,\n    \"%ArrayBuffer%\": typeof ArrayBuffer > \"u\" ? e : ArrayBuffer,\n    \"%ArrayIteratorPrototype%\": k && z ? z([][Symbol.iterator]()) : e,\n    \"%AsyncFromSyncIteratorPrototype%\": e,\n    \"%AsyncFunction%\": C,\n    \"%AsyncGenerator%\": C,\n    \"%AsyncGeneratorFunction%\": C,\n    \"%AsyncIteratorPrototype%\": C,\n    \"%Atomics%\": typeof Atomics > \"u\" ? e : Atomics,\n    \"%BigInt%\": typeof BigInt > \"u\" ? e : BigInt,\n    \"%BigInt64Array%\": typeof BigInt64Array > \"u\" ? e : BigInt64Array,\n    \"%BigUint64Array%\": typeof BigUint64Array > \"u\" ? e : BigUint64Array,\n    \"%Boolean%\": Boolean,\n    \"%DataView%\": typeof DataView > \"u\" ? e : DataView,\n    \"%Date%\": Date,\n    \"%decodeURI%\": decodeURI,\n    \"%decodeURIComponent%\": decodeURIComponent,\n    \"%encodeURI%\": encodeURI,\n    \"%encodeURIComponent%\": encodeURIComponent,\n    \"%Error%\": Error,\n    \"%eval%\": eval,\n    // eslint-disable-line no-eval\n    \"%EvalError%\": EvalError,\n    \"%Float32Array%\": typeof Float32Array > \"u\" ? e : Float32Array,\n    \"%Float64Array%\": typeof Float64Array > \"u\" ? e : Float64Array,\n    \"%FinalizationRegistry%\": typeof FinalizationRegistry > \"u\" ? e : FinalizationRegistry,\n    \"%Function%\": t,\n    \"%GeneratorFunction%\": C,\n    \"%Int8Array%\": typeof Int8Array > \"u\" ? e : Int8Array,\n    \"%Int16Array%\": typeof Int16Array > \"u\" ? e : Int16Array,\n    \"%Int32Array%\": typeof Int32Array > \"u\" ? e : Int32Array,\n    \"%isFinite%\": isFinite,\n    \"%isNaN%\": isNaN,\n    \"%IteratorPrototype%\": k && z ? z(z([][Symbol.iterator]())) : e,\n    \"%JSON%\": typeof JSON == \"object\" ? JSON : e,\n    \"%Map%\": typeof Map > \"u\" ? e : Map,\n    \"%MapIteratorPrototype%\": typeof Map > \"u\" || !k || !z ? e : z((/* @__PURE__ */ new Map())[Symbol.iterator]()),\n    \"%Math%\": Math,\n    \"%Number%\": Number,\n    \"%Object%\": Object,\n    \"%parseFloat%\": parseFloat,\n    \"%parseInt%\": parseInt,\n    \"%Promise%\": typeof Promise > \"u\" ? e : Promise,\n    \"%Proxy%\": typeof Proxy > \"u\" ? e : Proxy,\n    \"%RangeError%\": RangeError,\n    \"%ReferenceError%\": ReferenceError,\n    \"%Reflect%\": typeof Reflect > \"u\" ? e : Reflect,\n    \"%RegExp%\": RegExp,\n    \"%Set%\": typeof Set > \"u\" ? e : Set,\n    \"%SetIteratorPrototype%\": typeof Set > \"u\" || !k || !z ? e : z((/* @__PURE__ */ new Set())[Symbol.iterator]()),\n    \"%SharedArrayBuffer%\": typeof SharedArrayBuffer > \"u\" ? e : SharedArrayBuffer,\n    \"%String%\": String,\n    \"%StringIteratorPrototype%\": k && z ? z(\"\"[Symbol.iterator]()) : e,\n    \"%Symbol%\": k ? Symbol : e,\n    \"%SyntaxError%\": r,\n    \"%ThrowTypeError%\": m,\n    \"%TypedArray%\": F,\n    \"%TypeError%\": i,\n    \"%Uint8Array%\": typeof Uint8Array > \"u\" ? e : Uint8Array,\n    \"%Uint8ClampedArray%\": typeof Uint8ClampedArray > \"u\" ? e : Uint8ClampedArray,\n    \"%Uint16Array%\": typeof Uint16Array > \"u\" ? e : Uint16Array,\n    \"%Uint32Array%\": typeof Uint32Array > \"u\" ? e : Uint32Array,\n    \"%URIError%\": URIError,\n    \"%WeakMap%\": typeof WeakMap > \"u\" ? e : WeakMap,\n    \"%WeakRef%\": typeof WeakRef > \"u\" ? e : WeakRef,\n    \"%WeakSet%\": typeof WeakSet > \"u\" ? e : WeakSet\n  };\n  if (z)\n    try {\n      null.error;\n    } catch (p) {\n      var L = z(z(p));\n      T[\"%Error.prototype%\"] = L;\n    }\n  var O = function p(s) {\n    var a;\n    if (s === \"%AsyncFunction%\")\n      a = c(\"async function () {}\");\n    else if (s === \"%GeneratorFunction%\")\n      a = c(\"function* () {}\");\n    else if (s === \"%AsyncGeneratorFunction%\")\n      a = c(\"async function* () {}\");\n    else if (s === \"%AsyncGenerator%\") {\n      var o = p(\"%AsyncGeneratorFunction%\");\n      o && (a = o.prototype);\n    } else if (s === \"%AsyncIteratorPrototype%\") {\n      var u = p(\"%AsyncGenerator%\");\n      u && z && (a = z(u.prototype));\n    }\n    return T[s] = a, a;\n  }, q = {\n    \"%ArrayBufferPrototype%\": [\"ArrayBuffer\", \"prototype\"],\n    \"%ArrayPrototype%\": [\"Array\", \"prototype\"],\n    \"%ArrayProto_entries%\": [\"Array\", \"prototype\", \"entries\"],\n    \"%ArrayProto_forEach%\": [\"Array\", \"prototype\", \"forEach\"],\n    \"%ArrayProto_keys%\": [\"Array\", \"prototype\", \"keys\"],\n    \"%ArrayProto_values%\": [\"Array\", \"prototype\", \"values\"],\n    \"%AsyncFunctionPrototype%\": [\"AsyncFunction\", \"prototype\"],\n    \"%AsyncGenerator%\": [\"AsyncGeneratorFunction\", \"prototype\"],\n    \"%AsyncGeneratorPrototype%\": [\"AsyncGeneratorFunction\", \"prototype\", \"prototype\"],\n    \"%BooleanPrototype%\": [\"Boolean\", \"prototype\"],\n    \"%DataViewPrototype%\": [\"DataView\", \"prototype\"],\n    \"%DatePrototype%\": [\"Date\", \"prototype\"],\n    \"%ErrorPrototype%\": [\"Error\", \"prototype\"],\n    \"%EvalErrorPrototype%\": [\"EvalError\", \"prototype\"],\n    \"%Float32ArrayPrototype%\": [\"Float32Array\", \"prototype\"],\n    \"%Float64ArrayPrototype%\": [\"Float64Array\", \"prototype\"],\n    \"%FunctionPrototype%\": [\"Function\", \"prototype\"],\n    \"%Generator%\": [\"GeneratorFunction\", \"prototype\"],\n    \"%GeneratorPrototype%\": [\"GeneratorFunction\", \"prototype\", \"prototype\"],\n    \"%Int8ArrayPrototype%\": [\"Int8Array\", \"prototype\"],\n    \"%Int16ArrayPrototype%\": [\"Int16Array\", \"prototype\"],\n    \"%Int32ArrayPrototype%\": [\"Int32Array\", \"prototype\"],\n    \"%JSONParse%\": [\"JSON\", \"parse\"],\n    \"%JSONStringify%\": [\"JSON\", \"stringify\"],\n    \"%MapPrototype%\": [\"Map\", \"prototype\"],\n    \"%NumberPrototype%\": [\"Number\", \"prototype\"],\n    \"%ObjectPrototype%\": [\"Object\", \"prototype\"],\n    \"%ObjProto_toString%\": [\"Object\", \"prototype\", \"toString\"],\n    \"%ObjProto_valueOf%\": [\"Object\", \"prototype\", \"valueOf\"],\n    \"%PromisePrototype%\": [\"Promise\", \"prototype\"],\n    \"%PromiseProto_then%\": [\"Promise\", \"prototype\", \"then\"],\n    \"%Promise_all%\": [\"Promise\", \"all\"],\n    \"%Promise_reject%\": [\"Promise\", \"reject\"],\n    \"%Promise_resolve%\": [\"Promise\", \"resolve\"],\n    \"%RangeErrorPrototype%\": [\"RangeError\", \"prototype\"],\n    \"%ReferenceErrorPrototype%\": [\"ReferenceError\", \"prototype\"],\n    \"%RegExpPrototype%\": [\"RegExp\", \"prototype\"],\n    \"%SetPrototype%\": [\"Set\", \"prototype\"],\n    \"%SharedArrayBufferPrototype%\": [\"SharedArrayBuffer\", \"prototype\"],\n    \"%StringPrototype%\": [\"String\", \"prototype\"],\n    \"%SymbolPrototype%\": [\"Symbol\", \"prototype\"],\n    \"%SyntaxErrorPrototype%\": [\"SyntaxError\", \"prototype\"],\n    \"%TypedArrayPrototype%\": [\"TypedArray\", \"prototype\"],\n    \"%TypeErrorPrototype%\": [\"TypeError\", \"prototype\"],\n    \"%Uint8ArrayPrototype%\": [\"Uint8Array\", \"prototype\"],\n    \"%Uint8ClampedArrayPrototype%\": [\"Uint8ClampedArray\", \"prototype\"],\n    \"%Uint16ArrayPrototype%\": [\"Uint16Array\", \"prototype\"],\n    \"%Uint32ArrayPrototype%\": [\"Uint32Array\", \"prototype\"],\n    \"%URIErrorPrototype%\": [\"URIError\", \"prototype\"],\n    \"%WeakMapPrototype%\": [\"WeakMap\", \"prototype\"],\n    \"%WeakSetPrototype%\": [\"WeakSet\", \"prototype\"]\n  }, R = h0(), U = hu(), H = R.call(Function.call, Array.prototype.concat), Z = R.call(Function.apply, Array.prototype.splice), W = R.call(Function.call, String.prototype.replace), Y = R.call(Function.call, String.prototype.slice), ne = R.call(Function.call, RegExp.prototype.exec), D = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g, V = /\\\\(\\\\)?/g, G = function(s) {\n    var a = Y(s, 0, 1), o = Y(s, -1);\n    if (a === \"%\" && o !== \"%\")\n      throw new r(\"invalid intrinsic syntax, expected closing `%`\");\n    if (o === \"%\" && a !== \"%\")\n      throw new r(\"invalid intrinsic syntax, expected opening `%`\");\n    var u = [];\n    return W(s, D, function(h, v, g, l) {\n      u[u.length] = g ? W(l, V, \"$1\") : v || h;\n    }), u;\n  }, M = function(s, a) {\n    var o = s, u;\n    if (U(q, o) && (u = q[o], o = \"%\" + u[0] + \"%\"), U(T, o)) {\n      var h = T[o];\n      if (h === C && (h = O(o)), typeof h > \"u\" && !a)\n        throw new i(\"intrinsic \" + s + \" exists, but is not available. Please file an issue!\");\n      return {\n        alias: u,\n        name: o,\n        value: h\n      };\n    }\n    throw new r(\"intrinsic \" + s + \" does not exist!\");\n  };\n  return Dn = function(s, a) {\n    if (typeof s != \"string\" || s.length === 0)\n      throw new i(\"intrinsic name must be a non-empty string\");\n    if (arguments.length > 1 && typeof a != \"boolean\")\n      throw new i('\"allowMissing\" argument must be a boolean');\n    if (ne(/^%?[^%]*%?$/, s) === null)\n      throw new r(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\");\n    var o = G(s), u = o.length > 0 ? o[0] : \"\", h = M(\"%\" + u + \"%\", a), v = h.name, g = h.value, l = !1, d = h.alias;\n    d && (u = d[0], Z(o, H([0, 1], d)));\n    for (var f = 1, b = !0; f < o.length; f += 1) {\n      var E = o[f], y = Y(E, 0, 1), S = Y(E, -1);\n      if ((y === '\"' || y === \"'\" || y === \"`\" || S === '\"' || S === \"'\" || S === \"`\") && y !== S)\n        throw new r(\"property names with quotes must have matching quotes\");\n      if ((E === \"constructor\" || !b) && (l = !0), u += \".\" + E, v = \"%\" + u + \"%\", U(T, v))\n        g = T[v];\n      else if (g != null) {\n        if (!(E in g)) {\n          if (!a)\n            throw new i(\"base intrinsic for \" + s + \" exists, but the property is not available.\");\n          return;\n        }\n        if (n && f + 1 >= o.length) {\n          var I = n(g, E);\n          b = !!I, b && \"get\" in I && !(\"originalValue\" in I.get) ? g = I.get : g = g[E];\n        } else\n          b = U(g, E), g = g[E];\n        b && !l && (T[v] = g);\n      }\n    }\n    return g;\n  }, Dn;\n}\nvar Kn = { exports: {} }, ho;\nfunction Vi() {\n  return ho || (ho = 1, function(e) {\n    var r = h0(), t = Hi(), i = t(\"%Function.prototype.apply%\"), c = t(\"%Function.prototype.call%\"), n = t(\"%Reflect.apply%\", !0) || r.call(c, i), x = t(\"%Object.getOwnPropertyDescriptor%\", !0), m = t(\"%Object.defineProperty%\", !0), k = t(\"%Math.max%\");\n    if (m)\n      try {\n        m({}, \"a\", { value: 1 });\n      } catch {\n        m = null;\n      }\n    e.exports = function(C) {\n      var F = n(r, c, arguments);\n      if (x && m) {\n        var T = x(F, \"length\");\n        T.configurable && m(\n          F,\n          \"length\",\n          { value: 1 + k(0, C.length - (arguments.length - 1)) }\n        );\n      }\n      return F;\n    };\n    var B = function() {\n      return n(r, i, arguments);\n    };\n    m ? m(e.exports, \"apply\", { value: B }) : e.exports.apply = B;\n  }(Kn)), Kn.exports;\n}\nvar Nc = Hi(), Fc = Vi(), pu = Fc(Nc(\"String.prototype.indexOf\")), Cc = function(r, t) {\n  var i = Nc(r, !!t);\n  return typeof i == \"function\" && pu(r, \".prototype.\") > -1 ? Fc(i) : i;\n}, vu = b0(), xu = Cc, Df = xu(\"Object.prototype.toString\"), Wi = function(r) {\n  return vu && r && typeof r == \"object\" && Symbol.toStringTag in r ? !1 : Df(r) === \"[object Arguments]\";\n}, Lc = function(r) {\n  return Wi(r) ? !0 : r !== null && typeof r == \"object\" && typeof r.length == \"number\" && r.length >= 0 && Df(r) !== \"[object Array]\" && Df(r.callee) === \"[object Function]\";\n}, mu = function() {\n  return Wi(arguments);\n}();\nWi.isLegacyArguments = Lc;\nvar gu = mu ? Wi : Lc, yu = Object.prototype.toString, wu = Function.prototype.toString, _u = /^\\s*(?:function)?\\*/, Uc = b0(), Hn = Object.getPrototypeOf, Mu = function() {\n  if (!Uc)\n    return !1;\n  try {\n    return Function(\"return function*() {}\")();\n  } catch {\n  }\n}, Vn, Su = function(r) {\n  if (typeof r != \"function\")\n    return !1;\n  if (_u.test(wu.call(r)))\n    return !0;\n  if (!Uc) {\n    var t = yu.call(r);\n    return t === \"[object GeneratorFunction]\";\n  }\n  if (!Hn)\n    return !1;\n  if (typeof Vn > \"u\") {\n    var i = Mu();\n    Vn = i ? Hn(i) : !1;\n  }\n  return Hn(r) === Vn;\n}, $c = Function.prototype.toString, ga = typeof Reflect == \"object\" && Reflect !== null && Reflect.apply, Kf, Si;\nif (typeof ga == \"function\" && typeof Object.defineProperty == \"function\")\n  try {\n    Kf = Object.defineProperty({}, \"length\", {\n      get: function() {\n        throw Si;\n      }\n    }), Si = {}, ga(function() {\n      throw 42;\n    }, null, Kf);\n  } catch (e) {\n    e !== Si && (ga = null);\n  }\nelse\n  ga = null;\nvar ku = /^\\s*class\\b/, Hf = function(r) {\n  try {\n    var t = $c.call(r);\n    return ku.test(t);\n  } catch {\n    return !1;\n  }\n}, Wn = function(r) {\n  try {\n    return Hf(r) ? !1 : ($c.call(r), !0);\n  } catch {\n    return !1;\n  }\n}, ki = Object.prototype.toString, Eu = \"[object Object]\", Au = \"[object Function]\", Bu = \"[object GeneratorFunction]\", zu = \"[object HTMLAllCollection]\", Iu = \"[object HTML document.all class]\", Ru = \"[object HTMLCollection]\", Tu = typeof Symbol == \"function\" && !!Symbol.toStringTag, ju = !(0 in [,]), Vf = function() {\n  return !1;\n};\nif (typeof document == \"object\") {\n  var Pu = document.all;\n  ki.call(Pu) === ki.call(document.all) && (Vf = function(r) {\n    if ((ju || !r) && (typeof r > \"u\" || typeof r == \"object\"))\n      try {\n        var t = ki.call(r);\n        return (t === zu || t === Iu || t === Ru || t === Eu) && r(\"\") == null;\n      } catch {\n      }\n    return !1;\n  });\n}\nvar Ou = ga ? function(r) {\n  if (Vf(r))\n    return !0;\n  if (!r || typeof r != \"function\" && typeof r != \"object\")\n    return !1;\n  try {\n    ga(r, null, Kf);\n  } catch (t) {\n    if (t !== Si)\n      return !1;\n  }\n  return !Hf(r) && Wn(r);\n} : function(r) {\n  if (Vf(r))\n    return !0;\n  if (!r || typeof r != \"function\" && typeof r != \"object\")\n    return !1;\n  if (Tu)\n    return Wn(r);\n  if (Hf(r))\n    return !1;\n  var t = ki.call(r);\n  return t !== Au && t !== Bu && !/^\\[object HTML/.test(t) ? !1 : Wn(r);\n}, qu = Ou, Nu = Object.prototype.toString, Dc = Object.prototype.hasOwnProperty, Fu = function(r, t, i) {\n  for (var c = 0, n = r.length; c < n; c++)\n    Dc.call(r, c) && (i == null ? t(r[c], c, r) : t.call(i, r[c], c, r));\n}, Cu = function(r, t, i) {\n  for (var c = 0, n = r.length; c < n; c++)\n    i == null ? t(r.charAt(c), c, r) : t.call(i, r.charAt(c), c, r);\n}, Lu = function(r, t, i) {\n  for (var c in r)\n    Dc.call(r, c) && (i == null ? t(r[c], c, r) : t.call(i, r[c], c, r));\n}, Uu = function(r, t, i) {\n  if (!qu(t))\n    throw new TypeError(\"iterator must be a function\");\n  var c;\n  arguments.length >= 3 && (c = i), Nu.call(r) === \"[object Array]\" ? Fu(r, t, c) : typeof r == \"string\" ? Cu(r, t, c) : Lu(r, t, c);\n}, $u = Uu, Gn = [\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\"\n], Du = typeof globalThis > \"u\" ? be : globalThis, Ku = function() {\n  for (var r = [], t = 0; t < Gn.length; t++)\n    typeof Du[Gn[t]] == \"function\" && (r[r.length] = Gn[t]);\n  return r;\n}, Hu = Hi(), Ei = Hu(\"%Object.getOwnPropertyDescriptor%\", !0);\nif (Ei)\n  try {\n    Ei([], \"length\");\n  } catch {\n    Ei = null;\n  }\nvar Vu = Ei, Ri = $u, Wu = Ku, po = Vi(), p0 = Cc, Ai = Vu, Gu = p0(\"Object.prototype.toString\"), Kc = b0(), vo = typeof globalThis > \"u\" ? be : globalThis, Wf = Wu(), v0 = p0(\"String.prototype.slice\"), Zn = Object.getPrototypeOf, Zu = p0(\"Array.prototype.indexOf\", !0) || function(r, t) {\n  for (var i = 0; i < r.length; i += 1)\n    if (r[i] === t)\n      return i;\n  return -1;\n}, Ti = { __proto__: null };\nKc && Ai && Zn ? Ri(Wf, function(e) {\n  var r = new vo[e]();\n  if (Symbol.toStringTag in r) {\n    var t = Zn(r), i = Ai(t, Symbol.toStringTag);\n    if (!i) {\n      var c = Zn(t);\n      i = Ai(c, Symbol.toStringTag);\n    }\n    Ti[\"$\" + e] = po(i.get);\n  }\n}) : Ri(Wf, function(e) {\n  var r = new vo[e]();\n  Ti[\"$\" + e] = po(r.slice);\n});\nvar Ju = function(r) {\n  var t = !1;\n  return Ri(Ti, function(i, c) {\n    if (!t)\n      try {\n        \"$\" + i(r) === c && (t = v0(c, 1));\n      } catch {\n      }\n  }), t;\n}, Yu = function(r) {\n  var t = !1;\n  return Ri(Ti, function(i, c) {\n    if (!t)\n      try {\n        i(r), t = v0(c, 1);\n      } catch {\n      }\n  }), t;\n}, Hc = function(r) {\n  if (!r || typeof r != \"object\")\n    return !1;\n  if (!Kc) {\n    var t = v0(Gu(r), 8, -1);\n    return Zu(Wf, t) > -1 ? t : t !== \"Object\" ? !1 : Yu(r);\n  }\n  return Ai ? Ju(r) : null;\n}, Xu = Hc, Qu = function(r) {\n  return !!Xu(r);\n};\n(function(e) {\n  var r = gu, t = Su, i = Hc, c = Qu;\n  function n(fe) {\n    return fe.call.bind(fe);\n  }\n  var x = typeof BigInt < \"u\", m = typeof Symbol < \"u\", k = n(Object.prototype.toString), B = n(Number.prototype.valueOf), z = n(String.prototype.valueOf), C = n(Boolean.prototype.valueOf);\n  if (x)\n    var F = n(BigInt.prototype.valueOf);\n  if (m)\n    var T = n(Symbol.prototype.valueOf);\n  function L(fe, ze) {\n    if (typeof fe != \"object\")\n      return !1;\n    try {\n      return ze(fe), !0;\n    } catch {\n      return !1;\n    }\n  }\n  e.isArgumentsObject = r, e.isGeneratorFunction = t, e.isTypedArray = c;\n  function O(fe) {\n    return typeof Promise < \"u\" && fe instanceof Promise || fe !== null && typeof fe == \"object\" && typeof fe.then == \"function\" && typeof fe.catch == \"function\";\n  }\n  e.isPromise = O;\n  function q(fe) {\n    return typeof ArrayBuffer < \"u\" && ArrayBuffer.isView ? ArrayBuffer.isView(fe) : c(fe) || b(fe);\n  }\n  e.isArrayBufferView = q;\n  function R(fe) {\n    return i(fe) === \"Uint8Array\";\n  }\n  e.isUint8Array = R;\n  function U(fe) {\n    return i(fe) === \"Uint8ClampedArray\";\n  }\n  e.isUint8ClampedArray = U;\n  function H(fe) {\n    return i(fe) === \"Uint16Array\";\n  }\n  e.isUint16Array = H;\n  function Z(fe) {\n    return i(fe) === \"Uint32Array\";\n  }\n  e.isUint32Array = Z;\n  function W(fe) {\n    return i(fe) === \"Int8Array\";\n  }\n  e.isInt8Array = W;\n  function Y(fe) {\n    return i(fe) === \"Int16Array\";\n  }\n  e.isInt16Array = Y;\n  function ne(fe) {\n    return i(fe) === \"Int32Array\";\n  }\n  e.isInt32Array = ne;\n  function D(fe) {\n    return i(fe) === \"Float32Array\";\n  }\n  e.isFloat32Array = D;\n  function V(fe) {\n    return i(fe) === \"Float64Array\";\n  }\n  e.isFloat64Array = V;\n  function G(fe) {\n    return i(fe) === \"BigInt64Array\";\n  }\n  e.isBigInt64Array = G;\n  function M(fe) {\n    return i(fe) === \"BigUint64Array\";\n  }\n  e.isBigUint64Array = M;\n  function p(fe) {\n    return k(fe) === \"[object Map]\";\n  }\n  p.working = typeof Map < \"u\" && p(/* @__PURE__ */ new Map());\n  function s(fe) {\n    return typeof Map > \"u\" ? !1 : p.working ? p(fe) : fe instanceof Map;\n  }\n  e.isMap = s;\n  function a(fe) {\n    return k(fe) === \"[object Set]\";\n  }\n  a.working = typeof Set < \"u\" && a(/* @__PURE__ */ new Set());\n  function o(fe) {\n    return typeof Set > \"u\" ? !1 : a.working ? a(fe) : fe instanceof Set;\n  }\n  e.isSet = o;\n  function u(fe) {\n    return k(fe) === \"[object WeakMap]\";\n  }\n  u.working = typeof WeakMap < \"u\" && u(/* @__PURE__ */ new WeakMap());\n  function h(fe) {\n    return typeof WeakMap > \"u\" ? !1 : u.working ? u(fe) : fe instanceof WeakMap;\n  }\n  e.isWeakMap = h;\n  function v(fe) {\n    return k(fe) === \"[object WeakSet]\";\n  }\n  v.working = typeof WeakSet < \"u\" && v(/* @__PURE__ */ new WeakSet());\n  function g(fe) {\n    return v(fe);\n  }\n  e.isWeakSet = g;\n  function l(fe) {\n    return k(fe) === \"[object ArrayBuffer]\";\n  }\n  l.working = typeof ArrayBuffer < \"u\" && l(new ArrayBuffer());\n  function d(fe) {\n    return typeof ArrayBuffer > \"u\" ? !1 : l.working ? l(fe) : fe instanceof ArrayBuffer;\n  }\n  e.isArrayBuffer = d;\n  function f(fe) {\n    return k(fe) === \"[object DataView]\";\n  }\n  f.working = typeof ArrayBuffer < \"u\" && typeof DataView < \"u\" && f(new DataView(new ArrayBuffer(1), 0, 1));\n  function b(fe) {\n    return typeof DataView > \"u\" ? !1 : f.working ? f(fe) : fe instanceof DataView;\n  }\n  e.isDataView = b;\n  var E = typeof SharedArrayBuffer < \"u\" ? SharedArrayBuffer : void 0;\n  function y(fe) {\n    return k(fe) === \"[object SharedArrayBuffer]\";\n  }\n  function S(fe) {\n    return typeof E > \"u\" ? !1 : (typeof y.working > \"u\" && (y.working = y(new E())), y.working ? y(fe) : fe instanceof E);\n  }\n  e.isSharedArrayBuffer = S;\n  function I(fe) {\n    return k(fe) === \"[object AsyncFunction]\";\n  }\n  e.isAsyncFunction = I;\n  function $(fe) {\n    return k(fe) === \"[object Map Iterator]\";\n  }\n  e.isMapIterator = $;\n  function K(fe) {\n    return k(fe) === \"[object Set Iterator]\";\n  }\n  e.isSetIterator = K;\n  function ae(fe) {\n    return k(fe) === \"[object Generator]\";\n  }\n  e.isGeneratorObject = ae;\n  function j(fe) {\n    return k(fe) === \"[object WebAssembly.Module]\";\n  }\n  e.isWebAssemblyCompiledModule = j;\n  function P(fe) {\n    return L(fe, B);\n  }\n  e.isNumberObject = P;\n  function ie(fe) {\n    return L(fe, z);\n  }\n  e.isStringObject = ie;\n  function te(fe) {\n    return L(fe, C);\n  }\n  e.isBooleanObject = te;\n  function ce(fe) {\n    return x && L(fe, F);\n  }\n  e.isBigIntObject = ce;\n  function ve(fe) {\n    return m && L(fe, T);\n  }\n  e.isSymbolObject = ve;\n  function le(fe) {\n    return P(fe) || ie(fe) || te(fe) || ce(fe) || ve(fe);\n  }\n  e.isBoxedPrimitive = le;\n  function he(fe) {\n    return typeof Uint8Array < \"u\" && (d(fe) || S(fe));\n  }\n  e.isAnyArrayBuffer = he, [\"isProxy\", \"isExternal\", \"isModuleNamespaceObject\"].forEach(function(fe) {\n    Object.defineProperty(e, fe, {\n      enumerable: !1,\n      value: function() {\n        throw new Error(fe + \" is not supported in userland\");\n      }\n    });\n  });\n})(Oc);\nvar el = function(r) {\n  return r && typeof r == \"object\" && typeof r.copy == \"function\" && typeof r.fill == \"function\" && typeof r.readUInt8 == \"function\";\n}, Gf = { exports: {} };\ntypeof Object.create == \"function\" ? Gf.exports = function(r, t) {\n  t && (r.super_ = t, r.prototype = Object.create(t.prototype, {\n    constructor: {\n      value: r,\n      enumerable: !1,\n      writable: !0,\n      configurable: !0\n    }\n  }));\n} : Gf.exports = function(r, t) {\n  if (t) {\n    r.super_ = t;\n    var i = function() {\n    };\n    i.prototype = t.prototype, r.prototype = new i(), r.prototype.constructor = r;\n  }\n};\nvar nr = Gf.exports;\n(function(e) {\n  var r = Object.getOwnPropertyDescriptors || function(b) {\n    for (var E = Object.keys(b), y = {}, S = 0; S < E.length; S++)\n      y[E[S]] = Object.getOwnPropertyDescriptor(b, E[S]);\n    return y;\n  }, t = /%[sdj%]/g;\n  e.format = function(f) {\n    if (!W(f)) {\n      for (var b = [], E = 0; E < arguments.length; E++)\n        b.push(x(arguments[E]));\n      return b.join(\" \");\n    }\n    for (var E = 1, y = arguments, S = y.length, I = String(f).replace(t, function(K) {\n      if (K === \"%%\")\n        return \"%\";\n      if (E >= S)\n        return K;\n      switch (K) {\n        case \"%s\":\n          return String(y[E++]);\n        case \"%d\":\n          return Number(y[E++]);\n        case \"%j\":\n          try {\n            return JSON.stringify(y[E++]);\n          } catch {\n            return \"[Circular]\";\n          }\n        default:\n          return K;\n      }\n    }), $ = y[E]; E < S; $ = y[++E])\n      U($) || !V($) ? I += \" \" + $ : I += \" \" + x($);\n    return I;\n  }, e.deprecate = function(f, b) {\n    if (typeof process < \"u\" && process.noDeprecation === !0)\n      return f;\n    if (typeof process > \"u\")\n      return function() {\n        return e.deprecate(f, b).apply(this, arguments);\n      };\n    var E = !1;\n    function y() {\n      if (!E) {\n        if (process.throwDeprecation)\n          throw new Error(b);\n        process.traceDeprecation ? console.trace(b) : console.error(b), E = !0;\n      }\n      return f.apply(this, arguments);\n    }\n    return y;\n  };\n  var i = {}, c = /^$/;\n  if (process.env.NODE_DEBUG) {\n    var n = process.env.NODE_DEBUG;\n    n = n.replace(/[|\\\\{}()[\\]^$+?.]/g, \"\\\\$&\").replace(/\\*/g, \".*\").replace(/,/g, \"$|^\").toUpperCase(), c = new RegExp(\"^\" + n + \"$\", \"i\");\n  }\n  e.debuglog = function(f) {\n    if (f = f.toUpperCase(), !i[f])\n      if (c.test(f)) {\n        var b = process.pid;\n        i[f] = function() {\n          var E = e.format.apply(e, arguments);\n          console.error(\"%s %d: %s\", f, b, E);\n        };\n      } else\n        i[f] = function() {\n        };\n    return i[f];\n  };\n  function x(f, b) {\n    var E = {\n      seen: [],\n      stylize: k\n    };\n    return arguments.length >= 3 && (E.depth = arguments[2]), arguments.length >= 4 && (E.colors = arguments[3]), R(b) ? E.showHidden = b : b && e._extend(E, b), ne(E.showHidden) && (E.showHidden = !1), ne(E.depth) && (E.depth = 2), ne(E.colors) && (E.colors = !1), ne(E.customInspect) && (E.customInspect = !0), E.colors && (E.stylize = m), z(E, f, E.depth);\n  }\n  e.inspect = x, x.colors = {\n    bold: [1, 22],\n    italic: [3, 23],\n    underline: [4, 24],\n    inverse: [7, 27],\n    white: [37, 39],\n    grey: [90, 39],\n    black: [30, 39],\n    blue: [34, 39],\n    cyan: [36, 39],\n    green: [32, 39],\n    magenta: [35, 39],\n    red: [31, 39],\n    yellow: [33, 39]\n  }, x.styles = {\n    special: \"cyan\",\n    number: \"yellow\",\n    boolean: \"yellow\",\n    undefined: \"grey\",\n    null: \"bold\",\n    string: \"green\",\n    date: \"magenta\",\n    // \"name\": intentionally not styling\n    regexp: \"red\"\n  };\n  function m(f, b) {\n    var E = x.styles[b];\n    return E ? \"\\x1B[\" + x.colors[E][0] + \"m\" + f + \"\\x1B[\" + x.colors[E][1] + \"m\" : f;\n  }\n  function k(f, b) {\n    return f;\n  }\n  function B(f) {\n    var b = {};\n    return f.forEach(function(E, y) {\n      b[E] = !0;\n    }), b;\n  }\n  function z(f, b, E) {\n    if (f.customInspect && b && p(b.inspect) && // Filter out the util module, it's inspect function is special\n    b.inspect !== e.inspect && // Also filter out any prototype objects using the circular check.\n    !(b.constructor && b.constructor.prototype === b)) {\n      var y = b.inspect(E, f);\n      return W(y) || (y = z(f, y, E)), y;\n    }\n    var S = C(f, b);\n    if (S)\n      return S;\n    var I = Object.keys(b), $ = B(I);\n    if (f.showHidden && (I = Object.getOwnPropertyNames(b)), M(b) && (I.indexOf(\"message\") >= 0 || I.indexOf(\"description\") >= 0))\n      return F(b);\n    if (I.length === 0) {\n      if (p(b)) {\n        var K = b.name ? \": \" + b.name : \"\";\n        return f.stylize(\"[Function\" + K + \"]\", \"special\");\n      }\n      if (D(b))\n        return f.stylize(RegExp.prototype.toString.call(b), \"regexp\");\n      if (G(b))\n        return f.stylize(Date.prototype.toString.call(b), \"date\");\n      if (M(b))\n        return F(b);\n    }\n    var ae = \"\", j = !1, P = [\"{\", \"}\"];\n    if (q(b) && (j = !0, P = [\"[\", \"]\"]), p(b)) {\n      var ie = b.name ? \": \" + b.name : \"\";\n      ae = \" [Function\" + ie + \"]\";\n    }\n    if (D(b) && (ae = \" \" + RegExp.prototype.toString.call(b)), G(b) && (ae = \" \" + Date.prototype.toUTCString.call(b)), M(b) && (ae = \" \" + F(b)), I.length === 0 && (!j || b.length == 0))\n      return P[0] + ae + P[1];\n    if (E < 0)\n      return D(b) ? f.stylize(RegExp.prototype.toString.call(b), \"regexp\") : f.stylize(\"[Object]\", \"special\");\n    f.seen.push(b);\n    var te;\n    return j ? te = T(f, b, E, $, I) : te = I.map(function(ce) {\n      return L(f, b, E, $, ce, j);\n    }), f.seen.pop(), O(te, ae, P);\n  }\n  function C(f, b) {\n    if (ne(b))\n      return f.stylize(\"undefined\", \"undefined\");\n    if (W(b)) {\n      var E = \"'\" + JSON.stringify(b).replace(/^\"|\"$/g, \"\").replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + \"'\";\n      return f.stylize(E, \"string\");\n    }\n    if (Z(b))\n      return f.stylize(\"\" + b, \"number\");\n    if (R(b))\n      return f.stylize(\"\" + b, \"boolean\");\n    if (U(b))\n      return f.stylize(\"null\", \"null\");\n  }\n  function F(f) {\n    return \"[\" + Error.prototype.toString.call(f) + \"]\";\n  }\n  function T(f, b, E, y, S) {\n    for (var I = [], $ = 0, K = b.length; $ < K; ++$)\n      v(b, String($)) ? I.push(L(\n        f,\n        b,\n        E,\n        y,\n        String($),\n        !0\n      )) : I.push(\"\");\n    return S.forEach(function(ae) {\n      ae.match(/^\\d+$/) || I.push(L(\n        f,\n        b,\n        E,\n        y,\n        ae,\n        !0\n      ));\n    }), I;\n  }\n  function L(f, b, E, y, S, I) {\n    var $, K, ae;\n    if (ae = Object.getOwnPropertyDescriptor(b, S) || { value: b[S] }, ae.get ? ae.set ? K = f.stylize(\"[Getter/Setter]\", \"special\") : K = f.stylize(\"[Getter]\", \"special\") : ae.set && (K = f.stylize(\"[Setter]\", \"special\")), v(y, S) || ($ = \"[\" + S + \"]\"), K || (f.seen.indexOf(ae.value) < 0 ? (U(E) ? K = z(f, ae.value, null) : K = z(f, ae.value, E - 1), K.indexOf(`\n`) > -1 && (I ? K = K.split(`\n`).map(function(j) {\n      return \"  \" + j;\n    }).join(`\n`).slice(2) : K = `\n` + K.split(`\n`).map(function(j) {\n      return \"   \" + j;\n    }).join(`\n`))) : K = f.stylize(\"[Circular]\", \"special\")), ne($)) {\n      if (I && S.match(/^\\d+$/))\n        return K;\n      $ = JSON.stringify(\"\" + S), $.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/) ? ($ = $.slice(1, -1), $ = f.stylize($, \"name\")) : ($ = $.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\"), $ = f.stylize($, \"string\"));\n    }\n    return $ + \": \" + K;\n  }\n  function O(f, b, E) {\n    var y = f.reduce(function(S, I) {\n      return I.indexOf(`\n`) >= 0, S + I.replace(/\\u001b\\[\\d\\d?m/g, \"\").length + 1;\n    }, 0);\n    return y > 60 ? E[0] + (b === \"\" ? \"\" : b + `\n `) + \" \" + f.join(`,\n  `) + \" \" + E[1] : E[0] + b + \" \" + f.join(\", \") + \" \" + E[1];\n  }\n  e.types = Oc;\n  function q(f) {\n    return Array.isArray(f);\n  }\n  e.isArray = q;\n  function R(f) {\n    return typeof f == \"boolean\";\n  }\n  e.isBoolean = R;\n  function U(f) {\n    return f === null;\n  }\n  e.isNull = U;\n  function H(f) {\n    return f == null;\n  }\n  e.isNullOrUndefined = H;\n  function Z(f) {\n    return typeof f == \"number\";\n  }\n  e.isNumber = Z;\n  function W(f) {\n    return typeof f == \"string\";\n  }\n  e.isString = W;\n  function Y(f) {\n    return typeof f == \"symbol\";\n  }\n  e.isSymbol = Y;\n  function ne(f) {\n    return f === void 0;\n  }\n  e.isUndefined = ne;\n  function D(f) {\n    return V(f) && a(f) === \"[object RegExp]\";\n  }\n  e.isRegExp = D, e.types.isRegExp = D;\n  function V(f) {\n    return typeof f == \"object\" && f !== null;\n  }\n  e.isObject = V;\n  function G(f) {\n    return V(f) && a(f) === \"[object Date]\";\n  }\n  e.isDate = G, e.types.isDate = G;\n  function M(f) {\n    return V(f) && (a(f) === \"[object Error]\" || f instanceof Error);\n  }\n  e.isError = M, e.types.isNativeError = M;\n  function p(f) {\n    return typeof f == \"function\";\n  }\n  e.isFunction = p;\n  function s(f) {\n    return f === null || typeof f == \"boolean\" || typeof f == \"number\" || typeof f == \"string\" || typeof f == \"symbol\" || // ES6 symbol\n    typeof f > \"u\";\n  }\n  e.isPrimitive = s, e.isBuffer = el;\n  function a(f) {\n    return Object.prototype.toString.call(f);\n  }\n  function o(f) {\n    return f < 10 ? \"0\" + f.toString(10) : f.toString(10);\n  }\n  var u = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n  function h() {\n    var f = /* @__PURE__ */ new Date(), b = [\n      o(f.getHours()),\n      o(f.getMinutes()),\n      o(f.getSeconds())\n    ].join(\":\");\n    return [f.getDate(), u[f.getMonth()], b].join(\" \");\n  }\n  e.log = function() {\n    console.log(\"%s - %s\", h(), e.format.apply(e, arguments));\n  }, e.inherits = nr, e._extend = function(f, b) {\n    if (!b || !V(b))\n      return f;\n    for (var E = Object.keys(b), y = E.length; y--; )\n      f[E[y]] = b[E[y]];\n    return f;\n  };\n  function v(f, b) {\n    return Object.prototype.hasOwnProperty.call(f, b);\n  }\n  var g = typeof Symbol < \"u\" ? Symbol(\"util.promisify.custom\") : void 0;\n  e.promisify = function(b) {\n    if (typeof b != \"function\")\n      throw new TypeError('The \"original\" argument must be of type Function');\n    if (g && b[g]) {\n      var E = b[g];\n      if (typeof E != \"function\")\n        throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n      return Object.defineProperty(E, g, {\n        value: E,\n        enumerable: !1,\n        writable: !1,\n        configurable: !0\n      }), E;\n    }\n    function E() {\n      for (var y, S, I = new Promise(function(ae, j) {\n        y = ae, S = j;\n      }), $ = [], K = 0; K < arguments.length; K++)\n        $.push(arguments[K]);\n      $.push(function(ae, j) {\n        ae ? S(ae) : y(j);\n      });\n      try {\n        b.apply(this, $);\n      } catch (ae) {\n        S(ae);\n      }\n      return I;\n    }\n    return Object.setPrototypeOf(E, Object.getPrototypeOf(b)), g && Object.defineProperty(E, g, {\n      value: E,\n      enumerable: !1,\n      writable: !1,\n      configurable: !0\n    }), Object.defineProperties(\n      E,\n      r(b)\n    );\n  }, e.promisify.custom = g;\n  function l(f, b) {\n    if (!f) {\n      var E = new Error(\"Promise was rejected with a falsy value\");\n      E.reason = f, f = E;\n    }\n    return b(f);\n  }\n  function d(f) {\n    if (typeof f != \"function\")\n      throw new TypeError('The \"original\" argument must be of type Function');\n    function b() {\n      for (var E = [], y = 0; y < arguments.length; y++)\n        E.push(arguments[y]);\n      var S = E.pop();\n      if (typeof S != \"function\")\n        throw new TypeError(\"The last argument must be of type Function\");\n      var I = this, $ = function() {\n        return S.apply(I, arguments);\n      };\n      f.apply(this, E).then(\n        function(K) {\n          process.nextTick($.bind(null, null, K));\n        },\n        function(K) {\n          process.nextTick(l.bind(null, K, $));\n        }\n      );\n    }\n    return Object.setPrototypeOf(b, Object.getPrototypeOf(f)), Object.defineProperties(\n      b,\n      r(f)\n    ), b;\n  }\n  e.callbackify = d;\n})(Ma);\nvar xo;\nfunction Vc() {\n  if (xo)\n    return Nn;\n  xo = 1;\n  function e(O) {\n    return typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? e = function(R) {\n      return typeof R;\n    } : e = function(R) {\n      return R && typeof Symbol == \"function\" && R.constructor === Symbol && R !== Symbol.prototype ? \"symbol\" : typeof R;\n    }, e(O);\n  }\n  function r(O, q) {\n    if (!(O instanceof q))\n      throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function t(O, q) {\n    return q && (e(q) === \"object\" || typeof q == \"function\") ? q : i(O);\n  }\n  function i(O) {\n    if (O === void 0)\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return O;\n  }\n  function c(O) {\n    return c = Object.setPrototypeOf ? Object.getPrototypeOf : function(R) {\n      return R.__proto__ || Object.getPrototypeOf(R);\n    }, c(O);\n  }\n  function n(O, q) {\n    if (typeof q != \"function\" && q !== null)\n      throw new TypeError(\"Super expression must either be null or a function\");\n    O.prototype = Object.create(q && q.prototype, { constructor: { value: O, writable: !0, configurable: !0 } }), q && x(O, q);\n  }\n  function x(O, q) {\n    return x = Object.setPrototypeOf || function(U, H) {\n      return U.__proto__ = H, U;\n    }, x(O, q);\n  }\n  var m = {}, k, B;\n  function z(O, q, R) {\n    R || (R = Error);\n    function U(Z, W, Y) {\n      return typeof q == \"string\" ? q : q(Z, W, Y);\n    }\n    var H = /* @__PURE__ */ function(Z) {\n      n(W, Z);\n      function W(Y, ne, D) {\n        var V;\n        return r(this, W), V = t(this, c(W).call(this, U(Y, ne, D))), V.code = O, V;\n      }\n      return W;\n    }(R);\n    m[O] = H;\n  }\n  function C(O, q) {\n    if (Array.isArray(O)) {\n      var R = O.length;\n      return O = O.map(function(U) {\n        return String(U);\n      }), R > 2 ? \"one of \".concat(q, \" \").concat(O.slice(0, R - 1).join(\", \"), \", or \") + O[R - 1] : R === 2 ? \"one of \".concat(q, \" \").concat(O[0], \" or \").concat(O[1]) : \"of \".concat(q, \" \").concat(O[0]);\n    } else\n      return \"of \".concat(q, \" \").concat(String(O));\n  }\n  function F(O, q, R) {\n    return O.substr(!R || R < 0 ? 0 : +R, q.length) === q;\n  }\n  function T(O, q, R) {\n    return (R === void 0 || R > O.length) && (R = O.length), O.substring(R - q.length, R) === q;\n  }\n  function L(O, q, R) {\n    return typeof R != \"number\" && (R = 0), R + q.length > O.length ? !1 : O.indexOf(q, R) !== -1;\n  }\n  return z(\"ERR_AMBIGUOUS_ARGUMENT\", 'The \"%s\" argument is ambiguous. %s', TypeError), z(\"ERR_INVALID_ARG_TYPE\", function(O, q, R) {\n    k === void 0 && (k = da()), k(typeof O == \"string\", \"'name' must be a string\");\n    var U;\n    typeof q == \"string\" && F(q, \"not \") ? (U = \"must not be\", q = q.replace(/^not /, \"\")) : U = \"must be\";\n    var H;\n    if (T(O, \" argument\"))\n      H = \"The \".concat(O, \" \").concat(U, \" \").concat(C(q, \"type\"));\n    else {\n      var Z = L(O, \".\") ? \"property\" : \"argument\";\n      H = 'The \"'.concat(O, '\" ').concat(Z, \" \").concat(U, \" \").concat(C(q, \"type\"));\n    }\n    return H += \". Received type \".concat(e(R)), H;\n  }, TypeError), z(\"ERR_INVALID_ARG_VALUE\", function(O, q) {\n    var R = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"is invalid\";\n    B === void 0 && (B = Ma);\n    var U = B.inspect(q);\n    return U.length > 128 && (U = \"\".concat(U.slice(0, 128), \"...\")), \"The argument '\".concat(O, \"' \").concat(R, \". Received \").concat(U);\n  }, TypeError), z(\"ERR_INVALID_RETURN_VALUE\", function(O, q, R) {\n    var U;\n    return R && R.constructor && R.constructor.name ? U = \"instance of \".concat(R.constructor.name) : U = \"type \".concat(e(R)), \"Expected \".concat(O, ' to be returned from the \"').concat(q, '\"') + \" function but got \".concat(U, \".\");\n  }, TypeError), z(\"ERR_MISSING_ARGS\", function() {\n    for (var O = arguments.length, q = new Array(O), R = 0; R < O; R++)\n      q[R] = arguments[R];\n    k === void 0 && (k = da()), k(q.length > 0, \"At least one arg needs to be specified\");\n    var U = \"The \", H = q.length;\n    switch (q = q.map(function(Z) {\n      return '\"'.concat(Z, '\"');\n    }), H) {\n      case 1:\n        U += \"\".concat(q[0], \" argument\");\n        break;\n      case 2:\n        U += \"\".concat(q[0], \" and \").concat(q[1], \" arguments\");\n        break;\n      default:\n        U += q.slice(0, H - 1).join(\", \"), U += \", and \".concat(q[H - 1], \" arguments\");\n        break;\n    }\n    return \"\".concat(U, \" must be specified\");\n  }, TypeError), Nn.codes = m, Nn;\n}\nvar Jn, mo;\nfunction rl() {\n  if (mo)\n    return Jn;\n  mo = 1;\n  function e(o) {\n    for (var u = 1; u < arguments.length; u++) {\n      var h = arguments[u] != null ? arguments[u] : {}, v = Object.keys(h);\n      typeof Object.getOwnPropertySymbols == \"function\" && (v = v.concat(Object.getOwnPropertySymbols(h).filter(function(g) {\n        return Object.getOwnPropertyDescriptor(h, g).enumerable;\n      }))), v.forEach(function(g) {\n        r(o, g, h[g]);\n      });\n    }\n    return o;\n  }\n  function r(o, u, h) {\n    return u in o ? Object.defineProperty(o, u, { value: h, enumerable: !0, configurable: !0, writable: !0 }) : o[u] = h, o;\n  }\n  function t(o, u) {\n    if (!(o instanceof u))\n      throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function i(o, u) {\n    for (var h = 0; h < u.length; h++) {\n      var v = u[h];\n      v.enumerable = v.enumerable || !1, v.configurable = !0, \"value\" in v && (v.writable = !0), Object.defineProperty(o, v.key, v);\n    }\n  }\n  function c(o, u, h) {\n    return u && i(o.prototype, u), h && i(o, h), o;\n  }\n  function n(o, u) {\n    return u && (L(u) === \"object\" || typeof u == \"function\") ? u : x(o);\n  }\n  function x(o) {\n    if (o === void 0)\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return o;\n  }\n  function m(o, u) {\n    if (typeof u != \"function\" && u !== null)\n      throw new TypeError(\"Super expression must either be null or a function\");\n    o.prototype = Object.create(u && u.prototype, { constructor: { value: o, writable: !0, configurable: !0 } }), u && F(o, u);\n  }\n  function k(o) {\n    var u = typeof Map == \"function\" ? /* @__PURE__ */ new Map() : void 0;\n    return k = function(v) {\n      if (v === null || !C(v))\n        return v;\n      if (typeof v != \"function\")\n        throw new TypeError(\"Super expression must either be null or a function\");\n      if (typeof u < \"u\") {\n        if (u.has(v))\n          return u.get(v);\n        u.set(v, g);\n      }\n      function g() {\n        return z(v, arguments, T(this).constructor);\n      }\n      return g.prototype = Object.create(v.prototype, { constructor: { value: g, enumerable: !1, writable: !0, configurable: !0 } }), F(g, v);\n    }, k(o);\n  }\n  function B() {\n    if (typeof Reflect > \"u\" || !Reflect.construct || Reflect.construct.sham)\n      return !1;\n    if (typeof Proxy == \"function\")\n      return !0;\n    try {\n      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {\n      })), !0;\n    } catch {\n      return !1;\n    }\n  }\n  function z(o, u, h) {\n    return B() ? z = Reflect.construct : z = function(g, l, d) {\n      var f = [null];\n      f.push.apply(f, l);\n      var b = Function.bind.apply(g, f), E = new b();\n      return d && F(E, d.prototype), E;\n    }, z.apply(null, arguments);\n  }\n  function C(o) {\n    return Function.toString.call(o).indexOf(\"[native code]\") !== -1;\n  }\n  function F(o, u) {\n    return F = Object.setPrototypeOf || function(v, g) {\n      return v.__proto__ = g, v;\n    }, F(o, u);\n  }\n  function T(o) {\n    return T = Object.setPrototypeOf ? Object.getPrototypeOf : function(h) {\n      return h.__proto__ || Object.getPrototypeOf(h);\n    }, T(o);\n  }\n  function L(o) {\n    return typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? L = function(h) {\n      return typeof h;\n    } : L = function(h) {\n      return h && typeof Symbol == \"function\" && h.constructor === Symbol && h !== Symbol.prototype ? \"symbol\" : typeof h;\n    }, L(o);\n  }\n  var O = Ma, q = O.inspect, R = Vc(), U = R.codes.ERR_INVALID_ARG_TYPE;\n  function H(o, u, h) {\n    return (h === void 0 || h > o.length) && (h = o.length), o.substring(h - u.length, h) === u;\n  }\n  function Z(o, u) {\n    if (u = Math.floor(u), o.length == 0 || u == 0)\n      return \"\";\n    var h = o.length * u;\n    for (u = Math.floor(Math.log(u) / Math.log(2)); u; )\n      o += o, u--;\n    return o += o.substring(0, h - o.length), o;\n  }\n  var W = \"\", Y = \"\", ne = \"\", D = \"\", V = {\n    deepStrictEqual: \"Expected values to be strictly deep-equal:\",\n    strictEqual: \"Expected values to be strictly equal:\",\n    strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n    deepEqual: \"Expected values to be loosely deep-equal:\",\n    equal: \"Expected values to be loosely equal:\",\n    notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n    notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n    notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n    notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n    notEqual: 'Expected \"actual\" to be loosely unequal to:',\n    notIdentical: \"Values identical but not reference-equal:\"\n  }, G = 10;\n  function M(o) {\n    var u = Object.keys(o), h = Object.create(Object.getPrototypeOf(o));\n    return u.forEach(function(v) {\n      h[v] = o[v];\n    }), Object.defineProperty(h, \"message\", {\n      value: o.message\n    }), h;\n  }\n  function p(o) {\n    return q(o, {\n      compact: !1,\n      customInspect: !1,\n      depth: 1e3,\n      maxArrayLength: 1 / 0,\n      // Assert compares only enumerable properties (with a few exceptions).\n      showHidden: !1,\n      // Having a long line as error is better than wrapping the line for\n      // comparison for now.\n      // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n      // have meta information about the inspected properties (i.e., know where\n      // in what line the property starts and ends).\n      breakLength: 1 / 0,\n      // Assert does not detect proxies currently.\n      showProxy: !1,\n      sorted: !0,\n      // Inspect getters as we also check them when comparing entries.\n      getters: !0\n    });\n  }\n  function s(o, u, h) {\n    var v = \"\", g = \"\", l = 0, d = \"\", f = !1, b = p(o), E = b.split(`\n`), y = p(u).split(`\n`), S = 0, I = \"\";\n    if (h === \"strictEqual\" && L(o) === \"object\" && L(u) === \"object\" && o !== null && u !== null && (h = \"strictEqualObject\"), E.length === 1 && y.length === 1 && E[0] !== y[0]) {\n      var $ = E[0].length + y[0].length;\n      if ($ <= G) {\n        if ((L(o) !== \"object\" || o === null) && (L(u) !== \"object\" || u === null) && (o !== 0 || u !== 0))\n          return \"\".concat(V[h], `\n\n`) + \"\".concat(E[0], \" !== \").concat(y[0], `\n`);\n      } else if (h !== \"strictEqualObject\") {\n        var K = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n        if ($ < K) {\n          for (; E[0][S] === y[0][S]; )\n            S++;\n          S > 2 && (I = `\n  `.concat(Z(\" \", S), \"^\"), S = 0);\n        }\n      }\n    }\n    for (var ae = E[E.length - 1], j = y[y.length - 1]; ae === j && (S++ < 2 ? d = `\n  `.concat(ae).concat(d) : v = ae, E.pop(), y.pop(), !(E.length === 0 || y.length === 0)); )\n      ae = E[E.length - 1], j = y[y.length - 1];\n    var P = Math.max(E.length, y.length);\n    if (P === 0) {\n      var ie = b.split(`\n`);\n      if (ie.length > 30)\n        for (ie[26] = \"\".concat(W, \"...\").concat(D); ie.length > 27; )\n          ie.pop();\n      return \"\".concat(V.notIdentical, `\n\n`).concat(ie.join(`\n`), `\n`);\n    }\n    S > 3 && (d = `\n`.concat(W, \"...\").concat(D).concat(d), f = !0), v !== \"\" && (d = `\n  `.concat(v).concat(d), v = \"\");\n    var te = 0, ce = V[h] + `\n`.concat(Y, \"+ actual\").concat(D, \" \").concat(ne, \"- expected\").concat(D), ve = \" \".concat(W, \"...\").concat(D, \" Lines skipped\");\n    for (S = 0; S < P; S++) {\n      var le = S - l;\n      if (E.length < S + 1)\n        le > 1 && S > 2 && (le > 4 ? (g += `\n`.concat(W, \"...\").concat(D), f = !0) : le > 3 && (g += `\n  `.concat(y[S - 2]), te++), g += `\n  `.concat(y[S - 1]), te++), l = S, v += `\n`.concat(ne, \"-\").concat(D, \" \").concat(y[S]), te++;\n      else if (y.length < S + 1)\n        le > 1 && S > 2 && (le > 4 ? (g += `\n`.concat(W, \"...\").concat(D), f = !0) : le > 3 && (g += `\n  `.concat(E[S - 2]), te++), g += `\n  `.concat(E[S - 1]), te++), l = S, g += `\n`.concat(Y, \"+\").concat(D, \" \").concat(E[S]), te++;\n      else {\n        var he = y[S], fe = E[S], ze = fe !== he && (!H(fe, \",\") || fe.slice(0, -1) !== he);\n        ze && H(he, \",\") && he.slice(0, -1) === fe && (ze = !1, fe += \",\"), ze ? (le > 1 && S > 2 && (le > 4 ? (g += `\n`.concat(W, \"...\").concat(D), f = !0) : le > 3 && (g += `\n  `.concat(E[S - 2]), te++), g += `\n  `.concat(E[S - 1]), te++), l = S, g += `\n`.concat(Y, \"+\").concat(D, \" \").concat(fe), v += `\n`.concat(ne, \"-\").concat(D, \" \").concat(he), te += 2) : (g += v, v = \"\", (le === 1 || S === 0) && (g += `\n  `.concat(fe), te++));\n      }\n      if (te > 20 && S < P - 2)\n        return \"\".concat(ce).concat(ve, `\n`).concat(g, `\n`).concat(W, \"...\").concat(D).concat(v, `\n`) + \"\".concat(W, \"...\").concat(D);\n    }\n    return \"\".concat(ce).concat(f ? ve : \"\", `\n`).concat(g).concat(v).concat(d).concat(I);\n  }\n  var a = /* @__PURE__ */ function(o) {\n    m(u, o);\n    function u(h) {\n      var v;\n      if (t(this, u), L(h) !== \"object\" || h === null)\n        throw new U(\"options\", \"Object\", h);\n      var g = h.message, l = h.operator, d = h.stackStartFn, f = h.actual, b = h.expected, E = Error.stackTraceLimit;\n      if (Error.stackTraceLimit = 0, g != null)\n        v = n(this, T(u).call(this, String(g)));\n      else if (process.stderr && process.stderr.isTTY && (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1 ? (W = \"\\x1B[34m\", Y = \"\\x1B[32m\", D = \"\\x1B[39m\", ne = \"\\x1B[31m\") : (W = \"\", Y = \"\", D = \"\", ne = \"\")), L(f) === \"object\" && f !== null && L(b) === \"object\" && b !== null && \"stack\" in f && f instanceof Error && \"stack\" in b && b instanceof Error && (f = M(f), b = M(b)), l === \"deepStrictEqual\" || l === \"strictEqual\")\n        v = n(this, T(u).call(this, s(f, b, l)));\n      else if (l === \"notDeepStrictEqual\" || l === \"notStrictEqual\") {\n        var y = V[l], S = p(f).split(`\n`);\n        if (l === \"notStrictEqual\" && L(f) === \"object\" && f !== null && (y = V.notStrictEqualObject), S.length > 30)\n          for (S[26] = \"\".concat(W, \"...\").concat(D); S.length > 27; )\n            S.pop();\n        S.length === 1 ? v = n(this, T(u).call(this, \"\".concat(y, \" \").concat(S[0]))) : v = n(this, T(u).call(this, \"\".concat(y, `\n\n`).concat(S.join(`\n`), `\n`)));\n      } else {\n        var I = p(f), $ = \"\", K = V[l];\n        l === \"notDeepEqual\" || l === \"notEqual\" ? (I = \"\".concat(V[l], `\n\n`).concat(I), I.length > 1024 && (I = \"\".concat(I.slice(0, 1021), \"...\"))) : ($ = \"\".concat(p(b)), I.length > 512 && (I = \"\".concat(I.slice(0, 509), \"...\")), $.length > 512 && ($ = \"\".concat($.slice(0, 509), \"...\")), l === \"deepEqual\" || l === \"equal\" ? I = \"\".concat(K, `\n\n`).concat(I, `\n\nshould equal\n\n`) : $ = \" \".concat(l, \" \").concat($)), v = n(this, T(u).call(this, \"\".concat(I).concat($)));\n      }\n      return Error.stackTraceLimit = E, v.generatedMessage = !g, Object.defineProperty(x(v), \"name\", {\n        value: \"AssertionError [ERR_ASSERTION]\",\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }), v.code = \"ERR_ASSERTION\", v.actual = f, v.expected = b, v.operator = l, Error.captureStackTrace && Error.captureStackTrace(x(v), d), v.stack, v.name = \"AssertionError\", n(v);\n    }\n    return c(u, [{\n      key: \"toString\",\n      value: function() {\n        return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n      }\n    }, {\n      key: q.custom,\n      value: function(v, g) {\n        return q(this, e({}, g, {\n          customInspect: !1,\n          depth: 0\n        }));\n      }\n    }]), u;\n  }(k(Error));\n  return Jn = a, Jn;\n}\nvar Yn, go;\nfunction tl() {\n  if (go)\n    return Yn;\n  go = 1;\n  function e(t, i) {\n    if (t == null)\n      throw new TypeError(\"Cannot convert first argument to object\");\n    for (var c = Object(t), n = 1; n < arguments.length; n++) {\n      var x = arguments[n];\n      if (x != null)\n        for (var m = Object.keys(Object(x)), k = 0, B = m.length; k < B; k++) {\n          var z = m[k], C = Object.getOwnPropertyDescriptor(x, z);\n          C !== void 0 && C.enumerable && (c[z] = x[z]);\n        }\n    }\n    return c;\n  }\n  function r() {\n    Object.assign || Object.defineProperty(Object, \"assign\", {\n      enumerable: !1,\n      configurable: !0,\n      writable: !0,\n      value: e\n    });\n  }\n  return Yn = {\n    assign: e,\n    polyfill: r\n  }, Yn;\n}\nvar Xn, yo;\nfunction Wc() {\n  if (yo)\n    return Xn;\n  yo = 1;\n  var e = Object.prototype.toString;\n  return Xn = function(t) {\n    var i = e.call(t), c = i === \"[object Arguments]\";\n    return c || (c = i !== \"[object Array]\" && t !== null && typeof t == \"object\" && typeof t.length == \"number\" && t.length >= 0 && e.call(t.callee) === \"[object Function]\"), c;\n  }, Xn;\n}\nvar Qn, wo;\nfunction al() {\n  if (wo)\n    return Qn;\n  wo = 1;\n  var e;\n  if (!Object.keys) {\n    var r = Object.prototype.hasOwnProperty, t = Object.prototype.toString, i = Wc(), c = Object.prototype.propertyIsEnumerable, n = !c.call({ toString: null }, \"toString\"), x = c.call(function() {\n    }, \"prototype\"), m = [\n      \"toString\",\n      \"toLocaleString\",\n      \"valueOf\",\n      \"hasOwnProperty\",\n      \"isPrototypeOf\",\n      \"propertyIsEnumerable\",\n      \"constructor\"\n    ], k = function(F) {\n      var T = F.constructor;\n      return T && T.prototype === F;\n    }, B = {\n      $applicationCache: !0,\n      $console: !0,\n      $external: !0,\n      $frame: !0,\n      $frameElement: !0,\n      $frames: !0,\n      $innerHeight: !0,\n      $innerWidth: !0,\n      $onmozfullscreenchange: !0,\n      $onmozfullscreenerror: !0,\n      $outerHeight: !0,\n      $outerWidth: !0,\n      $pageXOffset: !0,\n      $pageYOffset: !0,\n      $parent: !0,\n      $scrollLeft: !0,\n      $scrollTop: !0,\n      $scrollX: !0,\n      $scrollY: !0,\n      $self: !0,\n      $webkitIndexedDB: !0,\n      $webkitStorageInfo: !0,\n      $window: !0\n    }, z = function() {\n      if (typeof window > \"u\")\n        return !1;\n      for (var F in window)\n        try {\n          if (!B[\"$\" + F] && r.call(window, F) && window[F] !== null && typeof window[F] == \"object\")\n            try {\n              k(window[F]);\n            } catch {\n              return !0;\n            }\n        } catch {\n          return !0;\n        }\n      return !1;\n    }(), C = function(F) {\n      if (typeof window > \"u\" || !z)\n        return k(F);\n      try {\n        return k(F);\n      } catch {\n        return !1;\n      }\n    };\n    e = function(T) {\n      var L = T !== null && typeof T == \"object\", O = t.call(T) === \"[object Function]\", q = i(T), R = L && t.call(T) === \"[object String]\", U = [];\n      if (!L && !O && !q)\n        throw new TypeError(\"Object.keys called on a non-object\");\n      var H = x && O;\n      if (R && T.length > 0 && !r.call(T, 0))\n        for (var Z = 0; Z < T.length; ++Z)\n          U.push(String(Z));\n      if (q && T.length > 0)\n        for (var W = 0; W < T.length; ++W)\n          U.push(String(W));\n      else\n        for (var Y in T)\n          !(H && Y === \"prototype\") && r.call(T, Y) && U.push(String(Y));\n      if (n)\n        for (var ne = C(T), D = 0; D < m.length; ++D)\n          !(ne && m[D] === \"constructor\") && r.call(T, m[D]) && U.push(m[D]);\n      return U;\n    };\n  }\n  return Qn = e, Qn;\n}\nvar ef, _o;\nfunction il() {\n  if (_o)\n    return ef;\n  _o = 1;\n  var e = Array.prototype.slice, r = Wc(), t = Object.keys, i = t ? function(x) {\n    return t(x);\n  } : al(), c = Object.keys;\n  return i.shim = function() {\n    if (Object.keys) {\n      var x = function() {\n        var m = Object.keys(arguments);\n        return m && m.length === arguments.length;\n      }(1, 2);\n      x || (Object.keys = function(k) {\n        return r(k) ? c(e.call(k)) : c(k);\n      });\n    } else\n      Object.keys = i;\n    return Object.keys || i;\n  }, ef = i, ef;\n}\nvar rf, Mo;\nfunction nl() {\n  if (Mo)\n    return rf;\n  Mo = 1;\n  var e = Hi(), r = e(\"%Object.defineProperty%\", !0), t = function() {\n    if (r)\n      try {\n        return r({}, \"a\", { value: 1 }), !0;\n      } catch {\n        return !1;\n      }\n    return !1;\n  };\n  return t.hasArrayLengthDefineBug = function() {\n    if (!t())\n      return null;\n    try {\n      return r([], \"length\", { value: 1 }).length !== 1;\n    } catch {\n      return !0;\n    }\n  }, rf = t, rf;\n}\nvar tf, So;\nfunction Gi() {\n  if (So)\n    return tf;\n  So = 1;\n  var e = il(), r = typeof Symbol == \"function\" && typeof Symbol(\"foo\") == \"symbol\", t = Object.prototype.toString, i = Array.prototype.concat, c = Object.defineProperty, n = function(z) {\n    return typeof z == \"function\" && t.call(z) === \"[object Function]\";\n  }, x = nl()(), m = c && x, k = function(z, C, F, T) {\n    if (C in z) {\n      if (T === !0) {\n        if (z[C] === F)\n          return;\n      } else if (!n(T) || !T())\n        return;\n    }\n    m ? c(z, C, {\n      configurable: !0,\n      enumerable: !1,\n      value: F,\n      writable: !0\n    }) : z[C] = F;\n  }, B = function(z, C) {\n    var F = arguments.length > 2 ? arguments[2] : {}, T = e(C);\n    r && (T = i.call(T, Object.getOwnPropertySymbols(C)));\n    for (var L = 0; L < T.length; L += 1)\n      k(z, T[L], C[T[L]], F[T[L]]);\n  };\n  return B.supportsDescriptors = !!m, tf = B, tf;\n}\nvar af, ko;\nfunction Gc() {\n  if (ko)\n    return af;\n  ko = 1;\n  var e = function(r) {\n    return r !== r;\n  };\n  return af = function(t, i) {\n    return t === 0 && i === 0 ? 1 / t === 1 / i : !!(t === i || e(t) && e(i));\n  }, af;\n}\nvar nf, Eo;\nfunction Zc() {\n  if (Eo)\n    return nf;\n  Eo = 1;\n  var e = Gc();\n  return nf = function() {\n    return typeof Object.is == \"function\" ? Object.is : e;\n  }, nf;\n}\nvar ff, Ao;\nfunction fl() {\n  if (Ao)\n    return ff;\n  Ao = 1;\n  var e = Zc(), r = Gi();\n  return ff = function() {\n    var i = e();\n    return r(Object, { is: i }, {\n      is: function() {\n        return Object.is !== i;\n      }\n    }), i;\n  }, ff;\n}\nvar of, Bo;\nfunction Jc() {\n  if (Bo)\n    return of;\n  Bo = 1;\n  var e = Gi(), r = Vi(), t = Gc(), i = Zc(), c = fl(), n = r(i(), Object);\n  return e(n, {\n    getPolyfill: i,\n    implementation: t,\n    shim: c\n  }), of = n, of;\n}\nvar cf, zo;\nfunction Yc() {\n  return zo || (zo = 1, cf = function(r) {\n    return r !== r;\n  }), cf;\n}\nvar df, Io;\nfunction Xc() {\n  if (Io)\n    return df;\n  Io = 1;\n  var e = Yc();\n  return df = function() {\n    return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN(\"a\") ? Number.isNaN : e;\n  }, df;\n}\nvar sf, Ro;\nfunction ol() {\n  if (Ro)\n    return sf;\n  Ro = 1;\n  var e = Gi(), r = Xc();\n  return sf = function() {\n    var i = r();\n    return e(Number, { isNaN: i }, {\n      isNaN: function() {\n        return Number.isNaN !== i;\n      }\n    }), i;\n  }, sf;\n}\nvar uf, To;\nfunction cl() {\n  if (To)\n    return uf;\n  To = 1;\n  var e = Vi(), r = Gi(), t = Yc(), i = Xc(), c = ol(), n = e(i(), Number);\n  return r(n, {\n    getPolyfill: i,\n    implementation: t,\n    shim: c\n  }), uf = n, uf;\n}\nvar lf, jo;\nfunction dl() {\n  if (jo)\n    return lf;\n  jo = 1;\n  function e(Q, re) {\n    return i(Q) || t(Q, re) || r();\n  }\n  function r() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n  function t(Q, re) {\n    var oe = [], se = !0, de = !1, A = void 0;\n    try {\n      for (var w = Q[Symbol.iterator](), _; !(se = (_ = w.next()).done) && (oe.push(_.value), !(re && oe.length === re)); se = !0)\n        ;\n    } catch (N) {\n      de = !0, A = N;\n    } finally {\n      try {\n        !se && w.return != null && w.return();\n      } finally {\n        if (de)\n          throw A;\n      }\n    }\n    return oe;\n  }\n  function i(Q) {\n    if (Array.isArray(Q))\n      return Q;\n  }\n  function c(Q) {\n    return typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? c = function(oe) {\n      return typeof oe;\n    } : c = function(oe) {\n      return oe && typeof Symbol == \"function\" && oe.constructor === Symbol && oe !== Symbol.prototype ? \"symbol\" : typeof oe;\n    }, c(Q);\n  }\n  var n = /a/g.flags !== void 0, x = function(re) {\n    var oe = [];\n    return re.forEach(function(se) {\n      return oe.push(se);\n    }), oe;\n  }, m = function(re) {\n    var oe = [];\n    return re.forEach(function(se, de) {\n      return oe.push([de, se]);\n    }), oe;\n  }, k = Object.is ? Object.is : Jc(), B = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {\n    return [];\n  }, z = Number.isNaN ? Number.isNaN : cl();\n  function C(Q) {\n    return Q.call.bind(Q);\n  }\n  var F = C(Object.prototype.hasOwnProperty), T = C(Object.prototype.propertyIsEnumerable), L = C(Object.prototype.toString), O = Ma.types, q = O.isAnyArrayBuffer, R = O.isArrayBufferView, U = O.isDate, H = O.isMap, Z = O.isRegExp, W = O.isSet, Y = O.isNativeError, ne = O.isBoxedPrimitive, D = O.isNumberObject, V = O.isStringObject, G = O.isBooleanObject, M = O.isBigIntObject, p = O.isSymbolObject, s = O.isFloat32Array, a = O.isFloat64Array;\n  function o(Q) {\n    if (Q.length === 0 || Q.length > 10)\n      return !0;\n    for (var re = 0; re < Q.length; re++) {\n      var oe = Q.charCodeAt(re);\n      if (oe < 48 || oe > 57)\n        return !0;\n    }\n    return Q.length === 10 && Q >= Math.pow(2, 32);\n  }\n  function u(Q) {\n    return Object.keys(Q).filter(o).concat(B(Q).filter(Object.prototype.propertyIsEnumerable.bind(Q)));\n  }\n  /*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n   * @license  MIT\n   */\n  function h(Q, re) {\n    if (Q === re)\n      return 0;\n    for (var oe = Q.length, se = re.length, de = 0, A = Math.min(oe, se); de < A; ++de)\n      if (Q[de] !== re[de]) {\n        oe = Q[de], se = re[de];\n        break;\n      }\n    return oe < se ? -1 : se < oe ? 1 : 0;\n  }\n  var v = !0, g = !1, l = 0, d = 1, f = 2, b = 3;\n  function E(Q, re) {\n    return n ? Q.source === re.source && Q.flags === re.flags : RegExp.prototype.toString.call(Q) === RegExp.prototype.toString.call(re);\n  }\n  function y(Q, re) {\n    if (Q.byteLength !== re.byteLength)\n      return !1;\n    for (var oe = 0; oe < Q.byteLength; oe++)\n      if (Q[oe] !== re[oe])\n        return !1;\n    return !0;\n  }\n  function S(Q, re) {\n    return Q.byteLength !== re.byteLength ? !1 : h(new Uint8Array(Q.buffer, Q.byteOffset, Q.byteLength), new Uint8Array(re.buffer, re.byteOffset, re.byteLength)) === 0;\n  }\n  function I(Q, re) {\n    return Q.byteLength === re.byteLength && h(new Uint8Array(Q), new Uint8Array(re)) === 0;\n  }\n  function $(Q, re) {\n    return D(Q) ? D(re) && k(Number.prototype.valueOf.call(Q), Number.prototype.valueOf.call(re)) : V(Q) ? V(re) && String.prototype.valueOf.call(Q) === String.prototype.valueOf.call(re) : G(Q) ? G(re) && Boolean.prototype.valueOf.call(Q) === Boolean.prototype.valueOf.call(re) : M(Q) ? M(re) && BigInt.prototype.valueOf.call(Q) === BigInt.prototype.valueOf.call(re) : p(re) && Symbol.prototype.valueOf.call(Q) === Symbol.prototype.valueOf.call(re);\n  }\n  function K(Q, re, oe, se) {\n    if (Q === re)\n      return Q !== 0 ? !0 : oe ? k(Q, re) : !0;\n    if (oe) {\n      if (c(Q) !== \"object\")\n        return typeof Q == \"number\" && z(Q) && z(re);\n      if (c(re) !== \"object\" || Q === null || re === null || Object.getPrototypeOf(Q) !== Object.getPrototypeOf(re))\n        return !1;\n    } else {\n      if (Q === null || c(Q) !== \"object\")\n        return re === null || c(re) !== \"object\" ? Q == re : !1;\n      if (re === null || c(re) !== \"object\")\n        return !1;\n    }\n    var de = L(Q), A = L(re);\n    if (de !== A)\n      return !1;\n    if (Array.isArray(Q)) {\n      if (Q.length !== re.length)\n        return !1;\n      var w = u(Q), _ = u(re);\n      return w.length !== _.length ? !1 : j(Q, re, oe, se, d, w);\n    }\n    if (de === \"[object Object]\" && (!H(Q) && H(re) || !W(Q) && W(re)))\n      return !1;\n    if (U(Q)) {\n      if (!U(re) || Date.prototype.getTime.call(Q) !== Date.prototype.getTime.call(re))\n        return !1;\n    } else if (Z(Q)) {\n      if (!Z(re) || !E(Q, re))\n        return !1;\n    } else if (Y(Q) || Q instanceof Error) {\n      if (Q.message !== re.message || Q.name !== re.name)\n        return !1;\n    } else if (R(Q)) {\n      if (!oe && (s(Q) || a(Q))) {\n        if (!y(Q, re))\n          return !1;\n      } else if (!S(Q, re))\n        return !1;\n      var N = u(Q), J = u(re);\n      return N.length !== J.length ? !1 : j(Q, re, oe, se, l, N);\n    } else {\n      if (W(Q))\n        return !W(re) || Q.size !== re.size ? !1 : j(Q, re, oe, se, f);\n      if (H(Q))\n        return !H(re) || Q.size !== re.size ? !1 : j(Q, re, oe, se, b);\n      if (q(Q)) {\n        if (!I(Q, re))\n          return !1;\n      } else if (ne(Q) && !$(Q, re))\n        return !1;\n    }\n    return j(Q, re, oe, se, l);\n  }\n  function ae(Q, re) {\n    return re.filter(function(oe) {\n      return T(Q, oe);\n    });\n  }\n  function j(Q, re, oe, se, de, A) {\n    if (arguments.length === 5) {\n      A = Object.keys(Q);\n      var w = Object.keys(re);\n      if (A.length !== w.length)\n        return !1;\n    }\n    for (var _ = 0; _ < A.length; _++)\n      if (!F(re, A[_]))\n        return !1;\n    if (oe && arguments.length === 5) {\n      var N = B(Q);\n      if (N.length !== 0) {\n        var J = 0;\n        for (_ = 0; _ < N.length; _++) {\n          var X = N[_];\n          if (T(Q, X)) {\n            if (!T(re, X))\n              return !1;\n            A.push(X), J++;\n          } else if (T(re, X))\n            return !1;\n        }\n        var ee = B(re);\n        if (N.length !== ee.length && ae(re, ee).length !== J)\n          return !1;\n      } else {\n        var xe = B(re);\n        if (xe.length !== 0 && ae(re, xe).length !== 0)\n          return !1;\n      }\n    }\n    if (A.length === 0 && (de === l || de === d && Q.length === 0 || Q.size === 0))\n      return !0;\n    if (se === void 0)\n      se = {\n        val1: /* @__PURE__ */ new Map(),\n        val2: /* @__PURE__ */ new Map(),\n        position: 0\n      };\n    else {\n      var pe = se.val1.get(Q);\n      if (pe !== void 0) {\n        var ue = se.val2.get(re);\n        if (ue !== void 0)\n          return pe === ue;\n      }\n      se.position++;\n    }\n    se.val1.set(Q, se.position), se.val2.set(re, se.position);\n    var Ie = fe(Q, re, oe, A, se, de);\n    return se.val1.delete(Q), se.val2.delete(re), Ie;\n  }\n  function P(Q, re, oe, se) {\n    for (var de = x(Q), A = 0; A < de.length; A++) {\n      var w = de[A];\n      if (K(re, w, oe, se))\n        return Q.delete(w), !0;\n    }\n    return !1;\n  }\n  function ie(Q) {\n    switch (c(Q)) {\n      case \"undefined\":\n        return null;\n      case \"object\":\n        return;\n      case \"symbol\":\n        return !1;\n      case \"string\":\n        Q = +Q;\n      case \"number\":\n        if (z(Q))\n          return !1;\n    }\n    return !0;\n  }\n  function te(Q, re, oe) {\n    var se = ie(oe);\n    return se ?? (re.has(se) && !Q.has(se));\n  }\n  function ce(Q, re, oe, se, de) {\n    var A = ie(oe);\n    if (A != null)\n      return A;\n    var w = re.get(A);\n    return w === void 0 && !re.has(A) || !K(se, w, !1, de) ? !1 : !Q.has(A) && K(se, w, !1, de);\n  }\n  function ve(Q, re, oe, se) {\n    for (var de = null, A = x(Q), w = 0; w < A.length; w++) {\n      var _ = A[w];\n      if (c(_) === \"object\" && _ !== null)\n        de === null && (de = /* @__PURE__ */ new Set()), de.add(_);\n      else if (!re.has(_)) {\n        if (oe || !te(Q, re, _))\n          return !1;\n        de === null && (de = /* @__PURE__ */ new Set()), de.add(_);\n      }\n    }\n    if (de !== null) {\n      for (var N = x(re), J = 0; J < N.length; J++) {\n        var X = N[J];\n        if (c(X) === \"object\" && X !== null) {\n          if (!P(de, X, oe, se))\n            return !1;\n        } else if (!oe && !Q.has(X) && !P(de, X, oe, se))\n          return !1;\n      }\n      return de.size === 0;\n    }\n    return !0;\n  }\n  function le(Q, re, oe, se, de, A) {\n    for (var w = x(Q), _ = 0; _ < w.length; _++) {\n      var N = w[_];\n      if (K(oe, N, de, A) && K(se, re.get(N), de, A))\n        return Q.delete(N), !0;\n    }\n    return !1;\n  }\n  function he(Q, re, oe, se) {\n    for (var de = null, A = m(Q), w = 0; w < A.length; w++) {\n      var _ = e(A[w], 2), N = _[0], J = _[1];\n      if (c(N) === \"object\" && N !== null)\n        de === null && (de = /* @__PURE__ */ new Set()), de.add(N);\n      else {\n        var X = re.get(N);\n        if (X === void 0 && !re.has(N) || !K(J, X, oe, se)) {\n          if (oe || !ce(Q, re, N, J, se))\n            return !1;\n          de === null && (de = /* @__PURE__ */ new Set()), de.add(N);\n        }\n      }\n    }\n    if (de !== null) {\n      for (var ee = m(re), xe = 0; xe < ee.length; xe++) {\n        var pe = e(ee[xe], 2), N = pe[0], ue = pe[1];\n        if (c(N) === \"object\" && N !== null) {\n          if (!le(de, Q, N, ue, oe, se))\n            return !1;\n        } else if (!oe && (!Q.has(N) || !K(Q.get(N), ue, !1, se)) && !le(de, Q, N, ue, !1, se))\n          return !1;\n      }\n      return de.size === 0;\n    }\n    return !0;\n  }\n  function fe(Q, re, oe, se, de, A) {\n    var w = 0;\n    if (A === f) {\n      if (!ve(Q, re, oe, de))\n        return !1;\n    } else if (A === b) {\n      if (!he(Q, re, oe, de))\n        return !1;\n    } else if (A === d)\n      for (; w < Q.length; w++)\n        if (F(Q, w)) {\n          if (!F(re, w) || !K(Q[w], re[w], oe, de))\n            return !1;\n        } else {\n          if (F(re, w))\n            return !1;\n          for (var _ = Object.keys(Q); w < _.length; w++) {\n            var N = _[w];\n            if (!F(re, N) || !K(Q[N], re[N], oe, de))\n              return !1;\n          }\n          return _.length === Object.keys(re).length;\n        }\n    for (w = 0; w < se.length; w++) {\n      var J = se[w];\n      if (!K(Q[J], re[J], oe, de))\n        return !1;\n    }\n    return !0;\n  }\n  function ze(Q, re) {\n    return K(Q, re, g);\n  }\n  function ge(Q, re) {\n    return K(Q, re, v);\n  }\n  return lf = {\n    isDeepEqual: ze,\n    isDeepStrictEqual: ge\n  }, lf;\n}\nvar Po;\nfunction da() {\n  if (Po)\n    return qn.exports;\n  Po = 1;\n  function e(d) {\n    return typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? e = function(b) {\n      return typeof b;\n    } : e = function(b) {\n      return b && typeof Symbol == \"function\" && b.constructor === Symbol && b !== Symbol.prototype ? \"symbol\" : typeof b;\n    }, e(d);\n  }\n  function r(d, f) {\n    if (!(d instanceof f))\n      throw new TypeError(\"Cannot call a class as a function\");\n  }\n  var t = Vc(), i = t.codes, c = i.ERR_AMBIGUOUS_ARGUMENT, n = i.ERR_INVALID_ARG_TYPE, x = i.ERR_INVALID_ARG_VALUE, m = i.ERR_INVALID_RETURN_VALUE, k = i.ERR_MISSING_ARGS, B = rl(), z = Ma, C = z.inspect, F = Ma.types, T = F.isPromise, L = F.isRegExp, O = Object.assign ? Object.assign : tl().assign, q = Object.is ? Object.is : Jc(), R, U;\n  function H() {\n    var d = dl();\n    R = d.isDeepEqual, U = d.isDeepStrictEqual;\n  }\n  var Z = !1, W = qn.exports = G, Y = {};\n  function ne(d) {\n    throw d.message instanceof Error ? d.message : new B(d);\n  }\n  function D(d, f, b, E, y) {\n    var S = arguments.length, I;\n    if (S === 0)\n      I = \"Failed\";\n    else if (S === 1)\n      b = d, d = void 0;\n    else {\n      if (Z === !1) {\n        Z = !0;\n        var $ = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n        $(\"assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.\", \"DeprecationWarning\", \"DEP0094\");\n      }\n      S === 2 && (E = \"!=\");\n    }\n    if (b instanceof Error)\n      throw b;\n    var K = {\n      actual: d,\n      expected: f,\n      operator: E === void 0 ? \"fail\" : E,\n      stackStartFn: y || D\n    };\n    b !== void 0 && (K.message = b);\n    var ae = new B(K);\n    throw I && (ae.message = I, ae.generatedMessage = !0), ae;\n  }\n  W.fail = D, W.AssertionError = B;\n  function V(d, f, b, E) {\n    if (!b) {\n      var y = !1;\n      if (f === 0)\n        y = !0, E = \"No value argument passed to `assert.ok()`\";\n      else if (E instanceof Error)\n        throw E;\n      var S = new B({\n        actual: b,\n        expected: !0,\n        message: E,\n        operator: \"==\",\n        stackStartFn: d\n      });\n      throw S.generatedMessage = y, S;\n    }\n  }\n  function G() {\n    for (var d = arguments.length, f = new Array(d), b = 0; b < d; b++)\n      f[b] = arguments[b];\n    V.apply(void 0, [G, f.length].concat(f));\n  }\n  W.ok = G, W.equal = function d(f, b, E) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    f != b && ne({\n      actual: f,\n      expected: b,\n      message: E,\n      operator: \"==\",\n      stackStartFn: d\n    });\n  }, W.notEqual = function d(f, b, E) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    f == b && ne({\n      actual: f,\n      expected: b,\n      message: E,\n      operator: \"!=\",\n      stackStartFn: d\n    });\n  }, W.deepEqual = function d(f, b, E) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    R === void 0 && H(), R(f, b) || ne({\n      actual: f,\n      expected: b,\n      message: E,\n      operator: \"deepEqual\",\n      stackStartFn: d\n    });\n  }, W.notDeepEqual = function d(f, b, E) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    R === void 0 && H(), R(f, b) && ne({\n      actual: f,\n      expected: b,\n      message: E,\n      operator: \"notDeepEqual\",\n      stackStartFn: d\n    });\n  }, W.deepStrictEqual = function d(f, b, E) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    R === void 0 && H(), U(f, b) || ne({\n      actual: f,\n      expected: b,\n      message: E,\n      operator: \"deepStrictEqual\",\n      stackStartFn: d\n    });\n  }, W.notDeepStrictEqual = M;\n  function M(d, f, b) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    R === void 0 && H(), U(d, f) && ne({\n      actual: d,\n      expected: f,\n      message: b,\n      operator: \"notDeepStrictEqual\",\n      stackStartFn: M\n    });\n  }\n  W.strictEqual = function d(f, b, E) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    q(f, b) || ne({\n      actual: f,\n      expected: b,\n      message: E,\n      operator: \"strictEqual\",\n      stackStartFn: d\n    });\n  }, W.notStrictEqual = function d(f, b, E) {\n    if (arguments.length < 2)\n      throw new k(\"actual\", \"expected\");\n    q(f, b) && ne({\n      actual: f,\n      expected: b,\n      message: E,\n      operator: \"notStrictEqual\",\n      stackStartFn: d\n    });\n  };\n  var p = function d(f, b, E) {\n    var y = this;\n    r(this, d), b.forEach(function(S) {\n      S in f && (E !== void 0 && typeof E[S] == \"string\" && L(f[S]) && f[S].test(E[S]) ? y[S] = E[S] : y[S] = f[S]);\n    });\n  };\n  function s(d, f, b, E, y, S) {\n    if (!(b in d) || !U(d[b], f[b])) {\n      if (!E) {\n        var I = new p(d, y), $ = new p(f, y, d), K = new B({\n          actual: I,\n          expected: $,\n          operator: \"deepStrictEqual\",\n          stackStartFn: S\n        });\n        throw K.actual = d, K.expected = f, K.operator = S.name, K;\n      }\n      ne({\n        actual: d,\n        expected: f,\n        message: E,\n        operator: S.name,\n        stackStartFn: S\n      });\n    }\n  }\n  function a(d, f, b, E) {\n    if (typeof f != \"function\") {\n      if (L(f))\n        return f.test(d);\n      if (arguments.length === 2)\n        throw new n(\"expected\", [\"Function\", \"RegExp\"], f);\n      if (e(d) !== \"object\" || d === null) {\n        var y = new B({\n          actual: d,\n          expected: f,\n          message: b,\n          operator: \"deepStrictEqual\",\n          stackStartFn: E\n        });\n        throw y.operator = E.name, y;\n      }\n      var S = Object.keys(f);\n      if (f instanceof Error)\n        S.push(\"name\", \"message\");\n      else if (S.length === 0)\n        throw new x(\"error\", f, \"may not be an empty object\");\n      return R === void 0 && H(), S.forEach(function(I) {\n        typeof d[I] == \"string\" && L(f[I]) && f[I].test(d[I]) || s(d, f, I, b, S, E);\n      }), !0;\n    }\n    return f.prototype !== void 0 && d instanceof f ? !0 : Error.isPrototypeOf(f) ? !1 : f.call({}, d) === !0;\n  }\n  function o(d) {\n    if (typeof d != \"function\")\n      throw new n(\"fn\", \"Function\", d);\n    try {\n      d();\n    } catch (f) {\n      return f;\n    }\n    return Y;\n  }\n  function u(d) {\n    return T(d) || d !== null && e(d) === \"object\" && typeof d.then == \"function\" && typeof d.catch == \"function\";\n  }\n  function h(d) {\n    return Promise.resolve().then(function() {\n      var f;\n      if (typeof d == \"function\") {\n        if (f = d(), !u(f))\n          throw new m(\"instance of Promise\", \"promiseFn\", f);\n      } else if (u(d))\n        f = d;\n      else\n        throw new n(\"promiseFn\", [\"Function\", \"Promise\"], d);\n      return Promise.resolve().then(function() {\n        return f;\n      }).then(function() {\n        return Y;\n      }).catch(function(b) {\n        return b;\n      });\n    });\n  }\n  function v(d, f, b, E) {\n    if (typeof b == \"string\") {\n      if (arguments.length === 4)\n        throw new n(\"error\", [\"Object\", \"Error\", \"Function\", \"RegExp\"], b);\n      if (e(f) === \"object\" && f !== null) {\n        if (f.message === b)\n          throw new c(\"error/message\", 'The error message \"'.concat(f.message, '\" is identical to the message.'));\n      } else if (f === b)\n        throw new c(\"error/message\", 'The error \"'.concat(f, '\" is identical to the message.'));\n      E = b, b = void 0;\n    } else if (b != null && e(b) !== \"object\" && typeof b != \"function\")\n      throw new n(\"error\", [\"Object\", \"Error\", \"Function\", \"RegExp\"], b);\n    if (f === Y) {\n      var y = \"\";\n      b && b.name && (y += \" (\".concat(b.name, \")\")), y += E ? \": \".concat(E) : \".\";\n      var S = d.name === \"rejects\" ? \"rejection\" : \"exception\";\n      ne({\n        actual: void 0,\n        expected: b,\n        operator: d.name,\n        message: \"Missing expected \".concat(S).concat(y),\n        stackStartFn: d\n      });\n    }\n    if (b && !a(f, b, E, d))\n      throw f;\n  }\n  function g(d, f, b, E) {\n    if (f !== Y) {\n      if (typeof b == \"string\" && (E = b, b = void 0), !b || a(f, b)) {\n        var y = E ? \": \".concat(E) : \".\", S = d.name === \"doesNotReject\" ? \"rejection\" : \"exception\";\n        ne({\n          actual: f,\n          expected: b,\n          operator: d.name,\n          message: \"Got unwanted \".concat(S).concat(y, `\n`) + 'Actual message: \"'.concat(f && f.message, '\"'),\n          stackStartFn: d\n        });\n      }\n      throw f;\n    }\n  }\n  W.throws = function d(f) {\n    for (var b = arguments.length, E = new Array(b > 1 ? b - 1 : 0), y = 1; y < b; y++)\n      E[y - 1] = arguments[y];\n    v.apply(void 0, [d, o(f)].concat(E));\n  }, W.rejects = function d(f) {\n    for (var b = arguments.length, E = new Array(b > 1 ? b - 1 : 0), y = 1; y < b; y++)\n      E[y - 1] = arguments[y];\n    return h(f).then(function(S) {\n      return v.apply(void 0, [d, S].concat(E));\n    });\n  }, W.doesNotThrow = function d(f) {\n    for (var b = arguments.length, E = new Array(b > 1 ? b - 1 : 0), y = 1; y < b; y++)\n      E[y - 1] = arguments[y];\n    g.apply(void 0, [d, o(f)].concat(E));\n  }, W.doesNotReject = function d(f) {\n    for (var b = arguments.length, E = new Array(b > 1 ? b - 1 : 0), y = 1; y < b; y++)\n      E[y - 1] = arguments[y];\n    return h(f).then(function(S) {\n      return g.apply(void 0, [d, S].concat(E));\n    });\n  }, W.ifError = function d(f) {\n    if (f != null) {\n      var b = \"ifError got unwanted exception: \";\n      e(f) === \"object\" && typeof f.message == \"string\" ? f.message.length === 0 && f.constructor ? b += f.constructor.name : b += f.message : b += C(f);\n      var E = new B({\n        actual: f,\n        expected: null,\n        operator: \"ifError\",\n        message: b,\n        stackStartFn: d\n      }), y = f.stack;\n      if (typeof y == \"string\") {\n        var S = y.split(`\n`);\n        S.shift();\n        for (var I = E.stack.split(`\n`), $ = 0; $ < S.length; $++) {\n          var K = I.indexOf(S[$]);\n          if (K !== -1) {\n            I = I.slice(0, K);\n            break;\n          }\n        }\n        E.stack = \"\".concat(I.join(`\n`), `\n`).concat(S.join(`\n`));\n      }\n      throw E;\n    }\n  };\n  function l() {\n    for (var d = arguments.length, f = new Array(d), b = 0; b < d; b++)\n      f[b] = arguments[b];\n    V.apply(void 0, [l, f.length].concat(f));\n  }\n  return W.strict = O(l, W, {\n    equal: W.strictEqual,\n    deepEqual: W.deepStrictEqual,\n    notEqual: W.notStrictEqual,\n    notDeepEqual: W.notDeepStrictEqual\n  }), W.strict.strict = W.strict, qn.exports;\n}\nvar sl = da();\nconst Vr = /* @__PURE__ */ Ki(sl);\nvar x0 = { exports: {} };\nconst ul = {}, ll = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: ul\n}, Symbol.toStringTag, { value: \"Module\" })), dt = /* @__PURE__ */ Pc(ll);\nx0.exports;\n(function(e) {\n  (function(r, t) {\n    function i(M, p) {\n      if (!M)\n        throw new Error(p || \"Assertion failed\");\n    }\n    function c(M, p) {\n      M.super_ = p;\n      var s = function() {\n      };\n      s.prototype = p.prototype, M.prototype = new s(), M.prototype.constructor = M;\n    }\n    function n(M, p, s) {\n      if (n.isBN(M))\n        return M;\n      this.negative = 0, this.words = null, this.length = 0, this.red = null, M !== null && ((p === \"le\" || p === \"be\") && (s = p, p = 10), this._init(M || 0, p || 10, s || \"be\"));\n    }\n    typeof r == \"object\" ? r.exports = n : t.BN = n, n.BN = n, n.wordSize = 26;\n    var x;\n    try {\n      typeof window < \"u\" && typeof window.Buffer < \"u\" ? x = window.Buffer : x = dt.Buffer;\n    } catch {\n    }\n    n.isBN = function(p) {\n      return p instanceof n ? !0 : p !== null && typeof p == \"object\" && p.constructor.wordSize === n.wordSize && Array.isArray(p.words);\n    }, n.max = function(p, s) {\n      return p.cmp(s) > 0 ? p : s;\n    }, n.min = function(p, s) {\n      return p.cmp(s) < 0 ? p : s;\n    }, n.prototype._init = function(p, s, a) {\n      if (typeof p == \"number\")\n        return this._initNumber(p, s, a);\n      if (typeof p == \"object\")\n        return this._initArray(p, s, a);\n      s === \"hex\" && (s = 16), i(s === (s | 0) && s >= 2 && s <= 36), p = p.toString().replace(/\\s+/g, \"\");\n      var o = 0;\n      p[0] === \"-\" && (o++, this.negative = 1), o < p.length && (s === 16 ? this._parseHex(p, o, a) : (this._parseBase(p, s, o), a === \"le\" && this._initArray(this.toArray(), s, a)));\n    }, n.prototype._initNumber = function(p, s, a) {\n      p < 0 && (this.negative = 1, p = -p), p < 67108864 ? (this.words = [p & 67108863], this.length = 1) : p < 4503599627370496 ? (this.words = [\n        p & 67108863,\n        p / 67108864 & 67108863\n      ], this.length = 2) : (i(p < 9007199254740992), this.words = [\n        p & 67108863,\n        p / 67108864 & 67108863,\n        1\n      ], this.length = 3), a === \"le\" && this._initArray(this.toArray(), s, a);\n    }, n.prototype._initArray = function(p, s, a) {\n      if (i(typeof p.length == \"number\"), p.length <= 0)\n        return this.words = [0], this.length = 1, this;\n      this.length = Math.ceil(p.length / 3), this.words = new Array(this.length);\n      for (var o = 0; o < this.length; o++)\n        this.words[o] = 0;\n      var u, h, v = 0;\n      if (a === \"be\")\n        for (o = p.length - 1, u = 0; o >= 0; o -= 3)\n          h = p[o] | p[o - 1] << 8 | p[o - 2] << 16, this.words[u] |= h << v & 67108863, this.words[u + 1] = h >>> 26 - v & 67108863, v += 24, v >= 26 && (v -= 26, u++);\n      else if (a === \"le\")\n        for (o = 0, u = 0; o < p.length; o += 3)\n          h = p[o] | p[o + 1] << 8 | p[o + 2] << 16, this.words[u] |= h << v & 67108863, this.words[u + 1] = h >>> 26 - v & 67108863, v += 24, v >= 26 && (v -= 26, u++);\n      return this.strip();\n    };\n    function m(M, p) {\n      var s = M.charCodeAt(p);\n      return s >= 65 && s <= 70 ? s - 55 : s >= 97 && s <= 102 ? s - 87 : s - 48 & 15;\n    }\n    function k(M, p, s) {\n      var a = m(M, s);\n      return s - 1 >= p && (a |= m(M, s - 1) << 4), a;\n    }\n    n.prototype._parseHex = function(p, s, a) {\n      this.length = Math.ceil((p.length - s) / 6), this.words = new Array(this.length);\n      for (var o = 0; o < this.length; o++)\n        this.words[o] = 0;\n      var u = 0, h = 0, v;\n      if (a === \"be\")\n        for (o = p.length - 1; o >= s; o -= 2)\n          v = k(p, s, o) << u, this.words[h] |= v & 67108863, u >= 18 ? (u -= 18, h += 1, this.words[h] |= v >>> 26) : u += 8;\n      else {\n        var g = p.length - s;\n        for (o = g % 2 === 0 ? s + 1 : s; o < p.length; o += 2)\n          v = k(p, s, o) << u, this.words[h] |= v & 67108863, u >= 18 ? (u -= 18, h += 1, this.words[h] |= v >>> 26) : u += 8;\n      }\n      this.strip();\n    };\n    function B(M, p, s, a) {\n      for (var o = 0, u = Math.min(M.length, s), h = p; h < u; h++) {\n        var v = M.charCodeAt(h) - 48;\n        o *= a, v >= 49 ? o += v - 49 + 10 : v >= 17 ? o += v - 17 + 10 : o += v;\n      }\n      return o;\n    }\n    n.prototype._parseBase = function(p, s, a) {\n      this.words = [0], this.length = 1;\n      for (var o = 0, u = 1; u <= 67108863; u *= s)\n        o++;\n      o--, u = u / s | 0;\n      for (var h = p.length - a, v = h % o, g = Math.min(h, h - v) + a, l = 0, d = a; d < g; d += o)\n        l = B(p, d, d + o, s), this.imuln(u), this.words[0] + l < 67108864 ? this.words[0] += l : this._iaddn(l);\n      if (v !== 0) {\n        var f = 1;\n        for (l = B(p, d, p.length, s), d = 0; d < v; d++)\n          f *= s;\n        this.imuln(f), this.words[0] + l < 67108864 ? this.words[0] += l : this._iaddn(l);\n      }\n      this.strip();\n    }, n.prototype.copy = function(p) {\n      p.words = new Array(this.length);\n      for (var s = 0; s < this.length; s++)\n        p.words[s] = this.words[s];\n      p.length = this.length, p.negative = this.negative, p.red = this.red;\n    }, n.prototype.clone = function() {\n      var p = new n(null);\n      return this.copy(p), p;\n    }, n.prototype._expand = function(p) {\n      for (; this.length < p; )\n        this.words[this.length++] = 0;\n      return this;\n    }, n.prototype.strip = function() {\n      for (; this.length > 1 && this.words[this.length - 1] === 0; )\n        this.length--;\n      return this._normSign();\n    }, n.prototype._normSign = function() {\n      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;\n    }, n.prototype.inspect = function() {\n      return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n    };\n    var z = [\n      \"\",\n      \"0\",\n      \"00\",\n      \"000\",\n      \"0000\",\n      \"00000\",\n      \"000000\",\n      \"0000000\",\n      \"00000000\",\n      \"000000000\",\n      \"0000000000\",\n      \"00000000000\",\n      \"000000000000\",\n      \"0000000000000\",\n      \"00000000000000\",\n      \"000000000000000\",\n      \"0000000000000000\",\n      \"00000000000000000\",\n      \"000000000000000000\",\n      \"0000000000000000000\",\n      \"00000000000000000000\",\n      \"000000000000000000000\",\n      \"0000000000000000000000\",\n      \"00000000000000000000000\",\n      \"000000000000000000000000\",\n      \"0000000000000000000000000\"\n    ], C = [\n      0,\n      0,\n      25,\n      16,\n      12,\n      11,\n      10,\n      9,\n      8,\n      8,\n      7,\n      7,\n      7,\n      7,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5\n    ], F = [\n      0,\n      0,\n      33554432,\n      43046721,\n      16777216,\n      48828125,\n      60466176,\n      40353607,\n      16777216,\n      43046721,\n      1e7,\n      19487171,\n      35831808,\n      62748517,\n      7529536,\n      11390625,\n      16777216,\n      24137569,\n      34012224,\n      47045881,\n      64e6,\n      4084101,\n      5153632,\n      6436343,\n      7962624,\n      9765625,\n      11881376,\n      14348907,\n      17210368,\n      20511149,\n      243e5,\n      28629151,\n      33554432,\n      39135393,\n      45435424,\n      52521875,\n      60466176\n    ];\n    n.prototype.toString = function(p, s) {\n      p = p || 10, s = s | 0 || 1;\n      var a;\n      if (p === 16 || p === \"hex\") {\n        a = \"\";\n        for (var o = 0, u = 0, h = 0; h < this.length; h++) {\n          var v = this.words[h], g = ((v << o | u) & 16777215).toString(16);\n          u = v >>> 24 - o & 16777215, u !== 0 || h !== this.length - 1 ? a = z[6 - g.length] + g + a : a = g + a, o += 2, o >= 26 && (o -= 26, h--);\n        }\n        for (u !== 0 && (a = u.toString(16) + a); a.length % s !== 0; )\n          a = \"0\" + a;\n        return this.negative !== 0 && (a = \"-\" + a), a;\n      }\n      if (p === (p | 0) && p >= 2 && p <= 36) {\n        var l = C[p], d = F[p];\n        a = \"\";\n        var f = this.clone();\n        for (f.negative = 0; !f.isZero(); ) {\n          var b = f.modn(d).toString(p);\n          f = f.idivn(d), f.isZero() ? a = b + a : a = z[l - b.length] + b + a;\n        }\n        for (this.isZero() && (a = \"0\" + a); a.length % s !== 0; )\n          a = \"0\" + a;\n        return this.negative !== 0 && (a = \"-\" + a), a;\n      }\n      i(!1, \"Base should be between 2 and 36\");\n    }, n.prototype.toNumber = function() {\n      var p = this.words[0];\n      return this.length === 2 ? p += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? p += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i(!1, \"Number can only safely store up to 53 bits\"), this.negative !== 0 ? -p : p;\n    }, n.prototype.toJSON = function() {\n      return this.toString(16);\n    }, n.prototype.toBuffer = function(p, s) {\n      return i(typeof x < \"u\"), this.toArrayLike(x, p, s);\n    }, n.prototype.toArray = function(p, s) {\n      return this.toArrayLike(Array, p, s);\n    }, n.prototype.toArrayLike = function(p, s, a) {\n      var o = this.byteLength(), u = a || Math.max(1, o);\n      i(o <= u, \"byte array longer than desired length\"), i(u > 0, \"Requested array length <= 0\"), this.strip();\n      var h = s === \"le\", v = new p(u), g, l, d = this.clone();\n      if (h) {\n        for (l = 0; !d.isZero(); l++)\n          g = d.andln(255), d.iushrn(8), v[l] = g;\n        for (; l < u; l++)\n          v[l] = 0;\n      } else {\n        for (l = 0; l < u - o; l++)\n          v[l] = 0;\n        for (l = 0; !d.isZero(); l++)\n          g = d.andln(255), d.iushrn(8), v[u - l - 1] = g;\n      }\n      return v;\n    }, Math.clz32 ? n.prototype._countBits = function(p) {\n      return 32 - Math.clz32(p);\n    } : n.prototype._countBits = function(p) {\n      var s = p, a = 0;\n      return s >= 4096 && (a += 13, s >>>= 13), s >= 64 && (a += 7, s >>>= 7), s >= 8 && (a += 4, s >>>= 4), s >= 2 && (a += 2, s >>>= 2), a + s;\n    }, n.prototype._zeroBits = function(p) {\n      if (p === 0)\n        return 26;\n      var s = p, a = 0;\n      return s & 8191 || (a += 13, s >>>= 13), s & 127 || (a += 7, s >>>= 7), s & 15 || (a += 4, s >>>= 4), s & 3 || (a += 2, s >>>= 2), s & 1 || a++, a;\n    }, n.prototype.bitLength = function() {\n      var p = this.words[this.length - 1], s = this._countBits(p);\n      return (this.length - 1) * 26 + s;\n    };\n    function T(M) {\n      for (var p = new Array(M.bitLength()), s = 0; s < p.length; s++) {\n        var a = s / 26 | 0, o = s % 26;\n        p[s] = (M.words[a] & 1 << o) >>> o;\n      }\n      return p;\n    }\n    n.prototype.zeroBits = function() {\n      if (this.isZero())\n        return 0;\n      for (var p = 0, s = 0; s < this.length; s++) {\n        var a = this._zeroBits(this.words[s]);\n        if (p += a, a !== 26)\n          break;\n      }\n      return p;\n    }, n.prototype.byteLength = function() {\n      return Math.ceil(this.bitLength() / 8);\n    }, n.prototype.toTwos = function(p) {\n      return this.negative !== 0 ? this.abs().inotn(p).iaddn(1) : this.clone();\n    }, n.prototype.fromTwos = function(p) {\n      return this.testn(p - 1) ? this.notn(p).iaddn(1).ineg() : this.clone();\n    }, n.prototype.isNeg = function() {\n      return this.negative !== 0;\n    }, n.prototype.neg = function() {\n      return this.clone().ineg();\n    }, n.prototype.ineg = function() {\n      return this.isZero() || (this.negative ^= 1), this;\n    }, n.prototype.iuor = function(p) {\n      for (; this.length < p.length; )\n        this.words[this.length++] = 0;\n      for (var s = 0; s < p.length; s++)\n        this.words[s] = this.words[s] | p.words[s];\n      return this.strip();\n    }, n.prototype.ior = function(p) {\n      return i((this.negative | p.negative) === 0), this.iuor(p);\n    }, n.prototype.or = function(p) {\n      return this.length > p.length ? this.clone().ior(p) : p.clone().ior(this);\n    }, n.prototype.uor = function(p) {\n      return this.length > p.length ? this.clone().iuor(p) : p.clone().iuor(this);\n    }, n.prototype.iuand = function(p) {\n      var s;\n      this.length > p.length ? s = p : s = this;\n      for (var a = 0; a < s.length; a++)\n        this.words[a] = this.words[a] & p.words[a];\n      return this.length = s.length, this.strip();\n    }, n.prototype.iand = function(p) {\n      return i((this.negative | p.negative) === 0), this.iuand(p);\n    }, n.prototype.and = function(p) {\n      return this.length > p.length ? this.clone().iand(p) : p.clone().iand(this);\n    }, n.prototype.uand = function(p) {\n      return this.length > p.length ? this.clone().iuand(p) : p.clone().iuand(this);\n    }, n.prototype.iuxor = function(p) {\n      var s, a;\n      this.length > p.length ? (s = this, a = p) : (s = p, a = this);\n      for (var o = 0; o < a.length; o++)\n        this.words[o] = s.words[o] ^ a.words[o];\n      if (this !== s)\n        for (; o < s.length; o++)\n          this.words[o] = s.words[o];\n      return this.length = s.length, this.strip();\n    }, n.prototype.ixor = function(p) {\n      return i((this.negative | p.negative) === 0), this.iuxor(p);\n    }, n.prototype.xor = function(p) {\n      return this.length > p.length ? this.clone().ixor(p) : p.clone().ixor(this);\n    }, n.prototype.uxor = function(p) {\n      return this.length > p.length ? this.clone().iuxor(p) : p.clone().iuxor(this);\n    }, n.prototype.inotn = function(p) {\n      i(typeof p == \"number\" && p >= 0);\n      var s = Math.ceil(p / 26) | 0, a = p % 26;\n      this._expand(s), a > 0 && s--;\n      for (var o = 0; o < s; o++)\n        this.words[o] = ~this.words[o] & 67108863;\n      return a > 0 && (this.words[o] = ~this.words[o] & 67108863 >> 26 - a), this.strip();\n    }, n.prototype.notn = function(p) {\n      return this.clone().inotn(p);\n    }, n.prototype.setn = function(p, s) {\n      i(typeof p == \"number\" && p >= 0);\n      var a = p / 26 | 0, o = p % 26;\n      return this._expand(a + 1), s ? this.words[a] = this.words[a] | 1 << o : this.words[a] = this.words[a] & ~(1 << o), this.strip();\n    }, n.prototype.iadd = function(p) {\n      var s;\n      if (this.negative !== 0 && p.negative === 0)\n        return this.negative = 0, s = this.isub(p), this.negative ^= 1, this._normSign();\n      if (this.negative === 0 && p.negative !== 0)\n        return p.negative = 0, s = this.isub(p), p.negative = 1, s._normSign();\n      var a, o;\n      this.length > p.length ? (a = this, o = p) : (a = p, o = this);\n      for (var u = 0, h = 0; h < o.length; h++)\n        s = (a.words[h] | 0) + (o.words[h] | 0) + u, this.words[h] = s & 67108863, u = s >>> 26;\n      for (; u !== 0 && h < a.length; h++)\n        s = (a.words[h] | 0) + u, this.words[h] = s & 67108863, u = s >>> 26;\n      if (this.length = a.length, u !== 0)\n        this.words[this.length] = u, this.length++;\n      else if (a !== this)\n        for (; h < a.length; h++)\n          this.words[h] = a.words[h];\n      return this;\n    }, n.prototype.add = function(p) {\n      var s;\n      return p.negative !== 0 && this.negative === 0 ? (p.negative = 0, s = this.sub(p), p.negative ^= 1, s) : p.negative === 0 && this.negative !== 0 ? (this.negative = 0, s = p.sub(this), this.negative = 1, s) : this.length > p.length ? this.clone().iadd(p) : p.clone().iadd(this);\n    }, n.prototype.isub = function(p) {\n      if (p.negative !== 0) {\n        p.negative = 0;\n        var s = this.iadd(p);\n        return p.negative = 1, s._normSign();\n      } else if (this.negative !== 0)\n        return this.negative = 0, this.iadd(p), this.negative = 1, this._normSign();\n      var a = this.cmp(p);\n      if (a === 0)\n        return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n      var o, u;\n      a > 0 ? (o = this, u = p) : (o = p, u = this);\n      for (var h = 0, v = 0; v < u.length; v++)\n        s = (o.words[v] | 0) - (u.words[v] | 0) + h, h = s >> 26, this.words[v] = s & 67108863;\n      for (; h !== 0 && v < o.length; v++)\n        s = (o.words[v] | 0) + h, h = s >> 26, this.words[v] = s & 67108863;\n      if (h === 0 && v < o.length && o !== this)\n        for (; v < o.length; v++)\n          this.words[v] = o.words[v];\n      return this.length = Math.max(this.length, v), o !== this && (this.negative = 1), this.strip();\n    }, n.prototype.sub = function(p) {\n      return this.clone().isub(p);\n    };\n    function L(M, p, s) {\n      s.negative = p.negative ^ M.negative;\n      var a = M.length + p.length | 0;\n      s.length = a, a = a - 1 | 0;\n      var o = M.words[0] | 0, u = p.words[0] | 0, h = o * u, v = h & 67108863, g = h / 67108864 | 0;\n      s.words[0] = v;\n      for (var l = 1; l < a; l++) {\n        for (var d = g >>> 26, f = g & 67108863, b = Math.min(l, p.length - 1), E = Math.max(0, l - M.length + 1); E <= b; E++) {\n          var y = l - E | 0;\n          o = M.words[y] | 0, u = p.words[E] | 0, h = o * u + f, d += h / 67108864 | 0, f = h & 67108863;\n        }\n        s.words[l] = f | 0, g = d | 0;\n      }\n      return g !== 0 ? s.words[l] = g | 0 : s.length--, s.strip();\n    }\n    var O = function(p, s, a) {\n      var o = p.words, u = s.words, h = a.words, v = 0, g, l, d, f = o[0] | 0, b = f & 8191, E = f >>> 13, y = o[1] | 0, S = y & 8191, I = y >>> 13, $ = o[2] | 0, K = $ & 8191, ae = $ >>> 13, j = o[3] | 0, P = j & 8191, ie = j >>> 13, te = o[4] | 0, ce = te & 8191, ve = te >>> 13, le = o[5] | 0, he = le & 8191, fe = le >>> 13, ze = o[6] | 0, ge = ze & 8191, Q = ze >>> 13, re = o[7] | 0, oe = re & 8191, se = re >>> 13, de = o[8] | 0, A = de & 8191, w = de >>> 13, _ = o[9] | 0, N = _ & 8191, J = _ >>> 13, X = u[0] | 0, ee = X & 8191, xe = X >>> 13, pe = u[1] | 0, ue = pe & 8191, Ie = pe >>> 13, me = u[2] | 0, we = me & 8191, Ke = me >>> 13, je = u[3] | 0, _e = je & 8191, He = je >>> 13, Pe = u[4] | 0, Me = Pe & 8191, Ve = Pe >>> 13, Oe = u[5] | 0, Se = Oe & 8191, We = Oe >>> 13, qe = u[6] | 0, ke = qe & 8191, Ge = qe >>> 13, Ne = u[7] | 0, Ee = Ne & 8191, Ze = Ne >>> 13, Fe = u[8] | 0, Ae = Fe & 8191, Je = Fe >>> 13, Ce = u[9] | 0, Be = Ce & 8191, Ye = Ce >>> 13;\n      a.negative = p.negative ^ s.negative, a.length = 19, g = Math.imul(b, ee), l = Math.imul(b, xe), l = l + Math.imul(E, ee) | 0, d = Math.imul(E, xe);\n      var Re = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, g = Math.imul(S, ee), l = Math.imul(S, xe), l = l + Math.imul(I, ee) | 0, d = Math.imul(I, xe), g = g + Math.imul(b, ue) | 0, l = l + Math.imul(b, Ie) | 0, l = l + Math.imul(E, ue) | 0, d = d + Math.imul(E, Ie) | 0;\n      var Te = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, g = Math.imul(K, ee), l = Math.imul(K, xe), l = l + Math.imul(ae, ee) | 0, d = Math.imul(ae, xe), g = g + Math.imul(S, ue) | 0, l = l + Math.imul(S, Ie) | 0, l = l + Math.imul(I, ue) | 0, d = d + Math.imul(I, Ie) | 0, g = g + Math.imul(b, we) | 0, l = l + Math.imul(b, Ke) | 0, l = l + Math.imul(E, we) | 0, d = d + Math.imul(E, Ke) | 0;\n      var cr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (cr >>> 26) | 0, cr &= 67108863, g = Math.imul(P, ee), l = Math.imul(P, xe), l = l + Math.imul(ie, ee) | 0, d = Math.imul(ie, xe), g = g + Math.imul(K, ue) | 0, l = l + Math.imul(K, Ie) | 0, l = l + Math.imul(ae, ue) | 0, d = d + Math.imul(ae, Ie) | 0, g = g + Math.imul(S, we) | 0, l = l + Math.imul(S, Ke) | 0, l = l + Math.imul(I, we) | 0, d = d + Math.imul(I, Ke) | 0, g = g + Math.imul(b, _e) | 0, l = l + Math.imul(b, He) | 0, l = l + Math.imul(E, _e) | 0, d = d + Math.imul(E, He) | 0;\n      var dr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (dr >>> 26) | 0, dr &= 67108863, g = Math.imul(ce, ee), l = Math.imul(ce, xe), l = l + Math.imul(ve, ee) | 0, d = Math.imul(ve, xe), g = g + Math.imul(P, ue) | 0, l = l + Math.imul(P, Ie) | 0, l = l + Math.imul(ie, ue) | 0, d = d + Math.imul(ie, Ie) | 0, g = g + Math.imul(K, we) | 0, l = l + Math.imul(K, Ke) | 0, l = l + Math.imul(ae, we) | 0, d = d + Math.imul(ae, Ke) | 0, g = g + Math.imul(S, _e) | 0, l = l + Math.imul(S, He) | 0, l = l + Math.imul(I, _e) | 0, d = d + Math.imul(I, He) | 0, g = g + Math.imul(b, Me) | 0, l = l + Math.imul(b, Ve) | 0, l = l + Math.imul(E, Me) | 0, d = d + Math.imul(E, Ve) | 0;\n      var sr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (sr >>> 26) | 0, sr &= 67108863, g = Math.imul(he, ee), l = Math.imul(he, xe), l = l + Math.imul(fe, ee) | 0, d = Math.imul(fe, xe), g = g + Math.imul(ce, ue) | 0, l = l + Math.imul(ce, Ie) | 0, l = l + Math.imul(ve, ue) | 0, d = d + Math.imul(ve, Ie) | 0, g = g + Math.imul(P, we) | 0, l = l + Math.imul(P, Ke) | 0, l = l + Math.imul(ie, we) | 0, d = d + Math.imul(ie, Ke) | 0, g = g + Math.imul(K, _e) | 0, l = l + Math.imul(K, He) | 0, l = l + Math.imul(ae, _e) | 0, d = d + Math.imul(ae, He) | 0, g = g + Math.imul(S, Me) | 0, l = l + Math.imul(S, Ve) | 0, l = l + Math.imul(I, Me) | 0, d = d + Math.imul(I, Ve) | 0, g = g + Math.imul(b, Se) | 0, l = l + Math.imul(b, We) | 0, l = l + Math.imul(E, Se) | 0, d = d + Math.imul(E, We) | 0;\n      var ur = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (ur >>> 26) | 0, ur &= 67108863, g = Math.imul(ge, ee), l = Math.imul(ge, xe), l = l + Math.imul(Q, ee) | 0, d = Math.imul(Q, xe), g = g + Math.imul(he, ue) | 0, l = l + Math.imul(he, Ie) | 0, l = l + Math.imul(fe, ue) | 0, d = d + Math.imul(fe, Ie) | 0, g = g + Math.imul(ce, we) | 0, l = l + Math.imul(ce, Ke) | 0, l = l + Math.imul(ve, we) | 0, d = d + Math.imul(ve, Ke) | 0, g = g + Math.imul(P, _e) | 0, l = l + Math.imul(P, He) | 0, l = l + Math.imul(ie, _e) | 0, d = d + Math.imul(ie, He) | 0, g = g + Math.imul(K, Me) | 0, l = l + Math.imul(K, Ve) | 0, l = l + Math.imul(ae, Me) | 0, d = d + Math.imul(ae, Ve) | 0, g = g + Math.imul(S, Se) | 0, l = l + Math.imul(S, We) | 0, l = l + Math.imul(I, Se) | 0, d = d + Math.imul(I, We) | 0, g = g + Math.imul(b, ke) | 0, l = l + Math.imul(b, Ge) | 0, l = l + Math.imul(E, ke) | 0, d = d + Math.imul(E, Ge) | 0;\n      var lr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (lr >>> 26) | 0, lr &= 67108863, g = Math.imul(oe, ee), l = Math.imul(oe, xe), l = l + Math.imul(se, ee) | 0, d = Math.imul(se, xe), g = g + Math.imul(ge, ue) | 0, l = l + Math.imul(ge, Ie) | 0, l = l + Math.imul(Q, ue) | 0, d = d + Math.imul(Q, Ie) | 0, g = g + Math.imul(he, we) | 0, l = l + Math.imul(he, Ke) | 0, l = l + Math.imul(fe, we) | 0, d = d + Math.imul(fe, Ke) | 0, g = g + Math.imul(ce, _e) | 0, l = l + Math.imul(ce, He) | 0, l = l + Math.imul(ve, _e) | 0, d = d + Math.imul(ve, He) | 0, g = g + Math.imul(P, Me) | 0, l = l + Math.imul(P, Ve) | 0, l = l + Math.imul(ie, Me) | 0, d = d + Math.imul(ie, Ve) | 0, g = g + Math.imul(K, Se) | 0, l = l + Math.imul(K, We) | 0, l = l + Math.imul(ae, Se) | 0, d = d + Math.imul(ae, We) | 0, g = g + Math.imul(S, ke) | 0, l = l + Math.imul(S, Ge) | 0, l = l + Math.imul(I, ke) | 0, d = d + Math.imul(I, Ge) | 0, g = g + Math.imul(b, Ee) | 0, l = l + Math.imul(b, Ze) | 0, l = l + Math.imul(E, Ee) | 0, d = d + Math.imul(E, Ze) | 0;\n      var Rr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Rr >>> 26) | 0, Rr &= 67108863, g = Math.imul(A, ee), l = Math.imul(A, xe), l = l + Math.imul(w, ee) | 0, d = Math.imul(w, xe), g = g + Math.imul(oe, ue) | 0, l = l + Math.imul(oe, Ie) | 0, l = l + Math.imul(se, ue) | 0, d = d + Math.imul(se, Ie) | 0, g = g + Math.imul(ge, we) | 0, l = l + Math.imul(ge, Ke) | 0, l = l + Math.imul(Q, we) | 0, d = d + Math.imul(Q, Ke) | 0, g = g + Math.imul(he, _e) | 0, l = l + Math.imul(he, He) | 0, l = l + Math.imul(fe, _e) | 0, d = d + Math.imul(fe, He) | 0, g = g + Math.imul(ce, Me) | 0, l = l + Math.imul(ce, Ve) | 0, l = l + Math.imul(ve, Me) | 0, d = d + Math.imul(ve, Ve) | 0, g = g + Math.imul(P, Se) | 0, l = l + Math.imul(P, We) | 0, l = l + Math.imul(ie, Se) | 0, d = d + Math.imul(ie, We) | 0, g = g + Math.imul(K, ke) | 0, l = l + Math.imul(K, Ge) | 0, l = l + Math.imul(ae, ke) | 0, d = d + Math.imul(ae, Ge) | 0, g = g + Math.imul(S, Ee) | 0, l = l + Math.imul(S, Ze) | 0, l = l + Math.imul(I, Ee) | 0, d = d + Math.imul(I, Ze) | 0, g = g + Math.imul(b, Ae) | 0, l = l + Math.imul(b, Je) | 0, l = l + Math.imul(E, Ae) | 0, d = d + Math.imul(E, Je) | 0;\n      var Tr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Tr >>> 26) | 0, Tr &= 67108863, g = Math.imul(N, ee), l = Math.imul(N, xe), l = l + Math.imul(J, ee) | 0, d = Math.imul(J, xe), g = g + Math.imul(A, ue) | 0, l = l + Math.imul(A, Ie) | 0, l = l + Math.imul(w, ue) | 0, d = d + Math.imul(w, Ie) | 0, g = g + Math.imul(oe, we) | 0, l = l + Math.imul(oe, Ke) | 0, l = l + Math.imul(se, we) | 0, d = d + Math.imul(se, Ke) | 0, g = g + Math.imul(ge, _e) | 0, l = l + Math.imul(ge, He) | 0, l = l + Math.imul(Q, _e) | 0, d = d + Math.imul(Q, He) | 0, g = g + Math.imul(he, Me) | 0, l = l + Math.imul(he, Ve) | 0, l = l + Math.imul(fe, Me) | 0, d = d + Math.imul(fe, Ve) | 0, g = g + Math.imul(ce, Se) | 0, l = l + Math.imul(ce, We) | 0, l = l + Math.imul(ve, Se) | 0, d = d + Math.imul(ve, We) | 0, g = g + Math.imul(P, ke) | 0, l = l + Math.imul(P, Ge) | 0, l = l + Math.imul(ie, ke) | 0, d = d + Math.imul(ie, Ge) | 0, g = g + Math.imul(K, Ee) | 0, l = l + Math.imul(K, Ze) | 0, l = l + Math.imul(ae, Ee) | 0, d = d + Math.imul(ae, Ze) | 0, g = g + Math.imul(S, Ae) | 0, l = l + Math.imul(S, Je) | 0, l = l + Math.imul(I, Ae) | 0, d = d + Math.imul(I, Je) | 0, g = g + Math.imul(b, Be) | 0, l = l + Math.imul(b, Ye) | 0, l = l + Math.imul(E, Be) | 0, d = d + Math.imul(E, Ye) | 0;\n      var jr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (jr >>> 26) | 0, jr &= 67108863, g = Math.imul(N, ue), l = Math.imul(N, Ie), l = l + Math.imul(J, ue) | 0, d = Math.imul(J, Ie), g = g + Math.imul(A, we) | 0, l = l + Math.imul(A, Ke) | 0, l = l + Math.imul(w, we) | 0, d = d + Math.imul(w, Ke) | 0, g = g + Math.imul(oe, _e) | 0, l = l + Math.imul(oe, He) | 0, l = l + Math.imul(se, _e) | 0, d = d + Math.imul(se, He) | 0, g = g + Math.imul(ge, Me) | 0, l = l + Math.imul(ge, Ve) | 0, l = l + Math.imul(Q, Me) | 0, d = d + Math.imul(Q, Ve) | 0, g = g + Math.imul(he, Se) | 0, l = l + Math.imul(he, We) | 0, l = l + Math.imul(fe, Se) | 0, d = d + Math.imul(fe, We) | 0, g = g + Math.imul(ce, ke) | 0, l = l + Math.imul(ce, Ge) | 0, l = l + Math.imul(ve, ke) | 0, d = d + Math.imul(ve, Ge) | 0, g = g + Math.imul(P, Ee) | 0, l = l + Math.imul(P, Ze) | 0, l = l + Math.imul(ie, Ee) | 0, d = d + Math.imul(ie, Ze) | 0, g = g + Math.imul(K, Ae) | 0, l = l + Math.imul(K, Je) | 0, l = l + Math.imul(ae, Ae) | 0, d = d + Math.imul(ae, Je) | 0, g = g + Math.imul(S, Be) | 0, l = l + Math.imul(S, Ye) | 0, l = l + Math.imul(I, Be) | 0, d = d + Math.imul(I, Ye) | 0;\n      var Pr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Pr >>> 26) | 0, Pr &= 67108863, g = Math.imul(N, we), l = Math.imul(N, Ke), l = l + Math.imul(J, we) | 0, d = Math.imul(J, Ke), g = g + Math.imul(A, _e) | 0, l = l + Math.imul(A, He) | 0, l = l + Math.imul(w, _e) | 0, d = d + Math.imul(w, He) | 0, g = g + Math.imul(oe, Me) | 0, l = l + Math.imul(oe, Ve) | 0, l = l + Math.imul(se, Me) | 0, d = d + Math.imul(se, Ve) | 0, g = g + Math.imul(ge, Se) | 0, l = l + Math.imul(ge, We) | 0, l = l + Math.imul(Q, Se) | 0, d = d + Math.imul(Q, We) | 0, g = g + Math.imul(he, ke) | 0, l = l + Math.imul(he, Ge) | 0, l = l + Math.imul(fe, ke) | 0, d = d + Math.imul(fe, Ge) | 0, g = g + Math.imul(ce, Ee) | 0, l = l + Math.imul(ce, Ze) | 0, l = l + Math.imul(ve, Ee) | 0, d = d + Math.imul(ve, Ze) | 0, g = g + Math.imul(P, Ae) | 0, l = l + Math.imul(P, Je) | 0, l = l + Math.imul(ie, Ae) | 0, d = d + Math.imul(ie, Je) | 0, g = g + Math.imul(K, Be) | 0, l = l + Math.imul(K, Ye) | 0, l = l + Math.imul(ae, Be) | 0, d = d + Math.imul(ae, Ye) | 0;\n      var Or = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Or >>> 26) | 0, Or &= 67108863, g = Math.imul(N, _e), l = Math.imul(N, He), l = l + Math.imul(J, _e) | 0, d = Math.imul(J, He), g = g + Math.imul(A, Me) | 0, l = l + Math.imul(A, Ve) | 0, l = l + Math.imul(w, Me) | 0, d = d + Math.imul(w, Ve) | 0, g = g + Math.imul(oe, Se) | 0, l = l + Math.imul(oe, We) | 0, l = l + Math.imul(se, Se) | 0, d = d + Math.imul(se, We) | 0, g = g + Math.imul(ge, ke) | 0, l = l + Math.imul(ge, Ge) | 0, l = l + Math.imul(Q, ke) | 0, d = d + Math.imul(Q, Ge) | 0, g = g + Math.imul(he, Ee) | 0, l = l + Math.imul(he, Ze) | 0, l = l + Math.imul(fe, Ee) | 0, d = d + Math.imul(fe, Ze) | 0, g = g + Math.imul(ce, Ae) | 0, l = l + Math.imul(ce, Je) | 0, l = l + Math.imul(ve, Ae) | 0, d = d + Math.imul(ve, Je) | 0, g = g + Math.imul(P, Be) | 0, l = l + Math.imul(P, Ye) | 0, l = l + Math.imul(ie, Be) | 0, d = d + Math.imul(ie, Ye) | 0;\n      var qr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (qr >>> 26) | 0, qr &= 67108863, g = Math.imul(N, Me), l = Math.imul(N, Ve), l = l + Math.imul(J, Me) | 0, d = Math.imul(J, Ve), g = g + Math.imul(A, Se) | 0, l = l + Math.imul(A, We) | 0, l = l + Math.imul(w, Se) | 0, d = d + Math.imul(w, We) | 0, g = g + Math.imul(oe, ke) | 0, l = l + Math.imul(oe, Ge) | 0, l = l + Math.imul(se, ke) | 0, d = d + Math.imul(se, Ge) | 0, g = g + Math.imul(ge, Ee) | 0, l = l + Math.imul(ge, Ze) | 0, l = l + Math.imul(Q, Ee) | 0, d = d + Math.imul(Q, Ze) | 0, g = g + Math.imul(he, Ae) | 0, l = l + Math.imul(he, Je) | 0, l = l + Math.imul(fe, Ae) | 0, d = d + Math.imul(fe, Je) | 0, g = g + Math.imul(ce, Be) | 0, l = l + Math.imul(ce, Ye) | 0, l = l + Math.imul(ve, Be) | 0, d = d + Math.imul(ve, Ye) | 0;\n      var Nr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Nr >>> 26) | 0, Nr &= 67108863, g = Math.imul(N, Se), l = Math.imul(N, We), l = l + Math.imul(J, Se) | 0, d = Math.imul(J, We), g = g + Math.imul(A, ke) | 0, l = l + Math.imul(A, Ge) | 0, l = l + Math.imul(w, ke) | 0, d = d + Math.imul(w, Ge) | 0, g = g + Math.imul(oe, Ee) | 0, l = l + Math.imul(oe, Ze) | 0, l = l + Math.imul(se, Ee) | 0, d = d + Math.imul(se, Ze) | 0, g = g + Math.imul(ge, Ae) | 0, l = l + Math.imul(ge, Je) | 0, l = l + Math.imul(Q, Ae) | 0, d = d + Math.imul(Q, Je) | 0, g = g + Math.imul(he, Be) | 0, l = l + Math.imul(he, Ye) | 0, l = l + Math.imul(fe, Be) | 0, d = d + Math.imul(fe, Ye) | 0;\n      var Fr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Fr >>> 26) | 0, Fr &= 67108863, g = Math.imul(N, ke), l = Math.imul(N, Ge), l = l + Math.imul(J, ke) | 0, d = Math.imul(J, Ge), g = g + Math.imul(A, Ee) | 0, l = l + Math.imul(A, Ze) | 0, l = l + Math.imul(w, Ee) | 0, d = d + Math.imul(w, Ze) | 0, g = g + Math.imul(oe, Ae) | 0, l = l + Math.imul(oe, Je) | 0, l = l + Math.imul(se, Ae) | 0, d = d + Math.imul(se, Je) | 0, g = g + Math.imul(ge, Be) | 0, l = l + Math.imul(ge, Ye) | 0, l = l + Math.imul(Q, Be) | 0, d = d + Math.imul(Q, Ye) | 0;\n      var Cr = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (Cr >>> 26) | 0, Cr &= 67108863, g = Math.imul(N, Ee), l = Math.imul(N, Ze), l = l + Math.imul(J, Ee) | 0, d = Math.imul(J, Ze), g = g + Math.imul(A, Ae) | 0, l = l + Math.imul(A, Je) | 0, l = l + Math.imul(w, Ae) | 0, d = d + Math.imul(w, Je) | 0, g = g + Math.imul(oe, Be) | 0, l = l + Math.imul(oe, Ye) | 0, l = l + Math.imul(se, Be) | 0, d = d + Math.imul(se, Ye) | 0;\n      var at = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (at >>> 26) | 0, at &= 67108863, g = Math.imul(N, Ae), l = Math.imul(N, Je), l = l + Math.imul(J, Ae) | 0, d = Math.imul(J, Je), g = g + Math.imul(A, Be) | 0, l = l + Math.imul(A, Ye) | 0, l = l + Math.imul(w, Be) | 0, d = d + Math.imul(w, Ye) | 0;\n      var it = (v + g | 0) + ((l & 8191) << 13) | 0;\n      v = (d + (l >>> 13) | 0) + (it >>> 26) | 0, it &= 67108863, g = Math.imul(N, Be), l = Math.imul(N, Ye), l = l + Math.imul(J, Be) | 0, d = Math.imul(J, Ye);\n      var nt = (v + g | 0) + ((l & 8191) << 13) | 0;\n      return v = (d + (l >>> 13) | 0) + (nt >>> 26) | 0, nt &= 67108863, h[0] = Re, h[1] = Te, h[2] = cr, h[3] = dr, h[4] = sr, h[5] = ur, h[6] = lr, h[7] = Rr, h[8] = Tr, h[9] = jr, h[10] = Pr, h[11] = Or, h[12] = qr, h[13] = Nr, h[14] = Fr, h[15] = Cr, h[16] = at, h[17] = it, h[18] = nt, v !== 0 && (h[19] = v, a.length++), a;\n    };\n    Math.imul || (O = L);\n    function q(M, p, s) {\n      s.negative = p.negative ^ M.negative, s.length = M.length + p.length;\n      for (var a = 0, o = 0, u = 0; u < s.length - 1; u++) {\n        var h = o;\n        o = 0;\n        for (var v = a & 67108863, g = Math.min(u, p.length - 1), l = Math.max(0, u - M.length + 1); l <= g; l++) {\n          var d = u - l, f = M.words[d] | 0, b = p.words[l] | 0, E = f * b, y = E & 67108863;\n          h = h + (E / 67108864 | 0) | 0, y = y + v | 0, v = y & 67108863, h = h + (y >>> 26) | 0, o += h >>> 26, h &= 67108863;\n        }\n        s.words[u] = v, a = h, h = o;\n      }\n      return a !== 0 ? s.words[u] = a : s.length--, s.strip();\n    }\n    function R(M, p, s) {\n      var a = new U();\n      return a.mulp(M, p, s);\n    }\n    n.prototype.mulTo = function(p, s) {\n      var a, o = this.length + p.length;\n      return this.length === 10 && p.length === 10 ? a = O(this, p, s) : o < 63 ? a = L(this, p, s) : o < 1024 ? a = q(this, p, s) : a = R(this, p, s), a;\n    };\n    function U(M, p) {\n      this.x = M, this.y = p;\n    }\n    U.prototype.makeRBT = function(p) {\n      for (var s = new Array(p), a = n.prototype._countBits(p) - 1, o = 0; o < p; o++)\n        s[o] = this.revBin(o, a, p);\n      return s;\n    }, U.prototype.revBin = function(p, s, a) {\n      if (p === 0 || p === a - 1)\n        return p;\n      for (var o = 0, u = 0; u < s; u++)\n        o |= (p & 1) << s - u - 1, p >>= 1;\n      return o;\n    }, U.prototype.permute = function(p, s, a, o, u, h) {\n      for (var v = 0; v < h; v++)\n        o[v] = s[p[v]], u[v] = a[p[v]];\n    }, U.prototype.transform = function(p, s, a, o, u, h) {\n      this.permute(h, p, s, a, o, u);\n      for (var v = 1; v < u; v <<= 1)\n        for (var g = v << 1, l = Math.cos(2 * Math.PI / g), d = Math.sin(2 * Math.PI / g), f = 0; f < u; f += g)\n          for (var b = l, E = d, y = 0; y < v; y++) {\n            var S = a[f + y], I = o[f + y], $ = a[f + y + v], K = o[f + y + v], ae = b * $ - E * K;\n            K = b * K + E * $, $ = ae, a[f + y] = S + $, o[f + y] = I + K, a[f + y + v] = S - $, o[f + y + v] = I - K, y !== g && (ae = l * b - d * E, E = l * E + d * b, b = ae);\n          }\n    }, U.prototype.guessLen13b = function(p, s) {\n      var a = Math.max(s, p) | 1, o = a & 1, u = 0;\n      for (a = a / 2 | 0; a; a = a >>> 1)\n        u++;\n      return 1 << u + 1 + o;\n    }, U.prototype.conjugate = function(p, s, a) {\n      if (!(a <= 1))\n        for (var o = 0; o < a / 2; o++) {\n          var u = p[o];\n          p[o] = p[a - o - 1], p[a - o - 1] = u, u = s[o], s[o] = -s[a - o - 1], s[a - o - 1] = -u;\n        }\n    }, U.prototype.normalize13b = function(p, s) {\n      for (var a = 0, o = 0; o < s / 2; o++) {\n        var u = Math.round(p[2 * o + 1] / s) * 8192 + Math.round(p[2 * o] / s) + a;\n        p[o] = u & 67108863, u < 67108864 ? a = 0 : a = u / 67108864 | 0;\n      }\n      return p;\n    }, U.prototype.convert13b = function(p, s, a, o) {\n      for (var u = 0, h = 0; h < s; h++)\n        u = u + (p[h] | 0), a[2 * h] = u & 8191, u = u >>> 13, a[2 * h + 1] = u & 8191, u = u >>> 13;\n      for (h = 2 * s; h < o; ++h)\n        a[h] = 0;\n      i(u === 0), i((u & -8192) === 0);\n    }, U.prototype.stub = function(p) {\n      for (var s = new Array(p), a = 0; a < p; a++)\n        s[a] = 0;\n      return s;\n    }, U.prototype.mulp = function(p, s, a) {\n      var o = 2 * this.guessLen13b(p.length, s.length), u = this.makeRBT(o), h = this.stub(o), v = new Array(o), g = new Array(o), l = new Array(o), d = new Array(o), f = new Array(o), b = new Array(o), E = a.words;\n      E.length = o, this.convert13b(p.words, p.length, v, o), this.convert13b(s.words, s.length, d, o), this.transform(v, h, g, l, o, u), this.transform(d, h, f, b, o, u);\n      for (var y = 0; y < o; y++) {\n        var S = g[y] * f[y] - l[y] * b[y];\n        l[y] = g[y] * b[y] + l[y] * f[y], g[y] = S;\n      }\n      return this.conjugate(g, l, o), this.transform(g, l, E, h, o, u), this.conjugate(E, h, o), this.normalize13b(E, o), a.negative = p.negative ^ s.negative, a.length = p.length + s.length, a.strip();\n    }, n.prototype.mul = function(p) {\n      var s = new n(null);\n      return s.words = new Array(this.length + p.length), this.mulTo(p, s);\n    }, n.prototype.mulf = function(p) {\n      var s = new n(null);\n      return s.words = new Array(this.length + p.length), R(this, p, s);\n    }, n.prototype.imul = function(p) {\n      return this.clone().mulTo(p, this);\n    }, n.prototype.imuln = function(p) {\n      i(typeof p == \"number\"), i(p < 67108864);\n      for (var s = 0, a = 0; a < this.length; a++) {\n        var o = (this.words[a] | 0) * p, u = (o & 67108863) + (s & 67108863);\n        s >>= 26, s += o / 67108864 | 0, s += u >>> 26, this.words[a] = u & 67108863;\n      }\n      return s !== 0 && (this.words[a] = s, this.length++), this;\n    }, n.prototype.muln = function(p) {\n      return this.clone().imuln(p);\n    }, n.prototype.sqr = function() {\n      return this.mul(this);\n    }, n.prototype.isqr = function() {\n      return this.imul(this.clone());\n    }, n.prototype.pow = function(p) {\n      var s = T(p);\n      if (s.length === 0)\n        return new n(1);\n      for (var a = this, o = 0; o < s.length && s[o] === 0; o++, a = a.sqr())\n        ;\n      if (++o < s.length)\n        for (var u = a.sqr(); o < s.length; o++, u = u.sqr())\n          s[o] !== 0 && (a = a.mul(u));\n      return a;\n    }, n.prototype.iushln = function(p) {\n      i(typeof p == \"number\" && p >= 0);\n      var s = p % 26, a = (p - s) / 26, o = 67108863 >>> 26 - s << 26 - s, u;\n      if (s !== 0) {\n        var h = 0;\n        for (u = 0; u < this.length; u++) {\n          var v = this.words[u] & o, g = (this.words[u] | 0) - v << s;\n          this.words[u] = g | h, h = v >>> 26 - s;\n        }\n        h && (this.words[u] = h, this.length++);\n      }\n      if (a !== 0) {\n        for (u = this.length - 1; u >= 0; u--)\n          this.words[u + a] = this.words[u];\n        for (u = 0; u < a; u++)\n          this.words[u] = 0;\n        this.length += a;\n      }\n      return this.strip();\n    }, n.prototype.ishln = function(p) {\n      return i(this.negative === 0), this.iushln(p);\n    }, n.prototype.iushrn = function(p, s, a) {\n      i(typeof p == \"number\" && p >= 0);\n      var o;\n      s ? o = (s - s % 26) / 26 : o = 0;\n      var u = p % 26, h = Math.min((p - u) / 26, this.length), v = 67108863 ^ 67108863 >>> u << u, g = a;\n      if (o -= h, o = Math.max(0, o), g) {\n        for (var l = 0; l < h; l++)\n          g.words[l] = this.words[l];\n        g.length = h;\n      }\n      if (h !== 0)\n        if (this.length > h)\n          for (this.length -= h, l = 0; l < this.length; l++)\n            this.words[l] = this.words[l + h];\n        else\n          this.words[0] = 0, this.length = 1;\n      var d = 0;\n      for (l = this.length - 1; l >= 0 && (d !== 0 || l >= o); l--) {\n        var f = this.words[l] | 0;\n        this.words[l] = d << 26 - u | f >>> u, d = f & v;\n      }\n      return g && d !== 0 && (g.words[g.length++] = d), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();\n    }, n.prototype.ishrn = function(p, s, a) {\n      return i(this.negative === 0), this.iushrn(p, s, a);\n    }, n.prototype.shln = function(p) {\n      return this.clone().ishln(p);\n    }, n.prototype.ushln = function(p) {\n      return this.clone().iushln(p);\n    }, n.prototype.shrn = function(p) {\n      return this.clone().ishrn(p);\n    }, n.prototype.ushrn = function(p) {\n      return this.clone().iushrn(p);\n    }, n.prototype.testn = function(p) {\n      i(typeof p == \"number\" && p >= 0);\n      var s = p % 26, a = (p - s) / 26, o = 1 << s;\n      if (this.length <= a)\n        return !1;\n      var u = this.words[a];\n      return !!(u & o);\n    }, n.prototype.imaskn = function(p) {\n      i(typeof p == \"number\" && p >= 0);\n      var s = p % 26, a = (p - s) / 26;\n      if (i(this.negative === 0, \"imaskn works only with positive numbers\"), this.length <= a)\n        return this;\n      if (s !== 0 && a++, this.length = Math.min(a, this.length), s !== 0) {\n        var o = 67108863 ^ 67108863 >>> s << s;\n        this.words[this.length - 1] &= o;\n      }\n      return this.strip();\n    }, n.prototype.maskn = function(p) {\n      return this.clone().imaskn(p);\n    }, n.prototype.iaddn = function(p) {\n      return i(typeof p == \"number\"), i(p < 67108864), p < 0 ? this.isubn(-p) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < p ? (this.words[0] = p - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(p), this.negative = 1, this) : this._iaddn(p);\n    }, n.prototype._iaddn = function(p) {\n      this.words[0] += p;\n      for (var s = 0; s < this.length && this.words[s] >= 67108864; s++)\n        this.words[s] -= 67108864, s === this.length - 1 ? this.words[s + 1] = 1 : this.words[s + 1]++;\n      return this.length = Math.max(this.length, s + 1), this;\n    }, n.prototype.isubn = function(p) {\n      if (i(typeof p == \"number\"), i(p < 67108864), p < 0)\n        return this.iaddn(-p);\n      if (this.negative !== 0)\n        return this.negative = 0, this.iaddn(p), this.negative = 1, this;\n      if (this.words[0] -= p, this.length === 1 && this.words[0] < 0)\n        this.words[0] = -this.words[0], this.negative = 1;\n      else\n        for (var s = 0; s < this.length && this.words[s] < 0; s++)\n          this.words[s] += 67108864, this.words[s + 1] -= 1;\n      return this.strip();\n    }, n.prototype.addn = function(p) {\n      return this.clone().iaddn(p);\n    }, n.prototype.subn = function(p) {\n      return this.clone().isubn(p);\n    }, n.prototype.iabs = function() {\n      return this.negative = 0, this;\n    }, n.prototype.abs = function() {\n      return this.clone().iabs();\n    }, n.prototype._ishlnsubmul = function(p, s, a) {\n      var o = p.length + a, u;\n      this._expand(o);\n      var h, v = 0;\n      for (u = 0; u < p.length; u++) {\n        h = (this.words[u + a] | 0) + v;\n        var g = (p.words[u] | 0) * s;\n        h -= g & 67108863, v = (h >> 26) - (g / 67108864 | 0), this.words[u + a] = h & 67108863;\n      }\n      for (; u < this.length - a; u++)\n        h = (this.words[u + a] | 0) + v, v = h >> 26, this.words[u + a] = h & 67108863;\n      if (v === 0)\n        return this.strip();\n      for (i(v === -1), v = 0, u = 0; u < this.length; u++)\n        h = -(this.words[u] | 0) + v, v = h >> 26, this.words[u] = h & 67108863;\n      return this.negative = 1, this.strip();\n    }, n.prototype._wordDiv = function(p, s) {\n      var a = this.length - p.length, o = this.clone(), u = p, h = u.words[u.length - 1] | 0, v = this._countBits(h);\n      a = 26 - v, a !== 0 && (u = u.ushln(a), o.iushln(a), h = u.words[u.length - 1] | 0);\n      var g = o.length - u.length, l;\n      if (s !== \"mod\") {\n        l = new n(null), l.length = g + 1, l.words = new Array(l.length);\n        for (var d = 0; d < l.length; d++)\n          l.words[d] = 0;\n      }\n      var f = o.clone()._ishlnsubmul(u, 1, g);\n      f.negative === 0 && (o = f, l && (l.words[g] = 1));\n      for (var b = g - 1; b >= 0; b--) {\n        var E = (o.words[u.length + b] | 0) * 67108864 + (o.words[u.length + b - 1] | 0);\n        for (E = Math.min(E / h | 0, 67108863), o._ishlnsubmul(u, E, b); o.negative !== 0; )\n          E--, o.negative = 0, o._ishlnsubmul(u, 1, b), o.isZero() || (o.negative ^= 1);\n        l && (l.words[b] = E);\n      }\n      return l && l.strip(), o.strip(), s !== \"div\" && a !== 0 && o.iushrn(a), {\n        div: l || null,\n        mod: o\n      };\n    }, n.prototype.divmod = function(p, s, a) {\n      if (i(!p.isZero()), this.isZero())\n        return {\n          div: new n(0),\n          mod: new n(0)\n        };\n      var o, u, h;\n      return this.negative !== 0 && p.negative === 0 ? (h = this.neg().divmod(p, s), s !== \"mod\" && (o = h.div.neg()), s !== \"div\" && (u = h.mod.neg(), a && u.negative !== 0 && u.iadd(p)), {\n        div: o,\n        mod: u\n      }) : this.negative === 0 && p.negative !== 0 ? (h = this.divmod(p.neg(), s), s !== \"mod\" && (o = h.div.neg()), {\n        div: o,\n        mod: h.mod\n      }) : this.negative & p.negative ? (h = this.neg().divmod(p.neg(), s), s !== \"div\" && (u = h.mod.neg(), a && u.negative !== 0 && u.isub(p)), {\n        div: h.div,\n        mod: u\n      }) : p.length > this.length || this.cmp(p) < 0 ? {\n        div: new n(0),\n        mod: this\n      } : p.length === 1 ? s === \"div\" ? {\n        div: this.divn(p.words[0]),\n        mod: null\n      } : s === \"mod\" ? {\n        div: null,\n        mod: new n(this.modn(p.words[0]))\n      } : {\n        div: this.divn(p.words[0]),\n        mod: new n(this.modn(p.words[0]))\n      } : this._wordDiv(p, s);\n    }, n.prototype.div = function(p) {\n      return this.divmod(p, \"div\", !1).div;\n    }, n.prototype.mod = function(p) {\n      return this.divmod(p, \"mod\", !1).mod;\n    }, n.prototype.umod = function(p) {\n      return this.divmod(p, \"mod\", !0).mod;\n    }, n.prototype.divRound = function(p) {\n      var s = this.divmod(p);\n      if (s.mod.isZero())\n        return s.div;\n      var a = s.div.negative !== 0 ? s.mod.isub(p) : s.mod, o = p.ushrn(1), u = p.andln(1), h = a.cmp(o);\n      return h < 0 || u === 1 && h === 0 ? s.div : s.div.negative !== 0 ? s.div.isubn(1) : s.div.iaddn(1);\n    }, n.prototype.modn = function(p) {\n      i(p <= 67108863);\n      for (var s = (1 << 26) % p, a = 0, o = this.length - 1; o >= 0; o--)\n        a = (s * a + (this.words[o] | 0)) % p;\n      return a;\n    }, n.prototype.idivn = function(p) {\n      i(p <= 67108863);\n      for (var s = 0, a = this.length - 1; a >= 0; a--) {\n        var o = (this.words[a] | 0) + s * 67108864;\n        this.words[a] = o / p | 0, s = o % p;\n      }\n      return this.strip();\n    }, n.prototype.divn = function(p) {\n      return this.clone().idivn(p);\n    }, n.prototype.egcd = function(p) {\n      i(p.negative === 0), i(!p.isZero());\n      var s = this, a = p.clone();\n      s.negative !== 0 ? s = s.umod(p) : s = s.clone();\n      for (var o = new n(1), u = new n(0), h = new n(0), v = new n(1), g = 0; s.isEven() && a.isEven(); )\n        s.iushrn(1), a.iushrn(1), ++g;\n      for (var l = a.clone(), d = s.clone(); !s.isZero(); ) {\n        for (var f = 0, b = 1; !(s.words[0] & b) && f < 26; ++f, b <<= 1)\n          ;\n        if (f > 0)\n          for (s.iushrn(f); f-- > 0; )\n            (o.isOdd() || u.isOdd()) && (o.iadd(l), u.isub(d)), o.iushrn(1), u.iushrn(1);\n        for (var E = 0, y = 1; !(a.words[0] & y) && E < 26; ++E, y <<= 1)\n          ;\n        if (E > 0)\n          for (a.iushrn(E); E-- > 0; )\n            (h.isOdd() || v.isOdd()) && (h.iadd(l), v.isub(d)), h.iushrn(1), v.iushrn(1);\n        s.cmp(a) >= 0 ? (s.isub(a), o.isub(h), u.isub(v)) : (a.isub(s), h.isub(o), v.isub(u));\n      }\n      return {\n        a: h,\n        b: v,\n        gcd: a.iushln(g)\n      };\n    }, n.prototype._invmp = function(p) {\n      i(p.negative === 0), i(!p.isZero());\n      var s = this, a = p.clone();\n      s.negative !== 0 ? s = s.umod(p) : s = s.clone();\n      for (var o = new n(1), u = new n(0), h = a.clone(); s.cmpn(1) > 0 && a.cmpn(1) > 0; ) {\n        for (var v = 0, g = 1; !(s.words[0] & g) && v < 26; ++v, g <<= 1)\n          ;\n        if (v > 0)\n          for (s.iushrn(v); v-- > 0; )\n            o.isOdd() && o.iadd(h), o.iushrn(1);\n        for (var l = 0, d = 1; !(a.words[0] & d) && l < 26; ++l, d <<= 1)\n          ;\n        if (l > 0)\n          for (a.iushrn(l); l-- > 0; )\n            u.isOdd() && u.iadd(h), u.iushrn(1);\n        s.cmp(a) >= 0 ? (s.isub(a), o.isub(u)) : (a.isub(s), u.isub(o));\n      }\n      var f;\n      return s.cmpn(1) === 0 ? f = o : f = u, f.cmpn(0) < 0 && f.iadd(p), f;\n    }, n.prototype.gcd = function(p) {\n      if (this.isZero())\n        return p.abs();\n      if (p.isZero())\n        return this.abs();\n      var s = this.clone(), a = p.clone();\n      s.negative = 0, a.negative = 0;\n      for (var o = 0; s.isEven() && a.isEven(); o++)\n        s.iushrn(1), a.iushrn(1);\n      do {\n        for (; s.isEven(); )\n          s.iushrn(1);\n        for (; a.isEven(); )\n          a.iushrn(1);\n        var u = s.cmp(a);\n        if (u < 0) {\n          var h = s;\n          s = a, a = h;\n        } else if (u === 0 || a.cmpn(1) === 0)\n          break;\n        s.isub(a);\n      } while (!0);\n      return a.iushln(o);\n    }, n.prototype.invm = function(p) {\n      return this.egcd(p).a.umod(p);\n    }, n.prototype.isEven = function() {\n      return (this.words[0] & 1) === 0;\n    }, n.prototype.isOdd = function() {\n      return (this.words[0] & 1) === 1;\n    }, n.prototype.andln = function(p) {\n      return this.words[0] & p;\n    }, n.prototype.bincn = function(p) {\n      i(typeof p == \"number\");\n      var s = p % 26, a = (p - s) / 26, o = 1 << s;\n      if (this.length <= a)\n        return this._expand(a + 1), this.words[a] |= o, this;\n      for (var u = o, h = a; u !== 0 && h < this.length; h++) {\n        var v = this.words[h] | 0;\n        v += u, u = v >>> 26, v &= 67108863, this.words[h] = v;\n      }\n      return u !== 0 && (this.words[h] = u, this.length++), this;\n    }, n.prototype.isZero = function() {\n      return this.length === 1 && this.words[0] === 0;\n    }, n.prototype.cmpn = function(p) {\n      var s = p < 0;\n      if (this.negative !== 0 && !s)\n        return -1;\n      if (this.negative === 0 && s)\n        return 1;\n      this.strip();\n      var a;\n      if (this.length > 1)\n        a = 1;\n      else {\n        s && (p = -p), i(p <= 67108863, \"Number is too big\");\n        var o = this.words[0] | 0;\n        a = o === p ? 0 : o < p ? -1 : 1;\n      }\n      return this.negative !== 0 ? -a | 0 : a;\n    }, n.prototype.cmp = function(p) {\n      if (this.negative !== 0 && p.negative === 0)\n        return -1;\n      if (this.negative === 0 && p.negative !== 0)\n        return 1;\n      var s = this.ucmp(p);\n      return this.negative !== 0 ? -s | 0 : s;\n    }, n.prototype.ucmp = function(p) {\n      if (this.length > p.length)\n        return 1;\n      if (this.length < p.length)\n        return -1;\n      for (var s = 0, a = this.length - 1; a >= 0; a--) {\n        var o = this.words[a] | 0, u = p.words[a] | 0;\n        if (o !== u) {\n          o < u ? s = -1 : o > u && (s = 1);\n          break;\n        }\n      }\n      return s;\n    }, n.prototype.gtn = function(p) {\n      return this.cmpn(p) === 1;\n    }, n.prototype.gt = function(p) {\n      return this.cmp(p) === 1;\n    }, n.prototype.gten = function(p) {\n      return this.cmpn(p) >= 0;\n    }, n.prototype.gte = function(p) {\n      return this.cmp(p) >= 0;\n    }, n.prototype.ltn = function(p) {\n      return this.cmpn(p) === -1;\n    }, n.prototype.lt = function(p) {\n      return this.cmp(p) === -1;\n    }, n.prototype.lten = function(p) {\n      return this.cmpn(p) <= 0;\n    }, n.prototype.lte = function(p) {\n      return this.cmp(p) <= 0;\n    }, n.prototype.eqn = function(p) {\n      return this.cmpn(p) === 0;\n    }, n.prototype.eq = function(p) {\n      return this.cmp(p) === 0;\n    }, n.red = function(p) {\n      return new V(p);\n    }, n.prototype.toRed = function(p) {\n      return i(!this.red, \"Already a number in reduction context\"), i(this.negative === 0, \"red works only with positives\"), p.convertTo(this)._forceRed(p);\n    }, n.prototype.fromRed = function() {\n      return i(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n    }, n.prototype._forceRed = function(p) {\n      return this.red = p, this;\n    }, n.prototype.forceRed = function(p) {\n      return i(!this.red, \"Already a number in reduction context\"), this._forceRed(p);\n    }, n.prototype.redAdd = function(p) {\n      return i(this.red, \"redAdd works only with red numbers\"), this.red.add(this, p);\n    }, n.prototype.redIAdd = function(p) {\n      return i(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, p);\n    }, n.prototype.redSub = function(p) {\n      return i(this.red, \"redSub works only with red numbers\"), this.red.sub(this, p);\n    }, n.prototype.redISub = function(p) {\n      return i(this.red, \"redISub works only with red numbers\"), this.red.isub(this, p);\n    }, n.prototype.redShl = function(p) {\n      return i(this.red, \"redShl works only with red numbers\"), this.red.shl(this, p);\n    }, n.prototype.redMul = function(p) {\n      return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, p), this.red.mul(this, p);\n    }, n.prototype.redIMul = function(p) {\n      return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, p), this.red.imul(this, p);\n    }, n.prototype.redSqr = function() {\n      return i(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n    }, n.prototype.redISqr = function() {\n      return i(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n    }, n.prototype.redSqrt = function() {\n      return i(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n    }, n.prototype.redInvm = function() {\n      return i(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n    }, n.prototype.redNeg = function() {\n      return i(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n    }, n.prototype.redPow = function(p) {\n      return i(this.red && !p.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, p);\n    };\n    var H = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    };\n    function Z(M, p) {\n      this.name = M, this.p = new n(p, 16), this.n = this.p.bitLength(), this.k = new n(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n    }\n    Z.prototype._tmp = function() {\n      var p = new n(null);\n      return p.words = new Array(Math.ceil(this.n / 13)), p;\n    }, Z.prototype.ireduce = function(p) {\n      var s = p, a;\n      do\n        this.split(s, this.tmp), s = this.imulK(s), s = s.iadd(this.tmp), a = s.bitLength();\n      while (a > this.n);\n      var o = a < this.n ? -1 : s.ucmp(this.p);\n      return o === 0 ? (s.words[0] = 0, s.length = 1) : o > 0 ? s.isub(this.p) : s.strip !== void 0 ? s.strip() : s._strip(), s;\n    }, Z.prototype.split = function(p, s) {\n      p.iushrn(this.n, 0, s);\n    }, Z.prototype.imulK = function(p) {\n      return p.imul(this.k);\n    };\n    function W() {\n      Z.call(\n        this,\n        \"k256\",\n        \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\"\n      );\n    }\n    c(W, Z), W.prototype.split = function(p, s) {\n      for (var a = 4194303, o = Math.min(p.length, 9), u = 0; u < o; u++)\n        s.words[u] = p.words[u];\n      if (s.length = o, p.length <= 9) {\n        p.words[0] = 0, p.length = 1;\n        return;\n      }\n      var h = p.words[9];\n      for (s.words[s.length++] = h & a, u = 10; u < p.length; u++) {\n        var v = p.words[u] | 0;\n        p.words[u - 10] = (v & a) << 4 | h >>> 22, h = v;\n      }\n      h >>>= 22, p.words[u - 10] = h, h === 0 && p.length > 10 ? p.length -= 10 : p.length -= 9;\n    }, W.prototype.imulK = function(p) {\n      p.words[p.length] = 0, p.words[p.length + 1] = 0, p.length += 2;\n      for (var s = 0, a = 0; a < p.length; a++) {\n        var o = p.words[a] | 0;\n        s += o * 977, p.words[a] = s & 67108863, s = o * 64 + (s / 67108864 | 0);\n      }\n      return p.words[p.length - 1] === 0 && (p.length--, p.words[p.length - 1] === 0 && p.length--), p;\n    };\n    function Y() {\n      Z.call(\n        this,\n        \"p224\",\n        \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\"\n      );\n    }\n    c(Y, Z);\n    function ne() {\n      Z.call(\n        this,\n        \"p192\",\n        \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\"\n      );\n    }\n    c(ne, Z);\n    function D() {\n      Z.call(\n        this,\n        \"25519\",\n        \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\"\n      );\n    }\n    c(D, Z), D.prototype.imulK = function(p) {\n      for (var s = 0, a = 0; a < p.length; a++) {\n        var o = (p.words[a] | 0) * 19 + s, u = o & 67108863;\n        o >>>= 26, p.words[a] = u, s = o;\n      }\n      return s !== 0 && (p.words[p.length++] = s), p;\n    }, n._prime = function(p) {\n      if (H[p])\n        return H[p];\n      var s;\n      if (p === \"k256\")\n        s = new W();\n      else if (p === \"p224\")\n        s = new Y();\n      else if (p === \"p192\")\n        s = new ne();\n      else if (p === \"p25519\")\n        s = new D();\n      else\n        throw new Error(\"Unknown prime \" + p);\n      return H[p] = s, s;\n    };\n    function V(M) {\n      if (typeof M == \"string\") {\n        var p = n._prime(M);\n        this.m = p.p, this.prime = p;\n      } else\n        i(M.gtn(1), \"modulus must be greater than 1\"), this.m = M, this.prime = null;\n    }\n    V.prototype._verify1 = function(p) {\n      i(p.negative === 0, \"red works only with positives\"), i(p.red, \"red works only with red numbers\");\n    }, V.prototype._verify2 = function(p, s) {\n      i((p.negative | s.negative) === 0, \"red works only with positives\"), i(\n        p.red && p.red === s.red,\n        \"red works only with red numbers\"\n      );\n    }, V.prototype.imod = function(p) {\n      return this.prime ? this.prime.ireduce(p)._forceRed(this) : p.umod(this.m)._forceRed(this);\n    }, V.prototype.neg = function(p) {\n      return p.isZero() ? p.clone() : this.m.sub(p)._forceRed(this);\n    }, V.prototype.add = function(p, s) {\n      this._verify2(p, s);\n      var a = p.add(s);\n      return a.cmp(this.m) >= 0 && a.isub(this.m), a._forceRed(this);\n    }, V.prototype.iadd = function(p, s) {\n      this._verify2(p, s);\n      var a = p.iadd(s);\n      return a.cmp(this.m) >= 0 && a.isub(this.m), a;\n    }, V.prototype.sub = function(p, s) {\n      this._verify2(p, s);\n      var a = p.sub(s);\n      return a.cmpn(0) < 0 && a.iadd(this.m), a._forceRed(this);\n    }, V.prototype.isub = function(p, s) {\n      this._verify2(p, s);\n      var a = p.isub(s);\n      return a.cmpn(0) < 0 && a.iadd(this.m), a;\n    }, V.prototype.shl = function(p, s) {\n      return this._verify1(p), this.imod(p.ushln(s));\n    }, V.prototype.imul = function(p, s) {\n      return this._verify2(p, s), this.imod(p.imul(s));\n    }, V.prototype.mul = function(p, s) {\n      return this._verify2(p, s), this.imod(p.mul(s));\n    }, V.prototype.isqr = function(p) {\n      return this.imul(p, p.clone());\n    }, V.prototype.sqr = function(p) {\n      return this.mul(p, p);\n    }, V.prototype.sqrt = function(p) {\n      if (p.isZero())\n        return p.clone();\n      var s = this.m.andln(3);\n      if (i(s % 2 === 1), s === 3) {\n        var a = this.m.add(new n(1)).iushrn(2);\n        return this.pow(p, a);\n      }\n      for (var o = this.m.subn(1), u = 0; !o.isZero() && o.andln(1) === 0; )\n        u++, o.iushrn(1);\n      i(!o.isZero());\n      var h = new n(1).toRed(this), v = h.redNeg(), g = this.m.subn(1).iushrn(1), l = this.m.bitLength();\n      for (l = new n(2 * l * l).toRed(this); this.pow(l, g).cmp(v) !== 0; )\n        l.redIAdd(v);\n      for (var d = this.pow(l, o), f = this.pow(p, o.addn(1).iushrn(1)), b = this.pow(p, o), E = u; b.cmp(h) !== 0; ) {\n        for (var y = b, S = 0; y.cmp(h) !== 0; S++)\n          y = y.redSqr();\n        i(S < E);\n        var I = this.pow(d, new n(1).iushln(E - S - 1));\n        f = f.redMul(I), d = I.redSqr(), b = b.redMul(d), E = S;\n      }\n      return f;\n    }, V.prototype.invm = function(p) {\n      var s = p._invmp(this.m);\n      return s.negative !== 0 ? (s.negative = 0, this.imod(s).redNeg()) : this.imod(s);\n    }, V.prototype.pow = function(p, s) {\n      if (s.isZero())\n        return new n(1).toRed(this);\n      if (s.cmpn(1) === 0)\n        return p.clone();\n      var a = 4, o = new Array(1 << a);\n      o[0] = new n(1).toRed(this), o[1] = p;\n      for (var u = 2; u < o.length; u++)\n        o[u] = this.mul(o[u - 1], p);\n      var h = o[0], v = 0, g = 0, l = s.bitLength() % 26;\n      for (l === 0 && (l = 26), u = s.length - 1; u >= 0; u--) {\n        for (var d = s.words[u], f = l - 1; f >= 0; f--) {\n          var b = d >> f & 1;\n          if (h !== o[0] && (h = this.sqr(h)), b === 0 && v === 0) {\n            g = 0;\n            continue;\n          }\n          v <<= 1, v |= b, g++, !(g !== a && (u !== 0 || f !== 0)) && (h = this.mul(h, o[v]), g = 0, v = 0);\n        }\n        l = 26;\n      }\n      return h;\n    }, V.prototype.convertTo = function(p) {\n      var s = p.umod(this.m);\n      return s === p ? s.clone() : s;\n    }, V.prototype.convertFrom = function(p) {\n      var s = p.clone();\n      return s.red = null, s;\n    }, n.mont = function(p) {\n      return new G(p);\n    };\n    function G(M) {\n      V.call(this, M), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new n(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n    }\n    c(G, V), G.prototype.convertTo = function(p) {\n      return this.imod(p.ushln(this.shift));\n    }, G.prototype.convertFrom = function(p) {\n      var s = this.imod(p.mul(this.rinv));\n      return s.red = null, s;\n    }, G.prototype.imul = function(p, s) {\n      if (p.isZero() || s.isZero())\n        return p.words[0] = 0, p.length = 1, p;\n      var a = p.imul(s), o = a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = a.isub(o).iushrn(this.shift), h = u;\n      return u.cmp(this.m) >= 0 ? h = u.isub(this.m) : u.cmpn(0) < 0 && (h = u.iadd(this.m)), h._forceRed(this);\n    }, G.prototype.mul = function(p, s) {\n      if (p.isZero() || s.isZero())\n        return new n(0)._forceRed(this);\n      var a = p.mul(s), o = a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = a.isub(o).iushrn(this.shift), h = u;\n      return u.cmp(this.m) >= 0 ? h = u.isub(this.m) : u.cmpn(0) < 0 && (h = u.iadd(this.m)), h._forceRed(this);\n    }, G.prototype.invm = function(p) {\n      var s = this.imod(p._invmp(this.m).mul(this.r2));\n      return s._forceRed(this);\n    };\n  })(e, be);\n})(x0);\nvar St = x0.exports;\nconst ye = /* @__PURE__ */ Ki(St);\nvar Le = {}, Qc = m0;\nm0.strict = ed;\nm0.loose = rd;\nvar bl = Object.prototype.toString, hl = {\n  \"[object Int8Array]\": !0,\n  \"[object Int16Array]\": !0,\n  \"[object Int32Array]\": !0,\n  \"[object Uint8Array]\": !0,\n  \"[object Uint8ClampedArray]\": !0,\n  \"[object Uint16Array]\": !0,\n  \"[object Uint32Array]\": !0,\n  \"[object Float32Array]\": !0,\n  \"[object Float64Array]\": !0\n};\nfunction m0(e) {\n  return ed(e) || rd(e);\n}\nfunction ed(e) {\n  return e instanceof Int8Array || e instanceof Int16Array || e instanceof Int32Array || e instanceof Uint8Array || e instanceof Uint8ClampedArray || e instanceof Uint16Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array;\n}\nfunction rd(e) {\n  return hl[bl.call(e)];\n}\nvar pl = Qc.strict, vl = function(r) {\n  if (pl(r)) {\n    var t = Buffer.from(r.buffer);\n    return r.byteLength !== r.buffer.byteLength && (t = t.slice(r.byteOffset, r.byteOffset + r.byteLength)), t;\n  } else\n    return Buffer.from(r);\n}, td = be && be.__importDefault || function(e) {\n  return e && e.__esModule ? e : { default: e };\n};\nObject.defineProperty(Le, \"__esModule\", { value: !0 });\nconst xl = td(Qc), ml = td(vl), g0 = \"hex\", y0 = \"utf8\", gl = \"binary\", yl = \"buffer\", wl = \"array\", _l = \"typed-array\", Ml = \"array-buffer\", ai = \"0\";\nfunction Zi(e) {\n  return new Uint8Array(e);\n}\nLe.bufferToArray = Zi;\nfunction w0(e, r = !1) {\n  const t = e.toString(g0);\n  return r ? en(t) : t;\n}\nLe.bufferToHex = w0;\nfunction _0(e) {\n  return e.toString(y0);\n}\nLe.bufferToUtf8 = _0;\nfunction ad(e) {\n  return e.readUIntBE(0, e.length);\n}\nLe.bufferToNumber = ad;\nfunction Sl(e) {\n  return Ji(Zi(e));\n}\nLe.bufferToBinary = Sl;\nfunction ii(e) {\n  return ml.default(e);\n}\nLe.arrayToBuffer = ii;\nfunction id(e, r = !1) {\n  return w0(ii(e), r);\n}\nLe.arrayToHex = id;\nfunction nd(e) {\n  return _0(ii(e));\n}\nLe.arrayToUtf8 = nd;\nfunction M0(e) {\n  return ad(ii(e));\n}\nLe.arrayToNumber = M0;\nfunction Ji(e) {\n  return Array.from(e).map(ni).join(\"\");\n}\nLe.arrayToBinary = Ji;\nfunction S0(e) {\n  return Buffer.from(Qi(e), g0);\n}\nvar ji = Le.hexToBuffer = S0;\nfunction k0(e) {\n  return Zi(S0(e));\n}\nLe.hexToArray = k0;\nfunction kl(e) {\n  return _0(S0(e));\n}\nLe.hexToUtf8 = kl;\nfunction El(e) {\n  return M0(k0(e));\n}\nLe.hexToNumber = El;\nfunction fd(e) {\n  return Ji(k0(e));\n}\nvar Al = Le.hexToBinary = fd;\nfunction E0(e) {\n  return Buffer.from(e, y0);\n}\nvar Oo = Le.utf8ToBuffer = E0;\nfunction od(e) {\n  return Zi(E0(e));\n}\nLe.utf8ToArray = od;\nfunction Bl(e, r = !1) {\n  return w0(E0(e), r);\n}\nLe.utf8ToHex = Bl;\nfunction zl(e) {\n  const r = parseInt(e, 10);\n  return Ql(Xl(r), \"Number can only safely store up to 53 bits\"), r;\n}\nLe.utf8ToNumber = zl;\nfunction Il(e) {\n  return Ji(od(e));\n}\nLe.utf8ToBinary = Il;\nfunction Rl(e) {\n  return cd(ni(e));\n}\nLe.numberToBuffer = Rl;\nfunction Tl(e) {\n  return za(ni(e));\n}\nLe.numberToArray = Tl;\nfunction jl(e, r) {\n  return A0(ni(e), r);\n}\nvar Pl = Le.numberToHex = jl;\nfunction Ol(e) {\n  return `${e}`;\n}\nLe.numberToUtf8 = Ol;\nfunction ni(e) {\n  const r = (e >>> 0).toString(2);\n  return Xi(r);\n}\nLe.numberToBinary = ni;\nfunction cd(e) {\n  return ii(za(e));\n}\nLe.binaryToBuffer = cd;\nfunction za(e) {\n  return new Uint8Array(z0(e).map((r) => parseInt(r, 2)));\n}\nLe.binaryToArray = za;\nfunction A0(e, r) {\n  return id(za(e), r);\n}\nLe.binaryToHex = A0;\nfunction ql(e) {\n  return nd(za(e));\n}\nLe.binaryToUtf8 = ql;\nfunction Nl(e) {\n  return M0(za(e));\n}\nvar Fl = Le.binaryToNumber = Nl;\nfunction dd(e) {\n  return !(typeof e != \"string\" || !new RegExp(/^[01]+$/).test(e) || e.length % 8 !== 0);\n}\nLe.isBinaryString = dd;\nfunction sd(e, r) {\n  return !(typeof e != \"string\" || !e.match(/^0x[0-9A-Fa-f]*$/) || r && e.length !== 2 + 2 * r);\n}\nLe.isHexString = sd;\nfunction Yi(e) {\n  return Buffer.isBuffer(e);\n}\nLe.isBuffer = Yi;\nfunction B0(e) {\n  return xl.default.strict(e) && !Yi(e);\n}\nLe.isTypedArray = B0;\nfunction ud(e) {\n  return !B0(e) && !Yi(e) && typeof e.byteLength < \"u\";\n}\nLe.isArrayBuffer = ud;\nfunction Cl(e) {\n  return Yi(e) ? yl : B0(e) ? _l : ud(e) ? Ml : Array.isArray(e) ? wl : typeof e;\n}\nLe.getType = Cl;\nfunction Ll(e) {\n  return dd(e) ? gl : sd(e) ? g0 : y0;\n}\nLe.getEncoding = Ll;\nfunction Ul(...e) {\n  return Buffer.concat(e);\n}\nLe.concatBuffers = Ul;\nfunction $l(...e) {\n  let r = [];\n  return e.forEach((t) => r = r.concat(Array.from(t))), new Uint8Array([...r]);\n}\nLe.concatArrays = $l;\nfunction Dl(e, r) {\n  const t = e.length - r;\n  return t > 0 && (e = e.slice(t)), e;\n}\nLe.trimLeft = Dl;\nfunction Kl(e, r) {\n  return e.slice(0, r);\n}\nLe.trimRight = Kl;\nfunction ld(e, r = 8) {\n  const t = e % r;\n  return t ? (e - t) / r * r + r : e;\n}\nLe.calcByteLength = ld;\nfunction z0(e, r = 8) {\n  const t = Xi(e).match(new RegExp(`.{${r}}`, \"gi\"));\n  return Array.from(t || []);\n}\nLe.splitBytes = z0;\nfunction bd(e) {\n  return z0(e).map(e1).join(\"\");\n}\nLe.swapBytes = bd;\nfunction Hl(e) {\n  return A0(bd(fd(e)));\n}\nLe.swapHex = Hl;\nfunction Xi(e, r = 8, t = ai) {\n  return hd(e, ld(e.length, r), t);\n}\nvar Vl = Le.sanitizeBytes = Xi;\nfunction hd(e, r, t = ai) {\n  return pd(e, r, !0, t);\n}\nLe.padLeft = hd;\nfunction Wl(e, r, t = ai) {\n  return pd(e, r, !1, t);\n}\nLe.padRight = Wl;\nfunction Qi(e) {\n  return e.replace(/^0x/, \"\");\n}\nvar wa = Le.removeHexPrefix = Qi;\nfunction en(e) {\n  return e.startsWith(\"0x\") ? e : `0x${e}`;\n}\nLe.addHexPrefix = en;\nfunction Gl(e) {\n  return e = Qi(e), e = Xi(e, 2), e && (e = en(e)), e;\n}\nvar Zl = Le.sanitizeHex = Gl;\nfunction Jl(e) {\n  const r = e.startsWith(\"0x\");\n  return e = Qi(e), e = e.startsWith(ai) ? e.substring(1) : e, r ? en(e) : e;\n}\nLe.removeHexLeadingZeros = Jl;\nfunction Yl(e) {\n  return typeof e > \"u\";\n}\nfunction Xl(e) {\n  return !Yl(e);\n}\nfunction Ql(e, r) {\n  if (!e)\n    throw new Error(r);\n}\nfunction e1(e) {\n  return e.split(\"\").reverse().join(\"\");\n}\nfunction pd(e, r, t, i = ai) {\n  const c = r - e.length;\n  let n = e;\n  if (c > 0) {\n    const x = i.repeat(c);\n    n = t ? x + e : e + x;\n  }\n  return n;\n}\nvar vd = { exports: {} };\n/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n(function(e) {\n  (function() {\n    var r = \"input is invalid type\", t = \"finalize already called\", i = typeof window == \"object\", c = i ? window : {};\n    c.JS_SHA3_NO_WINDOW && (i = !1);\n    var n = !i && typeof self == \"object\", x = !c.JS_SHA3_NO_NODE_JS && typeof process == \"object\" && process.versions && process.versions.node;\n    x ? c = be : n && (c = self);\n    var m = !c.JS_SHA3_NO_COMMON_JS && !0 && e.exports, k = !c.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < \"u\", B = \"0123456789abcdef\".split(\"\"), z = [31, 7936, 2031616, 520093696], C = [4, 1024, 262144, 67108864], F = [1, 256, 65536, 16777216], T = [6, 1536, 393216, 100663296], L = [0, 8, 16, 24], O = [\n      1,\n      0,\n      32898,\n      0,\n      32906,\n      2147483648,\n      2147516416,\n      2147483648,\n      32907,\n      0,\n      2147483649,\n      0,\n      2147516545,\n      2147483648,\n      32777,\n      2147483648,\n      138,\n      0,\n      136,\n      0,\n      2147516425,\n      0,\n      2147483658,\n      0,\n      2147516555,\n      0,\n      139,\n      2147483648,\n      32905,\n      2147483648,\n      32771,\n      2147483648,\n      32770,\n      2147483648,\n      128,\n      2147483648,\n      32778,\n      0,\n      2147483658,\n      2147483648,\n      2147516545,\n      2147483648,\n      32896,\n      2147483648,\n      2147483649,\n      0,\n      2147516424,\n      2147483648\n    ], q = [224, 256, 384, 512], R = [128, 256], U = [\"hex\", \"buffer\", \"arrayBuffer\", \"array\", \"digest\"], H = {\n      128: 168,\n      256: 136\n    };\n    (c.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(y) {\n      return Object.prototype.toString.call(y) === \"[object Array]\";\n    }), k && (c.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(y) {\n      return typeof y == \"object\" && y.buffer && y.buffer.constructor === ArrayBuffer;\n    });\n    for (var Z = function(y, S, I) {\n      return function($) {\n        return new f(y, S, y).update($)[I]();\n      };\n    }, W = function(y, S, I) {\n      return function($, K) {\n        return new f(y, S, K).update($)[I]();\n      };\n    }, Y = function(y, S, I) {\n      return function($, K, ae, j) {\n        return a[\"cshake\" + y].update($, K, ae, j)[I]();\n      };\n    }, ne = function(y, S, I) {\n      return function($, K, ae, j) {\n        return a[\"kmac\" + y].update($, K, ae, j)[I]();\n      };\n    }, D = function(y, S, I, $) {\n      for (var K = 0; K < U.length; ++K) {\n        var ae = U[K];\n        y[ae] = S(I, $, ae);\n      }\n      return y;\n    }, V = function(y, S) {\n      var I = Z(y, S, \"hex\");\n      return I.create = function() {\n        return new f(y, S, y);\n      }, I.update = function($) {\n        return I.create().update($);\n      }, D(I, Z, y, S);\n    }, G = function(y, S) {\n      var I = W(y, S, \"hex\");\n      return I.create = function($) {\n        return new f(y, S, $);\n      }, I.update = function($, K) {\n        return I.create(K).update($);\n      }, D(I, W, y, S);\n    }, M = function(y, S) {\n      var I = H[y], $ = Y(y, S, \"hex\");\n      return $.create = function(K, ae, j) {\n        return !ae && !j ? a[\"shake\" + y].create(K) : new f(y, S, K).bytepad([ae, j], I);\n      }, $.update = function(K, ae, j, P) {\n        return $.create(ae, j, P).update(K);\n      }, D($, Y, y, S);\n    }, p = function(y, S) {\n      var I = H[y], $ = ne(y, S, \"hex\");\n      return $.create = function(K, ae, j) {\n        return new b(y, S, ae).bytepad([\"KMAC\", j], I).bytepad([K], I);\n      }, $.update = function(K, ae, j, P) {\n        return $.create(K, j, P).update(ae);\n      }, D($, ne, y, S);\n    }, s = [\n      { name: \"keccak\", padding: F, bits: q, createMethod: V },\n      { name: \"sha3\", padding: T, bits: q, createMethod: V },\n      { name: \"shake\", padding: z, bits: R, createMethod: G },\n      { name: \"cshake\", padding: C, bits: R, createMethod: M },\n      { name: \"kmac\", padding: C, bits: R, createMethod: p }\n    ], a = {}, o = [], u = 0; u < s.length; ++u)\n      for (var h = s[u], v = h.bits, g = 0; g < v.length; ++g) {\n        var l = h.name + \"_\" + v[g];\n        if (o.push(l), a[l] = h.createMethod(v[g], h.padding), h.name !== \"sha3\") {\n          var d = h.name + v[g];\n          o.push(d), a[d] = a[l];\n        }\n      }\n    function f(y, S, I) {\n      this.blocks = [], this.s = [], this.padding = S, this.outputBits = I, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (y << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = I >> 5, this.extraBytes = (I & 31) >> 3;\n      for (var $ = 0; $ < 50; ++$)\n        this.s[$] = 0;\n    }\n    f.prototype.update = function(y) {\n      if (this.finalized)\n        throw new Error(t);\n      var S, I = typeof y;\n      if (I !== \"string\") {\n        if (I === \"object\") {\n          if (y === null)\n            throw new Error(r);\n          if (k && y.constructor === ArrayBuffer)\n            y = new Uint8Array(y);\n          else if (!Array.isArray(y) && (!k || !ArrayBuffer.isView(y)))\n            throw new Error(r);\n        } else\n          throw new Error(r);\n        S = !0;\n      }\n      for (var $ = this.blocks, K = this.byteCount, ae = y.length, j = this.blockCount, P = 0, ie = this.s, te, ce; P < ae; ) {\n        if (this.reset)\n          for (this.reset = !1, $[0] = this.block, te = 1; te < j + 1; ++te)\n            $[te] = 0;\n        if (S)\n          for (te = this.start; P < ae && te < K; ++P)\n            $[te >> 2] |= y[P] << L[te++ & 3];\n        else\n          for (te = this.start; P < ae && te < K; ++P)\n            ce = y.charCodeAt(P), ce < 128 ? $[te >> 2] |= ce << L[te++ & 3] : ce < 2048 ? ($[te >> 2] |= (192 | ce >> 6) << L[te++ & 3], $[te >> 2] |= (128 | ce & 63) << L[te++ & 3]) : ce < 55296 || ce >= 57344 ? ($[te >> 2] |= (224 | ce >> 12) << L[te++ & 3], $[te >> 2] |= (128 | ce >> 6 & 63) << L[te++ & 3], $[te >> 2] |= (128 | ce & 63) << L[te++ & 3]) : (ce = 65536 + ((ce & 1023) << 10 | y.charCodeAt(++P) & 1023), $[te >> 2] |= (240 | ce >> 18) << L[te++ & 3], $[te >> 2] |= (128 | ce >> 12 & 63) << L[te++ & 3], $[te >> 2] |= (128 | ce >> 6 & 63) << L[te++ & 3], $[te >> 2] |= (128 | ce & 63) << L[te++ & 3]);\n        if (this.lastByteIndex = te, te >= K) {\n          for (this.start = te - K, this.block = $[j], te = 0; te < j; ++te)\n            ie[te] ^= $[te];\n          E(ie), this.reset = !0;\n        } else\n          this.start = te;\n      }\n      return this;\n    }, f.prototype.encode = function(y, S) {\n      var I = y & 255, $ = 1, K = [I];\n      for (y = y >> 8, I = y & 255; I > 0; )\n        K.unshift(I), y = y >> 8, I = y & 255, ++$;\n      return S ? K.push($) : K.unshift($), this.update(K), K.length;\n    }, f.prototype.encodeString = function(y) {\n      var S, I = typeof y;\n      if (I !== \"string\") {\n        if (I === \"object\") {\n          if (y === null)\n            throw new Error(r);\n          if (k && y.constructor === ArrayBuffer)\n            y = new Uint8Array(y);\n          else if (!Array.isArray(y) && (!k || !ArrayBuffer.isView(y)))\n            throw new Error(r);\n        } else\n          throw new Error(r);\n        S = !0;\n      }\n      var $ = 0, K = y.length;\n      if (S)\n        $ = K;\n      else\n        for (var ae = 0; ae < y.length; ++ae) {\n          var j = y.charCodeAt(ae);\n          j < 128 ? $ += 1 : j < 2048 ? $ += 2 : j < 55296 || j >= 57344 ? $ += 3 : (j = 65536 + ((j & 1023) << 10 | y.charCodeAt(++ae) & 1023), $ += 4);\n        }\n      return $ += this.encode($ * 8), this.update(y), $;\n    }, f.prototype.bytepad = function(y, S) {\n      for (var I = this.encode(S), $ = 0; $ < y.length; ++$)\n        I += this.encodeString(y[$]);\n      var K = S - I % S, ae = [];\n      return ae.length = K, this.update(ae), this;\n    }, f.prototype.finalize = function() {\n      if (!this.finalized) {\n        this.finalized = !0;\n        var y = this.blocks, S = this.lastByteIndex, I = this.blockCount, $ = this.s;\n        if (y[S >> 2] |= this.padding[S & 3], this.lastByteIndex === this.byteCount)\n          for (y[0] = y[I], S = 1; S < I + 1; ++S)\n            y[S] = 0;\n        for (y[I - 1] |= 2147483648, S = 0; S < I; ++S)\n          $[S] ^= y[S];\n        E($);\n      }\n    }, f.prototype.toString = f.prototype.hex = function() {\n      this.finalize();\n      for (var y = this.blockCount, S = this.s, I = this.outputBlocks, $ = this.extraBytes, K = 0, ae = 0, j = \"\", P; ae < I; ) {\n        for (K = 0; K < y && ae < I; ++K, ++ae)\n          P = S[K], j += B[P >> 4 & 15] + B[P & 15] + B[P >> 12 & 15] + B[P >> 8 & 15] + B[P >> 20 & 15] + B[P >> 16 & 15] + B[P >> 28 & 15] + B[P >> 24 & 15];\n        ae % y === 0 && (E(S), K = 0);\n      }\n      return $ && (P = S[K], j += B[P >> 4 & 15] + B[P & 15], $ > 1 && (j += B[P >> 12 & 15] + B[P >> 8 & 15]), $ > 2 && (j += B[P >> 20 & 15] + B[P >> 16 & 15])), j;\n    }, f.prototype.arrayBuffer = function() {\n      this.finalize();\n      var y = this.blockCount, S = this.s, I = this.outputBlocks, $ = this.extraBytes, K = 0, ae = 0, j = this.outputBits >> 3, P;\n      $ ? P = new ArrayBuffer(I + 1 << 2) : P = new ArrayBuffer(j);\n      for (var ie = new Uint32Array(P); ae < I; ) {\n        for (K = 0; K < y && ae < I; ++K, ++ae)\n          ie[ae] = S[K];\n        ae % y === 0 && E(S);\n      }\n      return $ && (ie[K] = S[K], P = P.slice(0, j)), P;\n    }, f.prototype.buffer = f.prototype.arrayBuffer, f.prototype.digest = f.prototype.array = function() {\n      this.finalize();\n      for (var y = this.blockCount, S = this.s, I = this.outputBlocks, $ = this.extraBytes, K = 0, ae = 0, j = [], P, ie; ae < I; ) {\n        for (K = 0; K < y && ae < I; ++K, ++ae)\n          P = ae << 2, ie = S[K], j[P] = ie & 255, j[P + 1] = ie >> 8 & 255, j[P + 2] = ie >> 16 & 255, j[P + 3] = ie >> 24 & 255;\n        ae % y === 0 && E(S);\n      }\n      return $ && (P = ae << 2, ie = S[K], j[P] = ie & 255, $ > 1 && (j[P + 1] = ie >> 8 & 255), $ > 2 && (j[P + 2] = ie >> 16 & 255)), j;\n    };\n    function b(y, S, I) {\n      f.call(this, y, S, I);\n    }\n    b.prototype = new f(), b.prototype.finalize = function() {\n      return this.encode(this.outputBits, !0), f.prototype.finalize.call(this);\n    };\n    var E = function(y) {\n      var S, I, $, K, ae, j, P, ie, te, ce, ve, le, he, fe, ze, ge, Q, re, oe, se, de, A, w, _, N, J, X, ee, xe, pe, ue, Ie, me, we, Ke, je, _e, He, Pe, Me, Ve, Oe, Se, We, qe, ke, Ge, Ne, Ee, Ze, Fe, Ae, Je, Ce, Be, Ye, Re, Te, cr, dr, sr, ur, lr;\n      for ($ = 0; $ < 48; $ += 2)\n        K = y[0] ^ y[10] ^ y[20] ^ y[30] ^ y[40], ae = y[1] ^ y[11] ^ y[21] ^ y[31] ^ y[41], j = y[2] ^ y[12] ^ y[22] ^ y[32] ^ y[42], P = y[3] ^ y[13] ^ y[23] ^ y[33] ^ y[43], ie = y[4] ^ y[14] ^ y[24] ^ y[34] ^ y[44], te = y[5] ^ y[15] ^ y[25] ^ y[35] ^ y[45], ce = y[6] ^ y[16] ^ y[26] ^ y[36] ^ y[46], ve = y[7] ^ y[17] ^ y[27] ^ y[37] ^ y[47], le = y[8] ^ y[18] ^ y[28] ^ y[38] ^ y[48], he = y[9] ^ y[19] ^ y[29] ^ y[39] ^ y[49], S = le ^ (j << 1 | P >>> 31), I = he ^ (P << 1 | j >>> 31), y[0] ^= S, y[1] ^= I, y[10] ^= S, y[11] ^= I, y[20] ^= S, y[21] ^= I, y[30] ^= S, y[31] ^= I, y[40] ^= S, y[41] ^= I, S = K ^ (ie << 1 | te >>> 31), I = ae ^ (te << 1 | ie >>> 31), y[2] ^= S, y[3] ^= I, y[12] ^= S, y[13] ^= I, y[22] ^= S, y[23] ^= I, y[32] ^= S, y[33] ^= I, y[42] ^= S, y[43] ^= I, S = j ^ (ce << 1 | ve >>> 31), I = P ^ (ve << 1 | ce >>> 31), y[4] ^= S, y[5] ^= I, y[14] ^= S, y[15] ^= I, y[24] ^= S, y[25] ^= I, y[34] ^= S, y[35] ^= I, y[44] ^= S, y[45] ^= I, S = ie ^ (le << 1 | he >>> 31), I = te ^ (he << 1 | le >>> 31), y[6] ^= S, y[7] ^= I, y[16] ^= S, y[17] ^= I, y[26] ^= S, y[27] ^= I, y[36] ^= S, y[37] ^= I, y[46] ^= S, y[47] ^= I, S = ce ^ (K << 1 | ae >>> 31), I = ve ^ (ae << 1 | K >>> 31), y[8] ^= S, y[9] ^= I, y[18] ^= S, y[19] ^= I, y[28] ^= S, y[29] ^= I, y[38] ^= S, y[39] ^= I, y[48] ^= S, y[49] ^= I, fe = y[0], ze = y[1], ke = y[11] << 4 | y[10] >>> 28, Ge = y[10] << 4 | y[11] >>> 28, ee = y[20] << 3 | y[21] >>> 29, xe = y[21] << 3 | y[20] >>> 29, dr = y[31] << 9 | y[30] >>> 23, sr = y[30] << 9 | y[31] >>> 23, Oe = y[40] << 18 | y[41] >>> 14, Se = y[41] << 18 | y[40] >>> 14, we = y[2] << 1 | y[3] >>> 31, Ke = y[3] << 1 | y[2] >>> 31, ge = y[13] << 12 | y[12] >>> 20, Q = y[12] << 12 | y[13] >>> 20, Ne = y[22] << 10 | y[23] >>> 22, Ee = y[23] << 10 | y[22] >>> 22, pe = y[33] << 13 | y[32] >>> 19, ue = y[32] << 13 | y[33] >>> 19, ur = y[42] << 2 | y[43] >>> 30, lr = y[43] << 2 | y[42] >>> 30, Ce = y[5] << 30 | y[4] >>> 2, Be = y[4] << 30 | y[5] >>> 2, je = y[14] << 6 | y[15] >>> 26, _e = y[15] << 6 | y[14] >>> 26, re = y[25] << 11 | y[24] >>> 21, oe = y[24] << 11 | y[25] >>> 21, Ze = y[34] << 15 | y[35] >>> 17, Fe = y[35] << 15 | y[34] >>> 17, Ie = y[45] << 29 | y[44] >>> 3, me = y[44] << 29 | y[45] >>> 3, _ = y[6] << 28 | y[7] >>> 4, N = y[7] << 28 | y[6] >>> 4, Ye = y[17] << 23 | y[16] >>> 9, Re = y[16] << 23 | y[17] >>> 9, He = y[26] << 25 | y[27] >>> 7, Pe = y[27] << 25 | y[26] >>> 7, se = y[36] << 21 | y[37] >>> 11, de = y[37] << 21 | y[36] >>> 11, Ae = y[47] << 24 | y[46] >>> 8, Je = y[46] << 24 | y[47] >>> 8, We = y[8] << 27 | y[9] >>> 5, qe = y[9] << 27 | y[8] >>> 5, J = y[18] << 20 | y[19] >>> 12, X = y[19] << 20 | y[18] >>> 12, Te = y[29] << 7 | y[28] >>> 25, cr = y[28] << 7 | y[29] >>> 25, Me = y[38] << 8 | y[39] >>> 24, Ve = y[39] << 8 | y[38] >>> 24, A = y[48] << 14 | y[49] >>> 18, w = y[49] << 14 | y[48] >>> 18, y[0] = fe ^ ~ge & re, y[1] = ze ^ ~Q & oe, y[10] = _ ^ ~J & ee, y[11] = N ^ ~X & xe, y[20] = we ^ ~je & He, y[21] = Ke ^ ~_e & Pe, y[30] = We ^ ~ke & Ne, y[31] = qe ^ ~Ge & Ee, y[40] = Ce ^ ~Ye & Te, y[41] = Be ^ ~Re & cr, y[2] = ge ^ ~re & se, y[3] = Q ^ ~oe & de, y[12] = J ^ ~ee & pe, y[13] = X ^ ~xe & ue, y[22] = je ^ ~He & Me, y[23] = _e ^ ~Pe & Ve, y[32] = ke ^ ~Ne & Ze, y[33] = Ge ^ ~Ee & Fe, y[42] = Ye ^ ~Te & dr, y[43] = Re ^ ~cr & sr, y[4] = re ^ ~se & A, y[5] = oe ^ ~de & w, y[14] = ee ^ ~pe & Ie, y[15] = xe ^ ~ue & me, y[24] = He ^ ~Me & Oe, y[25] = Pe ^ ~Ve & Se, y[34] = Ne ^ ~Ze & Ae, y[35] = Ee ^ ~Fe & Je, y[44] = Te ^ ~dr & ur, y[45] = cr ^ ~sr & lr, y[6] = se ^ ~A & fe, y[7] = de ^ ~w & ze, y[16] = pe ^ ~Ie & _, y[17] = ue ^ ~me & N, y[26] = Me ^ ~Oe & we, y[27] = Ve ^ ~Se & Ke, y[36] = Ze ^ ~Ae & We, y[37] = Fe ^ ~Je & qe, y[46] = dr ^ ~ur & Ce, y[47] = sr ^ ~lr & Be, y[8] = A ^ ~fe & ge, y[9] = w ^ ~ze & Q, y[18] = Ie ^ ~_ & J, y[19] = me ^ ~N & X, y[28] = Oe ^ ~we & je, y[29] = Se ^ ~Ke & _e, y[38] = Ae ^ ~We & ke, y[39] = Je ^ ~qe & Ge, y[48] = ur ^ ~Ce & Ye, y[49] = lr ^ ~Be & Re, y[0] ^= O[$], y[1] ^= O[$ + 1];\n    };\n    if (m)\n      e.exports = a;\n    else\n      for (u = 0; u < o.length; ++u)\n        c[o[u]] = a[o[u]];\n  })();\n})(vd);\nvar r1 = vd.exports;\nconst Ya = /* @__PURE__ */ Ki(r1), t1 = new ye(\"1\", 16), xd = new ye(\n  \"3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n  16\n), a1 = new ye(\n  \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n  16\n), i1 = new ye(\n  \"400000000000000000000000000000000000000000000000000000000000000\",\n  16\n);\nfunction md(e) {\n  const r = gd(e.type);\n  let t = wa(r).length, i = new ye(wa(r), 16);\n  if (e.data.tokenAddress !== void 0) {\n    const k = new ye(\n      wa(e.data.tokenAddress),\n      16\n    );\n    i = i.ushln(256).add(k), t += 64;\n  }\n  const c = e.data.quantum, n = c === void 0 ? t1 : new ye(c, 10);\n  i = i.ushln(256).add(n), t += 64;\n  const x = Ya.keccak_256(\n    ji(Zf(i.toJSON(), t))\n  );\n  let m = new ye(x, 16);\n  return m = m.and(xd), \"0x\" + m.toJSON();\n}\nfunction n1(e) {\n  const r = new ye(\n    wa(md(e)),\n    16\n  );\n  let t = r;\n  if (e.type === \"ERC721\") {\n    let i = new ye(Oo(\"NFT:\"), 16);\n    const c = 8 + 64 + 64;\n    i = i.ushln(256).add(r), i = i.ushln(256).add(new ye(parseInt(e.data.tokenId), 16));\n    const n = Ya.keccak_256(\n      ji(Zf(i.toJSON(), c))\n    );\n    t = new ye(n, 16), t = t.and(xd);\n  } else if (e.type === \"MINTABLE_ERC721\" || e.type === \"MINTABLE_ERC20\") {\n    let i = new ye(Oo(\"MINTABLE:\"), 16);\n    const c = 18 + 64 + 64;\n    i = i.ushln(256).add(r);\n    const n = f1(e.data.blob);\n    i = i.ushln(256).add(new ye(wa(n), 16));\n    const x = Ya.keccak_256(\n      ji(Zf(i.toJSON(), c))\n    );\n    t = new ye(x, 16), t = t.and(a1), t = t.or(i1);\n  }\n  return \"0x\" + t.toJSON();\n}\nfunction gd(e) {\n  let r = \"\";\n  switch (e.toUpperCase()) {\n    case \"ETH\":\n      r = \"ETH()\";\n      break;\n    case \"ERC20\":\n      r = \"ERC20Token(address)\";\n      break;\n    case \"ERC721\":\n      r = \"ERC721Token(address,uint256)\";\n      break;\n    case \"MINTABLE_ERC20\":\n      r = \"MintableERC20Token(address)\";\n      break;\n    case \"MINTABLE_ERC721\":\n      r = \"MintableERC721Token(address,uint256)\";\n      break;\n    default:\n      throw new Error(`Unknown token type: ${e}`);\n  }\n  return Zl(Ya.keccak_256(r).slice(0, 8));\n}\nfunction Zf(e, r) {\n  return Vr(e.length <= r), e.padStart(r, \"0\");\n}\nfunction f1(e) {\n  return \"0x\" + Ya.keccak_256(e);\n}\nconst W8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  getAssetId: n1,\n  getAssetSelector: gd,\n  getAssetType: md\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar kt = {}, Jf = { exports: {} }, Ht = {}, rn = {};\nrn.byteLength = d1;\nrn.toByteArray = u1;\nrn.fromByteArray = h1;\nvar bt = [], Jr = [], o1 = typeof Uint8Array < \"u\" ? Uint8Array : Array, bf = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor (var va = 0, c1 = bf.length; va < c1; ++va)\n  bt[va] = bf[va], Jr[bf.charCodeAt(va)] = va;\nJr[\"-\".charCodeAt(0)] = 62;\nJr[\"_\".charCodeAt(0)] = 63;\nfunction yd(e) {\n  var r = e.length;\n  if (r % 4 > 0)\n    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  var t = e.indexOf(\"=\");\n  t === -1 && (t = r);\n  var i = t === r ? 0 : 4 - t % 4;\n  return [t, i];\n}\nfunction d1(e) {\n  var r = yd(e), t = r[0], i = r[1];\n  return (t + i) * 3 / 4 - i;\n}\nfunction s1(e, r, t) {\n  return (r + t) * 3 / 4 - t;\n}\nfunction u1(e) {\n  var r, t = yd(e), i = t[0], c = t[1], n = new o1(s1(e, i, c)), x = 0, m = c > 0 ? i - 4 : i, k;\n  for (k = 0; k < m; k += 4)\n    r = Jr[e.charCodeAt(k)] << 18 | Jr[e.charCodeAt(k + 1)] << 12 | Jr[e.charCodeAt(k + 2)] << 6 | Jr[e.charCodeAt(k + 3)], n[x++] = r >> 16 & 255, n[x++] = r >> 8 & 255, n[x++] = r & 255;\n  return c === 2 && (r = Jr[e.charCodeAt(k)] << 2 | Jr[e.charCodeAt(k + 1)] >> 4, n[x++] = r & 255), c === 1 && (r = Jr[e.charCodeAt(k)] << 10 | Jr[e.charCodeAt(k + 1)] << 4 | Jr[e.charCodeAt(k + 2)] >> 2, n[x++] = r >> 8 & 255, n[x++] = r & 255), n;\n}\nfunction l1(e) {\n  return bt[e >> 18 & 63] + bt[e >> 12 & 63] + bt[e >> 6 & 63] + bt[e & 63];\n}\nfunction b1(e, r, t) {\n  for (var i, c = [], n = r; n < t; n += 3)\n    i = (e[n] << 16 & 16711680) + (e[n + 1] << 8 & 65280) + (e[n + 2] & 255), c.push(l1(i));\n  return c.join(\"\");\n}\nfunction h1(e) {\n  for (var r, t = e.length, i = t % 3, c = [], n = 16383, x = 0, m = t - i; x < m; x += n)\n    c.push(b1(e, x, x + n > m ? m : x + n));\n  return i === 1 ? (r = e[t - 1], c.push(\n    bt[r >> 2] + bt[r << 4 & 63] + \"==\"\n  )) : i === 2 && (r = (e[t - 2] << 8) + e[t - 1], c.push(\n    bt[r >> 10] + bt[r >> 4 & 63] + bt[r << 2 & 63] + \"=\"\n  )), c.join(\"\");\n}\nvar I0 = {};\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nI0.read = function(e, r, t, i, c) {\n  var n, x, m = c * 8 - i - 1, k = (1 << m) - 1, B = k >> 1, z = -7, C = t ? c - 1 : 0, F = t ? -1 : 1, T = e[r + C];\n  for (C += F, n = T & (1 << -z) - 1, T >>= -z, z += m; z > 0; n = n * 256 + e[r + C], C += F, z -= 8)\n    ;\n  for (x = n & (1 << -z) - 1, n >>= -z, z += i; z > 0; x = x * 256 + e[r + C], C += F, z -= 8)\n    ;\n  if (n === 0)\n    n = 1 - B;\n  else {\n    if (n === k)\n      return x ? NaN : (T ? -1 : 1) * (1 / 0);\n    x = x + Math.pow(2, i), n = n - B;\n  }\n  return (T ? -1 : 1) * x * Math.pow(2, n - i);\n};\nI0.write = function(e, r, t, i, c, n) {\n  var x, m, k, B = n * 8 - c - 1, z = (1 << B) - 1, C = z >> 1, F = c === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, T = i ? 0 : n - 1, L = i ? 1 : -1, O = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0;\n  for (r = Math.abs(r), isNaN(r) || r === 1 / 0 ? (m = isNaN(r) ? 1 : 0, x = z) : (x = Math.floor(Math.log(r) / Math.LN2), r * (k = Math.pow(2, -x)) < 1 && (x--, k *= 2), x + C >= 1 ? r += F / k : r += F * Math.pow(2, 1 - C), r * k >= 2 && (x++, k /= 2), x + C >= z ? (m = 0, x = z) : x + C >= 1 ? (m = (r * k - 1) * Math.pow(2, c), x = x + C) : (m = r * Math.pow(2, C - 1) * Math.pow(2, c), x = 0)); c >= 8; e[t + T] = m & 255, T += L, m /= 256, c -= 8)\n    ;\n  for (x = x << c | m, B += c; B > 0; e[t + T] = x & 255, T += L, x /= 256, B -= 8)\n    ;\n  e[t + T - L] |= O * 128;\n};\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n(function(e) {\n  const r = rn, t = I0, i = typeof Symbol == \"function\" && typeof Symbol.for == \"function\" ? Symbol.for(\"nodejs.util.inspect.custom\") : null;\n  e.Buffer = m, e.SlowBuffer = U, e.INSPECT_MAX_BYTES = 50;\n  const c = 2147483647;\n  e.kMaxLength = c, m.TYPED_ARRAY_SUPPORT = n(), !m.TYPED_ARRAY_SUPPORT && typeof console < \"u\" && typeof console.error == \"function\" && console.error(\n    \"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"\n  );\n  function n() {\n    try {\n      const A = new Uint8Array(1), w = { foo: function() {\n        return 42;\n      } };\n      return Object.setPrototypeOf(w, Uint8Array.prototype), Object.setPrototypeOf(A, w), A.foo() === 42;\n    } catch {\n      return !1;\n    }\n  }\n  Object.defineProperty(m.prototype, \"parent\", {\n    enumerable: !0,\n    get: function() {\n      if (m.isBuffer(this))\n        return this.buffer;\n    }\n  }), Object.defineProperty(m.prototype, \"offset\", {\n    enumerable: !0,\n    get: function() {\n      if (m.isBuffer(this))\n        return this.byteOffset;\n    }\n  });\n  function x(A) {\n    if (A > c)\n      throw new RangeError('The value \"' + A + '\" is invalid for option \"size\"');\n    const w = new Uint8Array(A);\n    return Object.setPrototypeOf(w, m.prototype), w;\n  }\n  function m(A, w, _) {\n    if (typeof A == \"number\") {\n      if (typeof w == \"string\")\n        throw new TypeError(\n          'The \"string\" argument must be of type string. Received type number'\n        );\n      return C(A);\n    }\n    return k(A, w, _);\n  }\n  m.poolSize = 8192;\n  function k(A, w, _) {\n    if (typeof A == \"string\")\n      return F(A, w);\n    if (ArrayBuffer.isView(A))\n      return L(A);\n    if (A == null)\n      throw new TypeError(\n        \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof A\n      );\n    if (Q(A, ArrayBuffer) || A && Q(A.buffer, ArrayBuffer) || typeof SharedArrayBuffer < \"u\" && (Q(A, SharedArrayBuffer) || A && Q(A.buffer, SharedArrayBuffer)))\n      return O(A, w, _);\n    if (typeof A == \"number\")\n      throw new TypeError(\n        'The \"value\" argument must not be of type number. Received type number'\n      );\n    const N = A.valueOf && A.valueOf();\n    if (N != null && N !== A)\n      return m.from(N, w, _);\n    const J = q(A);\n    if (J)\n      return J;\n    if (typeof Symbol < \"u\" && Symbol.toPrimitive != null && typeof A[Symbol.toPrimitive] == \"function\")\n      return m.from(A[Symbol.toPrimitive](\"string\"), w, _);\n    throw new TypeError(\n      \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof A\n    );\n  }\n  m.from = function(A, w, _) {\n    return k(A, w, _);\n  }, Object.setPrototypeOf(m.prototype, Uint8Array.prototype), Object.setPrototypeOf(m, Uint8Array);\n  function B(A) {\n    if (typeof A != \"number\")\n      throw new TypeError('\"size\" argument must be of type number');\n    if (A < 0)\n      throw new RangeError('The value \"' + A + '\" is invalid for option \"size\"');\n  }\n  function z(A, w, _) {\n    return B(A), A <= 0 ? x(A) : w !== void 0 ? typeof _ == \"string\" ? x(A).fill(w, _) : x(A).fill(w) : x(A);\n  }\n  m.alloc = function(A, w, _) {\n    return z(A, w, _);\n  };\n  function C(A) {\n    return B(A), x(A < 0 ? 0 : R(A) | 0);\n  }\n  m.allocUnsafe = function(A) {\n    return C(A);\n  }, m.allocUnsafeSlow = function(A) {\n    return C(A);\n  };\n  function F(A, w) {\n    if ((typeof w != \"string\" || w === \"\") && (w = \"utf8\"), !m.isEncoding(w))\n      throw new TypeError(\"Unknown encoding: \" + w);\n    const _ = H(A, w) | 0;\n    let N = x(_);\n    const J = N.write(A, w);\n    return J !== _ && (N = N.slice(0, J)), N;\n  }\n  function T(A) {\n    const w = A.length < 0 ? 0 : R(A.length) | 0, _ = x(w);\n    for (let N = 0; N < w; N += 1)\n      _[N] = A[N] & 255;\n    return _;\n  }\n  function L(A) {\n    if (Q(A, Uint8Array)) {\n      const w = new Uint8Array(A);\n      return O(w.buffer, w.byteOffset, w.byteLength);\n    }\n    return T(A);\n  }\n  function O(A, w, _) {\n    if (w < 0 || A.byteLength < w)\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (A.byteLength < w + (_ || 0))\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    let N;\n    return w === void 0 && _ === void 0 ? N = new Uint8Array(A) : _ === void 0 ? N = new Uint8Array(A, w) : N = new Uint8Array(A, w, _), Object.setPrototypeOf(N, m.prototype), N;\n  }\n  function q(A) {\n    if (m.isBuffer(A)) {\n      const w = R(A.length) | 0, _ = x(w);\n      return _.length === 0 || A.copy(_, 0, 0, w), _;\n    }\n    if (A.length !== void 0)\n      return typeof A.length != \"number\" || re(A.length) ? x(0) : T(A);\n    if (A.type === \"Buffer\" && Array.isArray(A.data))\n      return T(A.data);\n  }\n  function R(A) {\n    if (A >= c)\n      throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + c.toString(16) + \" bytes\");\n    return A | 0;\n  }\n  function U(A) {\n    return +A != A && (A = 0), m.alloc(+A);\n  }\n  m.isBuffer = function(w) {\n    return w != null && w._isBuffer === !0 && w !== m.prototype;\n  }, m.compare = function(w, _) {\n    if (Q(w, Uint8Array) && (w = m.from(w, w.offset, w.byteLength)), Q(_, Uint8Array) && (_ = m.from(_, _.offset, _.byteLength)), !m.isBuffer(w) || !m.isBuffer(_))\n      throw new TypeError(\n        'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n      );\n    if (w === _)\n      return 0;\n    let N = w.length, J = _.length;\n    for (let X = 0, ee = Math.min(N, J); X < ee; ++X)\n      if (w[X] !== _[X]) {\n        N = w[X], J = _[X];\n        break;\n      }\n    return N < J ? -1 : J < N ? 1 : 0;\n  }, m.isEncoding = function(w) {\n    switch (String(w).toLowerCase()) {\n      case \"hex\":\n      case \"utf8\":\n      case \"utf-8\":\n      case \"ascii\":\n      case \"latin1\":\n      case \"binary\":\n      case \"base64\":\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n        return !0;\n      default:\n        return !1;\n    }\n  }, m.concat = function(w, _) {\n    if (!Array.isArray(w))\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (w.length === 0)\n      return m.alloc(0);\n    let N;\n    if (_ === void 0)\n      for (_ = 0, N = 0; N < w.length; ++N)\n        _ += w[N].length;\n    const J = m.allocUnsafe(_);\n    let X = 0;\n    for (N = 0; N < w.length; ++N) {\n      let ee = w[N];\n      if (Q(ee, Uint8Array))\n        X + ee.length > J.length ? (m.isBuffer(ee) || (ee = m.from(ee)), ee.copy(J, X)) : Uint8Array.prototype.set.call(\n          J,\n          ee,\n          X\n        );\n      else if (m.isBuffer(ee))\n        ee.copy(J, X);\n      else\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      X += ee.length;\n    }\n    return J;\n  };\n  function H(A, w) {\n    if (m.isBuffer(A))\n      return A.length;\n    if (ArrayBuffer.isView(A) || Q(A, ArrayBuffer))\n      return A.byteLength;\n    if (typeof A != \"string\")\n      throw new TypeError(\n        'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof A\n      );\n    const _ = A.length, N = arguments.length > 2 && arguments[2] === !0;\n    if (!N && _ === 0)\n      return 0;\n    let J = !1;\n    for (; ; )\n      switch (w) {\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return _;\n        case \"utf8\":\n        case \"utf-8\":\n          return le(A).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return _ * 2;\n        case \"hex\":\n          return _ >>> 1;\n        case \"base64\":\n          return ze(A).length;\n        default:\n          if (J)\n            return N ? -1 : le(A).length;\n          w = (\"\" + w).toLowerCase(), J = !0;\n      }\n  }\n  m.byteLength = H;\n  function Z(A, w, _) {\n    let N = !1;\n    if ((w === void 0 || w < 0) && (w = 0), w > this.length || ((_ === void 0 || _ > this.length) && (_ = this.length), _ <= 0) || (_ >>>= 0, w >>>= 0, _ <= w))\n      return \"\";\n    for (A || (A = \"utf8\"); ; )\n      switch (A) {\n        case \"hex\":\n          return g(this, w, _);\n        case \"utf8\":\n        case \"utf-8\":\n          return a(this, w, _);\n        case \"ascii\":\n          return h(this, w, _);\n        case \"latin1\":\n        case \"binary\":\n          return v(this, w, _);\n        case \"base64\":\n          return s(this, w, _);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return l(this, w, _);\n        default:\n          if (N)\n            throw new TypeError(\"Unknown encoding: \" + A);\n          A = (A + \"\").toLowerCase(), N = !0;\n      }\n  }\n  m.prototype._isBuffer = !0;\n  function W(A, w, _) {\n    const N = A[w];\n    A[w] = A[_], A[_] = N;\n  }\n  m.prototype.swap16 = function() {\n    const w = this.length;\n    if (w % 2 !== 0)\n      throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    for (let _ = 0; _ < w; _ += 2)\n      W(this, _, _ + 1);\n    return this;\n  }, m.prototype.swap32 = function() {\n    const w = this.length;\n    if (w % 4 !== 0)\n      throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    for (let _ = 0; _ < w; _ += 4)\n      W(this, _, _ + 3), W(this, _ + 1, _ + 2);\n    return this;\n  }, m.prototype.swap64 = function() {\n    const w = this.length;\n    if (w % 8 !== 0)\n      throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    for (let _ = 0; _ < w; _ += 8)\n      W(this, _, _ + 7), W(this, _ + 1, _ + 6), W(this, _ + 2, _ + 5), W(this, _ + 3, _ + 4);\n    return this;\n  }, m.prototype.toString = function() {\n    const w = this.length;\n    return w === 0 ? \"\" : arguments.length === 0 ? a(this, 0, w) : Z.apply(this, arguments);\n  }, m.prototype.toLocaleString = m.prototype.toString, m.prototype.equals = function(w) {\n    if (!m.isBuffer(w))\n      throw new TypeError(\"Argument must be a Buffer\");\n    return this === w ? !0 : m.compare(this, w) === 0;\n  }, m.prototype.inspect = function() {\n    let w = \"\";\n    const _ = e.INSPECT_MAX_BYTES;\n    return w = this.toString(\"hex\", 0, _).replace(/(.{2})/g, \"$1 \").trim(), this.length > _ && (w += \" ... \"), \"<Buffer \" + w + \">\";\n  }, i && (m.prototype[i] = m.prototype.inspect), m.prototype.compare = function(w, _, N, J, X) {\n    if (Q(w, Uint8Array) && (w = m.from(w, w.offset, w.byteLength)), !m.isBuffer(w))\n      throw new TypeError(\n        'The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof w\n      );\n    if (_ === void 0 && (_ = 0), N === void 0 && (N = w ? w.length : 0), J === void 0 && (J = 0), X === void 0 && (X = this.length), _ < 0 || N > w.length || J < 0 || X > this.length)\n      throw new RangeError(\"out of range index\");\n    if (J >= X && _ >= N)\n      return 0;\n    if (J >= X)\n      return -1;\n    if (_ >= N)\n      return 1;\n    if (_ >>>= 0, N >>>= 0, J >>>= 0, X >>>= 0, this === w)\n      return 0;\n    let ee = X - J, xe = N - _;\n    const pe = Math.min(ee, xe), ue = this.slice(J, X), Ie = w.slice(_, N);\n    for (let me = 0; me < pe; ++me)\n      if (ue[me] !== Ie[me]) {\n        ee = ue[me], xe = Ie[me];\n        break;\n      }\n    return ee < xe ? -1 : xe < ee ? 1 : 0;\n  };\n  function Y(A, w, _, N, J) {\n    if (A.length === 0)\n      return -1;\n    if (typeof _ == \"string\" ? (N = _, _ = 0) : _ > 2147483647 ? _ = 2147483647 : _ < -2147483648 && (_ = -2147483648), _ = +_, re(_) && (_ = J ? 0 : A.length - 1), _ < 0 && (_ = A.length + _), _ >= A.length) {\n      if (J)\n        return -1;\n      _ = A.length - 1;\n    } else if (_ < 0)\n      if (J)\n        _ = 0;\n      else\n        return -1;\n    if (typeof w == \"string\" && (w = m.from(w, N)), m.isBuffer(w))\n      return w.length === 0 ? -1 : ne(A, w, _, N, J);\n    if (typeof w == \"number\")\n      return w = w & 255, typeof Uint8Array.prototype.indexOf == \"function\" ? J ? Uint8Array.prototype.indexOf.call(A, w, _) : Uint8Array.prototype.lastIndexOf.call(A, w, _) : ne(A, [w], _, N, J);\n    throw new TypeError(\"val must be string, number or Buffer\");\n  }\n  function ne(A, w, _, N, J) {\n    let X = 1, ee = A.length, xe = w.length;\n    if (N !== void 0 && (N = String(N).toLowerCase(), N === \"ucs2\" || N === \"ucs-2\" || N === \"utf16le\" || N === \"utf-16le\")) {\n      if (A.length < 2 || w.length < 2)\n        return -1;\n      X = 2, ee /= 2, xe /= 2, _ /= 2;\n    }\n    function pe(Ie, me) {\n      return X === 1 ? Ie[me] : Ie.readUInt16BE(me * X);\n    }\n    let ue;\n    if (J) {\n      let Ie = -1;\n      for (ue = _; ue < ee; ue++)\n        if (pe(A, ue) === pe(w, Ie === -1 ? 0 : ue - Ie)) {\n          if (Ie === -1 && (Ie = ue), ue - Ie + 1 === xe)\n            return Ie * X;\n        } else\n          Ie !== -1 && (ue -= ue - Ie), Ie = -1;\n    } else\n      for (_ + xe > ee && (_ = ee - xe), ue = _; ue >= 0; ue--) {\n        let Ie = !0;\n        for (let me = 0; me < xe; me++)\n          if (pe(A, ue + me) !== pe(w, me)) {\n            Ie = !1;\n            break;\n          }\n        if (Ie)\n          return ue;\n      }\n    return -1;\n  }\n  m.prototype.includes = function(w, _, N) {\n    return this.indexOf(w, _, N) !== -1;\n  }, m.prototype.indexOf = function(w, _, N) {\n    return Y(this, w, _, N, !0);\n  }, m.prototype.lastIndexOf = function(w, _, N) {\n    return Y(this, w, _, N, !1);\n  };\n  function D(A, w, _, N) {\n    _ = Number(_) || 0;\n    const J = A.length - _;\n    N ? (N = Number(N), N > J && (N = J)) : N = J;\n    const X = w.length;\n    N > X / 2 && (N = X / 2);\n    let ee;\n    for (ee = 0; ee < N; ++ee) {\n      const xe = parseInt(w.substr(ee * 2, 2), 16);\n      if (re(xe))\n        return ee;\n      A[_ + ee] = xe;\n    }\n    return ee;\n  }\n  function V(A, w, _, N) {\n    return ge(le(w, A.length - _), A, _, N);\n  }\n  function G(A, w, _, N) {\n    return ge(he(w), A, _, N);\n  }\n  function M(A, w, _, N) {\n    return ge(ze(w), A, _, N);\n  }\n  function p(A, w, _, N) {\n    return ge(fe(w, A.length - _), A, _, N);\n  }\n  m.prototype.write = function(w, _, N, J) {\n    if (_ === void 0)\n      J = \"utf8\", N = this.length, _ = 0;\n    else if (N === void 0 && typeof _ == \"string\")\n      J = _, N = this.length, _ = 0;\n    else if (isFinite(_))\n      _ = _ >>> 0, isFinite(N) ? (N = N >>> 0, J === void 0 && (J = \"utf8\")) : (J = N, N = void 0);\n    else\n      throw new Error(\n        \"Buffer.write(string, encoding, offset[, length]) is no longer supported\"\n      );\n    const X = this.length - _;\n    if ((N === void 0 || N > X) && (N = X), w.length > 0 && (N < 0 || _ < 0) || _ > this.length)\n      throw new RangeError(\"Attempt to write outside buffer bounds\");\n    J || (J = \"utf8\");\n    let ee = !1;\n    for (; ; )\n      switch (J) {\n        case \"hex\":\n          return D(this, w, _, N);\n        case \"utf8\":\n        case \"utf-8\":\n          return V(this, w, _, N);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return G(this, w, _, N);\n        case \"base64\":\n          return M(this, w, _, N);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return p(this, w, _, N);\n        default:\n          if (ee)\n            throw new TypeError(\"Unknown encoding: \" + J);\n          J = (\"\" + J).toLowerCase(), ee = !0;\n      }\n  }, m.prototype.toJSON = function() {\n    return {\n      type: \"Buffer\",\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n  function s(A, w, _) {\n    return w === 0 && _ === A.length ? r.fromByteArray(A) : r.fromByteArray(A.slice(w, _));\n  }\n  function a(A, w, _) {\n    _ = Math.min(A.length, _);\n    const N = [];\n    let J = w;\n    for (; J < _; ) {\n      const X = A[J];\n      let ee = null, xe = X > 239 ? 4 : X > 223 ? 3 : X > 191 ? 2 : 1;\n      if (J + xe <= _) {\n        let pe, ue, Ie, me;\n        switch (xe) {\n          case 1:\n            X < 128 && (ee = X);\n            break;\n          case 2:\n            pe = A[J + 1], (pe & 192) === 128 && (me = (X & 31) << 6 | pe & 63, me > 127 && (ee = me));\n            break;\n          case 3:\n            pe = A[J + 1], ue = A[J + 2], (pe & 192) === 128 && (ue & 192) === 128 && (me = (X & 15) << 12 | (pe & 63) << 6 | ue & 63, me > 2047 && (me < 55296 || me > 57343) && (ee = me));\n            break;\n          case 4:\n            pe = A[J + 1], ue = A[J + 2], Ie = A[J + 3], (pe & 192) === 128 && (ue & 192) === 128 && (Ie & 192) === 128 && (me = (X & 15) << 18 | (pe & 63) << 12 | (ue & 63) << 6 | Ie & 63, me > 65535 && me < 1114112 && (ee = me));\n        }\n      }\n      ee === null ? (ee = 65533, xe = 1) : ee > 65535 && (ee -= 65536, N.push(ee >>> 10 & 1023 | 55296), ee = 56320 | ee & 1023), N.push(ee), J += xe;\n    }\n    return u(N);\n  }\n  const o = 4096;\n  function u(A) {\n    const w = A.length;\n    if (w <= o)\n      return String.fromCharCode.apply(String, A);\n    let _ = \"\", N = 0;\n    for (; N < w; )\n      _ += String.fromCharCode.apply(\n        String,\n        A.slice(N, N += o)\n      );\n    return _;\n  }\n  function h(A, w, _) {\n    let N = \"\";\n    _ = Math.min(A.length, _);\n    for (let J = w; J < _; ++J)\n      N += String.fromCharCode(A[J] & 127);\n    return N;\n  }\n  function v(A, w, _) {\n    let N = \"\";\n    _ = Math.min(A.length, _);\n    for (let J = w; J < _; ++J)\n      N += String.fromCharCode(A[J]);\n    return N;\n  }\n  function g(A, w, _) {\n    const N = A.length;\n    (!w || w < 0) && (w = 0), (!_ || _ < 0 || _ > N) && (_ = N);\n    let J = \"\";\n    for (let X = w; X < _; ++X)\n      J += oe[A[X]];\n    return J;\n  }\n  function l(A, w, _) {\n    const N = A.slice(w, _);\n    let J = \"\";\n    for (let X = 0; X < N.length - 1; X += 2)\n      J += String.fromCharCode(N[X] + N[X + 1] * 256);\n    return J;\n  }\n  m.prototype.slice = function(w, _) {\n    const N = this.length;\n    w = ~~w, _ = _ === void 0 ? N : ~~_, w < 0 ? (w += N, w < 0 && (w = 0)) : w > N && (w = N), _ < 0 ? (_ += N, _ < 0 && (_ = 0)) : _ > N && (_ = N), _ < w && (_ = w);\n    const J = this.subarray(w, _);\n    return Object.setPrototypeOf(J, m.prototype), J;\n  };\n  function d(A, w, _) {\n    if (A % 1 !== 0 || A < 0)\n      throw new RangeError(\"offset is not uint\");\n    if (A + w > _)\n      throw new RangeError(\"Trying to access beyond buffer length\");\n  }\n  m.prototype.readUintLE = m.prototype.readUIntLE = function(w, _, N) {\n    w = w >>> 0, _ = _ >>> 0, N || d(w, _, this.length);\n    let J = this[w], X = 1, ee = 0;\n    for (; ++ee < _ && (X *= 256); )\n      J += this[w + ee] * X;\n    return J;\n  }, m.prototype.readUintBE = m.prototype.readUIntBE = function(w, _, N) {\n    w = w >>> 0, _ = _ >>> 0, N || d(w, _, this.length);\n    let J = this[w + --_], X = 1;\n    for (; _ > 0 && (X *= 256); )\n      J += this[w + --_] * X;\n    return J;\n  }, m.prototype.readUint8 = m.prototype.readUInt8 = function(w, _) {\n    return w = w >>> 0, _ || d(w, 1, this.length), this[w];\n  }, m.prototype.readUint16LE = m.prototype.readUInt16LE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 2, this.length), this[w] | this[w + 1] << 8;\n  }, m.prototype.readUint16BE = m.prototype.readUInt16BE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 2, this.length), this[w] << 8 | this[w + 1];\n  }, m.prototype.readUint32LE = m.prototype.readUInt32LE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 4, this.length), (this[w] | this[w + 1] << 8 | this[w + 2] << 16) + this[w + 3] * 16777216;\n  }, m.prototype.readUint32BE = m.prototype.readUInt32BE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 4, this.length), this[w] * 16777216 + (this[w + 1] << 16 | this[w + 2] << 8 | this[w + 3]);\n  }, m.prototype.readBigUInt64LE = se(function(w) {\n    w = w >>> 0, ie(w, \"offset\");\n    const _ = this[w], N = this[w + 7];\n    (_ === void 0 || N === void 0) && te(w, this.length - 8);\n    const J = _ + this[++w] * 2 ** 8 + this[++w] * 2 ** 16 + this[++w] * 2 ** 24, X = this[++w] + this[++w] * 2 ** 8 + this[++w] * 2 ** 16 + N * 2 ** 24;\n    return BigInt(J) + (BigInt(X) << BigInt(32));\n  }), m.prototype.readBigUInt64BE = se(function(w) {\n    w = w >>> 0, ie(w, \"offset\");\n    const _ = this[w], N = this[w + 7];\n    (_ === void 0 || N === void 0) && te(w, this.length - 8);\n    const J = _ * 2 ** 24 + this[++w] * 2 ** 16 + this[++w] * 2 ** 8 + this[++w], X = this[++w] * 2 ** 24 + this[++w] * 2 ** 16 + this[++w] * 2 ** 8 + N;\n    return (BigInt(J) << BigInt(32)) + BigInt(X);\n  }), m.prototype.readIntLE = function(w, _, N) {\n    w = w >>> 0, _ = _ >>> 0, N || d(w, _, this.length);\n    let J = this[w], X = 1, ee = 0;\n    for (; ++ee < _ && (X *= 256); )\n      J += this[w + ee] * X;\n    return X *= 128, J >= X && (J -= Math.pow(2, 8 * _)), J;\n  }, m.prototype.readIntBE = function(w, _, N) {\n    w = w >>> 0, _ = _ >>> 0, N || d(w, _, this.length);\n    let J = _, X = 1, ee = this[w + --J];\n    for (; J > 0 && (X *= 256); )\n      ee += this[w + --J] * X;\n    return X *= 128, ee >= X && (ee -= Math.pow(2, 8 * _)), ee;\n  }, m.prototype.readInt8 = function(w, _) {\n    return w = w >>> 0, _ || d(w, 1, this.length), this[w] & 128 ? (255 - this[w] + 1) * -1 : this[w];\n  }, m.prototype.readInt16LE = function(w, _) {\n    w = w >>> 0, _ || d(w, 2, this.length);\n    const N = this[w] | this[w + 1] << 8;\n    return N & 32768 ? N | 4294901760 : N;\n  }, m.prototype.readInt16BE = function(w, _) {\n    w = w >>> 0, _ || d(w, 2, this.length);\n    const N = this[w + 1] | this[w] << 8;\n    return N & 32768 ? N | 4294901760 : N;\n  }, m.prototype.readInt32LE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 4, this.length), this[w] | this[w + 1] << 8 | this[w + 2] << 16 | this[w + 3] << 24;\n  }, m.prototype.readInt32BE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 4, this.length), this[w] << 24 | this[w + 1] << 16 | this[w + 2] << 8 | this[w + 3];\n  }, m.prototype.readBigInt64LE = se(function(w) {\n    w = w >>> 0, ie(w, \"offset\");\n    const _ = this[w], N = this[w + 7];\n    (_ === void 0 || N === void 0) && te(w, this.length - 8);\n    const J = this[w + 4] + this[w + 5] * 2 ** 8 + this[w + 6] * 2 ** 16 + (N << 24);\n    return (BigInt(J) << BigInt(32)) + BigInt(_ + this[++w] * 2 ** 8 + this[++w] * 2 ** 16 + this[++w] * 2 ** 24);\n  }), m.prototype.readBigInt64BE = se(function(w) {\n    w = w >>> 0, ie(w, \"offset\");\n    const _ = this[w], N = this[w + 7];\n    (_ === void 0 || N === void 0) && te(w, this.length - 8);\n    const J = (_ << 24) + // Overflow\n    this[++w] * 2 ** 16 + this[++w] * 2 ** 8 + this[++w];\n    return (BigInt(J) << BigInt(32)) + BigInt(this[++w] * 2 ** 24 + this[++w] * 2 ** 16 + this[++w] * 2 ** 8 + N);\n  }), m.prototype.readFloatLE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 4, this.length), t.read(this, w, !0, 23, 4);\n  }, m.prototype.readFloatBE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 4, this.length), t.read(this, w, !1, 23, 4);\n  }, m.prototype.readDoubleLE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 8, this.length), t.read(this, w, !0, 52, 8);\n  }, m.prototype.readDoubleBE = function(w, _) {\n    return w = w >>> 0, _ || d(w, 8, this.length), t.read(this, w, !1, 52, 8);\n  };\n  function f(A, w, _, N, J, X) {\n    if (!m.isBuffer(A))\n      throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (w > J || w < X)\n      throw new RangeError('\"value\" argument is out of bounds');\n    if (_ + N > A.length)\n      throw new RangeError(\"Index out of range\");\n  }\n  m.prototype.writeUintLE = m.prototype.writeUIntLE = function(w, _, N, J) {\n    if (w = +w, _ = _ >>> 0, N = N >>> 0, !J) {\n      const xe = Math.pow(2, 8 * N) - 1;\n      f(this, w, _, N, xe, 0);\n    }\n    let X = 1, ee = 0;\n    for (this[_] = w & 255; ++ee < N && (X *= 256); )\n      this[_ + ee] = w / X & 255;\n    return _ + N;\n  }, m.prototype.writeUintBE = m.prototype.writeUIntBE = function(w, _, N, J) {\n    if (w = +w, _ = _ >>> 0, N = N >>> 0, !J) {\n      const xe = Math.pow(2, 8 * N) - 1;\n      f(this, w, _, N, xe, 0);\n    }\n    let X = N - 1, ee = 1;\n    for (this[_ + X] = w & 255; --X >= 0 && (ee *= 256); )\n      this[_ + X] = w / ee & 255;\n    return _ + N;\n  }, m.prototype.writeUint8 = m.prototype.writeUInt8 = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 1, 255, 0), this[_] = w & 255, _ + 1;\n  }, m.prototype.writeUint16LE = m.prototype.writeUInt16LE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 2, 65535, 0), this[_] = w & 255, this[_ + 1] = w >>> 8, _ + 2;\n  }, m.prototype.writeUint16BE = m.prototype.writeUInt16BE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 2, 65535, 0), this[_] = w >>> 8, this[_ + 1] = w & 255, _ + 2;\n  }, m.prototype.writeUint32LE = m.prototype.writeUInt32LE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 4, 4294967295, 0), this[_ + 3] = w >>> 24, this[_ + 2] = w >>> 16, this[_ + 1] = w >>> 8, this[_] = w & 255, _ + 4;\n  }, m.prototype.writeUint32BE = m.prototype.writeUInt32BE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 4, 4294967295, 0), this[_] = w >>> 24, this[_ + 1] = w >>> 16, this[_ + 2] = w >>> 8, this[_ + 3] = w & 255, _ + 4;\n  };\n  function b(A, w, _, N, J) {\n    P(w, N, J, A, _, 7);\n    let X = Number(w & BigInt(4294967295));\n    A[_++] = X, X = X >> 8, A[_++] = X, X = X >> 8, A[_++] = X, X = X >> 8, A[_++] = X;\n    let ee = Number(w >> BigInt(32) & BigInt(4294967295));\n    return A[_++] = ee, ee = ee >> 8, A[_++] = ee, ee = ee >> 8, A[_++] = ee, ee = ee >> 8, A[_++] = ee, _;\n  }\n  function E(A, w, _, N, J) {\n    P(w, N, J, A, _, 7);\n    let X = Number(w & BigInt(4294967295));\n    A[_ + 7] = X, X = X >> 8, A[_ + 6] = X, X = X >> 8, A[_ + 5] = X, X = X >> 8, A[_ + 4] = X;\n    let ee = Number(w >> BigInt(32) & BigInt(4294967295));\n    return A[_ + 3] = ee, ee = ee >> 8, A[_ + 2] = ee, ee = ee >> 8, A[_ + 1] = ee, ee = ee >> 8, A[_] = ee, _ + 8;\n  }\n  m.prototype.writeBigUInt64LE = se(function(w, _ = 0) {\n    return b(this, w, _, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n  }), m.prototype.writeBigUInt64BE = se(function(w, _ = 0) {\n    return E(this, w, _, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n  }), m.prototype.writeIntLE = function(w, _, N, J) {\n    if (w = +w, _ = _ >>> 0, !J) {\n      const pe = Math.pow(2, 8 * N - 1);\n      f(this, w, _, N, pe - 1, -pe);\n    }\n    let X = 0, ee = 1, xe = 0;\n    for (this[_] = w & 255; ++X < N && (ee *= 256); )\n      w < 0 && xe === 0 && this[_ + X - 1] !== 0 && (xe = 1), this[_ + X] = (w / ee >> 0) - xe & 255;\n    return _ + N;\n  }, m.prototype.writeIntBE = function(w, _, N, J) {\n    if (w = +w, _ = _ >>> 0, !J) {\n      const pe = Math.pow(2, 8 * N - 1);\n      f(this, w, _, N, pe - 1, -pe);\n    }\n    let X = N - 1, ee = 1, xe = 0;\n    for (this[_ + X] = w & 255; --X >= 0 && (ee *= 256); )\n      w < 0 && xe === 0 && this[_ + X + 1] !== 0 && (xe = 1), this[_ + X] = (w / ee >> 0) - xe & 255;\n    return _ + N;\n  }, m.prototype.writeInt8 = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 1, 127, -128), w < 0 && (w = 255 + w + 1), this[_] = w & 255, _ + 1;\n  }, m.prototype.writeInt16LE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 2, 32767, -32768), this[_] = w & 255, this[_ + 1] = w >>> 8, _ + 2;\n  }, m.prototype.writeInt16BE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 2, 32767, -32768), this[_] = w >>> 8, this[_ + 1] = w & 255, _ + 2;\n  }, m.prototype.writeInt32LE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 4, 2147483647, -2147483648), this[_] = w & 255, this[_ + 1] = w >>> 8, this[_ + 2] = w >>> 16, this[_ + 3] = w >>> 24, _ + 4;\n  }, m.prototype.writeInt32BE = function(w, _, N) {\n    return w = +w, _ = _ >>> 0, N || f(this, w, _, 4, 2147483647, -2147483648), w < 0 && (w = 4294967295 + w + 1), this[_] = w >>> 24, this[_ + 1] = w >>> 16, this[_ + 2] = w >>> 8, this[_ + 3] = w & 255, _ + 4;\n  }, m.prototype.writeBigInt64LE = se(function(w, _ = 0) {\n    return b(this, w, _, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n  }), m.prototype.writeBigInt64BE = se(function(w, _ = 0) {\n    return E(this, w, _, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n  });\n  function y(A, w, _, N, J, X) {\n    if (_ + N > A.length)\n      throw new RangeError(\"Index out of range\");\n    if (_ < 0)\n      throw new RangeError(\"Index out of range\");\n  }\n  function S(A, w, _, N, J) {\n    return w = +w, _ = _ >>> 0, J || y(A, w, _, 4), t.write(A, w, _, N, 23, 4), _ + 4;\n  }\n  m.prototype.writeFloatLE = function(w, _, N) {\n    return S(this, w, _, !0, N);\n  }, m.prototype.writeFloatBE = function(w, _, N) {\n    return S(this, w, _, !1, N);\n  };\n  function I(A, w, _, N, J) {\n    return w = +w, _ = _ >>> 0, J || y(A, w, _, 8), t.write(A, w, _, N, 52, 8), _ + 8;\n  }\n  m.prototype.writeDoubleLE = function(w, _, N) {\n    return I(this, w, _, !0, N);\n  }, m.prototype.writeDoubleBE = function(w, _, N) {\n    return I(this, w, _, !1, N);\n  }, m.prototype.copy = function(w, _, N, J) {\n    if (!m.isBuffer(w))\n      throw new TypeError(\"argument should be a Buffer\");\n    if (N || (N = 0), !J && J !== 0 && (J = this.length), _ >= w.length && (_ = w.length), _ || (_ = 0), J > 0 && J < N && (J = N), J === N || w.length === 0 || this.length === 0)\n      return 0;\n    if (_ < 0)\n      throw new RangeError(\"targetStart out of bounds\");\n    if (N < 0 || N >= this.length)\n      throw new RangeError(\"Index out of range\");\n    if (J < 0)\n      throw new RangeError(\"sourceEnd out of bounds\");\n    J > this.length && (J = this.length), w.length - _ < J - N && (J = w.length - _ + N);\n    const X = J - N;\n    return this === w && typeof Uint8Array.prototype.copyWithin == \"function\" ? this.copyWithin(_, N, J) : Uint8Array.prototype.set.call(\n      w,\n      this.subarray(N, J),\n      _\n    ), X;\n  }, m.prototype.fill = function(w, _, N, J) {\n    if (typeof w == \"string\") {\n      if (typeof _ == \"string\" ? (J = _, _ = 0, N = this.length) : typeof N == \"string\" && (J = N, N = this.length), J !== void 0 && typeof J != \"string\")\n        throw new TypeError(\"encoding must be a string\");\n      if (typeof J == \"string\" && !m.isEncoding(J))\n        throw new TypeError(\"Unknown encoding: \" + J);\n      if (w.length === 1) {\n        const ee = w.charCodeAt(0);\n        (J === \"utf8\" && ee < 128 || J === \"latin1\") && (w = ee);\n      }\n    } else\n      typeof w == \"number\" ? w = w & 255 : typeof w == \"boolean\" && (w = Number(w));\n    if (_ < 0 || this.length < _ || this.length < N)\n      throw new RangeError(\"Out of range index\");\n    if (N <= _)\n      return this;\n    _ = _ >>> 0, N = N === void 0 ? this.length : N >>> 0, w || (w = 0);\n    let X;\n    if (typeof w == \"number\")\n      for (X = _; X < N; ++X)\n        this[X] = w;\n    else {\n      const ee = m.isBuffer(w) ? w : m.from(w, J), xe = ee.length;\n      if (xe === 0)\n        throw new TypeError('The value \"' + w + '\" is invalid for argument \"value\"');\n      for (X = 0; X < N - _; ++X)\n        this[X + _] = ee[X % xe];\n    }\n    return this;\n  };\n  const $ = {};\n  function K(A, w, _) {\n    $[A] = class extends _ {\n      constructor() {\n        super(), Object.defineProperty(this, \"message\", {\n          value: w.apply(this, arguments),\n          writable: !0,\n          configurable: !0\n        }), this.name = `${this.name} [${A}]`, this.stack, delete this.name;\n      }\n      get code() {\n        return A;\n      }\n      set code(J) {\n        Object.defineProperty(this, \"code\", {\n          configurable: !0,\n          enumerable: !0,\n          value: J,\n          writable: !0\n        });\n      }\n      toString() {\n        return `${this.name} [${A}]: ${this.message}`;\n      }\n    };\n  }\n  K(\n    \"ERR_BUFFER_OUT_OF_BOUNDS\",\n    function(A) {\n      return A ? `${A} is outside of buffer bounds` : \"Attempt to access memory outside buffer bounds\";\n    },\n    RangeError\n  ), K(\n    \"ERR_INVALID_ARG_TYPE\",\n    function(A, w) {\n      return `The \"${A}\" argument must be of type number. Received type ${typeof w}`;\n    },\n    TypeError\n  ), K(\n    \"ERR_OUT_OF_RANGE\",\n    function(A, w, _) {\n      let N = `The value of \"${A}\" is out of range.`, J = _;\n      return Number.isInteger(_) && Math.abs(_) > 2 ** 32 ? J = ae(String(_)) : typeof _ == \"bigint\" && (J = String(_), (_ > BigInt(2) ** BigInt(32) || _ < -(BigInt(2) ** BigInt(32))) && (J = ae(J)), J += \"n\"), N += ` It must be ${w}. Received ${J}`, N;\n    },\n    RangeError\n  );\n  function ae(A) {\n    let w = \"\", _ = A.length;\n    const N = A[0] === \"-\" ? 1 : 0;\n    for (; _ >= N + 4; _ -= 3)\n      w = `_${A.slice(_ - 3, _)}${w}`;\n    return `${A.slice(0, _)}${w}`;\n  }\n  function j(A, w, _) {\n    ie(w, \"offset\"), (A[w] === void 0 || A[w + _] === void 0) && te(w, A.length - (_ + 1));\n  }\n  function P(A, w, _, N, J, X) {\n    if (A > _ || A < w) {\n      const ee = typeof w == \"bigint\" ? \"n\" : \"\";\n      let xe;\n      throw X > 3 ? w === 0 || w === BigInt(0) ? xe = `>= 0${ee} and < 2${ee} ** ${(X + 1) * 8}${ee}` : xe = `>= -(2${ee} ** ${(X + 1) * 8 - 1}${ee}) and < 2 ** ${(X + 1) * 8 - 1}${ee}` : xe = `>= ${w}${ee} and <= ${_}${ee}`, new $.ERR_OUT_OF_RANGE(\"value\", xe, A);\n    }\n    j(N, J, X);\n  }\n  function ie(A, w) {\n    if (typeof A != \"number\")\n      throw new $.ERR_INVALID_ARG_TYPE(w, \"number\", A);\n  }\n  function te(A, w, _) {\n    throw Math.floor(A) !== A ? (ie(A, _), new $.ERR_OUT_OF_RANGE(_ || \"offset\", \"an integer\", A)) : w < 0 ? new $.ERR_BUFFER_OUT_OF_BOUNDS() : new $.ERR_OUT_OF_RANGE(\n      _ || \"offset\",\n      `>= ${_ ? 1 : 0} and <= ${w}`,\n      A\n    );\n  }\n  const ce = /[^+/0-9A-Za-z-_]/g;\n  function ve(A) {\n    if (A = A.split(\"=\")[0], A = A.trim().replace(ce, \"\"), A.length < 2)\n      return \"\";\n    for (; A.length % 4 !== 0; )\n      A = A + \"=\";\n    return A;\n  }\n  function le(A, w) {\n    w = w || 1 / 0;\n    let _;\n    const N = A.length;\n    let J = null;\n    const X = [];\n    for (let ee = 0; ee < N; ++ee) {\n      if (_ = A.charCodeAt(ee), _ > 55295 && _ < 57344) {\n        if (!J) {\n          if (_ > 56319) {\n            (w -= 3) > -1 && X.push(239, 191, 189);\n            continue;\n          } else if (ee + 1 === N) {\n            (w -= 3) > -1 && X.push(239, 191, 189);\n            continue;\n          }\n          J = _;\n          continue;\n        }\n        if (_ < 56320) {\n          (w -= 3) > -1 && X.push(239, 191, 189), J = _;\n          continue;\n        }\n        _ = (J - 55296 << 10 | _ - 56320) + 65536;\n      } else\n        J && (w -= 3) > -1 && X.push(239, 191, 189);\n      if (J = null, _ < 128) {\n        if ((w -= 1) < 0)\n          break;\n        X.push(_);\n      } else if (_ < 2048) {\n        if ((w -= 2) < 0)\n          break;\n        X.push(\n          _ >> 6 | 192,\n          _ & 63 | 128\n        );\n      } else if (_ < 65536) {\n        if ((w -= 3) < 0)\n          break;\n        X.push(\n          _ >> 12 | 224,\n          _ >> 6 & 63 | 128,\n          _ & 63 | 128\n        );\n      } else if (_ < 1114112) {\n        if ((w -= 4) < 0)\n          break;\n        X.push(\n          _ >> 18 | 240,\n          _ >> 12 & 63 | 128,\n          _ >> 6 & 63 | 128,\n          _ & 63 | 128\n        );\n      } else\n        throw new Error(\"Invalid code point\");\n    }\n    return X;\n  }\n  function he(A) {\n    const w = [];\n    for (let _ = 0; _ < A.length; ++_)\n      w.push(A.charCodeAt(_) & 255);\n    return w;\n  }\n  function fe(A, w) {\n    let _, N, J;\n    const X = [];\n    for (let ee = 0; ee < A.length && !((w -= 2) < 0); ++ee)\n      _ = A.charCodeAt(ee), N = _ >> 8, J = _ % 256, X.push(J), X.push(N);\n    return X;\n  }\n  function ze(A) {\n    return r.toByteArray(ve(A));\n  }\n  function ge(A, w, _, N) {\n    let J;\n    for (J = 0; J < N && !(J + _ >= w.length || J >= A.length); ++J)\n      w[J + _] = A[J];\n    return J;\n  }\n  function Q(A, w) {\n    return A instanceof w || A != null && A.constructor != null && A.constructor.name != null && A.constructor.name === w.name;\n  }\n  function re(A) {\n    return A !== A;\n  }\n  const oe = function() {\n    const A = \"0123456789abcdef\", w = new Array(256);\n    for (let _ = 0; _ < 16; ++_) {\n      const N = _ * 16;\n      for (let J = 0; J < 16; ++J)\n        w[N + J] = A[_] + A[J];\n    }\n    return w;\n  }();\n  function se(A) {\n    return typeof BigInt > \"u\" ? de : A;\n  }\n  function de() {\n    throw new Error(\"BigInt not supported\");\n  }\n})(Ht);\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n(function(e, r) {\n  var t = Ht, i = t.Buffer;\n  function c(x, m) {\n    for (var k in x)\n      m[k] = x[k];\n  }\n  i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = t : (c(t, r), r.Buffer = n);\n  function n(x, m, k) {\n    return i(x, m, k);\n  }\n  n.prototype = Object.create(i.prototype), c(i, n), n.from = function(x, m, k) {\n    if (typeof x == \"number\")\n      throw new TypeError(\"Argument must not be a number\");\n    return i(x, m, k);\n  }, n.alloc = function(x, m, k) {\n    if (typeof x != \"number\")\n      throw new TypeError(\"Argument must be a number\");\n    var B = i(x);\n    return m !== void 0 ? typeof k == \"string\" ? B.fill(m, k) : B.fill(m) : B.fill(0), B;\n  }, n.allocUnsafe = function(x) {\n    if (typeof x != \"number\")\n      throw new TypeError(\"Argument must be a number\");\n    return i(x);\n  }, n.allocUnsafeSlow = function(x) {\n    if (typeof x != \"number\")\n      throw new TypeError(\"Argument must be a number\");\n    return t.SlowBuffer(x);\n  };\n})(Jf, Jf.exports);\nvar br = Jf.exports, Yf = { exports: {} }, wd = dt.EventEmitter, hf, qo;\nfunction p1() {\n  if (qo)\n    return hf;\n  qo = 1;\n  function e(F, T) {\n    var L = Object.keys(F);\n    if (Object.getOwnPropertySymbols) {\n      var O = Object.getOwnPropertySymbols(F);\n      T && (O = O.filter(function(q) {\n        return Object.getOwnPropertyDescriptor(F, q).enumerable;\n      })), L.push.apply(L, O);\n    }\n    return L;\n  }\n  function r(F) {\n    for (var T = 1; T < arguments.length; T++) {\n      var L = arguments[T] != null ? arguments[T] : {};\n      T % 2 ? e(Object(L), !0).forEach(function(O) {\n        t(F, O, L[O]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(F, Object.getOwnPropertyDescriptors(L)) : e(Object(L)).forEach(function(O) {\n        Object.defineProperty(F, O, Object.getOwnPropertyDescriptor(L, O));\n      });\n    }\n    return F;\n  }\n  function t(F, T, L) {\n    return T in F ? Object.defineProperty(F, T, { value: L, enumerable: !0, configurable: !0, writable: !0 }) : F[T] = L, F;\n  }\n  function i(F, T) {\n    if (!(F instanceof T))\n      throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function c(F, T) {\n    for (var L = 0; L < T.length; L++) {\n      var O = T[L];\n      O.enumerable = O.enumerable || !1, O.configurable = !0, \"value\" in O && (O.writable = !0), Object.defineProperty(F, O.key, O);\n    }\n  }\n  function n(F, T, L) {\n    return T && c(F.prototype, T), L && c(F, L), F;\n  }\n  var x = Ht, m = x.Buffer, k = dt, B = k.inspect, z = B && B.custom || \"inspect\";\n  function C(F, T, L) {\n    m.prototype.copy.call(F, T, L);\n  }\n  return hf = /* @__PURE__ */ function() {\n    function F() {\n      i(this, F), this.head = null, this.tail = null, this.length = 0;\n    }\n    return n(F, [{\n      key: \"push\",\n      value: function(L) {\n        var O = {\n          data: L,\n          next: null\n        };\n        this.length > 0 ? this.tail.next = O : this.head = O, this.tail = O, ++this.length;\n      }\n    }, {\n      key: \"unshift\",\n      value: function(L) {\n        var O = {\n          data: L,\n          next: this.head\n        };\n        this.length === 0 && (this.tail = O), this.head = O, ++this.length;\n      }\n    }, {\n      key: \"shift\",\n      value: function() {\n        if (this.length !== 0) {\n          var L = this.head.data;\n          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, L;\n        }\n      }\n    }, {\n      key: \"clear\",\n      value: function() {\n        this.head = this.tail = null, this.length = 0;\n      }\n    }, {\n      key: \"join\",\n      value: function(L) {\n        if (this.length === 0)\n          return \"\";\n        for (var O = this.head, q = \"\" + O.data; O = O.next; )\n          q += L + O.data;\n        return q;\n      }\n    }, {\n      key: \"concat\",\n      value: function(L) {\n        if (this.length === 0)\n          return m.alloc(0);\n        for (var O = m.allocUnsafe(L >>> 0), q = this.head, R = 0; q; )\n          C(q.data, O, R), R += q.data.length, q = q.next;\n        return O;\n      }\n      // Consumes a specified amount of bytes or characters from the buffered data.\n    }, {\n      key: \"consume\",\n      value: function(L, O) {\n        var q;\n        return L < this.head.data.length ? (q = this.head.data.slice(0, L), this.head.data = this.head.data.slice(L)) : L === this.head.data.length ? q = this.shift() : q = O ? this._getString(L) : this._getBuffer(L), q;\n      }\n    }, {\n      key: \"first\",\n      value: function() {\n        return this.head.data;\n      }\n      // Consumes a specified amount of characters from the buffered data.\n    }, {\n      key: \"_getString\",\n      value: function(L) {\n        var O = this.head, q = 1, R = O.data;\n        for (L -= R.length; O = O.next; ) {\n          var U = O.data, H = L > U.length ? U.length : L;\n          if (H === U.length ? R += U : R += U.slice(0, L), L -= H, L === 0) {\n            H === U.length ? (++q, O.next ? this.head = O.next : this.head = this.tail = null) : (this.head = O, O.data = U.slice(H));\n            break;\n          }\n          ++q;\n        }\n        return this.length -= q, R;\n      }\n      // Consumes a specified amount of bytes from the buffered data.\n    }, {\n      key: \"_getBuffer\",\n      value: function(L) {\n        var O = m.allocUnsafe(L), q = this.head, R = 1;\n        for (q.data.copy(O), L -= q.data.length; q = q.next; ) {\n          var U = q.data, H = L > U.length ? U.length : L;\n          if (U.copy(O, O.length - L, 0, H), L -= H, L === 0) {\n            H === U.length ? (++R, q.next ? this.head = q.next : this.head = this.tail = null) : (this.head = q, q.data = U.slice(H));\n            break;\n          }\n          ++R;\n        }\n        return this.length -= R, O;\n      }\n      // Make sure the linked list only shows the minimal necessary information.\n    }, {\n      key: z,\n      value: function(L, O) {\n        return B(this, r({}, O, {\n          // Only inspect one level.\n          depth: 0,\n          // It should not recurse.\n          customInspect: !1\n        }));\n      }\n    }]), F;\n  }(), hf;\n}\nfunction v1(e, r) {\n  var t = this, i = this._readableState && this._readableState.destroyed, c = this._writableState && this._writableState.destroyed;\n  return i || c ? (r ? r(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, process.nextTick(Xf, this, e)) : process.nextTick(Xf, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, function(n) {\n    !r && n ? t._writableState ? t._writableState.errorEmitted ? process.nextTick(Bi, t) : (t._writableState.errorEmitted = !0, process.nextTick(No, t, n)) : process.nextTick(No, t, n) : r ? (process.nextTick(Bi, t), r(n)) : process.nextTick(Bi, t);\n  }), this);\n}\nfunction No(e, r) {\n  Xf(e, r), Bi(e);\n}\nfunction Bi(e) {\n  e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit(\"close\");\n}\nfunction x1() {\n  this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);\n}\nfunction Xf(e, r) {\n  e.emit(\"error\", r);\n}\nfunction m1(e, r) {\n  var t = e._readableState, i = e._writableState;\n  t && t.autoDestroy || i && i.autoDestroy ? e.destroy(r) : e.emit(\"error\", r);\n}\nvar _d = {\n  destroy: v1,\n  undestroy: x1,\n  errorOrDestroy: m1\n}, la = {};\nfunction g1(e, r) {\n  e.prototype = Object.create(r.prototype), e.prototype.constructor = e, e.__proto__ = r;\n}\nvar Md = {};\nfunction et(e, r, t) {\n  t || (t = Error);\n  function i(n, x, m) {\n    return typeof r == \"string\" ? r : r(n, x, m);\n  }\n  var c = /* @__PURE__ */ function(n) {\n    g1(x, n);\n    function x(m, k, B) {\n      return n.call(this, i(m, k, B)) || this;\n    }\n    return x;\n  }(t);\n  c.prototype.name = t.name, c.prototype.code = e, Md[e] = c;\n}\nfunction Fo(e, r) {\n  if (Array.isArray(e)) {\n    var t = e.length;\n    return e = e.map(function(i) {\n      return String(i);\n    }), t > 2 ? \"one of \".concat(r, \" \").concat(e.slice(0, t - 1).join(\", \"), \", or \") + e[t - 1] : t === 2 ? \"one of \".concat(r, \" \").concat(e[0], \" or \").concat(e[1]) : \"of \".concat(r, \" \").concat(e[0]);\n  } else\n    return \"of \".concat(r, \" \").concat(String(e));\n}\nfunction y1(e, r, t) {\n  return e.substr(!t || t < 0 ? 0 : +t, r.length) === r;\n}\nfunction w1(e, r, t) {\n  return (t === void 0 || t > e.length) && (t = e.length), e.substring(t - r.length, t) === r;\n}\nfunction _1(e, r, t) {\n  return typeof t != \"number\" && (t = 0), t + r.length > e.length ? !1 : e.indexOf(r, t) !== -1;\n}\net(\"ERR_INVALID_OPT_VALUE\", function(e, r) {\n  return 'The value \"' + r + '\" is invalid for option \"' + e + '\"';\n}, TypeError);\net(\"ERR_INVALID_ARG_TYPE\", function(e, r, t) {\n  var i;\n  typeof r == \"string\" && y1(r, \"not \") ? (i = \"must not be\", r = r.replace(/^not /, \"\")) : i = \"must be\";\n  var c;\n  if (w1(e, \" argument\"))\n    c = \"The \".concat(e, \" \").concat(i, \" \").concat(Fo(r, \"type\"));\n  else {\n    var n = _1(e, \".\") ? \"property\" : \"argument\";\n    c = 'The \"'.concat(e, '\" ').concat(n, \" \").concat(i, \" \").concat(Fo(r, \"type\"));\n  }\n  return c += \". Received type \".concat(typeof t), c;\n}, TypeError);\net(\"ERR_STREAM_PUSH_AFTER_EOF\", \"stream.push() after EOF\");\net(\"ERR_METHOD_NOT_IMPLEMENTED\", function(e) {\n  return \"The \" + e + \" method is not implemented\";\n});\net(\"ERR_STREAM_PREMATURE_CLOSE\", \"Premature close\");\net(\"ERR_STREAM_DESTROYED\", function(e) {\n  return \"Cannot call \" + e + \" after a stream was destroyed\";\n});\net(\"ERR_MULTIPLE_CALLBACK\", \"Callback called multiple times\");\net(\"ERR_STREAM_CANNOT_PIPE\", \"Cannot pipe, not readable\");\net(\"ERR_STREAM_WRITE_AFTER_END\", \"write after end\");\net(\"ERR_STREAM_NULL_VALUES\", \"May not write null values to stream\", TypeError);\net(\"ERR_UNKNOWN_ENCODING\", function(e) {\n  return \"Unknown encoding: \" + e;\n}, TypeError);\net(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\", \"stream.unshift() after end event\");\nla.codes = Md;\nvar M1 = la.codes.ERR_INVALID_OPT_VALUE;\nfunction S1(e, r, t) {\n  return e.highWaterMark != null ? e.highWaterMark : r ? e[t] : null;\n}\nfunction k1(e, r, t, i) {\n  var c = S1(r, i, t);\n  if (c != null) {\n    if (!(isFinite(c) && Math.floor(c) === c) || c < 0) {\n      var n = i ? t : \"highWaterMark\";\n      throw new M1(n, c);\n    }\n    return Math.floor(c);\n  }\n  return e.objectMode ? 16 : 16 * 1024;\n}\nvar Sd = {\n  getHighWaterMark: k1\n}, E1 = A1;\nfunction A1(e, r) {\n  if (pf(\"noDeprecation\"))\n    return e;\n  var t = !1;\n  function i() {\n    if (!t) {\n      if (pf(\"throwDeprecation\"))\n        throw new Error(r);\n      pf(\"traceDeprecation\") ? console.trace(r) : console.warn(r), t = !0;\n    }\n    return e.apply(this, arguments);\n  }\n  return i;\n}\nfunction pf(e) {\n  try {\n    if (!be.localStorage)\n      return !1;\n  } catch {\n    return !1;\n  }\n  var r = be.localStorage[e];\n  return r == null ? !1 : String(r).toLowerCase() === \"true\";\n}\nvar vf, Co;\nfunction kd() {\n  if (Co)\n    return vf;\n  Co = 1, vf = D;\n  function e(S) {\n    var I = this;\n    this.next = null, this.entry = null, this.finish = function() {\n      y(I, S);\n    };\n  }\n  var r;\n  D.WritableState = Y;\n  var t = {\n    deprecate: E1\n  }, i = wd, c = Ht.Buffer, n = be.Uint8Array || function() {\n  };\n  function x(S) {\n    return c.from(S);\n  }\n  function m(S) {\n    return c.isBuffer(S) || S instanceof n;\n  }\n  var k = _d, B = Sd, z = B.getHighWaterMark, C = la.codes, F = C.ERR_INVALID_ARG_TYPE, T = C.ERR_METHOD_NOT_IMPLEMENTED, L = C.ERR_MULTIPLE_CALLBACK, O = C.ERR_STREAM_CANNOT_PIPE, q = C.ERR_STREAM_DESTROYED, R = C.ERR_STREAM_NULL_VALUES, U = C.ERR_STREAM_WRITE_AFTER_END, H = C.ERR_UNKNOWN_ENCODING, Z = k.errorOrDestroy;\n  nr(D, i);\n  function W() {\n  }\n  function Y(S, I, $) {\n    r = r || Sa(), S = S || {}, typeof $ != \"boolean\" && ($ = I instanceof r), this.objectMode = !!S.objectMode, $ && (this.objectMode = this.objectMode || !!S.writableObjectMode), this.highWaterMark = z(this, S, \"writableHighWaterMark\", $), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;\n    var K = S.decodeStrings === !1;\n    this.decodeStrings = !K, this.defaultEncoding = S.defaultEncoding || \"utf8\", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(ae) {\n      u(I, ae);\n    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = S.emitClose !== !1, this.autoDestroy = !!S.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new e(this);\n  }\n  Y.prototype.getBuffer = function() {\n    for (var I = this.bufferedRequest, $ = []; I; )\n      $.push(I), I = I.next;\n    return $;\n  }, function() {\n    try {\n      Object.defineProperty(Y.prototype, \"buffer\", {\n        get: t.deprecate(function() {\n          return this.getBuffer();\n        }, \"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\", \"DEP0003\")\n      });\n    } catch {\n    }\n  }();\n  var ne;\n  typeof Symbol == \"function\" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == \"function\" ? (ne = Function.prototype[Symbol.hasInstance], Object.defineProperty(D, Symbol.hasInstance, {\n    value: function(I) {\n      return ne.call(this, I) ? !0 : this !== D ? !1 : I && I._writableState instanceof Y;\n    }\n  })) : ne = function(I) {\n    return I instanceof this;\n  };\n  function D(S) {\n    r = r || Sa();\n    var I = this instanceof r;\n    if (!I && !ne.call(D, this))\n      return new D(S);\n    this._writableState = new Y(S, this, I), this.writable = !0, S && (typeof S.write == \"function\" && (this._write = S.write), typeof S.writev == \"function\" && (this._writev = S.writev), typeof S.destroy == \"function\" && (this._destroy = S.destroy), typeof S.final == \"function\" && (this._final = S.final)), i.call(this);\n  }\n  D.prototype.pipe = function() {\n    Z(this, new O());\n  };\n  function V(S, I) {\n    var $ = new U();\n    Z(S, $), process.nextTick(I, $);\n  }\n  function G(S, I, $, K) {\n    var ae;\n    return $ === null ? ae = new R() : typeof $ != \"string\" && !I.objectMode && (ae = new F(\"chunk\", [\"string\", \"Buffer\"], $)), ae ? (Z(S, ae), process.nextTick(K, ae), !1) : !0;\n  }\n  D.prototype.write = function(S, I, $) {\n    var K = this._writableState, ae = !1, j = !K.objectMode && m(S);\n    return j && !c.isBuffer(S) && (S = x(S)), typeof I == \"function\" && ($ = I, I = null), j ? I = \"buffer\" : I || (I = K.defaultEncoding), typeof $ != \"function\" && ($ = W), K.ending ? V(this, $) : (j || G(this, K, S, $)) && (K.pendingcb++, ae = p(this, K, j, S, I, $)), ae;\n  }, D.prototype.cork = function() {\n    this._writableState.corked++;\n  }, D.prototype.uncork = function() {\n    var S = this._writableState;\n    S.corked && (S.corked--, !S.writing && !S.corked && !S.bufferProcessing && S.bufferedRequest && g(this, S));\n  }, D.prototype.setDefaultEncoding = function(I) {\n    if (typeof I == \"string\" && (I = I.toLowerCase()), !([\"hex\", \"utf8\", \"utf-8\", \"ascii\", \"binary\", \"base64\", \"ucs2\", \"ucs-2\", \"utf16le\", \"utf-16le\", \"raw\"].indexOf((I + \"\").toLowerCase()) > -1))\n      throw new H(I);\n    return this._writableState.defaultEncoding = I, this;\n  }, Object.defineProperty(D.prototype, \"writableBuffer\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._writableState && this._writableState.getBuffer();\n    }\n  });\n  function M(S, I, $) {\n    return !S.objectMode && S.decodeStrings !== !1 && typeof I == \"string\" && (I = c.from(I, $)), I;\n  }\n  Object.defineProperty(D.prototype, \"writableHighWaterMark\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._writableState.highWaterMark;\n    }\n  });\n  function p(S, I, $, K, ae, j) {\n    if (!$) {\n      var P = M(I, K, ae);\n      K !== P && ($ = !0, ae = \"buffer\", K = P);\n    }\n    var ie = I.objectMode ? 1 : K.length;\n    I.length += ie;\n    var te = I.length < I.highWaterMark;\n    if (te || (I.needDrain = !0), I.writing || I.corked) {\n      var ce = I.lastBufferedRequest;\n      I.lastBufferedRequest = {\n        chunk: K,\n        encoding: ae,\n        isBuf: $,\n        callback: j,\n        next: null\n      }, ce ? ce.next = I.lastBufferedRequest : I.bufferedRequest = I.lastBufferedRequest, I.bufferedRequestCount += 1;\n    } else\n      s(S, I, !1, ie, K, ae, j);\n    return te;\n  }\n  function s(S, I, $, K, ae, j, P) {\n    I.writelen = K, I.writecb = P, I.writing = !0, I.sync = !0, I.destroyed ? I.onwrite(new q(\"write\")) : $ ? S._writev(ae, I.onwrite) : S._write(ae, j, I.onwrite), I.sync = !1;\n  }\n  function a(S, I, $, K, ae) {\n    --I.pendingcb, $ ? (process.nextTick(ae, K), process.nextTick(b, S, I), S._writableState.errorEmitted = !0, Z(S, K)) : (ae(K), S._writableState.errorEmitted = !0, Z(S, K), b(S, I));\n  }\n  function o(S) {\n    S.writing = !1, S.writecb = null, S.length -= S.writelen, S.writelen = 0;\n  }\n  function u(S, I) {\n    var $ = S._writableState, K = $.sync, ae = $.writecb;\n    if (typeof ae != \"function\")\n      throw new L();\n    if (o($), I)\n      a(S, $, K, I, ae);\n    else {\n      var j = l($) || S.destroyed;\n      !j && !$.corked && !$.bufferProcessing && $.bufferedRequest && g(S, $), K ? process.nextTick(h, S, $, j, ae) : h(S, $, j, ae);\n    }\n  }\n  function h(S, I, $, K) {\n    $ || v(S, I), I.pendingcb--, K(), b(S, I);\n  }\n  function v(S, I) {\n    I.length === 0 && I.needDrain && (I.needDrain = !1, S.emit(\"drain\"));\n  }\n  function g(S, I) {\n    I.bufferProcessing = !0;\n    var $ = I.bufferedRequest;\n    if (S._writev && $ && $.next) {\n      var K = I.bufferedRequestCount, ae = new Array(K), j = I.corkedRequestsFree;\n      j.entry = $;\n      for (var P = 0, ie = !0; $; )\n        ae[P] = $, $.isBuf || (ie = !1), $ = $.next, P += 1;\n      ae.allBuffers = ie, s(S, I, !0, I.length, ae, \"\", j.finish), I.pendingcb++, I.lastBufferedRequest = null, j.next ? (I.corkedRequestsFree = j.next, j.next = null) : I.corkedRequestsFree = new e(I), I.bufferedRequestCount = 0;\n    } else {\n      for (; $; ) {\n        var te = $.chunk, ce = $.encoding, ve = $.callback, le = I.objectMode ? 1 : te.length;\n        if (s(S, I, !1, le, te, ce, ve), $ = $.next, I.bufferedRequestCount--, I.writing)\n          break;\n      }\n      $ === null && (I.lastBufferedRequest = null);\n    }\n    I.bufferedRequest = $, I.bufferProcessing = !1;\n  }\n  D.prototype._write = function(S, I, $) {\n    $(new T(\"_write()\"));\n  }, D.prototype._writev = null, D.prototype.end = function(S, I, $) {\n    var K = this._writableState;\n    return typeof S == \"function\" ? ($ = S, S = null, I = null) : typeof I == \"function\" && ($ = I, I = null), S != null && this.write(S, I), K.corked && (K.corked = 1, this.uncork()), K.ending || E(this, K, $), this;\n  }, Object.defineProperty(D.prototype, \"writableLength\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._writableState.length;\n    }\n  });\n  function l(S) {\n    return S.ending && S.length === 0 && S.bufferedRequest === null && !S.finished && !S.writing;\n  }\n  function d(S, I) {\n    S._final(function($) {\n      I.pendingcb--, $ && Z(S, $), I.prefinished = !0, S.emit(\"prefinish\"), b(S, I);\n    });\n  }\n  function f(S, I) {\n    !I.prefinished && !I.finalCalled && (typeof S._final == \"function\" && !I.destroyed ? (I.pendingcb++, I.finalCalled = !0, process.nextTick(d, S, I)) : (I.prefinished = !0, S.emit(\"prefinish\")));\n  }\n  function b(S, I) {\n    var $ = l(I);\n    if ($ && (f(S, I), I.pendingcb === 0 && (I.finished = !0, S.emit(\"finish\"), I.autoDestroy))) {\n      var K = S._readableState;\n      (!K || K.autoDestroy && K.endEmitted) && S.destroy();\n    }\n    return $;\n  }\n  function E(S, I, $) {\n    I.ending = !0, b(S, I), $ && (I.finished ? process.nextTick($) : S.once(\"finish\", $)), I.ended = !0, S.writable = !1;\n  }\n  function y(S, I, $) {\n    var K = S.entry;\n    for (S.entry = null; K; ) {\n      var ae = K.callback;\n      I.pendingcb--, ae($), K = K.next;\n    }\n    I.corkedRequestsFree.next = S;\n  }\n  return Object.defineProperty(D.prototype, \"destroyed\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._writableState === void 0 ? !1 : this._writableState.destroyed;\n    },\n    set: function(I) {\n      this._writableState && (this._writableState.destroyed = I);\n    }\n  }), D.prototype.destroy = k.destroy, D.prototype._undestroy = k.undestroy, D.prototype._destroy = function(S, I) {\n    I(S);\n  }, vf;\n}\nvar xf, Lo;\nfunction Sa() {\n  if (Lo)\n    return xf;\n  Lo = 1;\n  var e = Object.keys || function(B) {\n    var z = [];\n    for (var C in B)\n      z.push(C);\n    return z;\n  };\n  xf = x;\n  var r = Ad(), t = kd();\n  nr(x, r);\n  for (var i = e(t.prototype), c = 0; c < i.length; c++) {\n    var n = i[c];\n    x.prototype[n] || (x.prototype[n] = t.prototype[n]);\n  }\n  function x(B) {\n    if (!(this instanceof x))\n      return new x(B);\n    r.call(this, B), t.call(this, B), this.allowHalfOpen = !0, B && (B.readable === !1 && (this.readable = !1), B.writable === !1 && (this.writable = !1), B.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once(\"end\", m)));\n  }\n  Object.defineProperty(x.prototype, \"writableHighWaterMark\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._writableState.highWaterMark;\n    }\n  }), Object.defineProperty(x.prototype, \"writableBuffer\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._writableState && this._writableState.getBuffer();\n    }\n  }), Object.defineProperty(x.prototype, \"writableLength\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._writableState.length;\n    }\n  });\n  function m() {\n    this._writableState.ended || process.nextTick(k, this);\n  }\n  function k(B) {\n    B.end();\n  }\n  return Object.defineProperty(x.prototype, \"destroyed\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;\n    },\n    set: function(z) {\n      this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = z, this._writableState.destroyed = z);\n    }\n  }), xf;\n}\nvar mf = {}, Uo;\nfunction $o() {\n  if (Uo)\n    return mf;\n  Uo = 1;\n  var e = br.Buffer, r = e.isEncoding || function(R) {\n    switch (R = \"\" + R, R && R.toLowerCase()) {\n      case \"hex\":\n      case \"utf8\":\n      case \"utf-8\":\n      case \"ascii\":\n      case \"binary\":\n      case \"base64\":\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n      case \"raw\":\n        return !0;\n      default:\n        return !1;\n    }\n  };\n  function t(R) {\n    if (!R)\n      return \"utf8\";\n    for (var U; ; )\n      switch (R) {\n        case \"utf8\":\n        case \"utf-8\":\n          return \"utf8\";\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return \"utf16le\";\n        case \"latin1\":\n        case \"binary\":\n          return \"latin1\";\n        case \"base64\":\n        case \"ascii\":\n        case \"hex\":\n          return R;\n        default:\n          if (U)\n            return;\n          R = (\"\" + R).toLowerCase(), U = !0;\n      }\n  }\n  function i(R) {\n    var U = t(R);\n    if (typeof U != \"string\" && (e.isEncoding === r || !r(R)))\n      throw new Error(\"Unknown encoding: \" + R);\n    return U || R;\n  }\n  mf.StringDecoder = c;\n  function c(R) {\n    this.encoding = i(R);\n    var U;\n    switch (this.encoding) {\n      case \"utf16le\":\n        this.text = C, this.end = F, U = 4;\n        break;\n      case \"utf8\":\n        this.fillLast = k, U = 4;\n        break;\n      case \"base64\":\n        this.text = T, this.end = L, U = 3;\n        break;\n      default:\n        this.write = O, this.end = q;\n        return;\n    }\n    this.lastNeed = 0, this.lastTotal = 0, this.lastChar = e.allocUnsafe(U);\n  }\n  c.prototype.write = function(R) {\n    if (R.length === 0)\n      return \"\";\n    var U, H;\n    if (this.lastNeed) {\n      if (U = this.fillLast(R), U === void 0)\n        return \"\";\n      H = this.lastNeed, this.lastNeed = 0;\n    } else\n      H = 0;\n    return H < R.length ? U ? U + this.text(R, H) : this.text(R, H) : U || \"\";\n  }, c.prototype.end = z, c.prototype.text = B, c.prototype.fillLast = function(R) {\n    if (this.lastNeed <= R.length)\n      return R.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    R.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, R.length), this.lastNeed -= R.length;\n  };\n  function n(R) {\n    return R <= 127 ? 0 : R >> 5 === 6 ? 2 : R >> 4 === 14 ? 3 : R >> 3 === 30 ? 4 : R >> 6 === 2 ? -1 : -2;\n  }\n  function x(R, U, H) {\n    var Z = U.length - 1;\n    if (Z < H)\n      return 0;\n    var W = n(U[Z]);\n    return W >= 0 ? (W > 0 && (R.lastNeed = W - 1), W) : --Z < H || W === -2 ? 0 : (W = n(U[Z]), W >= 0 ? (W > 0 && (R.lastNeed = W - 2), W) : --Z < H || W === -2 ? 0 : (W = n(U[Z]), W >= 0 ? (W > 0 && (W === 2 ? W = 0 : R.lastNeed = W - 3), W) : 0));\n  }\n  function m(R, U, H) {\n    if ((U[0] & 192) !== 128)\n      return R.lastNeed = 0, \"�\";\n    if (R.lastNeed > 1 && U.length > 1) {\n      if ((U[1] & 192) !== 128)\n        return R.lastNeed = 1, \"�\";\n      if (R.lastNeed > 2 && U.length > 2 && (U[2] & 192) !== 128)\n        return R.lastNeed = 2, \"�\";\n    }\n  }\n  function k(R) {\n    var U = this.lastTotal - this.lastNeed, H = m(this, R);\n    if (H !== void 0)\n      return H;\n    if (this.lastNeed <= R.length)\n      return R.copy(this.lastChar, U, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    R.copy(this.lastChar, U, 0, R.length), this.lastNeed -= R.length;\n  }\n  function B(R, U) {\n    var H = x(this, R, U);\n    if (!this.lastNeed)\n      return R.toString(\"utf8\", U);\n    this.lastTotal = H;\n    var Z = R.length - (H - this.lastNeed);\n    return R.copy(this.lastChar, 0, Z), R.toString(\"utf8\", U, Z);\n  }\n  function z(R) {\n    var U = R && R.length ? this.write(R) : \"\";\n    return this.lastNeed ? U + \"�\" : U;\n  }\n  function C(R, U) {\n    if ((R.length - U) % 2 === 0) {\n      var H = R.toString(\"utf16le\", U);\n      if (H) {\n        var Z = H.charCodeAt(H.length - 1);\n        if (Z >= 55296 && Z <= 56319)\n          return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = R[R.length - 2], this.lastChar[1] = R[R.length - 1], H.slice(0, -1);\n      }\n      return H;\n    }\n    return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = R[R.length - 1], R.toString(\"utf16le\", U, R.length - 1);\n  }\n  function F(R) {\n    var U = R && R.length ? this.write(R) : \"\";\n    if (this.lastNeed) {\n      var H = this.lastTotal - this.lastNeed;\n      return U + this.lastChar.toString(\"utf16le\", 0, H);\n    }\n    return U;\n  }\n  function T(R, U) {\n    var H = (R.length - U) % 3;\n    return H === 0 ? R.toString(\"base64\", U) : (this.lastNeed = 3 - H, this.lastTotal = 3, H === 1 ? this.lastChar[0] = R[R.length - 1] : (this.lastChar[0] = R[R.length - 2], this.lastChar[1] = R[R.length - 1]), R.toString(\"base64\", U, R.length - H));\n  }\n  function L(R) {\n    var U = R && R.length ? this.write(R) : \"\";\n    return this.lastNeed ? U + this.lastChar.toString(\"base64\", 0, 3 - this.lastNeed) : U;\n  }\n  function O(R) {\n    return R.toString(this.encoding);\n  }\n  function q(R) {\n    return R && R.length ? this.write(R) : \"\";\n  }\n  return mf;\n}\nvar Do = la.codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction B1(e) {\n  var r = !1;\n  return function() {\n    if (!r) {\n      r = !0;\n      for (var t = arguments.length, i = new Array(t), c = 0; c < t; c++)\n        i[c] = arguments[c];\n      e.apply(this, i);\n    }\n  };\n}\nfunction z1() {\n}\nfunction I1(e) {\n  return e.setHeader && typeof e.abort == \"function\";\n}\nfunction Ed(e, r, t) {\n  if (typeof r == \"function\")\n    return Ed(e, null, r);\n  r || (r = {}), t = B1(t || z1);\n  var i = r.readable || r.readable !== !1 && e.readable, c = r.writable || r.writable !== !1 && e.writable, n = function() {\n    e.writable || m();\n  }, x = e._writableState && e._writableState.finished, m = function() {\n    c = !1, x = !0, i || t.call(e);\n  }, k = e._readableState && e._readableState.endEmitted, B = function() {\n    i = !1, k = !0, c || t.call(e);\n  }, z = function(L) {\n    t.call(e, L);\n  }, C = function() {\n    var L;\n    if (i && !k)\n      return (!e._readableState || !e._readableState.ended) && (L = new Do()), t.call(e, L);\n    if (c && !x)\n      return (!e._writableState || !e._writableState.ended) && (L = new Do()), t.call(e, L);\n  }, F = function() {\n    e.req.on(\"finish\", m);\n  };\n  return I1(e) ? (e.on(\"complete\", m), e.on(\"abort\", C), e.req ? F() : e.on(\"request\", F)) : c && !e._writableState && (e.on(\"end\", n), e.on(\"close\", n)), e.on(\"end\", B), e.on(\"finish\", m), r.error !== !1 && e.on(\"error\", z), e.on(\"close\", C), function() {\n    e.removeListener(\"complete\", m), e.removeListener(\"abort\", C), e.removeListener(\"request\", F), e.req && e.req.removeListener(\"finish\", m), e.removeListener(\"end\", n), e.removeListener(\"close\", n), e.removeListener(\"finish\", m), e.removeListener(\"end\", B), e.removeListener(\"error\", z), e.removeListener(\"close\", C);\n  };\n}\nvar R0 = Ed, gf, Ko;\nfunction R1() {\n  if (Ko)\n    return gf;\n  Ko = 1;\n  var e;\n  function r(R, U, H) {\n    return U in R ? Object.defineProperty(R, U, { value: H, enumerable: !0, configurable: !0, writable: !0 }) : R[U] = H, R;\n  }\n  var t = R0, i = Symbol(\"lastResolve\"), c = Symbol(\"lastReject\"), n = Symbol(\"error\"), x = Symbol(\"ended\"), m = Symbol(\"lastPromise\"), k = Symbol(\"handlePromise\"), B = Symbol(\"stream\");\n  function z(R, U) {\n    return {\n      value: R,\n      done: U\n    };\n  }\n  function C(R) {\n    var U = R[i];\n    if (U !== null) {\n      var H = R[B].read();\n      H !== null && (R[m] = null, R[i] = null, R[c] = null, U(z(H, !1)));\n    }\n  }\n  function F(R) {\n    process.nextTick(C, R);\n  }\n  function T(R, U) {\n    return function(H, Z) {\n      R.then(function() {\n        if (U[x]) {\n          H(z(void 0, !0));\n          return;\n        }\n        U[k](H, Z);\n      }, Z);\n    };\n  }\n  var L = Object.getPrototypeOf(function() {\n  }), O = Object.setPrototypeOf((e = {\n    get stream() {\n      return this[B];\n    },\n    next: function() {\n      var U = this, H = this[n];\n      if (H !== null)\n        return Promise.reject(H);\n      if (this[x])\n        return Promise.resolve(z(void 0, !0));\n      if (this[B].destroyed)\n        return new Promise(function(ne, D) {\n          process.nextTick(function() {\n            U[n] ? D(U[n]) : ne(z(void 0, !0));\n          });\n        });\n      var Z = this[m], W;\n      if (Z)\n        W = new Promise(T(Z, this));\n      else {\n        var Y = this[B].read();\n        if (Y !== null)\n          return Promise.resolve(z(Y, !1));\n        W = new Promise(this[k]);\n      }\n      return this[m] = W, W;\n    }\n  }, r(e, Symbol.asyncIterator, function() {\n    return this;\n  }), r(e, \"return\", function() {\n    var U = this;\n    return new Promise(function(H, Z) {\n      U[B].destroy(null, function(W) {\n        if (W) {\n          Z(W);\n          return;\n        }\n        H(z(void 0, !0));\n      });\n    });\n  }), e), L), q = function(U) {\n    var H, Z = Object.create(O, (H = {}, r(H, B, {\n      value: U,\n      writable: !0\n    }), r(H, i, {\n      value: null,\n      writable: !0\n    }), r(H, c, {\n      value: null,\n      writable: !0\n    }), r(H, n, {\n      value: null,\n      writable: !0\n    }), r(H, x, {\n      value: U._readableState.endEmitted,\n      writable: !0\n    }), r(H, k, {\n      value: function(Y, ne) {\n        var D = Z[B].read();\n        D ? (Z[m] = null, Z[i] = null, Z[c] = null, Y(z(D, !1))) : (Z[i] = Y, Z[c] = ne);\n      },\n      writable: !0\n    }), H));\n    return Z[m] = null, t(U, function(W) {\n      if (W && W.code !== \"ERR_STREAM_PREMATURE_CLOSE\") {\n        var Y = Z[c];\n        Y !== null && (Z[m] = null, Z[i] = null, Z[c] = null, Y(W)), Z[n] = W;\n        return;\n      }\n      var ne = Z[i];\n      ne !== null && (Z[m] = null, Z[i] = null, Z[c] = null, ne(z(void 0, !0))), Z[x] = !0;\n    }), U.on(\"readable\", F.bind(null, Z)), Z;\n  };\n  return gf = q, gf;\n}\nvar yf, Ho;\nfunction T1() {\n  return Ho || (Ho = 1, yf = function() {\n    throw new Error(\"Readable.from is not available in the browser\");\n  }), yf;\n}\nvar wf, Vo;\nfunction Ad() {\n  if (Vo)\n    return wf;\n  Vo = 1, wf = V;\n  var e;\n  V.ReadableState = D, dt.EventEmitter;\n  var r = function(P, ie) {\n    return P.listeners(ie).length;\n  }, t = wd, i = Ht.Buffer, c = be.Uint8Array || function() {\n  };\n  function n(j) {\n    return i.from(j);\n  }\n  function x(j) {\n    return i.isBuffer(j) || j instanceof c;\n  }\n  var m = dt, k;\n  m && m.debuglog ? k = m.debuglog(\"stream\") : k = function() {\n  };\n  var B = p1(), z = _d, C = Sd, F = C.getHighWaterMark, T = la.codes, L = T.ERR_INVALID_ARG_TYPE, O = T.ERR_STREAM_PUSH_AFTER_EOF, q = T.ERR_METHOD_NOT_IMPLEMENTED, R = T.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, U, H, Z;\n  nr(V, t);\n  var W = z.errorOrDestroy, Y = [\"error\", \"close\", \"destroy\", \"pause\", \"resume\"];\n  function ne(j, P, ie) {\n    if (typeof j.prependListener == \"function\")\n      return j.prependListener(P, ie);\n    !j._events || !j._events[P] ? j.on(P, ie) : Array.isArray(j._events[P]) ? j._events[P].unshift(ie) : j._events[P] = [ie, j._events[P]];\n  }\n  function D(j, P, ie) {\n    e = e || Sa(), j = j || {}, typeof ie != \"boolean\" && (ie = P instanceof e), this.objectMode = !!j.objectMode, ie && (this.objectMode = this.objectMode || !!j.readableObjectMode), this.highWaterMark = F(this, j, \"readableHighWaterMark\", ie), this.buffer = new B(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = j.emitClose !== !1, this.autoDestroy = !!j.autoDestroy, this.destroyed = !1, this.defaultEncoding = j.defaultEncoding || \"utf8\", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, j.encoding && (U || (U = $o().StringDecoder), this.decoder = new U(j.encoding), this.encoding = j.encoding);\n  }\n  function V(j) {\n    if (e = e || Sa(), !(this instanceof V))\n      return new V(j);\n    var P = this instanceof e;\n    this._readableState = new D(j, this, P), this.readable = !0, j && (typeof j.read == \"function\" && (this._read = j.read), typeof j.destroy == \"function\" && (this._destroy = j.destroy)), t.call(this);\n  }\n  Object.defineProperty(V.prototype, \"destroyed\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._readableState === void 0 ? !1 : this._readableState.destroyed;\n    },\n    set: function(P) {\n      this._readableState && (this._readableState.destroyed = P);\n    }\n  }), V.prototype.destroy = z.destroy, V.prototype._undestroy = z.undestroy, V.prototype._destroy = function(j, P) {\n    P(j);\n  }, V.prototype.push = function(j, P) {\n    var ie = this._readableState, te;\n    return ie.objectMode ? te = !0 : typeof j == \"string\" && (P = P || ie.defaultEncoding, P !== ie.encoding && (j = i.from(j, P), P = \"\"), te = !0), G(this, j, P, !1, te);\n  }, V.prototype.unshift = function(j) {\n    return G(this, j, null, !0, !1);\n  };\n  function G(j, P, ie, te, ce) {\n    k(\"readableAddChunk\", P);\n    var ve = j._readableState;\n    if (P === null)\n      ve.reading = !1, u(j, ve);\n    else {\n      var le;\n      if (ce || (le = p(ve, P)), le)\n        W(j, le);\n      else if (ve.objectMode || P && P.length > 0)\n        if (typeof P != \"string\" && !ve.objectMode && Object.getPrototypeOf(P) !== i.prototype && (P = n(P)), te)\n          ve.endEmitted ? W(j, new R()) : M(j, ve, P, !0);\n        else if (ve.ended)\n          W(j, new O());\n        else {\n          if (ve.destroyed)\n            return !1;\n          ve.reading = !1, ve.decoder && !ie ? (P = ve.decoder.write(P), ve.objectMode || P.length !== 0 ? M(j, ve, P, !1) : g(j, ve)) : M(j, ve, P, !1);\n        }\n      else\n        te || (ve.reading = !1, g(j, ve));\n    }\n    return !ve.ended && (ve.length < ve.highWaterMark || ve.length === 0);\n  }\n  function M(j, P, ie, te) {\n    P.flowing && P.length === 0 && !P.sync ? (P.awaitDrain = 0, j.emit(\"data\", ie)) : (P.length += P.objectMode ? 1 : ie.length, te ? P.buffer.unshift(ie) : P.buffer.push(ie), P.needReadable && h(j)), g(j, P);\n  }\n  function p(j, P) {\n    var ie;\n    return !x(P) && typeof P != \"string\" && P !== void 0 && !j.objectMode && (ie = new L(\"chunk\", [\"string\", \"Buffer\", \"Uint8Array\"], P)), ie;\n  }\n  V.prototype.isPaused = function() {\n    return this._readableState.flowing === !1;\n  }, V.prototype.setEncoding = function(j) {\n    U || (U = $o().StringDecoder);\n    var P = new U(j);\n    this._readableState.decoder = P, this._readableState.encoding = this._readableState.decoder.encoding;\n    for (var ie = this._readableState.buffer.head, te = \"\"; ie !== null; )\n      te += P.write(ie.data), ie = ie.next;\n    return this._readableState.buffer.clear(), te !== \"\" && this._readableState.buffer.push(te), this._readableState.length = te.length, this;\n  };\n  var s = 1073741824;\n  function a(j) {\n    return j >= s ? j = s : (j--, j |= j >>> 1, j |= j >>> 2, j |= j >>> 4, j |= j >>> 8, j |= j >>> 16, j++), j;\n  }\n  function o(j, P) {\n    return j <= 0 || P.length === 0 && P.ended ? 0 : P.objectMode ? 1 : j !== j ? P.flowing && P.length ? P.buffer.head.data.length : P.length : (j > P.highWaterMark && (P.highWaterMark = a(j)), j <= P.length ? j : P.ended ? P.length : (P.needReadable = !0, 0));\n  }\n  V.prototype.read = function(j) {\n    k(\"read\", j), j = parseInt(j, 10);\n    var P = this._readableState, ie = j;\n    if (j !== 0 && (P.emittedReadable = !1), j === 0 && P.needReadable && ((P.highWaterMark !== 0 ? P.length >= P.highWaterMark : P.length > 0) || P.ended))\n      return k(\"read: emitReadable\", P.length, P.ended), P.length === 0 && P.ended ? $(this) : h(this), null;\n    if (j = o(j, P), j === 0 && P.ended)\n      return P.length === 0 && $(this), null;\n    var te = P.needReadable;\n    k(\"need readable\", te), (P.length === 0 || P.length - j < P.highWaterMark) && (te = !0, k(\"length less than watermark\", te)), P.ended || P.reading ? (te = !1, k(\"reading or ended\", te)) : te && (k(\"do read\"), P.reading = !0, P.sync = !0, P.length === 0 && (P.needReadable = !0), this._read(P.highWaterMark), P.sync = !1, P.reading || (j = o(ie, P)));\n    var ce;\n    return j > 0 ? ce = I(j, P) : ce = null, ce === null ? (P.needReadable = P.length <= P.highWaterMark, j = 0) : (P.length -= j, P.awaitDrain = 0), P.length === 0 && (P.ended || (P.needReadable = !0), ie !== j && P.ended && $(this)), ce !== null && this.emit(\"data\", ce), ce;\n  };\n  function u(j, P) {\n    if (k(\"onEofChunk\"), !P.ended) {\n      if (P.decoder) {\n        var ie = P.decoder.end();\n        ie && ie.length && (P.buffer.push(ie), P.length += P.objectMode ? 1 : ie.length);\n      }\n      P.ended = !0, P.sync ? h(j) : (P.needReadable = !1, P.emittedReadable || (P.emittedReadable = !0, v(j)));\n    }\n  }\n  function h(j) {\n    var P = j._readableState;\n    k(\"emitReadable\", P.needReadable, P.emittedReadable), P.needReadable = !1, P.emittedReadable || (k(\"emitReadable\", P.flowing), P.emittedReadable = !0, process.nextTick(v, j));\n  }\n  function v(j) {\n    var P = j._readableState;\n    k(\"emitReadable_\", P.destroyed, P.length, P.ended), !P.destroyed && (P.length || P.ended) && (j.emit(\"readable\"), P.emittedReadable = !1), P.needReadable = !P.flowing && !P.ended && P.length <= P.highWaterMark, S(j);\n  }\n  function g(j, P) {\n    P.readingMore || (P.readingMore = !0, process.nextTick(l, j, P));\n  }\n  function l(j, P) {\n    for (; !P.reading && !P.ended && (P.length < P.highWaterMark || P.flowing && P.length === 0); ) {\n      var ie = P.length;\n      if (k(\"maybeReadMore read 0\"), j.read(0), ie === P.length)\n        break;\n    }\n    P.readingMore = !1;\n  }\n  V.prototype._read = function(j) {\n    W(this, new q(\"_read()\"));\n  }, V.prototype.pipe = function(j, P) {\n    var ie = this, te = this._readableState;\n    switch (te.pipesCount) {\n      case 0:\n        te.pipes = j;\n        break;\n      case 1:\n        te.pipes = [te.pipes, j];\n        break;\n      default:\n        te.pipes.push(j);\n        break;\n    }\n    te.pipesCount += 1, k(\"pipe count=%d opts=%j\", te.pipesCount, P);\n    var ce = (!P || P.end !== !1) && j !== process.stdout && j !== process.stderr, ve = ce ? he : de;\n    te.endEmitted ? process.nextTick(ve) : ie.once(\"end\", ve), j.on(\"unpipe\", le);\n    function le(A, w) {\n      k(\"onunpipe\"), A === ie && w && w.hasUnpiped === !1 && (w.hasUnpiped = !0, ge());\n    }\n    function he() {\n      k(\"onend\"), j.end();\n    }\n    var fe = d(ie);\n    j.on(\"drain\", fe);\n    var ze = !1;\n    function ge() {\n      k(\"cleanup\"), j.removeListener(\"close\", oe), j.removeListener(\"finish\", se), j.removeListener(\"drain\", fe), j.removeListener(\"error\", re), j.removeListener(\"unpipe\", le), ie.removeListener(\"end\", he), ie.removeListener(\"end\", de), ie.removeListener(\"data\", Q), ze = !0, te.awaitDrain && (!j._writableState || j._writableState.needDrain) && fe();\n    }\n    ie.on(\"data\", Q);\n    function Q(A) {\n      k(\"ondata\");\n      var w = j.write(A);\n      k(\"dest.write\", w), w === !1 && ((te.pipesCount === 1 && te.pipes === j || te.pipesCount > 1 && ae(te.pipes, j) !== -1) && !ze && (k(\"false write response, pause\", te.awaitDrain), te.awaitDrain++), ie.pause());\n    }\n    function re(A) {\n      k(\"onerror\", A), de(), j.removeListener(\"error\", re), r(j, \"error\") === 0 && W(j, A);\n    }\n    ne(j, \"error\", re);\n    function oe() {\n      j.removeListener(\"finish\", se), de();\n    }\n    j.once(\"close\", oe);\n    function se() {\n      k(\"onfinish\"), j.removeListener(\"close\", oe), de();\n    }\n    j.once(\"finish\", se);\n    function de() {\n      k(\"unpipe\"), ie.unpipe(j);\n    }\n    return j.emit(\"pipe\", ie), te.flowing || (k(\"pipe resume\"), ie.resume()), j;\n  };\n  function d(j) {\n    return function() {\n      var ie = j._readableState;\n      k(\"pipeOnDrain\", ie.awaitDrain), ie.awaitDrain && ie.awaitDrain--, ie.awaitDrain === 0 && r(j, \"data\") && (ie.flowing = !0, S(j));\n    };\n  }\n  V.prototype.unpipe = function(j) {\n    var P = this._readableState, ie = {\n      hasUnpiped: !1\n    };\n    if (P.pipesCount === 0)\n      return this;\n    if (P.pipesCount === 1)\n      return j && j !== P.pipes ? this : (j || (j = P.pipes), P.pipes = null, P.pipesCount = 0, P.flowing = !1, j && j.emit(\"unpipe\", this, ie), this);\n    if (!j) {\n      var te = P.pipes, ce = P.pipesCount;\n      P.pipes = null, P.pipesCount = 0, P.flowing = !1;\n      for (var ve = 0; ve < ce; ve++)\n        te[ve].emit(\"unpipe\", this, {\n          hasUnpiped: !1\n        });\n      return this;\n    }\n    var le = ae(P.pipes, j);\n    return le === -1 ? this : (P.pipes.splice(le, 1), P.pipesCount -= 1, P.pipesCount === 1 && (P.pipes = P.pipes[0]), j.emit(\"unpipe\", this, ie), this);\n  }, V.prototype.on = function(j, P) {\n    var ie = t.prototype.on.call(this, j, P), te = this._readableState;\n    return j === \"data\" ? (te.readableListening = this.listenerCount(\"readable\") > 0, te.flowing !== !1 && this.resume()) : j === \"readable\" && !te.endEmitted && !te.readableListening && (te.readableListening = te.needReadable = !0, te.flowing = !1, te.emittedReadable = !1, k(\"on readable\", te.length, te.reading), te.length ? h(this) : te.reading || process.nextTick(b, this)), ie;\n  }, V.prototype.addListener = V.prototype.on, V.prototype.removeListener = function(j, P) {\n    var ie = t.prototype.removeListener.call(this, j, P);\n    return j === \"readable\" && process.nextTick(f, this), ie;\n  }, V.prototype.removeAllListeners = function(j) {\n    var P = t.prototype.removeAllListeners.apply(this, arguments);\n    return (j === \"readable\" || j === void 0) && process.nextTick(f, this), P;\n  };\n  function f(j) {\n    var P = j._readableState;\n    P.readableListening = j.listenerCount(\"readable\") > 0, P.resumeScheduled && !P.paused ? P.flowing = !0 : j.listenerCount(\"data\") > 0 && j.resume();\n  }\n  function b(j) {\n    k(\"readable nexttick read 0\"), j.read(0);\n  }\n  V.prototype.resume = function() {\n    var j = this._readableState;\n    return j.flowing || (k(\"resume\"), j.flowing = !j.readableListening, E(this, j)), j.paused = !1, this;\n  };\n  function E(j, P) {\n    P.resumeScheduled || (P.resumeScheduled = !0, process.nextTick(y, j, P));\n  }\n  function y(j, P) {\n    k(\"resume\", P.reading), P.reading || j.read(0), P.resumeScheduled = !1, j.emit(\"resume\"), S(j), P.flowing && !P.reading && j.read(0);\n  }\n  V.prototype.pause = function() {\n    return k(\"call pause flowing=%j\", this._readableState.flowing), this._readableState.flowing !== !1 && (k(\"pause\"), this._readableState.flowing = !1, this.emit(\"pause\")), this._readableState.paused = !0, this;\n  };\n  function S(j) {\n    var P = j._readableState;\n    for (k(\"flow\", P.flowing); P.flowing && j.read() !== null; )\n      ;\n  }\n  V.prototype.wrap = function(j) {\n    var P = this, ie = this._readableState, te = !1;\n    j.on(\"end\", function() {\n      if (k(\"wrapped end\"), ie.decoder && !ie.ended) {\n        var le = ie.decoder.end();\n        le && le.length && P.push(le);\n      }\n      P.push(null);\n    }), j.on(\"data\", function(le) {\n      if (k(\"wrapped data\"), ie.decoder && (le = ie.decoder.write(le)), !(ie.objectMode && le == null) && !(!ie.objectMode && (!le || !le.length))) {\n        var he = P.push(le);\n        he || (te = !0, j.pause());\n      }\n    });\n    for (var ce in j)\n      this[ce] === void 0 && typeof j[ce] == \"function\" && (this[ce] = function(he) {\n        return function() {\n          return j[he].apply(j, arguments);\n        };\n      }(ce));\n    for (var ve = 0; ve < Y.length; ve++)\n      j.on(Y[ve], this.emit.bind(this, Y[ve]));\n    return this._read = function(le) {\n      k(\"wrapped _read\", le), te && (te = !1, j.resume());\n    }, this;\n  }, typeof Symbol == \"function\" && (V.prototype[Symbol.asyncIterator] = function() {\n    return H === void 0 && (H = R1()), H(this);\n  }), Object.defineProperty(V.prototype, \"readableHighWaterMark\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\n  }), Object.defineProperty(V.prototype, \"readableBuffer\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._readableState && this._readableState.buffer;\n    }\n  }), Object.defineProperty(V.prototype, \"readableFlowing\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._readableState.flowing;\n    },\n    set: function(P) {\n      this._readableState && (this._readableState.flowing = P);\n    }\n  }), V._fromList = I, Object.defineProperty(V.prototype, \"readableLength\", {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: !1,\n    get: function() {\n      return this._readableState.length;\n    }\n  });\n  function I(j, P) {\n    if (P.length === 0)\n      return null;\n    var ie;\n    return P.objectMode ? ie = P.buffer.shift() : !j || j >= P.length ? (P.decoder ? ie = P.buffer.join(\"\") : P.buffer.length === 1 ? ie = P.buffer.first() : ie = P.buffer.concat(P.length), P.buffer.clear()) : ie = P.buffer.consume(j, P.decoder), ie;\n  }\n  function $(j) {\n    var P = j._readableState;\n    k(\"endReadable\", P.endEmitted), P.endEmitted || (P.ended = !0, process.nextTick(K, P, j));\n  }\n  function K(j, P) {\n    if (k(\"endReadableNT\", j.endEmitted, j.length), !j.endEmitted && j.length === 0 && (j.endEmitted = !0, P.readable = !1, P.emit(\"end\"), j.autoDestroy)) {\n      var ie = P._writableState;\n      (!ie || ie.autoDestroy && ie.finished) && P.destroy();\n    }\n  }\n  typeof Symbol == \"function\" && (V.from = function(j, P) {\n    return Z === void 0 && (Z = T1()), Z(V, j, P);\n  });\n  function ae(j, P) {\n    for (var ie = 0, te = j.length; ie < te; ie++)\n      if (j[ie] === P)\n        return ie;\n    return -1;\n  }\n  return wf;\n}\nvar Bd = jt, tn = la.codes, j1 = tn.ERR_METHOD_NOT_IMPLEMENTED, P1 = tn.ERR_MULTIPLE_CALLBACK, O1 = tn.ERR_TRANSFORM_ALREADY_TRANSFORMING, q1 = tn.ERR_TRANSFORM_WITH_LENGTH_0, an = Sa();\nnr(jt, an);\nfunction N1(e, r) {\n  var t = this._transformState;\n  t.transforming = !1;\n  var i = t.writecb;\n  if (i === null)\n    return this.emit(\"error\", new P1());\n  t.writechunk = null, t.writecb = null, r != null && this.push(r), i(e);\n  var c = this._readableState;\n  c.reading = !1, (c.needReadable || c.length < c.highWaterMark) && this._read(c.highWaterMark);\n}\nfunction jt(e) {\n  if (!(this instanceof jt))\n    return new jt(e);\n  an.call(this, e), this._transformState = {\n    afterTransform: N1.bind(this),\n    needTransform: !1,\n    transforming: !1,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }, this._readableState.needReadable = !0, this._readableState.sync = !1, e && (typeof e.transform == \"function\" && (this._transform = e.transform), typeof e.flush == \"function\" && (this._flush = e.flush)), this.on(\"prefinish\", F1);\n}\nfunction F1() {\n  var e = this;\n  typeof this._flush == \"function\" && !this._readableState.destroyed ? this._flush(function(r, t) {\n    Wo(e, r, t);\n  }) : Wo(this, null, null);\n}\njt.prototype.push = function(e, r) {\n  return this._transformState.needTransform = !1, an.prototype.push.call(this, e, r);\n};\njt.prototype._transform = function(e, r, t) {\n  t(new j1(\"_transform()\"));\n};\njt.prototype._write = function(e, r, t) {\n  var i = this._transformState;\n  if (i.writecb = t, i.writechunk = e, i.writeencoding = r, !i.transforming) {\n    var c = this._readableState;\n    (i.needTransform || c.needReadable || c.length < c.highWaterMark) && this._read(c.highWaterMark);\n  }\n};\njt.prototype._read = function(e) {\n  var r = this._transformState;\n  r.writechunk !== null && !r.transforming ? (r.transforming = !0, this._transform(r.writechunk, r.writeencoding, r.afterTransform)) : r.needTransform = !0;\n};\njt.prototype._destroy = function(e, r) {\n  an.prototype._destroy.call(this, e, function(t) {\n    r(t);\n  });\n};\nfunction Wo(e, r, t) {\n  if (r)\n    return e.emit(\"error\", r);\n  if (t != null && e.push(t), e._writableState.length)\n    throw new q1();\n  if (e._transformState.transforming)\n    throw new O1();\n  return e.push(null);\n}\nvar C1 = Xa, zd = Bd;\nnr(Xa, zd);\nfunction Xa(e) {\n  if (!(this instanceof Xa))\n    return new Xa(e);\n  zd.call(this, e);\n}\nXa.prototype._transform = function(e, r, t) {\n  t(null, e);\n};\nvar _f;\nfunction L1(e) {\n  var r = !1;\n  return function() {\n    r || (r = !0, e.apply(void 0, arguments));\n  };\n}\nvar Id = la.codes, U1 = Id.ERR_MISSING_ARGS, $1 = Id.ERR_STREAM_DESTROYED;\nfunction Go(e) {\n  if (e)\n    throw e;\n}\nfunction D1(e) {\n  return e.setHeader && typeof e.abort == \"function\";\n}\nfunction K1(e, r, t, i) {\n  i = L1(i);\n  var c = !1;\n  e.on(\"close\", function() {\n    c = !0;\n  }), _f === void 0 && (_f = R0), _f(e, {\n    readable: r,\n    writable: t\n  }, function(x) {\n    if (x)\n      return i(x);\n    c = !0, i();\n  });\n  var n = !1;\n  return function(x) {\n    if (!c && !n) {\n      if (n = !0, D1(e))\n        return e.abort();\n      if (typeof e.destroy == \"function\")\n        return e.destroy();\n      i(x || new $1(\"pipe\"));\n    }\n  };\n}\nfunction Zo(e) {\n  e();\n}\nfunction H1(e, r) {\n  return e.pipe(r);\n}\nfunction V1(e) {\n  return !e.length || typeof e[e.length - 1] != \"function\" ? Go : e.pop();\n}\nfunction W1() {\n  for (var e = arguments.length, r = new Array(e), t = 0; t < e; t++)\n    r[t] = arguments[t];\n  var i = V1(r);\n  if (Array.isArray(r[0]) && (r = r[0]), r.length < 2)\n    throw new U1(\"streams\");\n  var c, n = r.map(function(x, m) {\n    var k = m < r.length - 1, B = m > 0;\n    return K1(x, k, B, function(z) {\n      c || (c = z), z && n.forEach(Zo), !k && (n.forEach(Zo), i(c));\n    });\n  });\n  return r.reduce(H1);\n}\nvar G1 = W1;\n(function(e, r) {\n  r = e.exports = Ad(), r.Stream = r, r.Readable = r, r.Writable = kd(), r.Duplex = Sa(), r.Transform = Bd, r.PassThrough = C1, r.finished = R0, r.pipeline = G1;\n})(Yf, Yf.exports);\nvar T0 = Yf.exports, Pi = br.Buffer, Rd = T0.Transform, Z1 = nr;\nfunction J1(e, r) {\n  if (!Pi.isBuffer(e) && typeof e != \"string\")\n    throw new TypeError(r + \" must be a string or a buffer\");\n}\nfunction Vt(e) {\n  Rd.call(this), this._block = Pi.allocUnsafe(e), this._blockSize = e, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = !1;\n}\nZ1(Vt, Rd);\nVt.prototype._transform = function(e, r, t) {\n  var i = null;\n  try {\n    this.update(e, r);\n  } catch (c) {\n    i = c;\n  }\n  t(i);\n};\nVt.prototype._flush = function(e) {\n  var r = null;\n  try {\n    this.push(this.digest());\n  } catch (t) {\n    r = t;\n  }\n  e(r);\n};\nVt.prototype.update = function(e, r) {\n  if (J1(e, \"Data\"), this._finalized)\n    throw new Error(\"Digest already called\");\n  Pi.isBuffer(e) || (e = Pi.from(e, r));\n  for (var t = this._block, i = 0; this._blockOffset + e.length - i >= this._blockSize; ) {\n    for (var c = this._blockOffset; c < this._blockSize; )\n      t[c++] = e[i++];\n    this._update(), this._blockOffset = 0;\n  }\n  for (; i < e.length; )\n    t[this._blockOffset++] = e[i++];\n  for (var n = 0, x = e.length * 8; x > 0; ++n)\n    this._length[n] += x, x = this._length[n] / 4294967296 | 0, x > 0 && (this._length[n] -= 4294967296 * x);\n  return this;\n};\nVt.prototype._update = function() {\n  throw new Error(\"_update is not implemented\");\n};\nVt.prototype.digest = function(e) {\n  if (this._finalized)\n    throw new Error(\"Digest already called\");\n  this._finalized = !0;\n  var r = this._digest();\n  e !== void 0 && (r = r.toString(e)), this._block.fill(0), this._blockOffset = 0;\n  for (var t = 0; t < 4; ++t)\n    this._length[t] = 0;\n  return r;\n};\nVt.prototype._digest = function() {\n  throw new Error(\"_digest is not implemented\");\n};\nvar Td = Vt, Y1 = nr, jd = Td, X1 = br.Buffer, Q1 = new Array(16);\nfunction nn() {\n  jd.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;\n}\nY1(nn, jd);\nnn.prototype._update = function() {\n  for (var e = Q1, r = 0; r < 16; ++r)\n    e[r] = this._block.readInt32LE(r * 4);\n  var t = this._a, i = this._b, c = this._c, n = this._d;\n  t = yr(t, i, c, n, e[0], 3614090360, 7), n = yr(n, t, i, c, e[1], 3905402710, 12), c = yr(c, n, t, i, e[2], 606105819, 17), i = yr(i, c, n, t, e[3], 3250441966, 22), t = yr(t, i, c, n, e[4], 4118548399, 7), n = yr(n, t, i, c, e[5], 1200080426, 12), c = yr(c, n, t, i, e[6], 2821735955, 17), i = yr(i, c, n, t, e[7], 4249261313, 22), t = yr(t, i, c, n, e[8], 1770035416, 7), n = yr(n, t, i, c, e[9], 2336552879, 12), c = yr(c, n, t, i, e[10], 4294925233, 17), i = yr(i, c, n, t, e[11], 2304563134, 22), t = yr(t, i, c, n, e[12], 1804603682, 7), n = yr(n, t, i, c, e[13], 4254626195, 12), c = yr(c, n, t, i, e[14], 2792965006, 17), i = yr(i, c, n, t, e[15], 1236535329, 22), t = wr(t, i, c, n, e[1], 4129170786, 5), n = wr(n, t, i, c, e[6], 3225465664, 9), c = wr(c, n, t, i, e[11], 643717713, 14), i = wr(i, c, n, t, e[0], 3921069994, 20), t = wr(t, i, c, n, e[5], 3593408605, 5), n = wr(n, t, i, c, e[10], 38016083, 9), c = wr(c, n, t, i, e[15], 3634488961, 14), i = wr(i, c, n, t, e[4], 3889429448, 20), t = wr(t, i, c, n, e[9], 568446438, 5), n = wr(n, t, i, c, e[14], 3275163606, 9), c = wr(c, n, t, i, e[3], 4107603335, 14), i = wr(i, c, n, t, e[8], 1163531501, 20), t = wr(t, i, c, n, e[13], 2850285829, 5), n = wr(n, t, i, c, e[2], 4243563512, 9), c = wr(c, n, t, i, e[7], 1735328473, 14), i = wr(i, c, n, t, e[12], 2368359562, 20), t = _r(t, i, c, n, e[5], 4294588738, 4), n = _r(n, t, i, c, e[8], 2272392833, 11), c = _r(c, n, t, i, e[11], 1839030562, 16), i = _r(i, c, n, t, e[14], 4259657740, 23), t = _r(t, i, c, n, e[1], 2763975236, 4), n = _r(n, t, i, c, e[4], 1272893353, 11), c = _r(c, n, t, i, e[7], 4139469664, 16), i = _r(i, c, n, t, e[10], 3200236656, 23), t = _r(t, i, c, n, e[13], 681279174, 4), n = _r(n, t, i, c, e[0], 3936430074, 11), c = _r(c, n, t, i, e[3], 3572445317, 16), i = _r(i, c, n, t, e[6], 76029189, 23), t = _r(t, i, c, n, e[9], 3654602809, 4), n = _r(n, t, i, c, e[12], 3873151461, 11), c = _r(c, n, t, i, e[15], 530742520, 16), i = _r(i, c, n, t, e[2], 3299628645, 23), t = Mr(t, i, c, n, e[0], 4096336452, 6), n = Mr(n, t, i, c, e[7], 1126891415, 10), c = Mr(c, n, t, i, e[14], 2878612391, 15), i = Mr(i, c, n, t, e[5], 4237533241, 21), t = Mr(t, i, c, n, e[12], 1700485571, 6), n = Mr(n, t, i, c, e[3], 2399980690, 10), c = Mr(c, n, t, i, e[10], 4293915773, 15), i = Mr(i, c, n, t, e[1], 2240044497, 21), t = Mr(t, i, c, n, e[8], 1873313359, 6), n = Mr(n, t, i, c, e[15], 4264355552, 10), c = Mr(c, n, t, i, e[6], 2734768916, 15), i = Mr(i, c, n, t, e[13], 1309151649, 21), t = Mr(t, i, c, n, e[4], 4149444226, 6), n = Mr(n, t, i, c, e[11], 3174756917, 10), c = Mr(c, n, t, i, e[2], 718787259, 15), i = Mr(i, c, n, t, e[9], 3951481745, 21), this._a = this._a + t | 0, this._b = this._b + i | 0, this._c = this._c + c | 0, this._d = this._d + n | 0;\n};\nnn.prototype._digest = function() {\n  this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();\n  var e = X1.allocUnsafe(16);\n  return e.writeInt32LE(this._a, 0), e.writeInt32LE(this._b, 4), e.writeInt32LE(this._c, 8), e.writeInt32LE(this._d, 12), e;\n};\nfunction fn(e, r) {\n  return e << r | e >>> 32 - r;\n}\nfunction yr(e, r, t, i, c, n, x) {\n  return fn(e + (r & t | ~r & i) + c + n | 0, x) + r | 0;\n}\nfunction wr(e, r, t, i, c, n, x) {\n  return fn(e + (r & i | t & ~i) + c + n | 0, x) + r | 0;\n}\nfunction _r(e, r, t, i, c, n, x) {\n  return fn(e + (r ^ t ^ i) + c + n | 0, x) + r | 0;\n}\nfunction Mr(e, r, t, i, c, n, x) {\n  return fn(e + (t ^ (r | ~i)) + c + n | 0, x) + r | 0;\n}\nvar Pd = nn, Mf = Ht.Buffer, eb = nr, Od = Td, rb = new Array(16), Ca = [\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  7,\n  4,\n  13,\n  1,\n  10,\n  6,\n  15,\n  3,\n  12,\n  0,\n  9,\n  5,\n  2,\n  14,\n  11,\n  8,\n  3,\n  10,\n  14,\n  4,\n  9,\n  15,\n  8,\n  1,\n  2,\n  7,\n  0,\n  6,\n  13,\n  11,\n  5,\n  12,\n  1,\n  9,\n  11,\n  10,\n  0,\n  8,\n  12,\n  4,\n  13,\n  3,\n  7,\n  15,\n  14,\n  5,\n  6,\n  2,\n  4,\n  0,\n  5,\n  9,\n  7,\n  12,\n  2,\n  10,\n  14,\n  1,\n  3,\n  8,\n  11,\n  6,\n  15,\n  13\n], La = [\n  5,\n  14,\n  7,\n  0,\n  9,\n  2,\n  11,\n  4,\n  13,\n  6,\n  15,\n  8,\n  1,\n  10,\n  3,\n  12,\n  6,\n  11,\n  3,\n  7,\n  0,\n  13,\n  5,\n  10,\n  14,\n  15,\n  8,\n  12,\n  4,\n  9,\n  1,\n  2,\n  15,\n  5,\n  1,\n  3,\n  7,\n  14,\n  6,\n  9,\n  11,\n  8,\n  12,\n  2,\n  10,\n  0,\n  4,\n  13,\n  8,\n  6,\n  4,\n  1,\n  3,\n  11,\n  15,\n  0,\n  5,\n  12,\n  2,\n  13,\n  9,\n  7,\n  10,\n  14,\n  12,\n  15,\n  10,\n  4,\n  1,\n  5,\n  8,\n  7,\n  6,\n  2,\n  13,\n  14,\n  0,\n  3,\n  9,\n  11\n], Ua = [\n  11,\n  14,\n  15,\n  12,\n  5,\n  8,\n  7,\n  9,\n  11,\n  13,\n  14,\n  15,\n  6,\n  7,\n  9,\n  8,\n  7,\n  6,\n  8,\n  13,\n  11,\n  9,\n  7,\n  15,\n  7,\n  12,\n  15,\n  9,\n  11,\n  7,\n  13,\n  12,\n  11,\n  13,\n  6,\n  7,\n  14,\n  9,\n  13,\n  15,\n  14,\n  8,\n  13,\n  6,\n  5,\n  12,\n  7,\n  5,\n  11,\n  12,\n  14,\n  15,\n  14,\n  15,\n  9,\n  8,\n  9,\n  14,\n  5,\n  6,\n  8,\n  6,\n  5,\n  12,\n  9,\n  15,\n  5,\n  11,\n  6,\n  8,\n  13,\n  12,\n  5,\n  12,\n  13,\n  14,\n  11,\n  8,\n  5,\n  6\n], $a = [\n  8,\n  9,\n  9,\n  11,\n  13,\n  15,\n  15,\n  5,\n  7,\n  7,\n  8,\n  11,\n  14,\n  14,\n  12,\n  6,\n  9,\n  13,\n  15,\n  7,\n  12,\n  8,\n  9,\n  11,\n  7,\n  7,\n  12,\n  7,\n  6,\n  15,\n  13,\n  11,\n  9,\n  7,\n  15,\n  11,\n  8,\n  6,\n  6,\n  14,\n  12,\n  13,\n  5,\n  14,\n  13,\n  13,\n  7,\n  5,\n  15,\n  5,\n  8,\n  11,\n  14,\n  14,\n  6,\n  14,\n  6,\n  9,\n  12,\n  9,\n  12,\n  5,\n  15,\n  8,\n  8,\n  5,\n  12,\n  9,\n  12,\n  5,\n  14,\n  6,\n  8,\n  13,\n  6,\n  5,\n  15,\n  13,\n  11,\n  11\n], Da = [0, 1518500249, 1859775393, 2400959708, 2840853838], Ka = [1352829926, 1548603684, 1836072691, 2053994217, 0];\nfunction on() {\n  Od.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;\n}\neb(on, Od);\non.prototype._update = function() {\n  for (var e = rb, r = 0; r < 16; ++r)\n    e[r] = this._block.readInt32LE(r * 4);\n  for (var t = this._a | 0, i = this._b | 0, c = this._c | 0, n = this._d | 0, x = this._e | 0, m = this._a | 0, k = this._b | 0, B = this._c | 0, z = this._d | 0, C = this._e | 0, F = 0; F < 80; F += 1) {\n    var T, L;\n    F < 16 ? (T = Jo(t, i, c, n, x, e[Ca[F]], Da[0], Ua[F]), L = ec(m, k, B, z, C, e[La[F]], Ka[0], $a[F])) : F < 32 ? (T = Yo(t, i, c, n, x, e[Ca[F]], Da[1], Ua[F]), L = Qo(m, k, B, z, C, e[La[F]], Ka[1], $a[F])) : F < 48 ? (T = Xo(t, i, c, n, x, e[Ca[F]], Da[2], Ua[F]), L = Xo(m, k, B, z, C, e[La[F]], Ka[2], $a[F])) : F < 64 ? (T = Qo(t, i, c, n, x, e[Ca[F]], Da[3], Ua[F]), L = Yo(m, k, B, z, C, e[La[F]], Ka[3], $a[F])) : (T = ec(t, i, c, n, x, e[Ca[F]], Da[4], Ua[F]), L = Jo(m, k, B, z, C, e[La[F]], Ka[4], $a[F])), t = x, x = n, n = sa(c, 10), c = i, i = T, m = C, C = z, z = sa(B, 10), B = k, k = L;\n  }\n  var O = this._b + c + z | 0;\n  this._b = this._c + n + C | 0, this._c = this._d + x + m | 0, this._d = this._e + t + k | 0, this._e = this._a + i + B | 0, this._a = O;\n};\non.prototype._digest = function() {\n  this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();\n  var e = Mf.alloc ? Mf.alloc(20) : new Mf(20);\n  return e.writeInt32LE(this._a, 0), e.writeInt32LE(this._b, 4), e.writeInt32LE(this._c, 8), e.writeInt32LE(this._d, 12), e.writeInt32LE(this._e, 16), e;\n};\nfunction sa(e, r) {\n  return e << r | e >>> 32 - r;\n}\nfunction Jo(e, r, t, i, c, n, x, m) {\n  return sa(e + (r ^ t ^ i) + n + x | 0, m) + c | 0;\n}\nfunction Yo(e, r, t, i, c, n, x, m) {\n  return sa(e + (r & t | ~r & i) + n + x | 0, m) + c | 0;\n}\nfunction Xo(e, r, t, i, c, n, x, m) {\n  return sa(e + ((r | ~t) ^ i) + n + x | 0, m) + c | 0;\n}\nfunction Qo(e, r, t, i, c, n, x, m) {\n  return sa(e + (r & i | t & ~i) + n + x | 0, m) + c | 0;\n}\nfunction ec(e, r, t, i, c, n, x, m) {\n  return sa(e + (r ^ (t | ~i)) + n + x | 0, m) + c | 0;\n}\nvar j0 = on, qd = { exports: {} }, Nd = br.Buffer;\nfunction cn(e, r) {\n  this._block = Nd.alloc(e), this._finalSize = r, this._blockSize = e, this._len = 0;\n}\ncn.prototype.update = function(e, r) {\n  typeof e == \"string\" && (r = r || \"utf8\", e = Nd.from(e, r));\n  for (var t = this._block, i = this._blockSize, c = e.length, n = this._len, x = 0; x < c; ) {\n    for (var m = n % i, k = Math.min(c - x, i - m), B = 0; B < k; B++)\n      t[m + B] = e[x + B];\n    n += k, x += k, n % i === 0 && this._update(t);\n  }\n  return this._len += c, this;\n};\ncn.prototype.digest = function(e) {\n  var r = this._len % this._blockSize;\n  this._block[r] = 128, this._block.fill(0, r + 1), r >= this._finalSize && (this._update(this._block), this._block.fill(0));\n  var t = this._len * 8;\n  if (t <= 4294967295)\n    this._block.writeUInt32BE(t, this._blockSize - 4);\n  else {\n    var i = (t & 4294967295) >>> 0, c = (t - i) / 4294967296;\n    this._block.writeUInt32BE(c, this._blockSize - 8), this._block.writeUInt32BE(i, this._blockSize - 4);\n  }\n  this._update(this._block);\n  var n = this._hash();\n  return e ? n.toString(e) : n;\n};\ncn.prototype._update = function() {\n  throw new Error(\"_update must be implemented by subclass\");\n};\nvar Ia = cn, tb = nr, Fd = Ia, ab = br.Buffer, ib = [\n  1518500249,\n  1859775393,\n  -1894007588,\n  -899497514\n], nb = new Array(80);\nfunction fi() {\n  this.init(), this._w = nb, Fd.call(this, 64, 56);\n}\ntb(fi, Fd);\nfi.prototype.init = function() {\n  return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;\n};\nfunction fb(e) {\n  return e << 5 | e >>> 27;\n}\nfunction ob(e) {\n  return e << 30 | e >>> 2;\n}\nfunction cb(e, r, t, i) {\n  return e === 0 ? r & t | ~r & i : e === 2 ? r & t | r & i | t & i : r ^ t ^ i;\n}\nfi.prototype._update = function(e) {\n  for (var r = this._w, t = this._a | 0, i = this._b | 0, c = this._c | 0, n = this._d | 0, x = this._e | 0, m = 0; m < 16; ++m)\n    r[m] = e.readInt32BE(m * 4);\n  for (; m < 80; ++m)\n    r[m] = r[m - 3] ^ r[m - 8] ^ r[m - 14] ^ r[m - 16];\n  for (var k = 0; k < 80; ++k) {\n    var B = ~~(k / 20), z = fb(t) + cb(B, i, c, n) + x + r[k] + ib[B] | 0;\n    x = n, n = c, c = ob(i), i = t, t = z;\n  }\n  this._a = t + this._a | 0, this._b = i + this._b | 0, this._c = c + this._c | 0, this._d = n + this._d | 0, this._e = x + this._e | 0;\n};\nfi.prototype._hash = function() {\n  var e = ab.allocUnsafe(20);\n  return e.writeInt32BE(this._a | 0, 0), e.writeInt32BE(this._b | 0, 4), e.writeInt32BE(this._c | 0, 8), e.writeInt32BE(this._d | 0, 12), e.writeInt32BE(this._e | 0, 16), e;\n};\nvar db = fi, sb = nr, Cd = Ia, ub = br.Buffer, lb = [\n  1518500249,\n  1859775393,\n  -1894007588,\n  -899497514\n], bb = new Array(80);\nfunction oi() {\n  this.init(), this._w = bb, Cd.call(this, 64, 56);\n}\nsb(oi, Cd);\noi.prototype.init = function() {\n  return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;\n};\nfunction hb(e) {\n  return e << 1 | e >>> 31;\n}\nfunction pb(e) {\n  return e << 5 | e >>> 27;\n}\nfunction vb(e) {\n  return e << 30 | e >>> 2;\n}\nfunction xb(e, r, t, i) {\n  return e === 0 ? r & t | ~r & i : e === 2 ? r & t | r & i | t & i : r ^ t ^ i;\n}\noi.prototype._update = function(e) {\n  for (var r = this._w, t = this._a | 0, i = this._b | 0, c = this._c | 0, n = this._d | 0, x = this._e | 0, m = 0; m < 16; ++m)\n    r[m] = e.readInt32BE(m * 4);\n  for (; m < 80; ++m)\n    r[m] = hb(r[m - 3] ^ r[m - 8] ^ r[m - 14] ^ r[m - 16]);\n  for (var k = 0; k < 80; ++k) {\n    var B = ~~(k / 20), z = pb(t) + xb(B, i, c, n) + x + r[k] + lb[B] | 0;\n    x = n, n = c, c = vb(i), i = t, t = z;\n  }\n  this._a = t + this._a | 0, this._b = i + this._b | 0, this._c = c + this._c | 0, this._d = n + this._d | 0, this._e = x + this._e | 0;\n};\noi.prototype._hash = function() {\n  var e = ub.allocUnsafe(20);\n  return e.writeInt32BE(this._a | 0, 0), e.writeInt32BE(this._b | 0, 4), e.writeInt32BE(this._c | 0, 8), e.writeInt32BE(this._d | 0, 12), e.writeInt32BE(this._e | 0, 16), e;\n};\nvar mb = oi, gb = nr, Ld = Ia, yb = br.Buffer, wb = [\n  1116352408,\n  1899447441,\n  3049323471,\n  3921009573,\n  961987163,\n  1508970993,\n  2453635748,\n  2870763221,\n  3624381080,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  2162078206,\n  2614888103,\n  3248222580,\n  3835390401,\n  4022224774,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  2554220882,\n  2821834349,\n  2952996808,\n  3210313671,\n  3336571891,\n  3584528711,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  2177026350,\n  2456956037,\n  2730485921,\n  2820302411,\n  3259730800,\n  3345764771,\n  3516065817,\n  3600352804,\n  4094571909,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  2227730452,\n  2361852424,\n  2428436474,\n  2756734187,\n  3204031479,\n  3329325298\n], _b = new Array(64);\nfunction ci() {\n  this.init(), this._w = _b, Ld.call(this, 64, 56);\n}\ngb(ci, Ld);\nci.prototype.init = function() {\n  return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;\n};\nfunction Mb(e, r, t) {\n  return t ^ e & (r ^ t);\n}\nfunction Sb(e, r, t) {\n  return e & r | t & (e | r);\n}\nfunction kb(e) {\n  return (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10);\n}\nfunction Eb(e) {\n  return (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);\n}\nfunction Ab(e) {\n  return (e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3;\n}\nfunction Bb(e) {\n  return (e >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10;\n}\nci.prototype._update = function(e) {\n  for (var r = this._w, t = this._a | 0, i = this._b | 0, c = this._c | 0, n = this._d | 0, x = this._e | 0, m = this._f | 0, k = this._g | 0, B = this._h | 0, z = 0; z < 16; ++z)\n    r[z] = e.readInt32BE(z * 4);\n  for (; z < 64; ++z)\n    r[z] = Bb(r[z - 2]) + r[z - 7] + Ab(r[z - 15]) + r[z - 16] | 0;\n  for (var C = 0; C < 64; ++C) {\n    var F = B + Eb(x) + Mb(x, m, k) + wb[C] + r[C] | 0, T = kb(t) + Sb(t, i, c) | 0;\n    B = k, k = m, m = x, x = n + F | 0, n = c, c = i, i = t, t = F + T | 0;\n  }\n  this._a = t + this._a | 0, this._b = i + this._b | 0, this._c = c + this._c | 0, this._d = n + this._d | 0, this._e = x + this._e | 0, this._f = m + this._f | 0, this._g = k + this._g | 0, this._h = B + this._h | 0;\n};\nci.prototype._hash = function() {\n  var e = yb.allocUnsafe(32);\n  return e.writeInt32BE(this._a, 0), e.writeInt32BE(this._b, 4), e.writeInt32BE(this._c, 8), e.writeInt32BE(this._d, 12), e.writeInt32BE(this._e, 16), e.writeInt32BE(this._f, 20), e.writeInt32BE(this._g, 24), e.writeInt32BE(this._h, 28), e;\n};\nvar Ud = ci, zb = nr, Ib = Ud, Rb = Ia, Tb = br.Buffer, jb = new Array(64);\nfunction dn() {\n  this.init(), this._w = jb, Rb.call(this, 64, 56);\n}\nzb(dn, Ib);\ndn.prototype.init = function() {\n  return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;\n};\ndn.prototype._hash = function() {\n  var e = Tb.allocUnsafe(28);\n  return e.writeInt32BE(this._a, 0), e.writeInt32BE(this._b, 4), e.writeInt32BE(this._c, 8), e.writeInt32BE(this._d, 12), e.writeInt32BE(this._e, 16), e.writeInt32BE(this._f, 20), e.writeInt32BE(this._g, 24), e;\n};\nvar Pb = dn, Ob = nr, $d = Ia, qb = br.Buffer, rc = [\n  1116352408,\n  3609767458,\n  1899447441,\n  602891725,\n  3049323471,\n  3964484399,\n  3921009573,\n  2173295548,\n  961987163,\n  4081628472,\n  1508970993,\n  3053834265,\n  2453635748,\n  2937671579,\n  2870763221,\n  3664609560,\n  3624381080,\n  2734883394,\n  310598401,\n  1164996542,\n  607225278,\n  1323610764,\n  1426881987,\n  3590304994,\n  1925078388,\n  4068182383,\n  2162078206,\n  991336113,\n  2614888103,\n  633803317,\n  3248222580,\n  3479774868,\n  3835390401,\n  2666613458,\n  4022224774,\n  944711139,\n  264347078,\n  2341262773,\n  604807628,\n  2007800933,\n  770255983,\n  1495990901,\n  1249150122,\n  1856431235,\n  1555081692,\n  3175218132,\n  1996064986,\n  2198950837,\n  2554220882,\n  3999719339,\n  2821834349,\n  766784016,\n  2952996808,\n  2566594879,\n  3210313671,\n  3203337956,\n  3336571891,\n  1034457026,\n  3584528711,\n  2466948901,\n  113926993,\n  3758326383,\n  338241895,\n  168717936,\n  666307205,\n  1188179964,\n  773529912,\n  1546045734,\n  1294757372,\n  1522805485,\n  1396182291,\n  2643833823,\n  1695183700,\n  2343527390,\n  1986661051,\n  1014477480,\n  2177026350,\n  1206759142,\n  2456956037,\n  344077627,\n  2730485921,\n  1290863460,\n  2820302411,\n  3158454273,\n  3259730800,\n  3505952657,\n  3345764771,\n  106217008,\n  3516065817,\n  3606008344,\n  3600352804,\n  1432725776,\n  4094571909,\n  1467031594,\n  275423344,\n  851169720,\n  430227734,\n  3100823752,\n  506948616,\n  1363258195,\n  659060556,\n  3750685593,\n  883997877,\n  3785050280,\n  958139571,\n  3318307427,\n  1322822218,\n  3812723403,\n  1537002063,\n  2003034995,\n  1747873779,\n  3602036899,\n  1955562222,\n  1575990012,\n  2024104815,\n  1125592928,\n  2227730452,\n  2716904306,\n  2361852424,\n  442776044,\n  2428436474,\n  593698344,\n  2756734187,\n  3733110249,\n  3204031479,\n  2999351573,\n  3329325298,\n  3815920427,\n  3391569614,\n  3928383900,\n  3515267271,\n  566280711,\n  3940187606,\n  3454069534,\n  4118630271,\n  4000239992,\n  116418474,\n  1914138554,\n  174292421,\n  2731055270,\n  289380356,\n  3203993006,\n  460393269,\n  320620315,\n  685471733,\n  587496836,\n  852142971,\n  1086792851,\n  1017036298,\n  365543100,\n  1126000580,\n  2618297676,\n  1288033470,\n  3409855158,\n  1501505948,\n  4234509866,\n  1607167915,\n  987167468,\n  1816402316,\n  1246189591\n], Nb = new Array(160);\nfunction di() {\n  this.init(), this._w = Nb, $d.call(this, 128, 112);\n}\nOb(di, $d);\ndi.prototype.init = function() {\n  return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;\n};\nfunction tc(e, r, t) {\n  return t ^ e & (r ^ t);\n}\nfunction ac(e, r, t) {\n  return e & r | t & (e | r);\n}\nfunction ic(e, r) {\n  return (e >>> 28 | r << 4) ^ (r >>> 2 | e << 30) ^ (r >>> 7 | e << 25);\n}\nfunction nc(e, r) {\n  return (e >>> 14 | r << 18) ^ (e >>> 18 | r << 14) ^ (r >>> 9 | e << 23);\n}\nfunction Fb(e, r) {\n  return (e >>> 1 | r << 31) ^ (e >>> 8 | r << 24) ^ e >>> 7;\n}\nfunction Cb(e, r) {\n  return (e >>> 1 | r << 31) ^ (e >>> 8 | r << 24) ^ (e >>> 7 | r << 25);\n}\nfunction Lb(e, r) {\n  return (e >>> 19 | r << 13) ^ (r >>> 29 | e << 3) ^ e >>> 6;\n}\nfunction Ub(e, r) {\n  return (e >>> 19 | r << 13) ^ (r >>> 29 | e << 3) ^ (e >>> 6 | r << 26);\n}\nfunction hr(e, r) {\n  return e >>> 0 < r >>> 0 ? 1 : 0;\n}\ndi.prototype._update = function(e) {\n  for (var r = this._w, t = this._ah | 0, i = this._bh | 0, c = this._ch | 0, n = this._dh | 0, x = this._eh | 0, m = this._fh | 0, k = this._gh | 0, B = this._hh | 0, z = this._al | 0, C = this._bl | 0, F = this._cl | 0, T = this._dl | 0, L = this._el | 0, O = this._fl | 0, q = this._gl | 0, R = this._hl | 0, U = 0; U < 32; U += 2)\n    r[U] = e.readInt32BE(U * 4), r[U + 1] = e.readInt32BE(U * 4 + 4);\n  for (; U < 160; U += 2) {\n    var H = r[U - 30], Z = r[U - 15 * 2 + 1], W = Fb(H, Z), Y = Cb(Z, H);\n    H = r[U - 2 * 2], Z = r[U - 2 * 2 + 1];\n    var ne = Lb(H, Z), D = Ub(Z, H), V = r[U - 7 * 2], G = r[U - 7 * 2 + 1], M = r[U - 16 * 2], p = r[U - 16 * 2 + 1], s = Y + G | 0, a = W + V + hr(s, Y) | 0;\n    s = s + D | 0, a = a + ne + hr(s, D) | 0, s = s + p | 0, a = a + M + hr(s, p) | 0, r[U] = a, r[U + 1] = s;\n  }\n  for (var o = 0; o < 160; o += 2) {\n    a = r[o], s = r[o + 1];\n    var u = ac(t, i, c), h = ac(z, C, F), v = ic(t, z), g = ic(z, t), l = nc(x, L), d = nc(L, x), f = rc[o], b = rc[o + 1], E = tc(x, m, k), y = tc(L, O, q), S = R + d | 0, I = B + l + hr(S, R) | 0;\n    S = S + y | 0, I = I + E + hr(S, y) | 0, S = S + b | 0, I = I + f + hr(S, b) | 0, S = S + s | 0, I = I + a + hr(S, s) | 0;\n    var $ = g + h | 0, K = v + u + hr($, g) | 0;\n    B = k, R = q, k = m, q = O, m = x, O = L, L = T + S | 0, x = n + I + hr(L, T) | 0, n = c, T = F, c = i, F = C, i = t, C = z, z = S + $ | 0, t = I + K + hr(z, S) | 0;\n  }\n  this._al = this._al + z | 0, this._bl = this._bl + C | 0, this._cl = this._cl + F | 0, this._dl = this._dl + T | 0, this._el = this._el + L | 0, this._fl = this._fl + O | 0, this._gl = this._gl + q | 0, this._hl = this._hl + R | 0, this._ah = this._ah + t + hr(this._al, z) | 0, this._bh = this._bh + i + hr(this._bl, C) | 0, this._ch = this._ch + c + hr(this._cl, F) | 0, this._dh = this._dh + n + hr(this._dl, T) | 0, this._eh = this._eh + x + hr(this._el, L) | 0, this._fh = this._fh + m + hr(this._fl, O) | 0, this._gh = this._gh + k + hr(this._gl, q) | 0, this._hh = this._hh + B + hr(this._hl, R) | 0;\n};\ndi.prototype._hash = function() {\n  var e = qb.allocUnsafe(64);\n  function r(t, i, c) {\n    e.writeInt32BE(t, c), e.writeInt32BE(i, c + 4);\n  }\n  return r(this._ah, this._al, 0), r(this._bh, this._bl, 8), r(this._ch, this._cl, 16), r(this._dh, this._dl, 24), r(this._eh, this._el, 32), r(this._fh, this._fl, 40), r(this._gh, this._gl, 48), r(this._hh, this._hl, 56), e;\n};\nvar Dd = di, $b = nr, Db = Dd, Kb = Ia, Hb = br.Buffer, Vb = new Array(160);\nfunction sn() {\n  this.init(), this._w = Vb, Kb.call(this, 128, 112);\n}\n$b(sn, Db);\nsn.prototype.init = function() {\n  return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;\n};\nsn.prototype._hash = function() {\n  var e = Hb.allocUnsafe(48);\n  function r(t, i, c) {\n    e.writeInt32BE(t, c), e.writeInt32BE(i, c + 4);\n  }\n  return r(this._ah, this._al, 0), r(this._bh, this._bl, 8), r(this._ch, this._cl, 16), r(this._dh, this._dl, 24), r(this._eh, this._el, 32), r(this._fh, this._fl, 40), e;\n};\nvar Wb = sn, ba = qd.exports = function(r) {\n  r = r.toLowerCase();\n  var t = ba[r];\n  if (!t)\n    throw new Error(r + \" is not supported (we accept pull requests)\");\n  return new t();\n};\nba.sha = db;\nba.sha1 = mb;\nba.sha224 = Pb;\nba.sha256 = Ud;\nba.sha384 = Wb;\nba.sha512 = Dd;\nvar P0 = qd.exports, Kd = {}, Qf = { exports: {} };\n(function(e, r) {\n  var t = Ht, i = t.Buffer;\n  function c(x, m) {\n    for (var k in x)\n      m[k] = x[k];\n  }\n  i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = t : (c(t, r), r.Buffer = n);\n  function n(x, m, k) {\n    return i(x, m, k);\n  }\n  c(i, n), n.from = function(x, m, k) {\n    if (typeof x == \"number\")\n      throw new TypeError(\"Argument must not be a number\");\n    return i(x, m, k);\n  }, n.alloc = function(x, m, k) {\n    if (typeof x != \"number\")\n      throw new TypeError(\"Argument must be a number\");\n    var B = i(x);\n    return m !== void 0 ? typeof k == \"string\" ? B.fill(m, k) : B.fill(m) : B.fill(0), B;\n  }, n.allocUnsafe = function(x) {\n    if (typeof x != \"number\")\n      throw new TypeError(\"Argument must be a number\");\n    return i(x);\n  }, n.allocUnsafeSlow = function(x) {\n    if (typeof x != \"number\")\n      throw new TypeError(\"Argument must be a number\");\n    return t.SlowBuffer(x);\n  };\n})(Qf, Qf.exports);\nvar Gb = Qf.exports, O0 = Gb.Buffer, fc = O0.isEncoding || function(e) {\n  switch (e = \"\" + e, e && e.toLowerCase()) {\n    case \"hex\":\n    case \"utf8\":\n    case \"utf-8\":\n    case \"ascii\":\n    case \"binary\":\n    case \"base64\":\n    case \"ucs2\":\n    case \"ucs-2\":\n    case \"utf16le\":\n    case \"utf-16le\":\n    case \"raw\":\n      return !0;\n    default:\n      return !1;\n  }\n};\nfunction Zb(e) {\n  if (!e)\n    return \"utf8\";\n  for (var r; ; )\n    switch (e) {\n      case \"utf8\":\n      case \"utf-8\":\n        return \"utf8\";\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n        return \"utf16le\";\n      case \"latin1\":\n      case \"binary\":\n        return \"latin1\";\n      case \"base64\":\n      case \"ascii\":\n      case \"hex\":\n        return e;\n      default:\n        if (r)\n          return;\n        e = (\"\" + e).toLowerCase(), r = !0;\n    }\n}\nfunction Jb(e) {\n  var r = Zb(e);\n  if (typeof r != \"string\" && (O0.isEncoding === fc || !fc(e)))\n    throw new Error(\"Unknown encoding: \" + e);\n  return r || e;\n}\nKd.StringDecoder = si;\nfunction si(e) {\n  this.encoding = Jb(e);\n  var r;\n  switch (this.encoding) {\n    case \"utf16le\":\n      this.text = th, this.end = ah, r = 4;\n      break;\n    case \"utf8\":\n      this.fillLast = Qb, r = 4;\n      break;\n    case \"base64\":\n      this.text = ih, this.end = nh, r = 3;\n      break;\n    default:\n      this.write = fh, this.end = oh;\n      return;\n  }\n  this.lastNeed = 0, this.lastTotal = 0, this.lastChar = O0.allocUnsafe(r);\n}\nsi.prototype.write = function(e) {\n  if (e.length === 0)\n    return \"\";\n  var r, t;\n  if (this.lastNeed) {\n    if (r = this.fillLast(e), r === void 0)\n      return \"\";\n    t = this.lastNeed, this.lastNeed = 0;\n  } else\n    t = 0;\n  return t < e.length ? r ? r + this.text(e, t) : this.text(e, t) : r || \"\";\n};\nsi.prototype.end = rh;\nsi.prototype.text = eh;\nsi.prototype.fillLast = function(e) {\n  if (this.lastNeed <= e.length)\n    return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;\n};\nfunction Sf(e) {\n  return e <= 127 ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : e >> 6 === 2 ? -1 : -2;\n}\nfunction Yb(e, r, t) {\n  var i = r.length - 1;\n  if (i < t)\n    return 0;\n  var c = Sf(r[i]);\n  return c >= 0 ? (c > 0 && (e.lastNeed = c - 1), c) : --i < t || c === -2 ? 0 : (c = Sf(r[i]), c >= 0 ? (c > 0 && (e.lastNeed = c - 2), c) : --i < t || c === -2 ? 0 : (c = Sf(r[i]), c >= 0 ? (c > 0 && (c === 2 ? c = 0 : e.lastNeed = c - 3), c) : 0));\n}\nfunction Xb(e, r, t) {\n  if ((r[0] & 192) !== 128)\n    return e.lastNeed = 0, \"�\";\n  if (e.lastNeed > 1 && r.length > 1) {\n    if ((r[1] & 192) !== 128)\n      return e.lastNeed = 1, \"�\";\n    if (e.lastNeed > 2 && r.length > 2 && (r[2] & 192) !== 128)\n      return e.lastNeed = 2, \"�\";\n  }\n}\nfunction Qb(e) {\n  var r = this.lastTotal - this.lastNeed, t = Xb(this, e);\n  if (t !== void 0)\n    return t;\n  if (this.lastNeed <= e.length)\n    return e.copy(this.lastChar, r, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  e.copy(this.lastChar, r, 0, e.length), this.lastNeed -= e.length;\n}\nfunction eh(e, r) {\n  var t = Yb(this, e, r);\n  if (!this.lastNeed)\n    return e.toString(\"utf8\", r);\n  this.lastTotal = t;\n  var i = e.length - (t - this.lastNeed);\n  return e.copy(this.lastChar, 0, i), e.toString(\"utf8\", r, i);\n}\nfunction rh(e) {\n  var r = e && e.length ? this.write(e) : \"\";\n  return this.lastNeed ? r + \"�\" : r;\n}\nfunction th(e, r) {\n  if ((e.length - r) % 2 === 0) {\n    var t = e.toString(\"utf16le\", r);\n    if (t) {\n      var i = t.charCodeAt(t.length - 1);\n      if (i >= 55296 && i <= 56319)\n        return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], t.slice(0, -1);\n    }\n    return t;\n  }\n  return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString(\"utf16le\", r, e.length - 1);\n}\nfunction ah(e) {\n  var r = e && e.length ? this.write(e) : \"\";\n  if (this.lastNeed) {\n    var t = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString(\"utf16le\", 0, t);\n  }\n  return r;\n}\nfunction ih(e, r) {\n  var t = (e.length - r) % 3;\n  return t === 0 ? e.toString(\"base64\", r) : (this.lastNeed = 3 - t, this.lastTotal = 3, t === 1 ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString(\"base64\", r, e.length - t));\n}\nfunction nh(e) {\n  var r = e && e.length ? this.write(e) : \"\";\n  return this.lastNeed ? r + this.lastChar.toString(\"base64\", 0, 3 - this.lastNeed) : r;\n}\nfunction fh(e) {\n  return e.toString(this.encoding);\n}\nfunction oh(e) {\n  return e && e.length ? this.write(e) : \"\";\n}\nvar Hd = br.Buffer, Vd = dt.Transform, ch = Kd.StringDecoder, dh = nr;\nfunction ut(e) {\n  Vd.call(this), this.hashMode = typeof e == \"string\", this.hashMode ? this[e] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;\n}\ndh(ut, Vd);\nut.prototype.update = function(e, r, t) {\n  typeof e == \"string\" && (e = Hd.from(e, r));\n  var i = this._update(e);\n  return this.hashMode ? this : (t && (i = this._toString(i, t)), i);\n};\nut.prototype.setAutoPadding = function() {\n};\nut.prototype.getAuthTag = function() {\n  throw new Error(\"trying to get auth tag in unsupported state\");\n};\nut.prototype.setAuthTag = function() {\n  throw new Error(\"trying to set auth tag in unsupported state\");\n};\nut.prototype.setAAD = function() {\n  throw new Error(\"trying to set aad in unsupported state\");\n};\nut.prototype._transform = function(e, r, t) {\n  var i;\n  try {\n    this.hashMode ? this._update(e) : this.push(this._update(e));\n  } catch (c) {\n    i = c;\n  } finally {\n    t(i);\n  }\n};\nut.prototype._flush = function(e) {\n  var r;\n  try {\n    this.push(this.__final());\n  } catch (t) {\n    r = t;\n  }\n  e(r);\n};\nut.prototype._finalOrDigest = function(e) {\n  var r = this.__final() || Hd.alloc(0);\n  return e && (r = this._toString(r, e, !0)), r;\n};\nut.prototype._toString = function(e, r, t) {\n  if (this._decoder || (this._decoder = new ch(r), this._encoding = r), this._encoding !== r)\n    throw new Error(\"can't switch encodings\");\n  var i = this._decoder.write(e);\n  return t && (i += this._decoder.end()), i;\n};\nvar q0 = ut, sh = nr, uh = Pd, lh = j0, bh = P0, Wd = q0;\nfunction un(e) {\n  Wd.call(this, \"digest\"), this._hash = e;\n}\nsh(un, Wd);\nun.prototype._update = function(e) {\n  this._hash.update(e);\n};\nun.prototype._final = function() {\n  return this._hash.digest();\n};\nvar N0 = function(r) {\n  return r = r.toLowerCase(), r === \"md5\" ? new uh() : r === \"rmd160\" || r === \"ripemd160\" ? new lh() : new un(bh(r));\n}, F0 = {}, hh = Math.pow(2, 30) - 1, Gd = function(e, r) {\n  if (typeof e != \"number\")\n    throw new TypeError(\"Iterations not a number\");\n  if (e < 0)\n    throw new TypeError(\"Bad iterations\");\n  if (typeof r != \"number\")\n    throw new TypeError(\"Key length not a number\");\n  if (r < 0 || r > hh || r !== r)\n    throw new TypeError(\"Bad key length\");\n}, zi;\nif (be.process && be.process.browser)\n  zi = \"utf-8\";\nelse if (be.process && be.process.version) {\n  var ph = parseInt(process.version.split(\".\")[0].slice(1), 10);\n  zi = ph >= 6 ? \"utf-8\" : \"binary\";\n} else\n  zi = \"utf-8\";\nvar Zd = zi, vh = Pd, Jd = function(e) {\n  return new vh().update(e).digest();\n}, kf = br.Buffer, Yd = function(e, r, t) {\n  if (kf.isBuffer(e))\n    return e;\n  if (typeof e == \"string\")\n    return kf.from(e, r);\n  if (ArrayBuffer.isView(e))\n    return kf.from(e.buffer);\n  throw new TypeError(t + \" must be a string, a Buffer, a typed array or a DataView\");\n}, xh = Jd, mh = j0, gh = P0, aa = br.Buffer, yh = Gd, oc = Zd, cc = Yd, wh = aa.alloc(128), Ii = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n};\nfunction Xd(e, r, t) {\n  var i = _h(e), c = e === \"sha512\" || e === \"sha384\" ? 128 : 64;\n  r.length > c ? r = i(r) : r.length < c && (r = aa.concat([r, wh], c));\n  for (var n = aa.allocUnsafe(c + Ii[e]), x = aa.allocUnsafe(c + Ii[e]), m = 0; m < c; m++)\n    n[m] = r[m] ^ 54, x[m] = r[m] ^ 92;\n  var k = aa.allocUnsafe(c + t + 4);\n  n.copy(k, 0, 0, c), this.ipad1 = k, this.ipad2 = n, this.opad = x, this.alg = e, this.blocksize = c, this.hash = i, this.size = Ii[e];\n}\nXd.prototype.run = function(e, r) {\n  e.copy(r, this.blocksize);\n  var t = this.hash(r);\n  return t.copy(this.opad, this.blocksize), this.hash(this.opad);\n};\nfunction _h(e) {\n  function r(i) {\n    return gh(e).update(i).digest();\n  }\n  function t(i) {\n    return new mh().update(i).digest();\n  }\n  return e === \"rmd160\" || e === \"ripemd160\" ? t : e === \"md5\" ? xh : r;\n}\nfunction Mh(e, r, t, i, c) {\n  yh(t, i), e = cc(e, oc, \"Password\"), r = cc(r, oc, \"Salt\"), c = c || \"sha1\";\n  var n = new Xd(c, e, r.length), x = aa.allocUnsafe(i), m = aa.allocUnsafe(r.length + 4);\n  r.copy(m, 0, 0, r.length);\n  for (var k = 0, B = Ii[c], z = Math.ceil(i / B), C = 1; C <= z; C++) {\n    m.writeUInt32BE(C, r.length);\n    for (var F = n.run(m, n.ipad1), T = F, L = 1; L < t; L++) {\n      T = n.run(T, n.ipad2);\n      for (var O = 0; O < B; O++)\n        F[O] ^= T[O];\n    }\n    F.copy(x, k), k += B;\n  }\n  return x;\n}\nvar Qd = Mh, es = br.Buffer, Sh = Gd, dc = Zd, sc = Qd, uc = Yd, vi, Ja = be.crypto && be.crypto.subtle, kh = {\n  sha: \"SHA-1\",\n  \"sha-1\": \"SHA-1\",\n  sha1: \"SHA-1\",\n  sha256: \"SHA-256\",\n  \"sha-256\": \"SHA-256\",\n  sha384: \"SHA-384\",\n  \"sha-384\": \"SHA-384\",\n  \"sha-512\": \"SHA-512\",\n  sha512: \"SHA-512\"\n}, Ef = [];\nfunction Eh(e) {\n  if (be.process && !be.process.browser || !Ja || !Ja.importKey || !Ja.deriveBits)\n    return Promise.resolve(!1);\n  if (Ef[e] !== void 0)\n    return Ef[e];\n  vi = vi || es.alloc(8);\n  var r = rs(vi, vi, 10, 128, e).then(function() {\n    return !0;\n  }).catch(function() {\n    return !1;\n  });\n  return Ef[e] = r, r;\n}\nvar Xt;\nfunction e0() {\n  return Xt || (be.process && be.process.nextTick ? Xt = be.process.nextTick : be.queueMicrotask ? Xt = be.queueMicrotask : be.setImmediate ? Xt = be.setImmediate : Xt = be.setTimeout, Xt);\n}\nfunction rs(e, r, t, i, c) {\n  return Ja.importKey(\n    \"raw\",\n    e,\n    { name: \"PBKDF2\" },\n    !1,\n    [\"deriveBits\"]\n  ).then(function(n) {\n    return Ja.deriveBits({\n      name: \"PBKDF2\",\n      salt: r,\n      iterations: t,\n      hash: {\n        name: c\n      }\n    }, n, i << 3);\n  }).then(function(n) {\n    return es.from(n);\n  });\n}\nfunction Ah(e, r) {\n  e.then(function(t) {\n    e0()(function() {\n      r(null, t);\n    });\n  }, function(t) {\n    e0()(function() {\n      r(t);\n    });\n  });\n}\nvar Bh = function(e, r, t, i, c, n) {\n  typeof c == \"function\" && (n = c, c = void 0), c = c || \"sha1\";\n  var x = kh[c.toLowerCase()];\n  if (!x || typeof be.Promise != \"function\") {\n    e0()(function() {\n      var m;\n      try {\n        m = sc(e, r, t, i, c);\n      } catch (k) {\n        return n(k);\n      }\n      n(null, m);\n    });\n    return;\n  }\n  if (Sh(t, i), e = uc(e, dc, \"Password\"), r = uc(r, dc, \"Salt\"), typeof n != \"function\")\n    throw new Error(\"No callback provided to pbkdf2\");\n  Ah(Eh(x).then(function(m) {\n    return m ? rs(e, r, t, i, x) : sc(e, r, t, i, c);\n  }), n);\n};\nF0.pbkdf2 = Bh;\nF0.pbkdf2Sync = Qd;\nvar r0 = { exports: {} }, Af = 65536, zh = 4294967295;\nfunction Ih() {\n  throw new Error(`Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11`);\n}\nvar Rh = br.Buffer, Oi = be.crypto || be.msCrypto;\nOi && Oi.getRandomValues ? r0.exports = Th : r0.exports = Ih;\nfunction Th(e, r) {\n  if (e > zh)\n    throw new RangeError(\"requested too many random bytes\");\n  var t = Rh.allocUnsafe(e);\n  if (e > 0)\n    if (e > Af)\n      for (var i = 0; i < e; i += Af)\n        Oi.getRandomValues(t.slice(i, i + Af));\n    else\n      Oi.getRandomValues(t);\n  return typeof r == \"function\" ? process.nextTick(function() {\n    r(null, t);\n  }) : t;\n}\nvar ln = r0.exports, Lr = {};\nconst jh = [\n  \"abdikace\",\n  \"abeceda\",\n  \"adresa\",\n  \"agrese\",\n  \"akce\",\n  \"aktovka\",\n  \"alej\",\n  \"alkohol\",\n  \"amputace\",\n  \"ananas\",\n  \"andulka\",\n  \"anekdota\",\n  \"anketa\",\n  \"antika\",\n  \"anulovat\",\n  \"archa\",\n  \"arogance\",\n  \"asfalt\",\n  \"asistent\",\n  \"aspirace\",\n  \"astma\",\n  \"astronom\",\n  \"atlas\",\n  \"atletika\",\n  \"atol\",\n  \"autobus\",\n  \"azyl\",\n  \"babka\",\n  \"bachor\",\n  \"bacil\",\n  \"baculka\",\n  \"badatel\",\n  \"bageta\",\n  \"bagr\",\n  \"bahno\",\n  \"bakterie\",\n  \"balada\",\n  \"baletka\",\n  \"balkon\",\n  \"balonek\",\n  \"balvan\",\n  \"balza\",\n  \"bambus\",\n  \"bankomat\",\n  \"barbar\",\n  \"baret\",\n  \"barman\",\n  \"baroko\",\n  \"barva\",\n  \"baterka\",\n  \"batoh\",\n  \"bavlna\",\n  \"bazalka\",\n  \"bazilika\",\n  \"bazuka\",\n  \"bedna\",\n  \"beran\",\n  \"beseda\",\n  \"bestie\",\n  \"beton\",\n  \"bezinka\",\n  \"bezmoc\",\n  \"beztak\",\n  \"bicykl\",\n  \"bidlo\",\n  \"biftek\",\n  \"bikiny\",\n  \"bilance\",\n  \"biograf\",\n  \"biolog\",\n  \"bitva\",\n  \"bizon\",\n  \"blahobyt\",\n  \"blatouch\",\n  \"blecha\",\n  \"bledule\",\n  \"blesk\",\n  \"blikat\",\n  \"blizna\",\n  \"blokovat\",\n  \"bloudit\",\n  \"blud\",\n  \"bobek\",\n  \"bobr\",\n  \"bodlina\",\n  \"bodnout\",\n  \"bohatost\",\n  \"bojkot\",\n  \"bojovat\",\n  \"bokorys\",\n  \"bolest\",\n  \"borec\",\n  \"borovice\",\n  \"bota\",\n  \"boubel\",\n  \"bouchat\",\n  \"bouda\",\n  \"boule\",\n  \"bourat\",\n  \"boxer\",\n  \"bradavka\",\n  \"brambora\",\n  \"branka\",\n  \"bratr\",\n  \"brepta\",\n  \"briketa\",\n  \"brko\",\n  \"brloh\",\n  \"bronz\",\n  \"broskev\",\n  \"brunetka\",\n  \"brusinka\",\n  \"brzda\",\n  \"brzy\",\n  \"bublina\",\n  \"bubnovat\",\n  \"buchta\",\n  \"buditel\",\n  \"budka\",\n  \"budova\",\n  \"bufet\",\n  \"bujarost\",\n  \"bukvice\",\n  \"buldok\",\n  \"bulva\",\n  \"bunda\",\n  \"bunkr\",\n  \"burza\",\n  \"butik\",\n  \"buvol\",\n  \"buzola\",\n  \"bydlet\",\n  \"bylina\",\n  \"bytovka\",\n  \"bzukot\",\n  \"capart\",\n  \"carevna\",\n  \"cedr\",\n  \"cedule\",\n  \"cejch\",\n  \"cejn\",\n  \"cela\",\n  \"celer\",\n  \"celkem\",\n  \"celnice\",\n  \"cenina\",\n  \"cennost\",\n  \"cenovka\",\n  \"centrum\",\n  \"cenzor\",\n  \"cestopis\",\n  \"cetka\",\n  \"chalupa\",\n  \"chapadlo\",\n  \"charita\",\n  \"chata\",\n  \"chechtat\",\n  \"chemie\",\n  \"chichot\",\n  \"chirurg\",\n  \"chlad\",\n  \"chleba\",\n  \"chlubit\",\n  \"chmel\",\n  \"chmura\",\n  \"chobot\",\n  \"chochol\",\n  \"chodba\",\n  \"cholera\",\n  \"chomout\",\n  \"chopit\",\n  \"choroba\",\n  \"chov\",\n  \"chrapot\",\n  \"chrlit\",\n  \"chrt\",\n  \"chrup\",\n  \"chtivost\",\n  \"chudina\",\n  \"chutnat\",\n  \"chvat\",\n  \"chvilka\",\n  \"chvost\",\n  \"chyba\",\n  \"chystat\",\n  \"chytit\",\n  \"cibule\",\n  \"cigareta\",\n  \"cihelna\",\n  \"cihla\",\n  \"cinkot\",\n  \"cirkus\",\n  \"cisterna\",\n  \"citace\",\n  \"citrus\",\n  \"cizinec\",\n  \"cizost\",\n  \"clona\",\n  \"cokoliv\",\n  \"couvat\",\n  \"ctitel\",\n  \"ctnost\",\n  \"cudnost\",\n  \"cuketa\",\n  \"cukr\",\n  \"cupot\",\n  \"cvaknout\",\n  \"cval\",\n  \"cvik\",\n  \"cvrkot\",\n  \"cyklista\",\n  \"daleko\",\n  \"dareba\",\n  \"datel\",\n  \"datum\",\n  \"dcera\",\n  \"debata\",\n  \"dechovka\",\n  \"decibel\",\n  \"deficit\",\n  \"deflace\",\n  \"dekl\",\n  \"dekret\",\n  \"demokrat\",\n  \"deprese\",\n  \"derby\",\n  \"deska\",\n  \"detektiv\",\n  \"dikobraz\",\n  \"diktovat\",\n  \"dioda\",\n  \"diplom\",\n  \"disk\",\n  \"displej\",\n  \"divadlo\",\n  \"divoch\",\n  \"dlaha\",\n  \"dlouho\",\n  \"dluhopis\",\n  \"dnes\",\n  \"dobro\",\n  \"dobytek\",\n  \"docent\",\n  \"dochutit\",\n  \"dodnes\",\n  \"dohled\",\n  \"dohoda\",\n  \"dohra\",\n  \"dojem\",\n  \"dojnice\",\n  \"doklad\",\n  \"dokola\",\n  \"doktor\",\n  \"dokument\",\n  \"dolar\",\n  \"doleva\",\n  \"dolina\",\n  \"doma\",\n  \"dominant\",\n  \"domluvit\",\n  \"domov\",\n  \"donutit\",\n  \"dopad\",\n  \"dopis\",\n  \"doplnit\",\n  \"doposud\",\n  \"doprovod\",\n  \"dopustit\",\n  \"dorazit\",\n  \"dorost\",\n  \"dort\",\n  \"dosah\",\n  \"doslov\",\n  \"dostatek\",\n  \"dosud\",\n  \"dosyta\",\n  \"dotaz\",\n  \"dotek\",\n  \"dotknout\",\n  \"doufat\",\n  \"doutnat\",\n  \"dovozce\",\n  \"dozadu\",\n  \"doznat\",\n  \"dozorce\",\n  \"drahota\",\n  \"drak\",\n  \"dramatik\",\n  \"dravec\",\n  \"draze\",\n  \"drdol\",\n  \"drobnost\",\n  \"drogerie\",\n  \"drozd\",\n  \"drsnost\",\n  \"drtit\",\n  \"drzost\",\n  \"duben\",\n  \"duchovno\",\n  \"dudek\",\n  \"duha\",\n  \"duhovka\",\n  \"dusit\",\n  \"dusno\",\n  \"dutost\",\n  \"dvojice\",\n  \"dvorec\",\n  \"dynamit\",\n  \"ekolog\",\n  \"ekonomie\",\n  \"elektron\",\n  \"elipsa\",\n  \"email\",\n  \"emise\",\n  \"emoce\",\n  \"empatie\",\n  \"epizoda\",\n  \"epocha\",\n  \"epopej\",\n  \"epos\",\n  \"esej\",\n  \"esence\",\n  \"eskorta\",\n  \"eskymo\",\n  \"etiketa\",\n  \"euforie\",\n  \"evoluce\",\n  \"exekuce\",\n  \"exkurze\",\n  \"expedice\",\n  \"exploze\",\n  \"export\",\n  \"extrakt\",\n  \"facka\",\n  \"fajfka\",\n  \"fakulta\",\n  \"fanatik\",\n  \"fantazie\",\n  \"farmacie\",\n  \"favorit\",\n  \"fazole\",\n  \"federace\",\n  \"fejeton\",\n  \"fenka\",\n  \"fialka\",\n  \"figurant\",\n  \"filozof\",\n  \"filtr\",\n  \"finance\",\n  \"finta\",\n  \"fixace\",\n  \"fjord\",\n  \"flanel\",\n  \"flirt\",\n  \"flotila\",\n  \"fond\",\n  \"fosfor\",\n  \"fotbal\",\n  \"fotka\",\n  \"foton\",\n  \"frakce\",\n  \"freska\",\n  \"fronta\",\n  \"fukar\",\n  \"funkce\",\n  \"fyzika\",\n  \"galeje\",\n  \"garant\",\n  \"genetika\",\n  \"geolog\",\n  \"gilotina\",\n  \"glazura\",\n  \"glejt\",\n  \"golem\",\n  \"golfista\",\n  \"gotika\",\n  \"graf\",\n  \"gramofon\",\n  \"granule\",\n  \"grep\",\n  \"gril\",\n  \"grog\",\n  \"groteska\",\n  \"guma\",\n  \"hadice\",\n  \"hadr\",\n  \"hala\",\n  \"halenka\",\n  \"hanba\",\n  \"hanopis\",\n  \"harfa\",\n  \"harpuna\",\n  \"havran\",\n  \"hebkost\",\n  \"hejkal\",\n  \"hejno\",\n  \"hejtman\",\n  \"hektar\",\n  \"helma\",\n  \"hematom\",\n  \"herec\",\n  \"herna\",\n  \"heslo\",\n  \"hezky\",\n  \"historik\",\n  \"hladovka\",\n  \"hlasivky\",\n  \"hlava\",\n  \"hledat\",\n  \"hlen\",\n  \"hlodavec\",\n  \"hloh\",\n  \"hloupost\",\n  \"hltat\",\n  \"hlubina\",\n  \"hluchota\",\n  \"hmat\",\n  \"hmota\",\n  \"hmyz\",\n  \"hnis\",\n  \"hnojivo\",\n  \"hnout\",\n  \"hoblina\",\n  \"hoboj\",\n  \"hoch\",\n  \"hodiny\",\n  \"hodlat\",\n  \"hodnota\",\n  \"hodovat\",\n  \"hojnost\",\n  \"hokej\",\n  \"holinka\",\n  \"holka\",\n  \"holub\",\n  \"homole\",\n  \"honitba\",\n  \"honorace\",\n  \"horal\",\n  \"horda\",\n  \"horizont\",\n  \"horko\",\n  \"horlivec\",\n  \"hormon\",\n  \"hornina\",\n  \"horoskop\",\n  \"horstvo\",\n  \"hospoda\",\n  \"hostina\",\n  \"hotovost\",\n  \"houba\",\n  \"houf\",\n  \"houpat\",\n  \"houska\",\n  \"hovor\",\n  \"hradba\",\n  \"hranice\",\n  \"hravost\",\n  \"hrazda\",\n  \"hrbolek\",\n  \"hrdina\",\n  \"hrdlo\",\n  \"hrdost\",\n  \"hrnek\",\n  \"hrobka\",\n  \"hromada\",\n  \"hrot\",\n  \"hrouda\",\n  \"hrozen\",\n  \"hrstka\",\n  \"hrubost\",\n  \"hryzat\",\n  \"hubenost\",\n  \"hubnout\",\n  \"hudba\",\n  \"hukot\",\n  \"humr\",\n  \"husita\",\n  \"hustota\",\n  \"hvozd\",\n  \"hybnost\",\n  \"hydrant\",\n  \"hygiena\",\n  \"hymna\",\n  \"hysterik\",\n  \"idylka\",\n  \"ihned\",\n  \"ikona\",\n  \"iluze\",\n  \"imunita\",\n  \"infekce\",\n  \"inflace\",\n  \"inkaso\",\n  \"inovace\",\n  \"inspekce\",\n  \"internet\",\n  \"invalida\",\n  \"investor\",\n  \"inzerce\",\n  \"ironie\",\n  \"jablko\",\n  \"jachta\",\n  \"jahoda\",\n  \"jakmile\",\n  \"jakost\",\n  \"jalovec\",\n  \"jantar\",\n  \"jarmark\",\n  \"jaro\",\n  \"jasan\",\n  \"jasno\",\n  \"jatka\",\n  \"javor\",\n  \"jazyk\",\n  \"jedinec\",\n  \"jedle\",\n  \"jednatel\",\n  \"jehlan\",\n  \"jekot\",\n  \"jelen\",\n  \"jelito\",\n  \"jemnost\",\n  \"jenom\",\n  \"jepice\",\n  \"jeseter\",\n  \"jevit\",\n  \"jezdec\",\n  \"jezero\",\n  \"jinak\",\n  \"jindy\",\n  \"jinoch\",\n  \"jiskra\",\n  \"jistota\",\n  \"jitrnice\",\n  \"jizva\",\n  \"jmenovat\",\n  \"jogurt\",\n  \"jurta\",\n  \"kabaret\",\n  \"kabel\",\n  \"kabinet\",\n  \"kachna\",\n  \"kadet\",\n  \"kadidlo\",\n  \"kahan\",\n  \"kajak\",\n  \"kajuta\",\n  \"kakao\",\n  \"kaktus\",\n  \"kalamita\",\n  \"kalhoty\",\n  \"kalibr\",\n  \"kalnost\",\n  \"kamera\",\n  \"kamkoliv\",\n  \"kamna\",\n  \"kanibal\",\n  \"kanoe\",\n  \"kantor\",\n  \"kapalina\",\n  \"kapela\",\n  \"kapitola\",\n  \"kapka\",\n  \"kaple\",\n  \"kapota\",\n  \"kapr\",\n  \"kapusta\",\n  \"kapybara\",\n  \"karamel\",\n  \"karotka\",\n  \"karton\",\n  \"kasa\",\n  \"katalog\",\n  \"katedra\",\n  \"kauce\",\n  \"kauza\",\n  \"kavalec\",\n  \"kazajka\",\n  \"kazeta\",\n  \"kazivost\",\n  \"kdekoliv\",\n  \"kdesi\",\n  \"kedluben\",\n  \"kemp\",\n  \"keramika\",\n  \"kino\",\n  \"klacek\",\n  \"kladivo\",\n  \"klam\",\n  \"klapot\",\n  \"klasika\",\n  \"klaun\",\n  \"klec\",\n  \"klenba\",\n  \"klepat\",\n  \"klesnout\",\n  \"klid\",\n  \"klima\",\n  \"klisna\",\n  \"klobouk\",\n  \"klokan\",\n  \"klopa\",\n  \"kloub\",\n  \"klubovna\",\n  \"klusat\",\n  \"kluzkost\",\n  \"kmen\",\n  \"kmitat\",\n  \"kmotr\",\n  \"kniha\",\n  \"knot\",\n  \"koalice\",\n  \"koberec\",\n  \"kobka\",\n  \"kobliha\",\n  \"kobyla\",\n  \"kocour\",\n  \"kohout\",\n  \"kojenec\",\n  \"kokos\",\n  \"koktejl\",\n  \"kolaps\",\n  \"koleda\",\n  \"kolize\",\n  \"kolo\",\n  \"komando\",\n  \"kometa\",\n  \"komik\",\n  \"komnata\",\n  \"komora\",\n  \"kompas\",\n  \"komunita\",\n  \"konat\",\n  \"koncept\",\n  \"kondice\",\n  \"konec\",\n  \"konfese\",\n  \"kongres\",\n  \"konina\",\n  \"konkurs\",\n  \"kontakt\",\n  \"konzerva\",\n  \"kopanec\",\n  \"kopie\",\n  \"kopnout\",\n  \"koprovka\",\n  \"korbel\",\n  \"korektor\",\n  \"kormidlo\",\n  \"koroptev\",\n  \"korpus\",\n  \"koruna\",\n  \"koryto\",\n  \"korzet\",\n  \"kosatec\",\n  \"kostka\",\n  \"kotel\",\n  \"kotleta\",\n  \"kotoul\",\n  \"koukat\",\n  \"koupelna\",\n  \"kousek\",\n  \"kouzlo\",\n  \"kovboj\",\n  \"koza\",\n  \"kozoroh\",\n  \"krabice\",\n  \"krach\",\n  \"krajina\",\n  \"kralovat\",\n  \"krasopis\",\n  \"kravata\",\n  \"kredit\",\n  \"krejcar\",\n  \"kresba\",\n  \"kreveta\",\n  \"kriket\",\n  \"kritik\",\n  \"krize\",\n  \"krkavec\",\n  \"krmelec\",\n  \"krmivo\",\n  \"krocan\",\n  \"krok\",\n  \"kronika\",\n  \"kropit\",\n  \"kroupa\",\n  \"krovka\",\n  \"krtek\",\n  \"kruhadlo\",\n  \"krupice\",\n  \"krutost\",\n  \"krvinka\",\n  \"krychle\",\n  \"krypta\",\n  \"krystal\",\n  \"kryt\",\n  \"kudlanka\",\n  \"kufr\",\n  \"kujnost\",\n  \"kukla\",\n  \"kulajda\",\n  \"kulich\",\n  \"kulka\",\n  \"kulomet\",\n  \"kultura\",\n  \"kuna\",\n  \"kupodivu\",\n  \"kurt\",\n  \"kurzor\",\n  \"kutil\",\n  \"kvalita\",\n  \"kvasinka\",\n  \"kvestor\",\n  \"kynolog\",\n  \"kyselina\",\n  \"kytara\",\n  \"kytice\",\n  \"kytka\",\n  \"kytovec\",\n  \"kyvadlo\",\n  \"labrador\",\n  \"lachtan\",\n  \"ladnost\",\n  \"laik\",\n  \"lakomec\",\n  \"lamela\",\n  \"lampa\",\n  \"lanovka\",\n  \"lasice\",\n  \"laso\",\n  \"lastura\",\n  \"latinka\",\n  \"lavina\",\n  \"lebka\",\n  \"leckdy\",\n  \"leden\",\n  \"lednice\",\n  \"ledovka\",\n  \"ledvina\",\n  \"legenda\",\n  \"legie\",\n  \"legrace\",\n  \"lehce\",\n  \"lehkost\",\n  \"lehnout\",\n  \"lektvar\",\n  \"lenochod\",\n  \"lentilka\",\n  \"lepenka\",\n  \"lepidlo\",\n  \"letadlo\",\n  \"letec\",\n  \"letmo\",\n  \"letokruh\",\n  \"levhart\",\n  \"levitace\",\n  \"levobok\",\n  \"libra\",\n  \"lichotka\",\n  \"lidojed\",\n  \"lidskost\",\n  \"lihovina\",\n  \"lijavec\",\n  \"lilek\",\n  \"limetka\",\n  \"linie\",\n  \"linka\",\n  \"linoleum\",\n  \"listopad\",\n  \"litina\",\n  \"litovat\",\n  \"lobista\",\n  \"lodivod\",\n  \"logika\",\n  \"logoped\",\n  \"lokalita\",\n  \"loket\",\n  \"lomcovat\",\n  \"lopata\",\n  \"lopuch\",\n  \"lord\",\n  \"losos\",\n  \"lotr\",\n  \"loudal\",\n  \"louh\",\n  \"louka\",\n  \"louskat\",\n  \"lovec\",\n  \"lstivost\",\n  \"lucerna\",\n  \"lucifer\",\n  \"lump\",\n  \"lusk\",\n  \"lustrace\",\n  \"lvice\",\n  \"lyra\",\n  \"lyrika\",\n  \"lysina\",\n  \"madam\",\n  \"madlo\",\n  \"magistr\",\n  \"mahagon\",\n  \"majetek\",\n  \"majitel\",\n  \"majorita\",\n  \"makak\",\n  \"makovice\",\n  \"makrela\",\n  \"malba\",\n  \"malina\",\n  \"malovat\",\n  \"malvice\",\n  \"maminka\",\n  \"mandle\",\n  \"manko\",\n  \"marnost\",\n  \"masakr\",\n  \"maskot\",\n  \"masopust\",\n  \"matice\",\n  \"matrika\",\n  \"maturita\",\n  \"mazanec\",\n  \"mazivo\",\n  \"mazlit\",\n  \"mazurka\",\n  \"mdloba\",\n  \"mechanik\",\n  \"meditace\",\n  \"medovina\",\n  \"melasa\",\n  \"meloun\",\n  \"mentolka\",\n  \"metla\",\n  \"metoda\",\n  \"metr\",\n  \"mezera\",\n  \"migrace\",\n  \"mihnout\",\n  \"mihule\",\n  \"mikina\",\n  \"mikrofon\",\n  \"milenec\",\n  \"milimetr\",\n  \"milost\",\n  \"mimika\",\n  \"mincovna\",\n  \"minibar\",\n  \"minomet\",\n  \"minulost\",\n  \"miska\",\n  \"mistr\",\n  \"mixovat\",\n  \"mladost\",\n  \"mlha\",\n  \"mlhovina\",\n  \"mlok\",\n  \"mlsat\",\n  \"mluvit\",\n  \"mnich\",\n  \"mnohem\",\n  \"mobil\",\n  \"mocnost\",\n  \"modelka\",\n  \"modlitba\",\n  \"mohyla\",\n  \"mokro\",\n  \"molekula\",\n  \"momentka\",\n  \"monarcha\",\n  \"monokl\",\n  \"monstrum\",\n  \"montovat\",\n  \"monzun\",\n  \"mosaz\",\n  \"moskyt\",\n  \"most\",\n  \"motivace\",\n  \"motorka\",\n  \"motyka\",\n  \"moucha\",\n  \"moudrost\",\n  \"mozaika\",\n  \"mozek\",\n  \"mozol\",\n  \"mramor\",\n  \"mravenec\",\n  \"mrkev\",\n  \"mrtvola\",\n  \"mrzet\",\n  \"mrzutost\",\n  \"mstitel\",\n  \"mudrc\",\n  \"muflon\",\n  \"mulat\",\n  \"mumie\",\n  \"munice\",\n  \"muset\",\n  \"mutace\",\n  \"muzeum\",\n  \"muzikant\",\n  \"myslivec\",\n  \"mzda\",\n  \"nabourat\",\n  \"nachytat\",\n  \"nadace\",\n  \"nadbytek\",\n  \"nadhoz\",\n  \"nadobro\",\n  \"nadpis\",\n  \"nahlas\",\n  \"nahnat\",\n  \"nahodile\",\n  \"nahradit\",\n  \"naivita\",\n  \"najednou\",\n  \"najisto\",\n  \"najmout\",\n  \"naklonit\",\n  \"nakonec\",\n  \"nakrmit\",\n  \"nalevo\",\n  \"namazat\",\n  \"namluvit\",\n  \"nanometr\",\n  \"naoko\",\n  \"naopak\",\n  \"naostro\",\n  \"napadat\",\n  \"napevno\",\n  \"naplnit\",\n  \"napnout\",\n  \"naposled\",\n  \"naprosto\",\n  \"narodit\",\n  \"naruby\",\n  \"narychlo\",\n  \"nasadit\",\n  \"nasekat\",\n  \"naslepo\",\n  \"nastat\",\n  \"natolik\",\n  \"navenek\",\n  \"navrch\",\n  \"navzdory\",\n  \"nazvat\",\n  \"nebe\",\n  \"nechat\",\n  \"necky\",\n  \"nedaleko\",\n  \"nedbat\",\n  \"neduh\",\n  \"negace\",\n  \"nehet\",\n  \"nehoda\",\n  \"nejen\",\n  \"nejprve\",\n  \"neklid\",\n  \"nelibost\",\n  \"nemilost\",\n  \"nemoc\",\n  \"neochota\",\n  \"neonka\",\n  \"nepokoj\",\n  \"nerost\",\n  \"nerv\",\n  \"nesmysl\",\n  \"nesoulad\",\n  \"netvor\",\n  \"neuron\",\n  \"nevina\",\n  \"nezvykle\",\n  \"nicota\",\n  \"nijak\",\n  \"nikam\",\n  \"nikdy\",\n  \"nikl\",\n  \"nikterak\",\n  \"nitro\",\n  \"nocleh\",\n  \"nohavice\",\n  \"nominace\",\n  \"nora\",\n  \"norek\",\n  \"nositel\",\n  \"nosnost\",\n  \"nouze\",\n  \"noviny\",\n  \"novota\",\n  \"nozdra\",\n  \"nuda\",\n  \"nudle\",\n  \"nuget\",\n  \"nutit\",\n  \"nutnost\",\n  \"nutrie\",\n  \"nymfa\",\n  \"obal\",\n  \"obarvit\",\n  \"obava\",\n  \"obdiv\",\n  \"obec\",\n  \"obehnat\",\n  \"obejmout\",\n  \"obezita\",\n  \"obhajoba\",\n  \"obilnice\",\n  \"objasnit\",\n  \"objekt\",\n  \"obklopit\",\n  \"oblast\",\n  \"oblek\",\n  \"obliba\",\n  \"obloha\",\n  \"obluda\",\n  \"obnos\",\n  \"obohatit\",\n  \"obojek\",\n  \"obout\",\n  \"obrazec\",\n  \"obrna\",\n  \"obruba\",\n  \"obrys\",\n  \"obsah\",\n  \"obsluha\",\n  \"obstarat\",\n  \"obuv\",\n  \"obvaz\",\n  \"obvinit\",\n  \"obvod\",\n  \"obvykle\",\n  \"obyvatel\",\n  \"obzor\",\n  \"ocas\",\n  \"ocel\",\n  \"ocenit\",\n  \"ochladit\",\n  \"ochota\",\n  \"ochrana\",\n  \"ocitnout\",\n  \"odboj\",\n  \"odbyt\",\n  \"odchod\",\n  \"odcizit\",\n  \"odebrat\",\n  \"odeslat\",\n  \"odevzdat\",\n  \"odezva\",\n  \"odhadce\",\n  \"odhodit\",\n  \"odjet\",\n  \"odjinud\",\n  \"odkaz\",\n  \"odkoupit\",\n  \"odliv\",\n  \"odluka\",\n  \"odmlka\",\n  \"odolnost\",\n  \"odpad\",\n  \"odpis\",\n  \"odplout\",\n  \"odpor\",\n  \"odpustit\",\n  \"odpykat\",\n  \"odrazka\",\n  \"odsoudit\",\n  \"odstup\",\n  \"odsun\",\n  \"odtok\",\n  \"odtud\",\n  \"odvaha\",\n  \"odveta\",\n  \"odvolat\",\n  \"odvracet\",\n  \"odznak\",\n  \"ofina\",\n  \"ofsajd\",\n  \"ohlas\",\n  \"ohnisko\",\n  \"ohrada\",\n  \"ohrozit\",\n  \"ohryzek\",\n  \"okap\",\n  \"okenice\",\n  \"oklika\",\n  \"okno\",\n  \"okouzlit\",\n  \"okovy\",\n  \"okrasa\",\n  \"okres\",\n  \"okrsek\",\n  \"okruh\",\n  \"okupant\",\n  \"okurka\",\n  \"okusit\",\n  \"olejnina\",\n  \"olizovat\",\n  \"omak\",\n  \"omeleta\",\n  \"omezit\",\n  \"omladina\",\n  \"omlouvat\",\n  \"omluva\",\n  \"omyl\",\n  \"onehdy\",\n  \"opakovat\",\n  \"opasek\",\n  \"operace\",\n  \"opice\",\n  \"opilost\",\n  \"opisovat\",\n  \"opora\",\n  \"opozice\",\n  \"opravdu\",\n  \"oproti\",\n  \"orbital\",\n  \"orchestr\",\n  \"orgie\",\n  \"orlice\",\n  \"orloj\",\n  \"ortel\",\n  \"osada\",\n  \"oschnout\",\n  \"osika\",\n  \"osivo\",\n  \"oslava\",\n  \"oslepit\",\n  \"oslnit\",\n  \"oslovit\",\n  \"osnova\",\n  \"osoba\",\n  \"osolit\",\n  \"ospalec\",\n  \"osten\",\n  \"ostraha\",\n  \"ostuda\",\n  \"ostych\",\n  \"osvojit\",\n  \"oteplit\",\n  \"otisk\",\n  \"otop\",\n  \"otrhat\",\n  \"otrlost\",\n  \"otrok\",\n  \"otruby\",\n  \"otvor\",\n  \"ovanout\",\n  \"ovar\",\n  \"oves\",\n  \"ovlivnit\",\n  \"ovoce\",\n  \"oxid\",\n  \"ozdoba\",\n  \"pachatel\",\n  \"pacient\",\n  \"padouch\",\n  \"pahorek\",\n  \"pakt\",\n  \"palanda\",\n  \"palec\",\n  \"palivo\",\n  \"paluba\",\n  \"pamflet\",\n  \"pamlsek\",\n  \"panenka\",\n  \"panika\",\n  \"panna\",\n  \"panovat\",\n  \"panstvo\",\n  \"pantofle\",\n  \"paprika\",\n  \"parketa\",\n  \"parodie\",\n  \"parta\",\n  \"paruka\",\n  \"paryba\",\n  \"paseka\",\n  \"pasivita\",\n  \"pastelka\",\n  \"patent\",\n  \"patrona\",\n  \"pavouk\",\n  \"pazneht\",\n  \"pazourek\",\n  \"pecka\",\n  \"pedagog\",\n  \"pejsek\",\n  \"peklo\",\n  \"peloton\",\n  \"penalta\",\n  \"pendrek\",\n  \"penze\",\n  \"periskop\",\n  \"pero\",\n  \"pestrost\",\n  \"petarda\",\n  \"petice\",\n  \"petrolej\",\n  \"pevnina\",\n  \"pexeso\",\n  \"pianista\",\n  \"piha\",\n  \"pijavice\",\n  \"pikle\",\n  \"piknik\",\n  \"pilina\",\n  \"pilnost\",\n  \"pilulka\",\n  \"pinzeta\",\n  \"pipeta\",\n  \"pisatel\",\n  \"pistole\",\n  \"pitevna\",\n  \"pivnice\",\n  \"pivovar\",\n  \"placenta\",\n  \"plakat\",\n  \"plamen\",\n  \"planeta\",\n  \"plastika\",\n  \"platit\",\n  \"plavidlo\",\n  \"plaz\",\n  \"plech\",\n  \"plemeno\",\n  \"plenta\",\n  \"ples\",\n  \"pletivo\",\n  \"plevel\",\n  \"plivat\",\n  \"plnit\",\n  \"plno\",\n  \"plocha\",\n  \"plodina\",\n  \"plomba\",\n  \"plout\",\n  \"pluk\",\n  \"plyn\",\n  \"pobavit\",\n  \"pobyt\",\n  \"pochod\",\n  \"pocit\",\n  \"poctivec\",\n  \"podat\",\n  \"podcenit\",\n  \"podepsat\",\n  \"podhled\",\n  \"podivit\",\n  \"podklad\",\n  \"podmanit\",\n  \"podnik\",\n  \"podoba\",\n  \"podpora\",\n  \"podraz\",\n  \"podstata\",\n  \"podvod\",\n  \"podzim\",\n  \"poezie\",\n  \"pohanka\",\n  \"pohnutka\",\n  \"pohovor\",\n  \"pohroma\",\n  \"pohyb\",\n  \"pointa\",\n  \"pojistka\",\n  \"pojmout\",\n  \"pokazit\",\n  \"pokles\",\n  \"pokoj\",\n  \"pokrok\",\n  \"pokuta\",\n  \"pokyn\",\n  \"poledne\",\n  \"polibek\",\n  \"polknout\",\n  \"poloha\",\n  \"polynom\",\n  \"pomalu\",\n  \"pominout\",\n  \"pomlka\",\n  \"pomoc\",\n  \"pomsta\",\n  \"pomyslet\",\n  \"ponechat\",\n  \"ponorka\",\n  \"ponurost\",\n  \"popadat\",\n  \"popel\",\n  \"popisek\",\n  \"poplach\",\n  \"poprosit\",\n  \"popsat\",\n  \"popud\",\n  \"poradce\",\n  \"porce\",\n  \"porod\",\n  \"porucha\",\n  \"poryv\",\n  \"posadit\",\n  \"posed\",\n  \"posila\",\n  \"poskok\",\n  \"poslanec\",\n  \"posoudit\",\n  \"pospolu\",\n  \"postava\",\n  \"posudek\",\n  \"posyp\",\n  \"potah\",\n  \"potkan\",\n  \"potlesk\",\n  \"potomek\",\n  \"potrava\",\n  \"potupa\",\n  \"potvora\",\n  \"poukaz\",\n  \"pouto\",\n  \"pouzdro\",\n  \"povaha\",\n  \"povidla\",\n  \"povlak\",\n  \"povoz\",\n  \"povrch\",\n  \"povstat\",\n  \"povyk\",\n  \"povzdech\",\n  \"pozdrav\",\n  \"pozemek\",\n  \"poznatek\",\n  \"pozor\",\n  \"pozvat\",\n  \"pracovat\",\n  \"prahory\",\n  \"praktika\",\n  \"prales\",\n  \"praotec\",\n  \"praporek\",\n  \"prase\",\n  \"pravda\",\n  \"princip\",\n  \"prkno\",\n  \"probudit\",\n  \"procento\",\n  \"prodej\",\n  \"profese\",\n  \"prohra\",\n  \"projekt\",\n  \"prolomit\",\n  \"promile\",\n  \"pronikat\",\n  \"propad\",\n  \"prorok\",\n  \"prosba\",\n  \"proton\",\n  \"proutek\",\n  \"provaz\",\n  \"prskavka\",\n  \"prsten\",\n  \"prudkost\",\n  \"prut\",\n  \"prvek\",\n  \"prvohory\",\n  \"psanec\",\n  \"psovod\",\n  \"pstruh\",\n  \"ptactvo\",\n  \"puberta\",\n  \"puch\",\n  \"pudl\",\n  \"pukavec\",\n  \"puklina\",\n  \"pukrle\",\n  \"pult\",\n  \"pumpa\",\n  \"punc\",\n  \"pupen\",\n  \"pusa\",\n  \"pusinka\",\n  \"pustina\",\n  \"putovat\",\n  \"putyka\",\n  \"pyramida\",\n  \"pysk\",\n  \"pytel\",\n  \"racek\",\n  \"rachot\",\n  \"radiace\",\n  \"radnice\",\n  \"radon\",\n  \"raft\",\n  \"ragby\",\n  \"raketa\",\n  \"rakovina\",\n  \"rameno\",\n  \"rampouch\",\n  \"rande\",\n  \"rarach\",\n  \"rarita\",\n  \"rasovna\",\n  \"rastr\",\n  \"ratolest\",\n  \"razance\",\n  \"razidlo\",\n  \"reagovat\",\n  \"reakce\",\n  \"recept\",\n  \"redaktor\",\n  \"referent\",\n  \"reflex\",\n  \"rejnok\",\n  \"reklama\",\n  \"rekord\",\n  \"rekrut\",\n  \"rektor\",\n  \"reputace\",\n  \"revize\",\n  \"revma\",\n  \"revolver\",\n  \"rezerva\",\n  \"riskovat\",\n  \"riziko\",\n  \"robotika\",\n  \"rodokmen\",\n  \"rohovka\",\n  \"rokle\",\n  \"rokoko\",\n  \"romaneto\",\n  \"ropovod\",\n  \"ropucha\",\n  \"rorejs\",\n  \"rosol\",\n  \"rostlina\",\n  \"rotmistr\",\n  \"rotoped\",\n  \"rotunda\",\n  \"roubenka\",\n  \"roucho\",\n  \"roup\",\n  \"roura\",\n  \"rovina\",\n  \"rovnice\",\n  \"rozbor\",\n  \"rozchod\",\n  \"rozdat\",\n  \"rozeznat\",\n  \"rozhodce\",\n  \"rozinka\",\n  \"rozjezd\",\n  \"rozkaz\",\n  \"rozloha\",\n  \"rozmar\",\n  \"rozpad\",\n  \"rozruch\",\n  \"rozsah\",\n  \"roztok\",\n  \"rozum\",\n  \"rozvod\",\n  \"rubrika\",\n  \"ruchadlo\",\n  \"rukavice\",\n  \"rukopis\",\n  \"ryba\",\n  \"rybolov\",\n  \"rychlost\",\n  \"rydlo\",\n  \"rypadlo\",\n  \"rytina\",\n  \"ryzost\",\n  \"sadista\",\n  \"sahat\",\n  \"sako\",\n  \"samec\",\n  \"samizdat\",\n  \"samota\",\n  \"sanitka\",\n  \"sardinka\",\n  \"sasanka\",\n  \"satelit\",\n  \"sazba\",\n  \"sazenice\",\n  \"sbor\",\n  \"schovat\",\n  \"sebranka\",\n  \"secese\",\n  \"sedadlo\",\n  \"sediment\",\n  \"sedlo\",\n  \"sehnat\",\n  \"sejmout\",\n  \"sekera\",\n  \"sekta\",\n  \"sekunda\",\n  \"sekvoje\",\n  \"semeno\",\n  \"seno\",\n  \"servis\",\n  \"sesadit\",\n  \"seshora\",\n  \"seskok\",\n  \"seslat\",\n  \"sestra\",\n  \"sesuv\",\n  \"sesypat\",\n  \"setba\",\n  \"setina\",\n  \"setkat\",\n  \"setnout\",\n  \"setrvat\",\n  \"sever\",\n  \"seznam\",\n  \"shoda\",\n  \"shrnout\",\n  \"sifon\",\n  \"silnice\",\n  \"sirka\",\n  \"sirotek\",\n  \"sirup\",\n  \"situace\",\n  \"skafandr\",\n  \"skalisko\",\n  \"skanzen\",\n  \"skaut\",\n  \"skeptik\",\n  \"skica\",\n  \"skladba\",\n  \"sklenice\",\n  \"sklo\",\n  \"skluz\",\n  \"skoba\",\n  \"skokan\",\n  \"skoro\",\n  \"skripta\",\n  \"skrz\",\n  \"skupina\",\n  \"skvost\",\n  \"skvrna\",\n  \"slabika\",\n  \"sladidlo\",\n  \"slanina\",\n  \"slast\",\n  \"slavnost\",\n  \"sledovat\",\n  \"slepec\",\n  \"sleva\",\n  \"slezina\",\n  \"slib\",\n  \"slina\",\n  \"sliznice\",\n  \"slon\",\n  \"sloupek\",\n  \"slovo\",\n  \"sluch\",\n  \"sluha\",\n  \"slunce\",\n  \"slupka\",\n  \"slza\",\n  \"smaragd\",\n  \"smetana\",\n  \"smilstvo\",\n  \"smlouva\",\n  \"smog\",\n  \"smrad\",\n  \"smrk\",\n  \"smrtka\",\n  \"smutek\",\n  \"smysl\",\n  \"snad\",\n  \"snaha\",\n  \"snob\",\n  \"sobota\",\n  \"socha\",\n  \"sodovka\",\n  \"sokol\",\n  \"sopka\",\n  \"sotva\",\n  \"souboj\",\n  \"soucit\",\n  \"soudce\",\n  \"souhlas\",\n  \"soulad\",\n  \"soumrak\",\n  \"souprava\",\n  \"soused\",\n  \"soutok\",\n  \"souviset\",\n  \"spalovna\",\n  \"spasitel\",\n  \"spis\",\n  \"splav\",\n  \"spodek\",\n  \"spojenec\",\n  \"spolu\",\n  \"sponzor\",\n  \"spornost\",\n  \"spousta\",\n  \"sprcha\",\n  \"spustit\",\n  \"sranda\",\n  \"sraz\",\n  \"srdce\",\n  \"srna\",\n  \"srnec\",\n  \"srovnat\",\n  \"srpen\",\n  \"srst\",\n  \"srub\",\n  \"stanice\",\n  \"starosta\",\n  \"statika\",\n  \"stavba\",\n  \"stehno\",\n  \"stezka\",\n  \"stodola\",\n  \"stolek\",\n  \"stopa\",\n  \"storno\",\n  \"stoupat\",\n  \"strach\",\n  \"stres\",\n  \"strhnout\",\n  \"strom\",\n  \"struna\",\n  \"studna\",\n  \"stupnice\",\n  \"stvol\",\n  \"styk\",\n  \"subjekt\",\n  \"subtropy\",\n  \"suchar\",\n  \"sudost\",\n  \"sukno\",\n  \"sundat\",\n  \"sunout\",\n  \"surikata\",\n  \"surovina\",\n  \"svah\",\n  \"svalstvo\",\n  \"svetr\",\n  \"svatba\",\n  \"svazek\",\n  \"svisle\",\n  \"svitek\",\n  \"svoboda\",\n  \"svodidlo\",\n  \"svorka\",\n  \"svrab\",\n  \"sykavka\",\n  \"sykot\",\n  \"synek\",\n  \"synovec\",\n  \"sypat\",\n  \"sypkost\",\n  \"syrovost\",\n  \"sysel\",\n  \"sytost\",\n  \"tabletka\",\n  \"tabule\",\n  \"tahoun\",\n  \"tajemno\",\n  \"tajfun\",\n  \"tajga\",\n  \"tajit\",\n  \"tajnost\",\n  \"taktika\",\n  \"tamhle\",\n  \"tampon\",\n  \"tancovat\",\n  \"tanec\",\n  \"tanker\",\n  \"tapeta\",\n  \"tavenina\",\n  \"tazatel\",\n  \"technika\",\n  \"tehdy\",\n  \"tekutina\",\n  \"telefon\",\n  \"temnota\",\n  \"tendence\",\n  \"tenista\",\n  \"tenor\",\n  \"teplota\",\n  \"tepna\",\n  \"teprve\",\n  \"terapie\",\n  \"termoska\",\n  \"textil\",\n  \"ticho\",\n  \"tiskopis\",\n  \"titulek\",\n  \"tkadlec\",\n  \"tkanina\",\n  \"tlapka\",\n  \"tleskat\",\n  \"tlukot\",\n  \"tlupa\",\n  \"tmel\",\n  \"toaleta\",\n  \"topinka\",\n  \"topol\",\n  \"torzo\",\n  \"touha\",\n  \"toulec\",\n  \"tradice\",\n  \"traktor\",\n  \"tramp\",\n  \"trasa\",\n  \"traverza\",\n  \"trefit\",\n  \"trest\",\n  \"trezor\",\n  \"trhavina\",\n  \"trhlina\",\n  \"trochu\",\n  \"trojice\",\n  \"troska\",\n  \"trouba\",\n  \"trpce\",\n  \"trpitel\",\n  \"trpkost\",\n  \"trubec\",\n  \"truchlit\",\n  \"truhlice\",\n  \"trus\",\n  \"trvat\",\n  \"tudy\",\n  \"tuhnout\",\n  \"tuhost\",\n  \"tundra\",\n  \"turista\",\n  \"turnaj\",\n  \"tuzemsko\",\n  \"tvaroh\",\n  \"tvorba\",\n  \"tvrdost\",\n  \"tvrz\",\n  \"tygr\",\n  \"tykev\",\n  \"ubohost\",\n  \"uboze\",\n  \"ubrat\",\n  \"ubrousek\",\n  \"ubrus\",\n  \"ubytovna\",\n  \"ucho\",\n  \"uctivost\",\n  \"udivit\",\n  \"uhradit\",\n  \"ujednat\",\n  \"ujistit\",\n  \"ujmout\",\n  \"ukazatel\",\n  \"uklidnit\",\n  \"uklonit\",\n  \"ukotvit\",\n  \"ukrojit\",\n  \"ulice\",\n  \"ulita\",\n  \"ulovit\",\n  \"umyvadlo\",\n  \"unavit\",\n  \"uniforma\",\n  \"uniknout\",\n  \"upadnout\",\n  \"uplatnit\",\n  \"uplynout\",\n  \"upoutat\",\n  \"upravit\",\n  \"uran\",\n  \"urazit\",\n  \"usednout\",\n  \"usilovat\",\n  \"usmrtit\",\n  \"usnadnit\",\n  \"usnout\",\n  \"usoudit\",\n  \"ustlat\",\n  \"ustrnout\",\n  \"utahovat\",\n  \"utkat\",\n  \"utlumit\",\n  \"utonout\",\n  \"utopenec\",\n  \"utrousit\",\n  \"uvalit\",\n  \"uvolnit\",\n  \"uvozovka\",\n  \"uzdravit\",\n  \"uzel\",\n  \"uzenina\",\n  \"uzlina\",\n  \"uznat\",\n  \"vagon\",\n  \"valcha\",\n  \"valoun\",\n  \"vana\",\n  \"vandal\",\n  \"vanilka\",\n  \"varan\",\n  \"varhany\",\n  \"varovat\",\n  \"vcelku\",\n  \"vchod\",\n  \"vdova\",\n  \"vedro\",\n  \"vegetace\",\n  \"vejce\",\n  \"velbloud\",\n  \"veletrh\",\n  \"velitel\",\n  \"velmoc\",\n  \"velryba\",\n  \"venkov\",\n  \"veranda\",\n  \"verze\",\n  \"veselka\",\n  \"veskrze\",\n  \"vesnice\",\n  \"vespodu\",\n  \"vesta\",\n  \"veterina\",\n  \"veverka\",\n  \"vibrace\",\n  \"vichr\",\n  \"videohra\",\n  \"vidina\",\n  \"vidle\",\n  \"vila\",\n  \"vinice\",\n  \"viset\",\n  \"vitalita\",\n  \"vize\",\n  \"vizitka\",\n  \"vjezd\",\n  \"vklad\",\n  \"vkus\",\n  \"vlajka\",\n  \"vlak\",\n  \"vlasec\",\n  \"vlevo\",\n  \"vlhkost\",\n  \"vliv\",\n  \"vlnovka\",\n  \"vloupat\",\n  \"vnucovat\",\n  \"vnuk\",\n  \"voda\",\n  \"vodivost\",\n  \"vodoznak\",\n  \"vodstvo\",\n  \"vojensky\",\n  \"vojna\",\n  \"vojsko\",\n  \"volant\",\n  \"volba\",\n  \"volit\",\n  \"volno\",\n  \"voskovka\",\n  \"vozidlo\",\n  \"vozovna\",\n  \"vpravo\",\n  \"vrabec\",\n  \"vracet\",\n  \"vrah\",\n  \"vrata\",\n  \"vrba\",\n  \"vrcholek\",\n  \"vrhat\",\n  \"vrstva\",\n  \"vrtule\",\n  \"vsadit\",\n  \"vstoupit\",\n  \"vstup\",\n  \"vtip\",\n  \"vybavit\",\n  \"vybrat\",\n  \"vychovat\",\n  \"vydat\",\n  \"vydra\",\n  \"vyfotit\",\n  \"vyhledat\",\n  \"vyhnout\",\n  \"vyhodit\",\n  \"vyhradit\",\n  \"vyhubit\",\n  \"vyjasnit\",\n  \"vyjet\",\n  \"vyjmout\",\n  \"vyklopit\",\n  \"vykonat\",\n  \"vylekat\",\n  \"vymazat\",\n  \"vymezit\",\n  \"vymizet\",\n  \"vymyslet\",\n  \"vynechat\",\n  \"vynikat\",\n  \"vynutit\",\n  \"vypadat\",\n  \"vyplatit\",\n  \"vypravit\",\n  \"vypustit\",\n  \"vyrazit\",\n  \"vyrovnat\",\n  \"vyrvat\",\n  \"vyslovit\",\n  \"vysoko\",\n  \"vystavit\",\n  \"vysunout\",\n  \"vysypat\",\n  \"vytasit\",\n  \"vytesat\",\n  \"vytratit\",\n  \"vyvinout\",\n  \"vyvolat\",\n  \"vyvrhel\",\n  \"vyzdobit\",\n  \"vyznat\",\n  \"vzadu\",\n  \"vzbudit\",\n  \"vzchopit\",\n  \"vzdor\",\n  \"vzduch\",\n  \"vzdychat\",\n  \"vzestup\",\n  \"vzhledem\",\n  \"vzkaz\",\n  \"vzlykat\",\n  \"vznik\",\n  \"vzorek\",\n  \"vzpoura\",\n  \"vztah\",\n  \"vztek\",\n  \"xylofon\",\n  \"zabrat\",\n  \"zabydlet\",\n  \"zachovat\",\n  \"zadarmo\",\n  \"zadusit\",\n  \"zafoukat\",\n  \"zahltit\",\n  \"zahodit\",\n  \"zahrada\",\n  \"zahynout\",\n  \"zajatec\",\n  \"zajet\",\n  \"zajistit\",\n  \"zaklepat\",\n  \"zakoupit\",\n  \"zalepit\",\n  \"zamezit\",\n  \"zamotat\",\n  \"zamyslet\",\n  \"zanechat\",\n  \"zanikat\",\n  \"zaplatit\",\n  \"zapojit\",\n  \"zapsat\",\n  \"zarazit\",\n  \"zastavit\",\n  \"zasunout\",\n  \"zatajit\",\n  \"zatemnit\",\n  \"zatknout\",\n  \"zaujmout\",\n  \"zavalit\",\n  \"zavelet\",\n  \"zavinit\",\n  \"zavolat\",\n  \"zavrtat\",\n  \"zazvonit\",\n  \"zbavit\",\n  \"zbrusu\",\n  \"zbudovat\",\n  \"zbytek\",\n  \"zdaleka\",\n  \"zdarma\",\n  \"zdatnost\",\n  \"zdivo\",\n  \"zdobit\",\n  \"zdroj\",\n  \"zdvih\",\n  \"zdymadlo\",\n  \"zelenina\",\n  \"zeman\",\n  \"zemina\",\n  \"zeptat\",\n  \"zezadu\",\n  \"zezdola\",\n  \"zhatit\",\n  \"zhltnout\",\n  \"zhluboka\",\n  \"zhotovit\",\n  \"zhruba\",\n  \"zima\",\n  \"zimnice\",\n  \"zjemnit\",\n  \"zklamat\",\n  \"zkoumat\",\n  \"zkratka\",\n  \"zkumavka\",\n  \"zlato\",\n  \"zlehka\",\n  \"zloba\",\n  \"zlom\",\n  \"zlost\",\n  \"zlozvyk\",\n  \"zmapovat\",\n  \"zmar\",\n  \"zmatek\",\n  \"zmije\",\n  \"zmizet\",\n  \"zmocnit\",\n  \"zmodrat\",\n  \"zmrzlina\",\n  \"zmutovat\",\n  \"znak\",\n  \"znalost\",\n  \"znamenat\",\n  \"znovu\",\n  \"zobrazit\",\n  \"zotavit\",\n  \"zoubek\",\n  \"zoufale\",\n  \"zplodit\",\n  \"zpomalit\",\n  \"zprava\",\n  \"zprostit\",\n  \"zprudka\",\n  \"zprvu\",\n  \"zrada\",\n  \"zranit\",\n  \"zrcadlo\",\n  \"zrnitost\",\n  \"zrno\",\n  \"zrovna\",\n  \"zrychlit\",\n  \"zrzavost\",\n  \"zticha\",\n  \"ztratit\",\n  \"zubovina\",\n  \"zubr\",\n  \"zvednout\",\n  \"zvenku\",\n  \"zvesela\",\n  \"zvon\",\n  \"zvrat\",\n  \"zvukovod\",\n  \"zvyk\"\n], Ph = [\n  \"的\",\n  \"一\",\n  \"是\",\n  \"在\",\n  \"不\",\n  \"了\",\n  \"有\",\n  \"和\",\n  \"人\",\n  \"这\",\n  \"中\",\n  \"大\",\n  \"为\",\n  \"上\",\n  \"个\",\n  \"国\",\n  \"我\",\n  \"以\",\n  \"要\",\n  \"他\",\n  \"时\",\n  \"来\",\n  \"用\",\n  \"们\",\n  \"生\",\n  \"到\",\n  \"作\",\n  \"地\",\n  \"于\",\n  \"出\",\n  \"就\",\n  \"分\",\n  \"对\",\n  \"成\",\n  \"会\",\n  \"可\",\n  \"主\",\n  \"发\",\n  \"年\",\n  \"动\",\n  \"同\",\n  \"工\",\n  \"也\",\n  \"能\",\n  \"下\",\n  \"过\",\n  \"子\",\n  \"说\",\n  \"产\",\n  \"种\",\n  \"面\",\n  \"而\",\n  \"方\",\n  \"后\",\n  \"多\",\n  \"定\",\n  \"行\",\n  \"学\",\n  \"法\",\n  \"所\",\n  \"民\",\n  \"得\",\n  \"经\",\n  \"十\",\n  \"三\",\n  \"之\",\n  \"进\",\n  \"着\",\n  \"等\",\n  \"部\",\n  \"度\",\n  \"家\",\n  \"电\",\n  \"力\",\n  \"里\",\n  \"如\",\n  \"水\",\n  \"化\",\n  \"高\",\n  \"自\",\n  \"二\",\n  \"理\",\n  \"起\",\n  \"小\",\n  \"物\",\n  \"现\",\n  \"实\",\n  \"加\",\n  \"量\",\n  \"都\",\n  \"两\",\n  \"体\",\n  \"制\",\n  \"机\",\n  \"当\",\n  \"使\",\n  \"点\",\n  \"从\",\n  \"业\",\n  \"本\",\n  \"去\",\n  \"把\",\n  \"性\",\n  \"好\",\n  \"应\",\n  \"开\",\n  \"它\",\n  \"合\",\n  \"还\",\n  \"因\",\n  \"由\",\n  \"其\",\n  \"些\",\n  \"然\",\n  \"前\",\n  \"外\",\n  \"天\",\n  \"政\",\n  \"四\",\n  \"日\",\n  \"那\",\n  \"社\",\n  \"义\",\n  \"事\",\n  \"平\",\n  \"形\",\n  \"相\",\n  \"全\",\n  \"表\",\n  \"间\",\n  \"样\",\n  \"与\",\n  \"关\",\n  \"各\",\n  \"重\",\n  \"新\",\n  \"线\",\n  \"内\",\n  \"数\",\n  \"正\",\n  \"心\",\n  \"反\",\n  \"你\",\n  \"明\",\n  \"看\",\n  \"原\",\n  \"又\",\n  \"么\",\n  \"利\",\n  \"比\",\n  \"或\",\n  \"但\",\n  \"质\",\n  \"气\",\n  \"第\",\n  \"向\",\n  \"道\",\n  \"命\",\n  \"此\",\n  \"变\",\n  \"条\",\n  \"只\",\n  \"没\",\n  \"结\",\n  \"解\",\n  \"问\",\n  \"意\",\n  \"建\",\n  \"月\",\n  \"公\",\n  \"无\",\n  \"系\",\n  \"军\",\n  \"很\",\n  \"情\",\n  \"者\",\n  \"最\",\n  \"立\",\n  \"代\",\n  \"想\",\n  \"已\",\n  \"通\",\n  \"并\",\n  \"提\",\n  \"直\",\n  \"题\",\n  \"党\",\n  \"程\",\n  \"展\",\n  \"五\",\n  \"果\",\n  \"料\",\n  \"象\",\n  \"员\",\n  \"革\",\n  \"位\",\n  \"入\",\n  \"常\",\n  \"文\",\n  \"总\",\n  \"次\",\n  \"品\",\n  \"式\",\n  \"活\",\n  \"设\",\n  \"及\",\n  \"管\",\n  \"特\",\n  \"件\",\n  \"长\",\n  \"求\",\n  \"老\",\n  \"头\",\n  \"基\",\n  \"资\",\n  \"边\",\n  \"流\",\n  \"路\",\n  \"级\",\n  \"少\",\n  \"图\",\n  \"山\",\n  \"统\",\n  \"接\",\n  \"知\",\n  \"较\",\n  \"将\",\n  \"组\",\n  \"见\",\n  \"计\",\n  \"别\",\n  \"她\",\n  \"手\",\n  \"角\",\n  \"期\",\n  \"根\",\n  \"论\",\n  \"运\",\n  \"农\",\n  \"指\",\n  \"几\",\n  \"九\",\n  \"区\",\n  \"强\",\n  \"放\",\n  \"决\",\n  \"西\",\n  \"被\",\n  \"干\",\n  \"做\",\n  \"必\",\n  \"战\",\n  \"先\",\n  \"回\",\n  \"则\",\n  \"任\",\n  \"取\",\n  \"据\",\n  \"处\",\n  \"队\",\n  \"南\",\n  \"给\",\n  \"色\",\n  \"光\",\n  \"门\",\n  \"即\",\n  \"保\",\n  \"治\",\n  \"北\",\n  \"造\",\n  \"百\",\n  \"规\",\n  \"热\",\n  \"领\",\n  \"七\",\n  \"海\",\n  \"口\",\n  \"东\",\n  \"导\",\n  \"器\",\n  \"压\",\n  \"志\",\n  \"世\",\n  \"金\",\n  \"增\",\n  \"争\",\n  \"济\",\n  \"阶\",\n  \"油\",\n  \"思\",\n  \"术\",\n  \"极\",\n  \"交\",\n  \"受\",\n  \"联\",\n  \"什\",\n  \"认\",\n  \"六\",\n  \"共\",\n  \"权\",\n  \"收\",\n  \"证\",\n  \"改\",\n  \"清\",\n  \"美\",\n  \"再\",\n  \"采\",\n  \"转\",\n  \"更\",\n  \"单\",\n  \"风\",\n  \"切\",\n  \"打\",\n  \"白\",\n  \"教\",\n  \"速\",\n  \"花\",\n  \"带\",\n  \"安\",\n  \"场\",\n  \"身\",\n  \"车\",\n  \"例\",\n  \"真\",\n  \"务\",\n  \"具\",\n  \"万\",\n  \"每\",\n  \"目\",\n  \"至\",\n  \"达\",\n  \"走\",\n  \"积\",\n  \"示\",\n  \"议\",\n  \"声\",\n  \"报\",\n  \"斗\",\n  \"完\",\n  \"类\",\n  \"八\",\n  \"离\",\n  \"华\",\n  \"名\",\n  \"确\",\n  \"才\",\n  \"科\",\n  \"张\",\n  \"信\",\n  \"马\",\n  \"节\",\n  \"话\",\n  \"米\",\n  \"整\",\n  \"空\",\n  \"元\",\n  \"况\",\n  \"今\",\n  \"集\",\n  \"温\",\n  \"传\",\n  \"土\",\n  \"许\",\n  \"步\",\n  \"群\",\n  \"广\",\n  \"石\",\n  \"记\",\n  \"需\",\n  \"段\",\n  \"研\",\n  \"界\",\n  \"拉\",\n  \"林\",\n  \"律\",\n  \"叫\",\n  \"且\",\n  \"究\",\n  \"观\",\n  \"越\",\n  \"织\",\n  \"装\",\n  \"影\",\n  \"算\",\n  \"低\",\n  \"持\",\n  \"音\",\n  \"众\",\n  \"书\",\n  \"布\",\n  \"复\",\n  \"容\",\n  \"儿\",\n  \"须\",\n  \"际\",\n  \"商\",\n  \"非\",\n  \"验\",\n  \"连\",\n  \"断\",\n  \"深\",\n  \"难\",\n  \"近\",\n  \"矿\",\n  \"千\",\n  \"周\",\n  \"委\",\n  \"素\",\n  \"技\",\n  \"备\",\n  \"半\",\n  \"办\",\n  \"青\",\n  \"省\",\n  \"列\",\n  \"习\",\n  \"响\",\n  \"约\",\n  \"支\",\n  \"般\",\n  \"史\",\n  \"感\",\n  \"劳\",\n  \"便\",\n  \"团\",\n  \"往\",\n  \"酸\",\n  \"历\",\n  \"市\",\n  \"克\",\n  \"何\",\n  \"除\",\n  \"消\",\n  \"构\",\n  \"府\",\n  \"称\",\n  \"太\",\n  \"准\",\n  \"精\",\n  \"值\",\n  \"号\",\n  \"率\",\n  \"族\",\n  \"维\",\n  \"划\",\n  \"选\",\n  \"标\",\n  \"写\",\n  \"存\",\n  \"候\",\n  \"毛\",\n  \"亲\",\n  \"快\",\n  \"效\",\n  \"斯\",\n  \"院\",\n  \"查\",\n  \"江\",\n  \"型\",\n  \"眼\",\n  \"王\",\n  \"按\",\n  \"格\",\n  \"养\",\n  \"易\",\n  \"置\",\n  \"派\",\n  \"层\",\n  \"片\",\n  \"始\",\n  \"却\",\n  \"专\",\n  \"状\",\n  \"育\",\n  \"厂\",\n  \"京\",\n  \"识\",\n  \"适\",\n  \"属\",\n  \"圆\",\n  \"包\",\n  \"火\",\n  \"住\",\n  \"调\",\n  \"满\",\n  \"县\",\n  \"局\",\n  \"照\",\n  \"参\",\n  \"红\",\n  \"细\",\n  \"引\",\n  \"听\",\n  \"该\",\n  \"铁\",\n  \"价\",\n  \"严\",\n  \"首\",\n  \"底\",\n  \"液\",\n  \"官\",\n  \"德\",\n  \"随\",\n  \"病\",\n  \"苏\",\n  \"失\",\n  \"尔\",\n  \"死\",\n  \"讲\",\n  \"配\",\n  \"女\",\n  \"黄\",\n  \"推\",\n  \"显\",\n  \"谈\",\n  \"罪\",\n  \"神\",\n  \"艺\",\n  \"呢\",\n  \"席\",\n  \"含\",\n  \"企\",\n  \"望\",\n  \"密\",\n  \"批\",\n  \"营\",\n  \"项\",\n  \"防\",\n  \"举\",\n  \"球\",\n  \"英\",\n  \"氧\",\n  \"势\",\n  \"告\",\n  \"李\",\n  \"台\",\n  \"落\",\n  \"木\",\n  \"帮\",\n  \"轮\",\n  \"破\",\n  \"亚\",\n  \"师\",\n  \"围\",\n  \"注\",\n  \"远\",\n  \"字\",\n  \"材\",\n  \"排\",\n  \"供\",\n  \"河\",\n  \"态\",\n  \"封\",\n  \"另\",\n  \"施\",\n  \"减\",\n  \"树\",\n  \"溶\",\n  \"怎\",\n  \"止\",\n  \"案\",\n  \"言\",\n  \"士\",\n  \"均\",\n  \"武\",\n  \"固\",\n  \"叶\",\n  \"鱼\",\n  \"波\",\n  \"视\",\n  \"仅\",\n  \"费\",\n  \"紧\",\n  \"爱\",\n  \"左\",\n  \"章\",\n  \"早\",\n  \"朝\",\n  \"害\",\n  \"续\",\n  \"轻\",\n  \"服\",\n  \"试\",\n  \"食\",\n  \"充\",\n  \"兵\",\n  \"源\",\n  \"判\",\n  \"护\",\n  \"司\",\n  \"足\",\n  \"某\",\n  \"练\",\n  \"差\",\n  \"致\",\n  \"板\",\n  \"田\",\n  \"降\",\n  \"黑\",\n  \"犯\",\n  \"负\",\n  \"击\",\n  \"范\",\n  \"继\",\n  \"兴\",\n  \"似\",\n  \"余\",\n  \"坚\",\n  \"曲\",\n  \"输\",\n  \"修\",\n  \"故\",\n  \"城\",\n  \"夫\",\n  \"够\",\n  \"送\",\n  \"笔\",\n  \"船\",\n  \"占\",\n  \"右\",\n  \"财\",\n  \"吃\",\n  \"富\",\n  \"春\",\n  \"职\",\n  \"觉\",\n  \"汉\",\n  \"画\",\n  \"功\",\n  \"巴\",\n  \"跟\",\n  \"虽\",\n  \"杂\",\n  \"飞\",\n  \"检\",\n  \"吸\",\n  \"助\",\n  \"升\",\n  \"阳\",\n  \"互\",\n  \"初\",\n  \"创\",\n  \"抗\",\n  \"考\",\n  \"投\",\n  \"坏\",\n  \"策\",\n  \"古\",\n  \"径\",\n  \"换\",\n  \"未\",\n  \"跑\",\n  \"留\",\n  \"钢\",\n  \"曾\",\n  \"端\",\n  \"责\",\n  \"站\",\n  \"简\",\n  \"述\",\n  \"钱\",\n  \"副\",\n  \"尽\",\n  \"帝\",\n  \"射\",\n  \"草\",\n  \"冲\",\n  \"承\",\n  \"独\",\n  \"令\",\n  \"限\",\n  \"阿\",\n  \"宣\",\n  \"环\",\n  \"双\",\n  \"请\",\n  \"超\",\n  \"微\",\n  \"让\",\n  \"控\",\n  \"州\",\n  \"良\",\n  \"轴\",\n  \"找\",\n  \"否\",\n  \"纪\",\n  \"益\",\n  \"依\",\n  \"优\",\n  \"顶\",\n  \"础\",\n  \"载\",\n  \"倒\",\n  \"房\",\n  \"突\",\n  \"坐\",\n  \"粉\",\n  \"敌\",\n  \"略\",\n  \"客\",\n  \"袁\",\n  \"冷\",\n  \"胜\",\n  \"绝\",\n  \"析\",\n  \"块\",\n  \"剂\",\n  \"测\",\n  \"丝\",\n  \"协\",\n  \"诉\",\n  \"念\",\n  \"陈\",\n  \"仍\",\n  \"罗\",\n  \"盐\",\n  \"友\",\n  \"洋\",\n  \"错\",\n  \"苦\",\n  \"夜\",\n  \"刑\",\n  \"移\",\n  \"频\",\n  \"逐\",\n  \"靠\",\n  \"混\",\n  \"母\",\n  \"短\",\n  \"皮\",\n  \"终\",\n  \"聚\",\n  \"汽\",\n  \"村\",\n  \"云\",\n  \"哪\",\n  \"既\",\n  \"距\",\n  \"卫\",\n  \"停\",\n  \"烈\",\n  \"央\",\n  \"察\",\n  \"烧\",\n  \"迅\",\n  \"境\",\n  \"若\",\n  \"印\",\n  \"洲\",\n  \"刻\",\n  \"括\",\n  \"激\",\n  \"孔\",\n  \"搞\",\n  \"甚\",\n  \"室\",\n  \"待\",\n  \"核\",\n  \"校\",\n  \"散\",\n  \"侵\",\n  \"吧\",\n  \"甲\",\n  \"游\",\n  \"久\",\n  \"菜\",\n  \"味\",\n  \"旧\",\n  \"模\",\n  \"湖\",\n  \"货\",\n  \"损\",\n  \"预\",\n  \"阻\",\n  \"毫\",\n  \"普\",\n  \"稳\",\n  \"乙\",\n  \"妈\",\n  \"植\",\n  \"息\",\n  \"扩\",\n  \"银\",\n  \"语\",\n  \"挥\",\n  \"酒\",\n  \"守\",\n  \"拿\",\n  \"序\",\n  \"纸\",\n  \"医\",\n  \"缺\",\n  \"雨\",\n  \"吗\",\n  \"针\",\n  \"刘\",\n  \"啊\",\n  \"急\",\n  \"唱\",\n  \"误\",\n  \"训\",\n  \"愿\",\n  \"审\",\n  \"附\",\n  \"获\",\n  \"茶\",\n  \"鲜\",\n  \"粮\",\n  \"斤\",\n  \"孩\",\n  \"脱\",\n  \"硫\",\n  \"肥\",\n  \"善\",\n  \"龙\",\n  \"演\",\n  \"父\",\n  \"渐\",\n  \"血\",\n  \"欢\",\n  \"械\",\n  \"掌\",\n  \"歌\",\n  \"沙\",\n  \"刚\",\n  \"攻\",\n  \"谓\",\n  \"盾\",\n  \"讨\",\n  \"晚\",\n  \"粒\",\n  \"乱\",\n  \"燃\",\n  \"矛\",\n  \"乎\",\n  \"杀\",\n  \"药\",\n  \"宁\",\n  \"鲁\",\n  \"贵\",\n  \"钟\",\n  \"煤\",\n  \"读\",\n  \"班\",\n  \"伯\",\n  \"香\",\n  \"介\",\n  \"迫\",\n  \"句\",\n  \"丰\",\n  \"培\",\n  \"握\",\n  \"兰\",\n  \"担\",\n  \"弦\",\n  \"蛋\",\n  \"沉\",\n  \"假\",\n  \"穿\",\n  \"执\",\n  \"答\",\n  \"乐\",\n  \"谁\",\n  \"顺\",\n  \"烟\",\n  \"缩\",\n  \"征\",\n  \"脸\",\n  \"喜\",\n  \"松\",\n  \"脚\",\n  \"困\",\n  \"异\",\n  \"免\",\n  \"背\",\n  \"星\",\n  \"福\",\n  \"买\",\n  \"染\",\n  \"井\",\n  \"概\",\n  \"慢\",\n  \"怕\",\n  \"磁\",\n  \"倍\",\n  \"祖\",\n  \"皇\",\n  \"促\",\n  \"静\",\n  \"补\",\n  \"评\",\n  \"翻\",\n  \"肉\",\n  \"践\",\n  \"尼\",\n  \"衣\",\n  \"宽\",\n  \"扬\",\n  \"棉\",\n  \"希\",\n  \"伤\",\n  \"操\",\n  \"垂\",\n  \"秋\",\n  \"宜\",\n  \"氢\",\n  \"套\",\n  \"督\",\n  \"振\",\n  \"架\",\n  \"亮\",\n  \"末\",\n  \"宪\",\n  \"庆\",\n  \"编\",\n  \"牛\",\n  \"触\",\n  \"映\",\n  \"雷\",\n  \"销\",\n  \"诗\",\n  \"座\",\n  \"居\",\n  \"抓\",\n  \"裂\",\n  \"胞\",\n  \"呼\",\n  \"娘\",\n  \"景\",\n  \"威\",\n  \"绿\",\n  \"晶\",\n  \"厚\",\n  \"盟\",\n  \"衡\",\n  \"鸡\",\n  \"孙\",\n  \"延\",\n  \"危\",\n  \"胶\",\n  \"屋\",\n  \"乡\",\n  \"临\",\n  \"陆\",\n  \"顾\",\n  \"掉\",\n  \"呀\",\n  \"灯\",\n  \"岁\",\n  \"措\",\n  \"束\",\n  \"耐\",\n  \"剧\",\n  \"玉\",\n  \"赵\",\n  \"跳\",\n  \"哥\",\n  \"季\",\n  \"课\",\n  \"凯\",\n  \"胡\",\n  \"额\",\n  \"款\",\n  \"绍\",\n  \"卷\",\n  \"齐\",\n  \"伟\",\n  \"蒸\",\n  \"殖\",\n  \"永\",\n  \"宗\",\n  \"苗\",\n  \"川\",\n  \"炉\",\n  \"岩\",\n  \"弱\",\n  \"零\",\n  \"杨\",\n  \"奏\",\n  \"沿\",\n  \"露\",\n  \"杆\",\n  \"探\",\n  \"滑\",\n  \"镇\",\n  \"饭\",\n  \"浓\",\n  \"航\",\n  \"怀\",\n  \"赶\",\n  \"库\",\n  \"夺\",\n  \"伊\",\n  \"灵\",\n  \"税\",\n  \"途\",\n  \"灭\",\n  \"赛\",\n  \"归\",\n  \"召\",\n  \"鼓\",\n  \"播\",\n  \"盘\",\n  \"裁\",\n  \"险\",\n  \"康\",\n  \"唯\",\n  \"录\",\n  \"菌\",\n  \"纯\",\n  \"借\",\n  \"糖\",\n  \"盖\",\n  \"横\",\n  \"符\",\n  \"私\",\n  \"努\",\n  \"堂\",\n  \"域\",\n  \"枪\",\n  \"润\",\n  \"幅\",\n  \"哈\",\n  \"竟\",\n  \"熟\",\n  \"虫\",\n  \"泽\",\n  \"脑\",\n  \"壤\",\n  \"碳\",\n  \"欧\",\n  \"遍\",\n  \"侧\",\n  \"寨\",\n  \"敢\",\n  \"彻\",\n  \"虑\",\n  \"斜\",\n  \"薄\",\n  \"庭\",\n  \"纳\",\n  \"弹\",\n  \"饲\",\n  \"伸\",\n  \"折\",\n  \"麦\",\n  \"湿\",\n  \"暗\",\n  \"荷\",\n  \"瓦\",\n  \"塞\",\n  \"床\",\n  \"筑\",\n  \"恶\",\n  \"户\",\n  \"访\",\n  \"塔\",\n  \"奇\",\n  \"透\",\n  \"梁\",\n  \"刀\",\n  \"旋\",\n  \"迹\",\n  \"卡\",\n  \"氯\",\n  \"遇\",\n  \"份\",\n  \"毒\",\n  \"泥\",\n  \"退\",\n  \"洗\",\n  \"摆\",\n  \"灰\",\n  \"彩\",\n  \"卖\",\n  \"耗\",\n  \"夏\",\n  \"择\",\n  \"忙\",\n  \"铜\",\n  \"献\",\n  \"硬\",\n  \"予\",\n  \"繁\",\n  \"圈\",\n  \"雪\",\n  \"函\",\n  \"亦\",\n  \"抽\",\n  \"篇\",\n  \"阵\",\n  \"阴\",\n  \"丁\",\n  \"尺\",\n  \"追\",\n  \"堆\",\n  \"雄\",\n  \"迎\",\n  \"泛\",\n  \"爸\",\n  \"楼\",\n  \"避\",\n  \"谋\",\n  \"吨\",\n  \"野\",\n  \"猪\",\n  \"旗\",\n  \"累\",\n  \"偏\",\n  \"典\",\n  \"馆\",\n  \"索\",\n  \"秦\",\n  \"脂\",\n  \"潮\",\n  \"爷\",\n  \"豆\",\n  \"忽\",\n  \"托\",\n  \"惊\",\n  \"塑\",\n  \"遗\",\n  \"愈\",\n  \"朱\",\n  \"替\",\n  \"纤\",\n  \"粗\",\n  \"倾\",\n  \"尚\",\n  \"痛\",\n  \"楚\",\n  \"谢\",\n  \"奋\",\n  \"购\",\n  \"磨\",\n  \"君\",\n  \"池\",\n  \"旁\",\n  \"碎\",\n  \"骨\",\n  \"监\",\n  \"捕\",\n  \"弟\",\n  \"暴\",\n  \"割\",\n  \"贯\",\n  \"殊\",\n  \"释\",\n  \"词\",\n  \"亡\",\n  \"壁\",\n  \"顿\",\n  \"宝\",\n  \"午\",\n  \"尘\",\n  \"闻\",\n  \"揭\",\n  \"炮\",\n  \"残\",\n  \"冬\",\n  \"桥\",\n  \"妇\",\n  \"警\",\n  \"综\",\n  \"招\",\n  \"吴\",\n  \"付\",\n  \"浮\",\n  \"遭\",\n  \"徐\",\n  \"您\",\n  \"摇\",\n  \"谷\",\n  \"赞\",\n  \"箱\",\n  \"隔\",\n  \"订\",\n  \"男\",\n  \"吹\",\n  \"园\",\n  \"纷\",\n  \"唐\",\n  \"败\",\n  \"宋\",\n  \"玻\",\n  \"巨\",\n  \"耕\",\n  \"坦\",\n  \"荣\",\n  \"闭\",\n  \"湾\",\n  \"键\",\n  \"凡\",\n  \"驻\",\n  \"锅\",\n  \"救\",\n  \"恩\",\n  \"剥\",\n  \"凝\",\n  \"碱\",\n  \"齿\",\n  \"截\",\n  \"炼\",\n  \"麻\",\n  \"纺\",\n  \"禁\",\n  \"废\",\n  \"盛\",\n  \"版\",\n  \"缓\",\n  \"净\",\n  \"睛\",\n  \"昌\",\n  \"婚\",\n  \"涉\",\n  \"筒\",\n  \"嘴\",\n  \"插\",\n  \"岸\",\n  \"朗\",\n  \"庄\",\n  \"街\",\n  \"藏\",\n  \"姑\",\n  \"贸\",\n  \"腐\",\n  \"奴\",\n  \"啦\",\n  \"惯\",\n  \"乘\",\n  \"伙\",\n  \"恢\",\n  \"匀\",\n  \"纱\",\n  \"扎\",\n  \"辩\",\n  \"耳\",\n  \"彪\",\n  \"臣\",\n  \"亿\",\n  \"璃\",\n  \"抵\",\n  \"脉\",\n  \"秀\",\n  \"萨\",\n  \"俄\",\n  \"网\",\n  \"舞\",\n  \"店\",\n  \"喷\",\n  \"纵\",\n  \"寸\",\n  \"汗\",\n  \"挂\",\n  \"洪\",\n  \"贺\",\n  \"闪\",\n  \"柬\",\n  \"爆\",\n  \"烯\",\n  \"津\",\n  \"稻\",\n  \"墙\",\n  \"软\",\n  \"勇\",\n  \"像\",\n  \"滚\",\n  \"厘\",\n  \"蒙\",\n  \"芳\",\n  \"肯\",\n  \"坡\",\n  \"柱\",\n  \"荡\",\n  \"腿\",\n  \"仪\",\n  \"旅\",\n  \"尾\",\n  \"轧\",\n  \"冰\",\n  \"贡\",\n  \"登\",\n  \"黎\",\n  \"削\",\n  \"钻\",\n  \"勒\",\n  \"逃\",\n  \"障\",\n  \"氨\",\n  \"郭\",\n  \"峰\",\n  \"币\",\n  \"港\",\n  \"伏\",\n  \"轨\",\n  \"亩\",\n  \"毕\",\n  \"擦\",\n  \"莫\",\n  \"刺\",\n  \"浪\",\n  \"秘\",\n  \"援\",\n  \"株\",\n  \"健\",\n  \"售\",\n  \"股\",\n  \"岛\",\n  \"甘\",\n  \"泡\",\n  \"睡\",\n  \"童\",\n  \"铸\",\n  \"汤\",\n  \"阀\",\n  \"休\",\n  \"汇\",\n  \"舍\",\n  \"牧\",\n  \"绕\",\n  \"炸\",\n  \"哲\",\n  \"磷\",\n  \"绩\",\n  \"朋\",\n  \"淡\",\n  \"尖\",\n  \"启\",\n  \"陷\",\n  \"柴\",\n  \"呈\",\n  \"徒\",\n  \"颜\",\n  \"泪\",\n  \"稍\",\n  \"忘\",\n  \"泵\",\n  \"蓝\",\n  \"拖\",\n  \"洞\",\n  \"授\",\n  \"镜\",\n  \"辛\",\n  \"壮\",\n  \"锋\",\n  \"贫\",\n  \"虚\",\n  \"弯\",\n  \"摩\",\n  \"泰\",\n  \"幼\",\n  \"廷\",\n  \"尊\",\n  \"窗\",\n  \"纲\",\n  \"弄\",\n  \"隶\",\n  \"疑\",\n  \"氏\",\n  \"宫\",\n  \"姐\",\n  \"震\",\n  \"瑞\",\n  \"怪\",\n  \"尤\",\n  \"琴\",\n  \"循\",\n  \"描\",\n  \"膜\",\n  \"违\",\n  \"夹\",\n  \"腰\",\n  \"缘\",\n  \"珠\",\n  \"穷\",\n  \"森\",\n  \"枝\",\n  \"竹\",\n  \"沟\",\n  \"催\",\n  \"绳\",\n  \"忆\",\n  \"邦\",\n  \"剩\",\n  \"幸\",\n  \"浆\",\n  \"栏\",\n  \"拥\",\n  \"牙\",\n  \"贮\",\n  \"礼\",\n  \"滤\",\n  \"钠\",\n  \"纹\",\n  \"罢\",\n  \"拍\",\n  \"咱\",\n  \"喊\",\n  \"袖\",\n  \"埃\",\n  \"勤\",\n  \"罚\",\n  \"焦\",\n  \"潜\",\n  \"伍\",\n  \"墨\",\n  \"欲\",\n  \"缝\",\n  \"姓\",\n  \"刊\",\n  \"饱\",\n  \"仿\",\n  \"奖\",\n  \"铝\",\n  \"鬼\",\n  \"丽\",\n  \"跨\",\n  \"默\",\n  \"挖\",\n  \"链\",\n  \"扫\",\n  \"喝\",\n  \"袋\",\n  \"炭\",\n  \"污\",\n  \"幕\",\n  \"诸\",\n  \"弧\",\n  \"励\",\n  \"梅\",\n  \"奶\",\n  \"洁\",\n  \"灾\",\n  \"舟\",\n  \"鉴\",\n  \"苯\",\n  \"讼\",\n  \"抱\",\n  \"毁\",\n  \"懂\",\n  \"寒\",\n  \"智\",\n  \"埔\",\n  \"寄\",\n  \"届\",\n  \"跃\",\n  \"渡\",\n  \"挑\",\n  \"丹\",\n  \"艰\",\n  \"贝\",\n  \"碰\",\n  \"拔\",\n  \"爹\",\n  \"戴\",\n  \"码\",\n  \"梦\",\n  \"芽\",\n  \"熔\",\n  \"赤\",\n  \"渔\",\n  \"哭\",\n  \"敬\",\n  \"颗\",\n  \"奔\",\n  \"铅\",\n  \"仲\",\n  \"虎\",\n  \"稀\",\n  \"妹\",\n  \"乏\",\n  \"珍\",\n  \"申\",\n  \"桌\",\n  \"遵\",\n  \"允\",\n  \"隆\",\n  \"螺\",\n  \"仓\",\n  \"魏\",\n  \"锐\",\n  \"晓\",\n  \"氮\",\n  \"兼\",\n  \"隐\",\n  \"碍\",\n  \"赫\",\n  \"拨\",\n  \"忠\",\n  \"肃\",\n  \"缸\",\n  \"牵\",\n  \"抢\",\n  \"博\",\n  \"巧\",\n  \"壳\",\n  \"兄\",\n  \"杜\",\n  \"讯\",\n  \"诚\",\n  \"碧\",\n  \"祥\",\n  \"柯\",\n  \"页\",\n  \"巡\",\n  \"矩\",\n  \"悲\",\n  \"灌\",\n  \"龄\",\n  \"伦\",\n  \"票\",\n  \"寻\",\n  \"桂\",\n  \"铺\",\n  \"圣\",\n  \"恐\",\n  \"恰\",\n  \"郑\",\n  \"趣\",\n  \"抬\",\n  \"荒\",\n  \"腾\",\n  \"贴\",\n  \"柔\",\n  \"滴\",\n  \"猛\",\n  \"阔\",\n  \"辆\",\n  \"妻\",\n  \"填\",\n  \"撤\",\n  \"储\",\n  \"签\",\n  \"闹\",\n  \"扰\",\n  \"紫\",\n  \"砂\",\n  \"递\",\n  \"戏\",\n  \"吊\",\n  \"陶\",\n  \"伐\",\n  \"喂\",\n  \"疗\",\n  \"瓶\",\n  \"婆\",\n  \"抚\",\n  \"臂\",\n  \"摸\",\n  \"忍\",\n  \"虾\",\n  \"蜡\",\n  \"邻\",\n  \"胸\",\n  \"巩\",\n  \"挤\",\n  \"偶\",\n  \"弃\",\n  \"槽\",\n  \"劲\",\n  \"乳\",\n  \"邓\",\n  \"吉\",\n  \"仁\",\n  \"烂\",\n  \"砖\",\n  \"租\",\n  \"乌\",\n  \"舰\",\n  \"伴\",\n  \"瓜\",\n  \"浅\",\n  \"丙\",\n  \"暂\",\n  \"燥\",\n  \"橡\",\n  \"柳\",\n  \"迷\",\n  \"暖\",\n  \"牌\",\n  \"秧\",\n  \"胆\",\n  \"详\",\n  \"簧\",\n  \"踏\",\n  \"瓷\",\n  \"谱\",\n  \"呆\",\n  \"宾\",\n  \"糊\",\n  \"洛\",\n  \"辉\",\n  \"愤\",\n  \"竞\",\n  \"隙\",\n  \"怒\",\n  \"粘\",\n  \"乃\",\n  \"绪\",\n  \"肩\",\n  \"籍\",\n  \"敏\",\n  \"涂\",\n  \"熙\",\n  \"皆\",\n  \"侦\",\n  \"悬\",\n  \"掘\",\n  \"享\",\n  \"纠\",\n  \"醒\",\n  \"狂\",\n  \"锁\",\n  \"淀\",\n  \"恨\",\n  \"牲\",\n  \"霸\",\n  \"爬\",\n  \"赏\",\n  \"逆\",\n  \"玩\",\n  \"陵\",\n  \"祝\",\n  \"秒\",\n  \"浙\",\n  \"貌\",\n  \"役\",\n  \"彼\",\n  \"悉\",\n  \"鸭\",\n  \"趋\",\n  \"凤\",\n  \"晨\",\n  \"畜\",\n  \"辈\",\n  \"秩\",\n  \"卵\",\n  \"署\",\n  \"梯\",\n  \"炎\",\n  \"滩\",\n  \"棋\",\n  \"驱\",\n  \"筛\",\n  \"峡\",\n  \"冒\",\n  \"啥\",\n  \"寿\",\n  \"译\",\n  \"浸\",\n  \"泉\",\n  \"帽\",\n  \"迟\",\n  \"硅\",\n  \"疆\",\n  \"贷\",\n  \"漏\",\n  \"稿\",\n  \"冠\",\n  \"嫩\",\n  \"胁\",\n  \"芯\",\n  \"牢\",\n  \"叛\",\n  \"蚀\",\n  \"奥\",\n  \"鸣\",\n  \"岭\",\n  \"羊\",\n  \"凭\",\n  \"串\",\n  \"塘\",\n  \"绘\",\n  \"酵\",\n  \"融\",\n  \"盆\",\n  \"锡\",\n  \"庙\",\n  \"筹\",\n  \"冻\",\n  \"辅\",\n  \"摄\",\n  \"袭\",\n  \"筋\",\n  \"拒\",\n  \"僚\",\n  \"旱\",\n  \"钾\",\n  \"鸟\",\n  \"漆\",\n  \"沈\",\n  \"眉\",\n  \"疏\",\n  \"添\",\n  \"棒\",\n  \"穗\",\n  \"硝\",\n  \"韩\",\n  \"逼\",\n  \"扭\",\n  \"侨\",\n  \"凉\",\n  \"挺\",\n  \"碗\",\n  \"栽\",\n  \"炒\",\n  \"杯\",\n  \"患\",\n  \"馏\",\n  \"劝\",\n  \"豪\",\n  \"辽\",\n  \"勃\",\n  \"鸿\",\n  \"旦\",\n  \"吏\",\n  \"拜\",\n  \"狗\",\n  \"埋\",\n  \"辊\",\n  \"掩\",\n  \"饮\",\n  \"搬\",\n  \"骂\",\n  \"辞\",\n  \"勾\",\n  \"扣\",\n  \"估\",\n  \"蒋\",\n  \"绒\",\n  \"雾\",\n  \"丈\",\n  \"朵\",\n  \"姆\",\n  \"拟\",\n  \"宇\",\n  \"辑\",\n  \"陕\",\n  \"雕\",\n  \"偿\",\n  \"蓄\",\n  \"崇\",\n  \"剪\",\n  \"倡\",\n  \"厅\",\n  \"咬\",\n  \"驶\",\n  \"薯\",\n  \"刷\",\n  \"斥\",\n  \"番\",\n  \"赋\",\n  \"奉\",\n  \"佛\",\n  \"浇\",\n  \"漫\",\n  \"曼\",\n  \"扇\",\n  \"钙\",\n  \"桃\",\n  \"扶\",\n  \"仔\",\n  \"返\",\n  \"俗\",\n  \"亏\",\n  \"腔\",\n  \"鞋\",\n  \"棱\",\n  \"覆\",\n  \"框\",\n  \"悄\",\n  \"叔\",\n  \"撞\",\n  \"骗\",\n  \"勘\",\n  \"旺\",\n  \"沸\",\n  \"孤\",\n  \"吐\",\n  \"孟\",\n  \"渠\",\n  \"屈\",\n  \"疾\",\n  \"妙\",\n  \"惜\",\n  \"仰\",\n  \"狠\",\n  \"胀\",\n  \"谐\",\n  \"抛\",\n  \"霉\",\n  \"桑\",\n  \"岗\",\n  \"嘛\",\n  \"衰\",\n  \"盗\",\n  \"渗\",\n  \"脏\",\n  \"赖\",\n  \"涌\",\n  \"甜\",\n  \"曹\",\n  \"阅\",\n  \"肌\",\n  \"哩\",\n  \"厉\",\n  \"烃\",\n  \"纬\",\n  \"毅\",\n  \"昨\",\n  \"伪\",\n  \"症\",\n  \"煮\",\n  \"叹\",\n  \"钉\",\n  \"搭\",\n  \"茎\",\n  \"笼\",\n  \"酷\",\n  \"偷\",\n  \"弓\",\n  \"锥\",\n  \"恒\",\n  \"杰\",\n  \"坑\",\n  \"鼻\",\n  \"翼\",\n  \"纶\",\n  \"叙\",\n  \"狱\",\n  \"逮\",\n  \"罐\",\n  \"络\",\n  \"棚\",\n  \"抑\",\n  \"膨\",\n  \"蔬\",\n  \"寺\",\n  \"骤\",\n  \"穆\",\n  \"冶\",\n  \"枯\",\n  \"册\",\n  \"尸\",\n  \"凸\",\n  \"绅\",\n  \"坯\",\n  \"牺\",\n  \"焰\",\n  \"轰\",\n  \"欣\",\n  \"晋\",\n  \"瘦\",\n  \"御\",\n  \"锭\",\n  \"锦\",\n  \"丧\",\n  \"旬\",\n  \"锻\",\n  \"垄\",\n  \"搜\",\n  \"扑\",\n  \"邀\",\n  \"亭\",\n  \"酯\",\n  \"迈\",\n  \"舒\",\n  \"脆\",\n  \"酶\",\n  \"闲\",\n  \"忧\",\n  \"酚\",\n  \"顽\",\n  \"羽\",\n  \"涨\",\n  \"卸\",\n  \"仗\",\n  \"陪\",\n  \"辟\",\n  \"惩\",\n  \"杭\",\n  \"姚\",\n  \"肚\",\n  \"捉\",\n  \"飘\",\n  \"漂\",\n  \"昆\",\n  \"欺\",\n  \"吾\",\n  \"郎\",\n  \"烷\",\n  \"汁\",\n  \"呵\",\n  \"饰\",\n  \"萧\",\n  \"雅\",\n  \"邮\",\n  \"迁\",\n  \"燕\",\n  \"撒\",\n  \"姻\",\n  \"赴\",\n  \"宴\",\n  \"烦\",\n  \"债\",\n  \"帐\",\n  \"斑\",\n  \"铃\",\n  \"旨\",\n  \"醇\",\n  \"董\",\n  \"饼\",\n  \"雏\",\n  \"姿\",\n  \"拌\",\n  \"傅\",\n  \"腹\",\n  \"妥\",\n  \"揉\",\n  \"贤\",\n  \"拆\",\n  \"歪\",\n  \"葡\",\n  \"胺\",\n  \"丢\",\n  \"浩\",\n  \"徽\",\n  \"昂\",\n  \"垫\",\n  \"挡\",\n  \"览\",\n  \"贪\",\n  \"慰\",\n  \"缴\",\n  \"汪\",\n  \"慌\",\n  \"冯\",\n  \"诺\",\n  \"姜\",\n  \"谊\",\n  \"凶\",\n  \"劣\",\n  \"诬\",\n  \"耀\",\n  \"昏\",\n  \"躺\",\n  \"盈\",\n  \"骑\",\n  \"乔\",\n  \"溪\",\n  \"丛\",\n  \"卢\",\n  \"抹\",\n  \"闷\",\n  \"咨\",\n  \"刮\",\n  \"驾\",\n  \"缆\",\n  \"悟\",\n  \"摘\",\n  \"铒\",\n  \"掷\",\n  \"颇\",\n  \"幻\",\n  \"柄\",\n  \"惠\",\n  \"惨\",\n  \"佳\",\n  \"仇\",\n  \"腊\",\n  \"窝\",\n  \"涤\",\n  \"剑\",\n  \"瞧\",\n  \"堡\",\n  \"泼\",\n  \"葱\",\n  \"罩\",\n  \"霍\",\n  \"捞\",\n  \"胎\",\n  \"苍\",\n  \"滨\",\n  \"俩\",\n  \"捅\",\n  \"湘\",\n  \"砍\",\n  \"霞\",\n  \"邵\",\n  \"萄\",\n  \"疯\",\n  \"淮\",\n  \"遂\",\n  \"熊\",\n  \"粪\",\n  \"烘\",\n  \"宿\",\n  \"档\",\n  \"戈\",\n  \"驳\",\n  \"嫂\",\n  \"裕\",\n  \"徙\",\n  \"箭\",\n  \"捐\",\n  \"肠\",\n  \"撑\",\n  \"晒\",\n  \"辨\",\n  \"殿\",\n  \"莲\",\n  \"摊\",\n  \"搅\",\n  \"酱\",\n  \"屏\",\n  \"疫\",\n  \"哀\",\n  \"蔡\",\n  \"堵\",\n  \"沫\",\n  \"皱\",\n  \"畅\",\n  \"叠\",\n  \"阁\",\n  \"莱\",\n  \"敲\",\n  \"辖\",\n  \"钩\",\n  \"痕\",\n  \"坝\",\n  \"巷\",\n  \"饿\",\n  \"祸\",\n  \"丘\",\n  \"玄\",\n  \"溜\",\n  \"曰\",\n  \"逻\",\n  \"彭\",\n  \"尝\",\n  \"卿\",\n  \"妨\",\n  \"艇\",\n  \"吞\",\n  \"韦\",\n  \"怨\",\n  \"矮\",\n  \"歇\"\n], Oh = [\n  \"的\",\n  \"一\",\n  \"是\",\n  \"在\",\n  \"不\",\n  \"了\",\n  \"有\",\n  \"和\",\n  \"人\",\n  \"這\",\n  \"中\",\n  \"大\",\n  \"為\",\n  \"上\",\n  \"個\",\n  \"國\",\n  \"我\",\n  \"以\",\n  \"要\",\n  \"他\",\n  \"時\",\n  \"來\",\n  \"用\",\n  \"們\",\n  \"生\",\n  \"到\",\n  \"作\",\n  \"地\",\n  \"於\",\n  \"出\",\n  \"就\",\n  \"分\",\n  \"對\",\n  \"成\",\n  \"會\",\n  \"可\",\n  \"主\",\n  \"發\",\n  \"年\",\n  \"動\",\n  \"同\",\n  \"工\",\n  \"也\",\n  \"能\",\n  \"下\",\n  \"過\",\n  \"子\",\n  \"說\",\n  \"產\",\n  \"種\",\n  \"面\",\n  \"而\",\n  \"方\",\n  \"後\",\n  \"多\",\n  \"定\",\n  \"行\",\n  \"學\",\n  \"法\",\n  \"所\",\n  \"民\",\n  \"得\",\n  \"經\",\n  \"十\",\n  \"三\",\n  \"之\",\n  \"進\",\n  \"著\",\n  \"等\",\n  \"部\",\n  \"度\",\n  \"家\",\n  \"電\",\n  \"力\",\n  \"裡\",\n  \"如\",\n  \"水\",\n  \"化\",\n  \"高\",\n  \"自\",\n  \"二\",\n  \"理\",\n  \"起\",\n  \"小\",\n  \"物\",\n  \"現\",\n  \"實\",\n  \"加\",\n  \"量\",\n  \"都\",\n  \"兩\",\n  \"體\",\n  \"制\",\n  \"機\",\n  \"當\",\n  \"使\",\n  \"點\",\n  \"從\",\n  \"業\",\n  \"本\",\n  \"去\",\n  \"把\",\n  \"性\",\n  \"好\",\n  \"應\",\n  \"開\",\n  \"它\",\n  \"合\",\n  \"還\",\n  \"因\",\n  \"由\",\n  \"其\",\n  \"些\",\n  \"然\",\n  \"前\",\n  \"外\",\n  \"天\",\n  \"政\",\n  \"四\",\n  \"日\",\n  \"那\",\n  \"社\",\n  \"義\",\n  \"事\",\n  \"平\",\n  \"形\",\n  \"相\",\n  \"全\",\n  \"表\",\n  \"間\",\n  \"樣\",\n  \"與\",\n  \"關\",\n  \"各\",\n  \"重\",\n  \"新\",\n  \"線\",\n  \"內\",\n  \"數\",\n  \"正\",\n  \"心\",\n  \"反\",\n  \"你\",\n  \"明\",\n  \"看\",\n  \"原\",\n  \"又\",\n  \"麼\",\n  \"利\",\n  \"比\",\n  \"或\",\n  \"但\",\n  \"質\",\n  \"氣\",\n  \"第\",\n  \"向\",\n  \"道\",\n  \"命\",\n  \"此\",\n  \"變\",\n  \"條\",\n  \"只\",\n  \"沒\",\n  \"結\",\n  \"解\",\n  \"問\",\n  \"意\",\n  \"建\",\n  \"月\",\n  \"公\",\n  \"無\",\n  \"系\",\n  \"軍\",\n  \"很\",\n  \"情\",\n  \"者\",\n  \"最\",\n  \"立\",\n  \"代\",\n  \"想\",\n  \"已\",\n  \"通\",\n  \"並\",\n  \"提\",\n  \"直\",\n  \"題\",\n  \"黨\",\n  \"程\",\n  \"展\",\n  \"五\",\n  \"果\",\n  \"料\",\n  \"象\",\n  \"員\",\n  \"革\",\n  \"位\",\n  \"入\",\n  \"常\",\n  \"文\",\n  \"總\",\n  \"次\",\n  \"品\",\n  \"式\",\n  \"活\",\n  \"設\",\n  \"及\",\n  \"管\",\n  \"特\",\n  \"件\",\n  \"長\",\n  \"求\",\n  \"老\",\n  \"頭\",\n  \"基\",\n  \"資\",\n  \"邊\",\n  \"流\",\n  \"路\",\n  \"級\",\n  \"少\",\n  \"圖\",\n  \"山\",\n  \"統\",\n  \"接\",\n  \"知\",\n  \"較\",\n  \"將\",\n  \"組\",\n  \"見\",\n  \"計\",\n  \"別\",\n  \"她\",\n  \"手\",\n  \"角\",\n  \"期\",\n  \"根\",\n  \"論\",\n  \"運\",\n  \"農\",\n  \"指\",\n  \"幾\",\n  \"九\",\n  \"區\",\n  \"強\",\n  \"放\",\n  \"決\",\n  \"西\",\n  \"被\",\n  \"幹\",\n  \"做\",\n  \"必\",\n  \"戰\",\n  \"先\",\n  \"回\",\n  \"則\",\n  \"任\",\n  \"取\",\n  \"據\",\n  \"處\",\n  \"隊\",\n  \"南\",\n  \"給\",\n  \"色\",\n  \"光\",\n  \"門\",\n  \"即\",\n  \"保\",\n  \"治\",\n  \"北\",\n  \"造\",\n  \"百\",\n  \"規\",\n  \"熱\",\n  \"領\",\n  \"七\",\n  \"海\",\n  \"口\",\n  \"東\",\n  \"導\",\n  \"器\",\n  \"壓\",\n  \"志\",\n  \"世\",\n  \"金\",\n  \"增\",\n  \"爭\",\n  \"濟\",\n  \"階\",\n  \"油\",\n  \"思\",\n  \"術\",\n  \"極\",\n  \"交\",\n  \"受\",\n  \"聯\",\n  \"什\",\n  \"認\",\n  \"六\",\n  \"共\",\n  \"權\",\n  \"收\",\n  \"證\",\n  \"改\",\n  \"清\",\n  \"美\",\n  \"再\",\n  \"採\",\n  \"轉\",\n  \"更\",\n  \"單\",\n  \"風\",\n  \"切\",\n  \"打\",\n  \"白\",\n  \"教\",\n  \"速\",\n  \"花\",\n  \"帶\",\n  \"安\",\n  \"場\",\n  \"身\",\n  \"車\",\n  \"例\",\n  \"真\",\n  \"務\",\n  \"具\",\n  \"萬\",\n  \"每\",\n  \"目\",\n  \"至\",\n  \"達\",\n  \"走\",\n  \"積\",\n  \"示\",\n  \"議\",\n  \"聲\",\n  \"報\",\n  \"鬥\",\n  \"完\",\n  \"類\",\n  \"八\",\n  \"離\",\n  \"華\",\n  \"名\",\n  \"確\",\n  \"才\",\n  \"科\",\n  \"張\",\n  \"信\",\n  \"馬\",\n  \"節\",\n  \"話\",\n  \"米\",\n  \"整\",\n  \"空\",\n  \"元\",\n  \"況\",\n  \"今\",\n  \"集\",\n  \"溫\",\n  \"傳\",\n  \"土\",\n  \"許\",\n  \"步\",\n  \"群\",\n  \"廣\",\n  \"石\",\n  \"記\",\n  \"需\",\n  \"段\",\n  \"研\",\n  \"界\",\n  \"拉\",\n  \"林\",\n  \"律\",\n  \"叫\",\n  \"且\",\n  \"究\",\n  \"觀\",\n  \"越\",\n  \"織\",\n  \"裝\",\n  \"影\",\n  \"算\",\n  \"低\",\n  \"持\",\n  \"音\",\n  \"眾\",\n  \"書\",\n  \"布\",\n  \"复\",\n  \"容\",\n  \"兒\",\n  \"須\",\n  \"際\",\n  \"商\",\n  \"非\",\n  \"驗\",\n  \"連\",\n  \"斷\",\n  \"深\",\n  \"難\",\n  \"近\",\n  \"礦\",\n  \"千\",\n  \"週\",\n  \"委\",\n  \"素\",\n  \"技\",\n  \"備\",\n  \"半\",\n  \"辦\",\n  \"青\",\n  \"省\",\n  \"列\",\n  \"習\",\n  \"響\",\n  \"約\",\n  \"支\",\n  \"般\",\n  \"史\",\n  \"感\",\n  \"勞\",\n  \"便\",\n  \"團\",\n  \"往\",\n  \"酸\",\n  \"歷\",\n  \"市\",\n  \"克\",\n  \"何\",\n  \"除\",\n  \"消\",\n  \"構\",\n  \"府\",\n  \"稱\",\n  \"太\",\n  \"準\",\n  \"精\",\n  \"值\",\n  \"號\",\n  \"率\",\n  \"族\",\n  \"維\",\n  \"劃\",\n  \"選\",\n  \"標\",\n  \"寫\",\n  \"存\",\n  \"候\",\n  \"毛\",\n  \"親\",\n  \"快\",\n  \"效\",\n  \"斯\",\n  \"院\",\n  \"查\",\n  \"江\",\n  \"型\",\n  \"眼\",\n  \"王\",\n  \"按\",\n  \"格\",\n  \"養\",\n  \"易\",\n  \"置\",\n  \"派\",\n  \"層\",\n  \"片\",\n  \"始\",\n  \"卻\",\n  \"專\",\n  \"狀\",\n  \"育\",\n  \"廠\",\n  \"京\",\n  \"識\",\n  \"適\",\n  \"屬\",\n  \"圓\",\n  \"包\",\n  \"火\",\n  \"住\",\n  \"調\",\n  \"滿\",\n  \"縣\",\n  \"局\",\n  \"照\",\n  \"參\",\n  \"紅\",\n  \"細\",\n  \"引\",\n  \"聽\",\n  \"該\",\n  \"鐵\",\n  \"價\",\n  \"嚴\",\n  \"首\",\n  \"底\",\n  \"液\",\n  \"官\",\n  \"德\",\n  \"隨\",\n  \"病\",\n  \"蘇\",\n  \"失\",\n  \"爾\",\n  \"死\",\n  \"講\",\n  \"配\",\n  \"女\",\n  \"黃\",\n  \"推\",\n  \"顯\",\n  \"談\",\n  \"罪\",\n  \"神\",\n  \"藝\",\n  \"呢\",\n  \"席\",\n  \"含\",\n  \"企\",\n  \"望\",\n  \"密\",\n  \"批\",\n  \"營\",\n  \"項\",\n  \"防\",\n  \"舉\",\n  \"球\",\n  \"英\",\n  \"氧\",\n  \"勢\",\n  \"告\",\n  \"李\",\n  \"台\",\n  \"落\",\n  \"木\",\n  \"幫\",\n  \"輪\",\n  \"破\",\n  \"亞\",\n  \"師\",\n  \"圍\",\n  \"注\",\n  \"遠\",\n  \"字\",\n  \"材\",\n  \"排\",\n  \"供\",\n  \"河\",\n  \"態\",\n  \"封\",\n  \"另\",\n  \"施\",\n  \"減\",\n  \"樹\",\n  \"溶\",\n  \"怎\",\n  \"止\",\n  \"案\",\n  \"言\",\n  \"士\",\n  \"均\",\n  \"武\",\n  \"固\",\n  \"葉\",\n  \"魚\",\n  \"波\",\n  \"視\",\n  \"僅\",\n  \"費\",\n  \"緊\",\n  \"愛\",\n  \"左\",\n  \"章\",\n  \"早\",\n  \"朝\",\n  \"害\",\n  \"續\",\n  \"輕\",\n  \"服\",\n  \"試\",\n  \"食\",\n  \"充\",\n  \"兵\",\n  \"源\",\n  \"判\",\n  \"護\",\n  \"司\",\n  \"足\",\n  \"某\",\n  \"練\",\n  \"差\",\n  \"致\",\n  \"板\",\n  \"田\",\n  \"降\",\n  \"黑\",\n  \"犯\",\n  \"負\",\n  \"擊\",\n  \"范\",\n  \"繼\",\n  \"興\",\n  \"似\",\n  \"餘\",\n  \"堅\",\n  \"曲\",\n  \"輸\",\n  \"修\",\n  \"故\",\n  \"城\",\n  \"夫\",\n  \"夠\",\n  \"送\",\n  \"筆\",\n  \"船\",\n  \"佔\",\n  \"右\",\n  \"財\",\n  \"吃\",\n  \"富\",\n  \"春\",\n  \"職\",\n  \"覺\",\n  \"漢\",\n  \"畫\",\n  \"功\",\n  \"巴\",\n  \"跟\",\n  \"雖\",\n  \"雜\",\n  \"飛\",\n  \"檢\",\n  \"吸\",\n  \"助\",\n  \"昇\",\n  \"陽\",\n  \"互\",\n  \"初\",\n  \"創\",\n  \"抗\",\n  \"考\",\n  \"投\",\n  \"壞\",\n  \"策\",\n  \"古\",\n  \"徑\",\n  \"換\",\n  \"未\",\n  \"跑\",\n  \"留\",\n  \"鋼\",\n  \"曾\",\n  \"端\",\n  \"責\",\n  \"站\",\n  \"簡\",\n  \"述\",\n  \"錢\",\n  \"副\",\n  \"盡\",\n  \"帝\",\n  \"射\",\n  \"草\",\n  \"衝\",\n  \"承\",\n  \"獨\",\n  \"令\",\n  \"限\",\n  \"阿\",\n  \"宣\",\n  \"環\",\n  \"雙\",\n  \"請\",\n  \"超\",\n  \"微\",\n  \"讓\",\n  \"控\",\n  \"州\",\n  \"良\",\n  \"軸\",\n  \"找\",\n  \"否\",\n  \"紀\",\n  \"益\",\n  \"依\",\n  \"優\",\n  \"頂\",\n  \"礎\",\n  \"載\",\n  \"倒\",\n  \"房\",\n  \"突\",\n  \"坐\",\n  \"粉\",\n  \"敵\",\n  \"略\",\n  \"客\",\n  \"袁\",\n  \"冷\",\n  \"勝\",\n  \"絕\",\n  \"析\",\n  \"塊\",\n  \"劑\",\n  \"測\",\n  \"絲\",\n  \"協\",\n  \"訴\",\n  \"念\",\n  \"陳\",\n  \"仍\",\n  \"羅\",\n  \"鹽\",\n  \"友\",\n  \"洋\",\n  \"錯\",\n  \"苦\",\n  \"夜\",\n  \"刑\",\n  \"移\",\n  \"頻\",\n  \"逐\",\n  \"靠\",\n  \"混\",\n  \"母\",\n  \"短\",\n  \"皮\",\n  \"終\",\n  \"聚\",\n  \"汽\",\n  \"村\",\n  \"雲\",\n  \"哪\",\n  \"既\",\n  \"距\",\n  \"衛\",\n  \"停\",\n  \"烈\",\n  \"央\",\n  \"察\",\n  \"燒\",\n  \"迅\",\n  \"境\",\n  \"若\",\n  \"印\",\n  \"洲\",\n  \"刻\",\n  \"括\",\n  \"激\",\n  \"孔\",\n  \"搞\",\n  \"甚\",\n  \"室\",\n  \"待\",\n  \"核\",\n  \"校\",\n  \"散\",\n  \"侵\",\n  \"吧\",\n  \"甲\",\n  \"遊\",\n  \"久\",\n  \"菜\",\n  \"味\",\n  \"舊\",\n  \"模\",\n  \"湖\",\n  \"貨\",\n  \"損\",\n  \"預\",\n  \"阻\",\n  \"毫\",\n  \"普\",\n  \"穩\",\n  \"乙\",\n  \"媽\",\n  \"植\",\n  \"息\",\n  \"擴\",\n  \"銀\",\n  \"語\",\n  \"揮\",\n  \"酒\",\n  \"守\",\n  \"拿\",\n  \"序\",\n  \"紙\",\n  \"醫\",\n  \"缺\",\n  \"雨\",\n  \"嗎\",\n  \"針\",\n  \"劉\",\n  \"啊\",\n  \"急\",\n  \"唱\",\n  \"誤\",\n  \"訓\",\n  \"願\",\n  \"審\",\n  \"附\",\n  \"獲\",\n  \"茶\",\n  \"鮮\",\n  \"糧\",\n  \"斤\",\n  \"孩\",\n  \"脫\",\n  \"硫\",\n  \"肥\",\n  \"善\",\n  \"龍\",\n  \"演\",\n  \"父\",\n  \"漸\",\n  \"血\",\n  \"歡\",\n  \"械\",\n  \"掌\",\n  \"歌\",\n  \"沙\",\n  \"剛\",\n  \"攻\",\n  \"謂\",\n  \"盾\",\n  \"討\",\n  \"晚\",\n  \"粒\",\n  \"亂\",\n  \"燃\",\n  \"矛\",\n  \"乎\",\n  \"殺\",\n  \"藥\",\n  \"寧\",\n  \"魯\",\n  \"貴\",\n  \"鐘\",\n  \"煤\",\n  \"讀\",\n  \"班\",\n  \"伯\",\n  \"香\",\n  \"介\",\n  \"迫\",\n  \"句\",\n  \"豐\",\n  \"培\",\n  \"握\",\n  \"蘭\",\n  \"擔\",\n  \"弦\",\n  \"蛋\",\n  \"沉\",\n  \"假\",\n  \"穿\",\n  \"執\",\n  \"答\",\n  \"樂\",\n  \"誰\",\n  \"順\",\n  \"煙\",\n  \"縮\",\n  \"徵\",\n  \"臉\",\n  \"喜\",\n  \"松\",\n  \"腳\",\n  \"困\",\n  \"異\",\n  \"免\",\n  \"背\",\n  \"星\",\n  \"福\",\n  \"買\",\n  \"染\",\n  \"井\",\n  \"概\",\n  \"慢\",\n  \"怕\",\n  \"磁\",\n  \"倍\",\n  \"祖\",\n  \"皇\",\n  \"促\",\n  \"靜\",\n  \"補\",\n  \"評\",\n  \"翻\",\n  \"肉\",\n  \"踐\",\n  \"尼\",\n  \"衣\",\n  \"寬\",\n  \"揚\",\n  \"棉\",\n  \"希\",\n  \"傷\",\n  \"操\",\n  \"垂\",\n  \"秋\",\n  \"宜\",\n  \"氫\",\n  \"套\",\n  \"督\",\n  \"振\",\n  \"架\",\n  \"亮\",\n  \"末\",\n  \"憲\",\n  \"慶\",\n  \"編\",\n  \"牛\",\n  \"觸\",\n  \"映\",\n  \"雷\",\n  \"銷\",\n  \"詩\",\n  \"座\",\n  \"居\",\n  \"抓\",\n  \"裂\",\n  \"胞\",\n  \"呼\",\n  \"娘\",\n  \"景\",\n  \"威\",\n  \"綠\",\n  \"晶\",\n  \"厚\",\n  \"盟\",\n  \"衡\",\n  \"雞\",\n  \"孫\",\n  \"延\",\n  \"危\",\n  \"膠\",\n  \"屋\",\n  \"鄉\",\n  \"臨\",\n  \"陸\",\n  \"顧\",\n  \"掉\",\n  \"呀\",\n  \"燈\",\n  \"歲\",\n  \"措\",\n  \"束\",\n  \"耐\",\n  \"劇\",\n  \"玉\",\n  \"趙\",\n  \"跳\",\n  \"哥\",\n  \"季\",\n  \"課\",\n  \"凱\",\n  \"胡\",\n  \"額\",\n  \"款\",\n  \"紹\",\n  \"卷\",\n  \"齊\",\n  \"偉\",\n  \"蒸\",\n  \"殖\",\n  \"永\",\n  \"宗\",\n  \"苗\",\n  \"川\",\n  \"爐\",\n  \"岩\",\n  \"弱\",\n  \"零\",\n  \"楊\",\n  \"奏\",\n  \"沿\",\n  \"露\",\n  \"桿\",\n  \"探\",\n  \"滑\",\n  \"鎮\",\n  \"飯\",\n  \"濃\",\n  \"航\",\n  \"懷\",\n  \"趕\",\n  \"庫\",\n  \"奪\",\n  \"伊\",\n  \"靈\",\n  \"稅\",\n  \"途\",\n  \"滅\",\n  \"賽\",\n  \"歸\",\n  \"召\",\n  \"鼓\",\n  \"播\",\n  \"盤\",\n  \"裁\",\n  \"險\",\n  \"康\",\n  \"唯\",\n  \"錄\",\n  \"菌\",\n  \"純\",\n  \"借\",\n  \"糖\",\n  \"蓋\",\n  \"橫\",\n  \"符\",\n  \"私\",\n  \"努\",\n  \"堂\",\n  \"域\",\n  \"槍\",\n  \"潤\",\n  \"幅\",\n  \"哈\",\n  \"竟\",\n  \"熟\",\n  \"蟲\",\n  \"澤\",\n  \"腦\",\n  \"壤\",\n  \"碳\",\n  \"歐\",\n  \"遍\",\n  \"側\",\n  \"寨\",\n  \"敢\",\n  \"徹\",\n  \"慮\",\n  \"斜\",\n  \"薄\",\n  \"庭\",\n  \"納\",\n  \"彈\",\n  \"飼\",\n  \"伸\",\n  \"折\",\n  \"麥\",\n  \"濕\",\n  \"暗\",\n  \"荷\",\n  \"瓦\",\n  \"塞\",\n  \"床\",\n  \"築\",\n  \"惡\",\n  \"戶\",\n  \"訪\",\n  \"塔\",\n  \"奇\",\n  \"透\",\n  \"梁\",\n  \"刀\",\n  \"旋\",\n  \"跡\",\n  \"卡\",\n  \"氯\",\n  \"遇\",\n  \"份\",\n  \"毒\",\n  \"泥\",\n  \"退\",\n  \"洗\",\n  \"擺\",\n  \"灰\",\n  \"彩\",\n  \"賣\",\n  \"耗\",\n  \"夏\",\n  \"擇\",\n  \"忙\",\n  \"銅\",\n  \"獻\",\n  \"硬\",\n  \"予\",\n  \"繁\",\n  \"圈\",\n  \"雪\",\n  \"函\",\n  \"亦\",\n  \"抽\",\n  \"篇\",\n  \"陣\",\n  \"陰\",\n  \"丁\",\n  \"尺\",\n  \"追\",\n  \"堆\",\n  \"雄\",\n  \"迎\",\n  \"泛\",\n  \"爸\",\n  \"樓\",\n  \"避\",\n  \"謀\",\n  \"噸\",\n  \"野\",\n  \"豬\",\n  \"旗\",\n  \"累\",\n  \"偏\",\n  \"典\",\n  \"館\",\n  \"索\",\n  \"秦\",\n  \"脂\",\n  \"潮\",\n  \"爺\",\n  \"豆\",\n  \"忽\",\n  \"托\",\n  \"驚\",\n  \"塑\",\n  \"遺\",\n  \"愈\",\n  \"朱\",\n  \"替\",\n  \"纖\",\n  \"粗\",\n  \"傾\",\n  \"尚\",\n  \"痛\",\n  \"楚\",\n  \"謝\",\n  \"奮\",\n  \"購\",\n  \"磨\",\n  \"君\",\n  \"池\",\n  \"旁\",\n  \"碎\",\n  \"骨\",\n  \"監\",\n  \"捕\",\n  \"弟\",\n  \"暴\",\n  \"割\",\n  \"貫\",\n  \"殊\",\n  \"釋\",\n  \"詞\",\n  \"亡\",\n  \"壁\",\n  \"頓\",\n  \"寶\",\n  \"午\",\n  \"塵\",\n  \"聞\",\n  \"揭\",\n  \"炮\",\n  \"殘\",\n  \"冬\",\n  \"橋\",\n  \"婦\",\n  \"警\",\n  \"綜\",\n  \"招\",\n  \"吳\",\n  \"付\",\n  \"浮\",\n  \"遭\",\n  \"徐\",\n  \"您\",\n  \"搖\",\n  \"谷\",\n  \"贊\",\n  \"箱\",\n  \"隔\",\n  \"訂\",\n  \"男\",\n  \"吹\",\n  \"園\",\n  \"紛\",\n  \"唐\",\n  \"敗\",\n  \"宋\",\n  \"玻\",\n  \"巨\",\n  \"耕\",\n  \"坦\",\n  \"榮\",\n  \"閉\",\n  \"灣\",\n  \"鍵\",\n  \"凡\",\n  \"駐\",\n  \"鍋\",\n  \"救\",\n  \"恩\",\n  \"剝\",\n  \"凝\",\n  \"鹼\",\n  \"齒\",\n  \"截\",\n  \"煉\",\n  \"麻\",\n  \"紡\",\n  \"禁\",\n  \"廢\",\n  \"盛\",\n  \"版\",\n  \"緩\",\n  \"淨\",\n  \"睛\",\n  \"昌\",\n  \"婚\",\n  \"涉\",\n  \"筒\",\n  \"嘴\",\n  \"插\",\n  \"岸\",\n  \"朗\",\n  \"莊\",\n  \"街\",\n  \"藏\",\n  \"姑\",\n  \"貿\",\n  \"腐\",\n  \"奴\",\n  \"啦\",\n  \"慣\",\n  \"乘\",\n  \"夥\",\n  \"恢\",\n  \"勻\",\n  \"紗\",\n  \"扎\",\n  \"辯\",\n  \"耳\",\n  \"彪\",\n  \"臣\",\n  \"億\",\n  \"璃\",\n  \"抵\",\n  \"脈\",\n  \"秀\",\n  \"薩\",\n  \"俄\",\n  \"網\",\n  \"舞\",\n  \"店\",\n  \"噴\",\n  \"縱\",\n  \"寸\",\n  \"汗\",\n  \"掛\",\n  \"洪\",\n  \"賀\",\n  \"閃\",\n  \"柬\",\n  \"爆\",\n  \"烯\",\n  \"津\",\n  \"稻\",\n  \"牆\",\n  \"軟\",\n  \"勇\",\n  \"像\",\n  \"滾\",\n  \"厘\",\n  \"蒙\",\n  \"芳\",\n  \"肯\",\n  \"坡\",\n  \"柱\",\n  \"盪\",\n  \"腿\",\n  \"儀\",\n  \"旅\",\n  \"尾\",\n  \"軋\",\n  \"冰\",\n  \"貢\",\n  \"登\",\n  \"黎\",\n  \"削\",\n  \"鑽\",\n  \"勒\",\n  \"逃\",\n  \"障\",\n  \"氨\",\n  \"郭\",\n  \"峰\",\n  \"幣\",\n  \"港\",\n  \"伏\",\n  \"軌\",\n  \"畝\",\n  \"畢\",\n  \"擦\",\n  \"莫\",\n  \"刺\",\n  \"浪\",\n  \"秘\",\n  \"援\",\n  \"株\",\n  \"健\",\n  \"售\",\n  \"股\",\n  \"島\",\n  \"甘\",\n  \"泡\",\n  \"睡\",\n  \"童\",\n  \"鑄\",\n  \"湯\",\n  \"閥\",\n  \"休\",\n  \"匯\",\n  \"舍\",\n  \"牧\",\n  \"繞\",\n  \"炸\",\n  \"哲\",\n  \"磷\",\n  \"績\",\n  \"朋\",\n  \"淡\",\n  \"尖\",\n  \"啟\",\n  \"陷\",\n  \"柴\",\n  \"呈\",\n  \"徒\",\n  \"顏\",\n  \"淚\",\n  \"稍\",\n  \"忘\",\n  \"泵\",\n  \"藍\",\n  \"拖\",\n  \"洞\",\n  \"授\",\n  \"鏡\",\n  \"辛\",\n  \"壯\",\n  \"鋒\",\n  \"貧\",\n  \"虛\",\n  \"彎\",\n  \"摩\",\n  \"泰\",\n  \"幼\",\n  \"廷\",\n  \"尊\",\n  \"窗\",\n  \"綱\",\n  \"弄\",\n  \"隸\",\n  \"疑\",\n  \"氏\",\n  \"宮\",\n  \"姐\",\n  \"震\",\n  \"瑞\",\n  \"怪\",\n  \"尤\",\n  \"琴\",\n  \"循\",\n  \"描\",\n  \"膜\",\n  \"違\",\n  \"夾\",\n  \"腰\",\n  \"緣\",\n  \"珠\",\n  \"窮\",\n  \"森\",\n  \"枝\",\n  \"竹\",\n  \"溝\",\n  \"催\",\n  \"繩\",\n  \"憶\",\n  \"邦\",\n  \"剩\",\n  \"幸\",\n  \"漿\",\n  \"欄\",\n  \"擁\",\n  \"牙\",\n  \"貯\",\n  \"禮\",\n  \"濾\",\n  \"鈉\",\n  \"紋\",\n  \"罷\",\n  \"拍\",\n  \"咱\",\n  \"喊\",\n  \"袖\",\n  \"埃\",\n  \"勤\",\n  \"罰\",\n  \"焦\",\n  \"潛\",\n  \"伍\",\n  \"墨\",\n  \"欲\",\n  \"縫\",\n  \"姓\",\n  \"刊\",\n  \"飽\",\n  \"仿\",\n  \"獎\",\n  \"鋁\",\n  \"鬼\",\n  \"麗\",\n  \"跨\",\n  \"默\",\n  \"挖\",\n  \"鏈\",\n  \"掃\",\n  \"喝\",\n  \"袋\",\n  \"炭\",\n  \"污\",\n  \"幕\",\n  \"諸\",\n  \"弧\",\n  \"勵\",\n  \"梅\",\n  \"奶\",\n  \"潔\",\n  \"災\",\n  \"舟\",\n  \"鑑\",\n  \"苯\",\n  \"訟\",\n  \"抱\",\n  \"毀\",\n  \"懂\",\n  \"寒\",\n  \"智\",\n  \"埔\",\n  \"寄\",\n  \"屆\",\n  \"躍\",\n  \"渡\",\n  \"挑\",\n  \"丹\",\n  \"艱\",\n  \"貝\",\n  \"碰\",\n  \"拔\",\n  \"爹\",\n  \"戴\",\n  \"碼\",\n  \"夢\",\n  \"芽\",\n  \"熔\",\n  \"赤\",\n  \"漁\",\n  \"哭\",\n  \"敬\",\n  \"顆\",\n  \"奔\",\n  \"鉛\",\n  \"仲\",\n  \"虎\",\n  \"稀\",\n  \"妹\",\n  \"乏\",\n  \"珍\",\n  \"申\",\n  \"桌\",\n  \"遵\",\n  \"允\",\n  \"隆\",\n  \"螺\",\n  \"倉\",\n  \"魏\",\n  \"銳\",\n  \"曉\",\n  \"氮\",\n  \"兼\",\n  \"隱\",\n  \"礙\",\n  \"赫\",\n  \"撥\",\n  \"忠\",\n  \"肅\",\n  \"缸\",\n  \"牽\",\n  \"搶\",\n  \"博\",\n  \"巧\",\n  \"殼\",\n  \"兄\",\n  \"杜\",\n  \"訊\",\n  \"誠\",\n  \"碧\",\n  \"祥\",\n  \"柯\",\n  \"頁\",\n  \"巡\",\n  \"矩\",\n  \"悲\",\n  \"灌\",\n  \"齡\",\n  \"倫\",\n  \"票\",\n  \"尋\",\n  \"桂\",\n  \"鋪\",\n  \"聖\",\n  \"恐\",\n  \"恰\",\n  \"鄭\",\n  \"趣\",\n  \"抬\",\n  \"荒\",\n  \"騰\",\n  \"貼\",\n  \"柔\",\n  \"滴\",\n  \"猛\",\n  \"闊\",\n  \"輛\",\n  \"妻\",\n  \"填\",\n  \"撤\",\n  \"儲\",\n  \"簽\",\n  \"鬧\",\n  \"擾\",\n  \"紫\",\n  \"砂\",\n  \"遞\",\n  \"戲\",\n  \"吊\",\n  \"陶\",\n  \"伐\",\n  \"餵\",\n  \"療\",\n  \"瓶\",\n  \"婆\",\n  \"撫\",\n  \"臂\",\n  \"摸\",\n  \"忍\",\n  \"蝦\",\n  \"蠟\",\n  \"鄰\",\n  \"胸\",\n  \"鞏\",\n  \"擠\",\n  \"偶\",\n  \"棄\",\n  \"槽\",\n  \"勁\",\n  \"乳\",\n  \"鄧\",\n  \"吉\",\n  \"仁\",\n  \"爛\",\n  \"磚\",\n  \"租\",\n  \"烏\",\n  \"艦\",\n  \"伴\",\n  \"瓜\",\n  \"淺\",\n  \"丙\",\n  \"暫\",\n  \"燥\",\n  \"橡\",\n  \"柳\",\n  \"迷\",\n  \"暖\",\n  \"牌\",\n  \"秧\",\n  \"膽\",\n  \"詳\",\n  \"簧\",\n  \"踏\",\n  \"瓷\",\n  \"譜\",\n  \"呆\",\n  \"賓\",\n  \"糊\",\n  \"洛\",\n  \"輝\",\n  \"憤\",\n  \"競\",\n  \"隙\",\n  \"怒\",\n  \"粘\",\n  \"乃\",\n  \"緒\",\n  \"肩\",\n  \"籍\",\n  \"敏\",\n  \"塗\",\n  \"熙\",\n  \"皆\",\n  \"偵\",\n  \"懸\",\n  \"掘\",\n  \"享\",\n  \"糾\",\n  \"醒\",\n  \"狂\",\n  \"鎖\",\n  \"淀\",\n  \"恨\",\n  \"牲\",\n  \"霸\",\n  \"爬\",\n  \"賞\",\n  \"逆\",\n  \"玩\",\n  \"陵\",\n  \"祝\",\n  \"秒\",\n  \"浙\",\n  \"貌\",\n  \"役\",\n  \"彼\",\n  \"悉\",\n  \"鴨\",\n  \"趨\",\n  \"鳳\",\n  \"晨\",\n  \"畜\",\n  \"輩\",\n  \"秩\",\n  \"卵\",\n  \"署\",\n  \"梯\",\n  \"炎\",\n  \"灘\",\n  \"棋\",\n  \"驅\",\n  \"篩\",\n  \"峽\",\n  \"冒\",\n  \"啥\",\n  \"壽\",\n  \"譯\",\n  \"浸\",\n  \"泉\",\n  \"帽\",\n  \"遲\",\n  \"矽\",\n  \"疆\",\n  \"貸\",\n  \"漏\",\n  \"稿\",\n  \"冠\",\n  \"嫩\",\n  \"脅\",\n  \"芯\",\n  \"牢\",\n  \"叛\",\n  \"蝕\",\n  \"奧\",\n  \"鳴\",\n  \"嶺\",\n  \"羊\",\n  \"憑\",\n  \"串\",\n  \"塘\",\n  \"繪\",\n  \"酵\",\n  \"融\",\n  \"盆\",\n  \"錫\",\n  \"廟\",\n  \"籌\",\n  \"凍\",\n  \"輔\",\n  \"攝\",\n  \"襲\",\n  \"筋\",\n  \"拒\",\n  \"僚\",\n  \"旱\",\n  \"鉀\",\n  \"鳥\",\n  \"漆\",\n  \"沈\",\n  \"眉\",\n  \"疏\",\n  \"添\",\n  \"棒\",\n  \"穗\",\n  \"硝\",\n  \"韓\",\n  \"逼\",\n  \"扭\",\n  \"僑\",\n  \"涼\",\n  \"挺\",\n  \"碗\",\n  \"栽\",\n  \"炒\",\n  \"杯\",\n  \"患\",\n  \"餾\",\n  \"勸\",\n  \"豪\",\n  \"遼\",\n  \"勃\",\n  \"鴻\",\n  \"旦\",\n  \"吏\",\n  \"拜\",\n  \"狗\",\n  \"埋\",\n  \"輥\",\n  \"掩\",\n  \"飲\",\n  \"搬\",\n  \"罵\",\n  \"辭\",\n  \"勾\",\n  \"扣\",\n  \"估\",\n  \"蔣\",\n  \"絨\",\n  \"霧\",\n  \"丈\",\n  \"朵\",\n  \"姆\",\n  \"擬\",\n  \"宇\",\n  \"輯\",\n  \"陝\",\n  \"雕\",\n  \"償\",\n  \"蓄\",\n  \"崇\",\n  \"剪\",\n  \"倡\",\n  \"廳\",\n  \"咬\",\n  \"駛\",\n  \"薯\",\n  \"刷\",\n  \"斥\",\n  \"番\",\n  \"賦\",\n  \"奉\",\n  \"佛\",\n  \"澆\",\n  \"漫\",\n  \"曼\",\n  \"扇\",\n  \"鈣\",\n  \"桃\",\n  \"扶\",\n  \"仔\",\n  \"返\",\n  \"俗\",\n  \"虧\",\n  \"腔\",\n  \"鞋\",\n  \"棱\",\n  \"覆\",\n  \"框\",\n  \"悄\",\n  \"叔\",\n  \"撞\",\n  \"騙\",\n  \"勘\",\n  \"旺\",\n  \"沸\",\n  \"孤\",\n  \"吐\",\n  \"孟\",\n  \"渠\",\n  \"屈\",\n  \"疾\",\n  \"妙\",\n  \"惜\",\n  \"仰\",\n  \"狠\",\n  \"脹\",\n  \"諧\",\n  \"拋\",\n  \"黴\",\n  \"桑\",\n  \"崗\",\n  \"嘛\",\n  \"衰\",\n  \"盜\",\n  \"滲\",\n  \"臟\",\n  \"賴\",\n  \"湧\",\n  \"甜\",\n  \"曹\",\n  \"閱\",\n  \"肌\",\n  \"哩\",\n  \"厲\",\n  \"烴\",\n  \"緯\",\n  \"毅\",\n  \"昨\",\n  \"偽\",\n  \"症\",\n  \"煮\",\n  \"嘆\",\n  \"釘\",\n  \"搭\",\n  \"莖\",\n  \"籠\",\n  \"酷\",\n  \"偷\",\n  \"弓\",\n  \"錐\",\n  \"恆\",\n  \"傑\",\n  \"坑\",\n  \"鼻\",\n  \"翼\",\n  \"綸\",\n  \"敘\",\n  \"獄\",\n  \"逮\",\n  \"罐\",\n  \"絡\",\n  \"棚\",\n  \"抑\",\n  \"膨\",\n  \"蔬\",\n  \"寺\",\n  \"驟\",\n  \"穆\",\n  \"冶\",\n  \"枯\",\n  \"冊\",\n  \"屍\",\n  \"凸\",\n  \"紳\",\n  \"坯\",\n  \"犧\",\n  \"焰\",\n  \"轟\",\n  \"欣\",\n  \"晉\",\n  \"瘦\",\n  \"禦\",\n  \"錠\",\n  \"錦\",\n  \"喪\",\n  \"旬\",\n  \"鍛\",\n  \"壟\",\n  \"搜\",\n  \"撲\",\n  \"邀\",\n  \"亭\",\n  \"酯\",\n  \"邁\",\n  \"舒\",\n  \"脆\",\n  \"酶\",\n  \"閒\",\n  \"憂\",\n  \"酚\",\n  \"頑\",\n  \"羽\",\n  \"漲\",\n  \"卸\",\n  \"仗\",\n  \"陪\",\n  \"闢\",\n  \"懲\",\n  \"杭\",\n  \"姚\",\n  \"肚\",\n  \"捉\",\n  \"飄\",\n  \"漂\",\n  \"昆\",\n  \"欺\",\n  \"吾\",\n  \"郎\",\n  \"烷\",\n  \"汁\",\n  \"呵\",\n  \"飾\",\n  \"蕭\",\n  \"雅\",\n  \"郵\",\n  \"遷\",\n  \"燕\",\n  \"撒\",\n  \"姻\",\n  \"赴\",\n  \"宴\",\n  \"煩\",\n  \"債\",\n  \"帳\",\n  \"斑\",\n  \"鈴\",\n  \"旨\",\n  \"醇\",\n  \"董\",\n  \"餅\",\n  \"雛\",\n  \"姿\",\n  \"拌\",\n  \"傅\",\n  \"腹\",\n  \"妥\",\n  \"揉\",\n  \"賢\",\n  \"拆\",\n  \"歪\",\n  \"葡\",\n  \"胺\",\n  \"丟\",\n  \"浩\",\n  \"徽\",\n  \"昂\",\n  \"墊\",\n  \"擋\",\n  \"覽\",\n  \"貪\",\n  \"慰\",\n  \"繳\",\n  \"汪\",\n  \"慌\",\n  \"馮\",\n  \"諾\",\n  \"姜\",\n  \"誼\",\n  \"兇\",\n  \"劣\",\n  \"誣\",\n  \"耀\",\n  \"昏\",\n  \"躺\",\n  \"盈\",\n  \"騎\",\n  \"喬\",\n  \"溪\",\n  \"叢\",\n  \"盧\",\n  \"抹\",\n  \"悶\",\n  \"諮\",\n  \"刮\",\n  \"駕\",\n  \"纜\",\n  \"悟\",\n  \"摘\",\n  \"鉺\",\n  \"擲\",\n  \"頗\",\n  \"幻\",\n  \"柄\",\n  \"惠\",\n  \"慘\",\n  \"佳\",\n  \"仇\",\n  \"臘\",\n  \"窩\",\n  \"滌\",\n  \"劍\",\n  \"瞧\",\n  \"堡\",\n  \"潑\",\n  \"蔥\",\n  \"罩\",\n  \"霍\",\n  \"撈\",\n  \"胎\",\n  \"蒼\",\n  \"濱\",\n  \"倆\",\n  \"捅\",\n  \"湘\",\n  \"砍\",\n  \"霞\",\n  \"邵\",\n  \"萄\",\n  \"瘋\",\n  \"淮\",\n  \"遂\",\n  \"熊\",\n  \"糞\",\n  \"烘\",\n  \"宿\",\n  \"檔\",\n  \"戈\",\n  \"駁\",\n  \"嫂\",\n  \"裕\",\n  \"徙\",\n  \"箭\",\n  \"捐\",\n  \"腸\",\n  \"撐\",\n  \"曬\",\n  \"辨\",\n  \"殿\",\n  \"蓮\",\n  \"攤\",\n  \"攪\",\n  \"醬\",\n  \"屏\",\n  \"疫\",\n  \"哀\",\n  \"蔡\",\n  \"堵\",\n  \"沫\",\n  \"皺\",\n  \"暢\",\n  \"疊\",\n  \"閣\",\n  \"萊\",\n  \"敲\",\n  \"轄\",\n  \"鉤\",\n  \"痕\",\n  \"壩\",\n  \"巷\",\n  \"餓\",\n  \"禍\",\n  \"丘\",\n  \"玄\",\n  \"溜\",\n  \"曰\",\n  \"邏\",\n  \"彭\",\n  \"嘗\",\n  \"卿\",\n  \"妨\",\n  \"艇\",\n  \"吞\",\n  \"韋\",\n  \"怨\",\n  \"矮\",\n  \"歇\"\n], qh = [\n  \"가격\",\n  \"가끔\",\n  \"가난\",\n  \"가능\",\n  \"가득\",\n  \"가르침\",\n  \"가뭄\",\n  \"가방\",\n  \"가상\",\n  \"가슴\",\n  \"가운데\",\n  \"가을\",\n  \"가이드\",\n  \"가입\",\n  \"가장\",\n  \"가정\",\n  \"가족\",\n  \"가죽\",\n  \"각오\",\n  \"각자\",\n  \"간격\",\n  \"간부\",\n  \"간섭\",\n  \"간장\",\n  \"간접\",\n  \"간판\",\n  \"갈등\",\n  \"갈비\",\n  \"갈색\",\n  \"갈증\",\n  \"감각\",\n  \"감기\",\n  \"감소\",\n  \"감수성\",\n  \"감자\",\n  \"감정\",\n  \"갑자기\",\n  \"강남\",\n  \"강당\",\n  \"강도\",\n  \"강력히\",\n  \"강변\",\n  \"강북\",\n  \"강사\",\n  \"강수량\",\n  \"강아지\",\n  \"강원도\",\n  \"강의\",\n  \"강제\",\n  \"강조\",\n  \"같이\",\n  \"개구리\",\n  \"개나리\",\n  \"개방\",\n  \"개별\",\n  \"개선\",\n  \"개성\",\n  \"개인\",\n  \"객관적\",\n  \"거실\",\n  \"거액\",\n  \"거울\",\n  \"거짓\",\n  \"거품\",\n  \"걱정\",\n  \"건강\",\n  \"건물\",\n  \"건설\",\n  \"건조\",\n  \"건축\",\n  \"걸음\",\n  \"검사\",\n  \"검토\",\n  \"게시판\",\n  \"게임\",\n  \"겨울\",\n  \"견해\",\n  \"결과\",\n  \"결국\",\n  \"결론\",\n  \"결석\",\n  \"결승\",\n  \"결심\",\n  \"결정\",\n  \"결혼\",\n  \"경계\",\n  \"경고\",\n  \"경기\",\n  \"경력\",\n  \"경복궁\",\n  \"경비\",\n  \"경상도\",\n  \"경영\",\n  \"경우\",\n  \"경쟁\",\n  \"경제\",\n  \"경주\",\n  \"경찰\",\n  \"경치\",\n  \"경향\",\n  \"경험\",\n  \"계곡\",\n  \"계단\",\n  \"계란\",\n  \"계산\",\n  \"계속\",\n  \"계약\",\n  \"계절\",\n  \"계층\",\n  \"계획\",\n  \"고객\",\n  \"고구려\",\n  \"고궁\",\n  \"고급\",\n  \"고등학생\",\n  \"고무신\",\n  \"고민\",\n  \"고양이\",\n  \"고장\",\n  \"고전\",\n  \"고집\",\n  \"고춧가루\",\n  \"고통\",\n  \"고향\",\n  \"곡식\",\n  \"골목\",\n  \"골짜기\",\n  \"골프\",\n  \"공간\",\n  \"공개\",\n  \"공격\",\n  \"공군\",\n  \"공급\",\n  \"공기\",\n  \"공동\",\n  \"공무원\",\n  \"공부\",\n  \"공사\",\n  \"공식\",\n  \"공업\",\n  \"공연\",\n  \"공원\",\n  \"공장\",\n  \"공짜\",\n  \"공책\",\n  \"공통\",\n  \"공포\",\n  \"공항\",\n  \"공휴일\",\n  \"과목\",\n  \"과일\",\n  \"과장\",\n  \"과정\",\n  \"과학\",\n  \"관객\",\n  \"관계\",\n  \"관광\",\n  \"관념\",\n  \"관람\",\n  \"관련\",\n  \"관리\",\n  \"관습\",\n  \"관심\",\n  \"관점\",\n  \"관찰\",\n  \"광경\",\n  \"광고\",\n  \"광장\",\n  \"광주\",\n  \"괴로움\",\n  \"굉장히\",\n  \"교과서\",\n  \"교문\",\n  \"교복\",\n  \"교실\",\n  \"교양\",\n  \"교육\",\n  \"교장\",\n  \"교직\",\n  \"교통\",\n  \"교환\",\n  \"교훈\",\n  \"구경\",\n  \"구름\",\n  \"구멍\",\n  \"구별\",\n  \"구분\",\n  \"구석\",\n  \"구성\",\n  \"구속\",\n  \"구역\",\n  \"구입\",\n  \"구청\",\n  \"구체적\",\n  \"국가\",\n  \"국기\",\n  \"국내\",\n  \"국립\",\n  \"국물\",\n  \"국민\",\n  \"국수\",\n  \"국어\",\n  \"국왕\",\n  \"국적\",\n  \"국제\",\n  \"국회\",\n  \"군대\",\n  \"군사\",\n  \"군인\",\n  \"궁극적\",\n  \"권리\",\n  \"권위\",\n  \"권투\",\n  \"귀국\",\n  \"귀신\",\n  \"규정\",\n  \"규칙\",\n  \"균형\",\n  \"그날\",\n  \"그냥\",\n  \"그늘\",\n  \"그러나\",\n  \"그룹\",\n  \"그릇\",\n  \"그림\",\n  \"그제서야\",\n  \"그토록\",\n  \"극복\",\n  \"극히\",\n  \"근거\",\n  \"근교\",\n  \"근래\",\n  \"근로\",\n  \"근무\",\n  \"근본\",\n  \"근원\",\n  \"근육\",\n  \"근처\",\n  \"글씨\",\n  \"글자\",\n  \"금강산\",\n  \"금고\",\n  \"금년\",\n  \"금메달\",\n  \"금액\",\n  \"금연\",\n  \"금요일\",\n  \"금지\",\n  \"긍정적\",\n  \"기간\",\n  \"기관\",\n  \"기념\",\n  \"기능\",\n  \"기독교\",\n  \"기둥\",\n  \"기록\",\n  \"기름\",\n  \"기법\",\n  \"기본\",\n  \"기분\",\n  \"기쁨\",\n  \"기숙사\",\n  \"기술\",\n  \"기억\",\n  \"기업\",\n  \"기온\",\n  \"기운\",\n  \"기원\",\n  \"기적\",\n  \"기준\",\n  \"기침\",\n  \"기혼\",\n  \"기획\",\n  \"긴급\",\n  \"긴장\",\n  \"길이\",\n  \"김밥\",\n  \"김치\",\n  \"김포공항\",\n  \"깍두기\",\n  \"깜빡\",\n  \"깨달음\",\n  \"깨소금\",\n  \"껍질\",\n  \"꼭대기\",\n  \"꽃잎\",\n  \"나들이\",\n  \"나란히\",\n  \"나머지\",\n  \"나물\",\n  \"나침반\",\n  \"나흘\",\n  \"낙엽\",\n  \"난방\",\n  \"날개\",\n  \"날씨\",\n  \"날짜\",\n  \"남녀\",\n  \"남대문\",\n  \"남매\",\n  \"남산\",\n  \"남자\",\n  \"남편\",\n  \"남학생\",\n  \"낭비\",\n  \"낱말\",\n  \"내년\",\n  \"내용\",\n  \"내일\",\n  \"냄비\",\n  \"냄새\",\n  \"냇물\",\n  \"냉동\",\n  \"냉면\",\n  \"냉방\",\n  \"냉장고\",\n  \"넥타이\",\n  \"넷째\",\n  \"노동\",\n  \"노란색\",\n  \"노력\",\n  \"노인\",\n  \"녹음\",\n  \"녹차\",\n  \"녹화\",\n  \"논리\",\n  \"논문\",\n  \"논쟁\",\n  \"놀이\",\n  \"농구\",\n  \"농담\",\n  \"농민\",\n  \"농부\",\n  \"농업\",\n  \"농장\",\n  \"농촌\",\n  \"높이\",\n  \"눈동자\",\n  \"눈물\",\n  \"눈썹\",\n  \"뉴욕\",\n  \"느낌\",\n  \"늑대\",\n  \"능동적\",\n  \"능력\",\n  \"다방\",\n  \"다양성\",\n  \"다음\",\n  \"다이어트\",\n  \"다행\",\n  \"단계\",\n  \"단골\",\n  \"단독\",\n  \"단맛\",\n  \"단순\",\n  \"단어\",\n  \"단위\",\n  \"단점\",\n  \"단체\",\n  \"단추\",\n  \"단편\",\n  \"단풍\",\n  \"달걀\",\n  \"달러\",\n  \"달력\",\n  \"달리\",\n  \"닭고기\",\n  \"담당\",\n  \"담배\",\n  \"담요\",\n  \"담임\",\n  \"답변\",\n  \"답장\",\n  \"당근\",\n  \"당분간\",\n  \"당연히\",\n  \"당장\",\n  \"대규모\",\n  \"대낮\",\n  \"대단히\",\n  \"대답\",\n  \"대도시\",\n  \"대략\",\n  \"대량\",\n  \"대륙\",\n  \"대문\",\n  \"대부분\",\n  \"대신\",\n  \"대응\",\n  \"대장\",\n  \"대전\",\n  \"대접\",\n  \"대중\",\n  \"대책\",\n  \"대출\",\n  \"대충\",\n  \"대통령\",\n  \"대학\",\n  \"대한민국\",\n  \"대합실\",\n  \"대형\",\n  \"덩어리\",\n  \"데이트\",\n  \"도대체\",\n  \"도덕\",\n  \"도둑\",\n  \"도망\",\n  \"도서관\",\n  \"도심\",\n  \"도움\",\n  \"도입\",\n  \"도자기\",\n  \"도저히\",\n  \"도전\",\n  \"도중\",\n  \"도착\",\n  \"독감\",\n  \"독립\",\n  \"독서\",\n  \"독일\",\n  \"독창적\",\n  \"동화책\",\n  \"뒷모습\",\n  \"뒷산\",\n  \"딸아이\",\n  \"마누라\",\n  \"마늘\",\n  \"마당\",\n  \"마라톤\",\n  \"마련\",\n  \"마무리\",\n  \"마사지\",\n  \"마약\",\n  \"마요네즈\",\n  \"마을\",\n  \"마음\",\n  \"마이크\",\n  \"마중\",\n  \"마지막\",\n  \"마찬가지\",\n  \"마찰\",\n  \"마흔\",\n  \"막걸리\",\n  \"막내\",\n  \"막상\",\n  \"만남\",\n  \"만두\",\n  \"만세\",\n  \"만약\",\n  \"만일\",\n  \"만점\",\n  \"만족\",\n  \"만화\",\n  \"많이\",\n  \"말기\",\n  \"말씀\",\n  \"말투\",\n  \"맘대로\",\n  \"망원경\",\n  \"매년\",\n  \"매달\",\n  \"매력\",\n  \"매번\",\n  \"매스컴\",\n  \"매일\",\n  \"매장\",\n  \"맥주\",\n  \"먹이\",\n  \"먼저\",\n  \"먼지\",\n  \"멀리\",\n  \"메일\",\n  \"며느리\",\n  \"며칠\",\n  \"면담\",\n  \"멸치\",\n  \"명단\",\n  \"명령\",\n  \"명예\",\n  \"명의\",\n  \"명절\",\n  \"명칭\",\n  \"명함\",\n  \"모금\",\n  \"모니터\",\n  \"모델\",\n  \"모든\",\n  \"모범\",\n  \"모습\",\n  \"모양\",\n  \"모임\",\n  \"모조리\",\n  \"모집\",\n  \"모퉁이\",\n  \"목걸이\",\n  \"목록\",\n  \"목사\",\n  \"목소리\",\n  \"목숨\",\n  \"목적\",\n  \"목표\",\n  \"몰래\",\n  \"몸매\",\n  \"몸무게\",\n  \"몸살\",\n  \"몸속\",\n  \"몸짓\",\n  \"몸통\",\n  \"몹시\",\n  \"무관심\",\n  \"무궁화\",\n  \"무더위\",\n  \"무덤\",\n  \"무릎\",\n  \"무슨\",\n  \"무엇\",\n  \"무역\",\n  \"무용\",\n  \"무조건\",\n  \"무지개\",\n  \"무척\",\n  \"문구\",\n  \"문득\",\n  \"문법\",\n  \"문서\",\n  \"문제\",\n  \"문학\",\n  \"문화\",\n  \"물가\",\n  \"물건\",\n  \"물결\",\n  \"물고기\",\n  \"물론\",\n  \"물리학\",\n  \"물음\",\n  \"물질\",\n  \"물체\",\n  \"미국\",\n  \"미디어\",\n  \"미사일\",\n  \"미술\",\n  \"미역\",\n  \"미용실\",\n  \"미움\",\n  \"미인\",\n  \"미팅\",\n  \"미혼\",\n  \"민간\",\n  \"민족\",\n  \"민주\",\n  \"믿음\",\n  \"밀가루\",\n  \"밀리미터\",\n  \"밑바닥\",\n  \"바가지\",\n  \"바구니\",\n  \"바나나\",\n  \"바늘\",\n  \"바닥\",\n  \"바닷가\",\n  \"바람\",\n  \"바이러스\",\n  \"바탕\",\n  \"박물관\",\n  \"박사\",\n  \"박수\",\n  \"반대\",\n  \"반드시\",\n  \"반말\",\n  \"반발\",\n  \"반성\",\n  \"반응\",\n  \"반장\",\n  \"반죽\",\n  \"반지\",\n  \"반찬\",\n  \"받침\",\n  \"발가락\",\n  \"발걸음\",\n  \"발견\",\n  \"발달\",\n  \"발레\",\n  \"발목\",\n  \"발바닥\",\n  \"발생\",\n  \"발음\",\n  \"발자국\",\n  \"발전\",\n  \"발톱\",\n  \"발표\",\n  \"밤하늘\",\n  \"밥그릇\",\n  \"밥맛\",\n  \"밥상\",\n  \"밥솥\",\n  \"방금\",\n  \"방면\",\n  \"방문\",\n  \"방바닥\",\n  \"방법\",\n  \"방송\",\n  \"방식\",\n  \"방안\",\n  \"방울\",\n  \"방지\",\n  \"방학\",\n  \"방해\",\n  \"방향\",\n  \"배경\",\n  \"배꼽\",\n  \"배달\",\n  \"배드민턴\",\n  \"백두산\",\n  \"백색\",\n  \"백성\",\n  \"백인\",\n  \"백제\",\n  \"백화점\",\n  \"버릇\",\n  \"버섯\",\n  \"버튼\",\n  \"번개\",\n  \"번역\",\n  \"번지\",\n  \"번호\",\n  \"벌금\",\n  \"벌레\",\n  \"벌써\",\n  \"범위\",\n  \"범인\",\n  \"범죄\",\n  \"법률\",\n  \"법원\",\n  \"법적\",\n  \"법칙\",\n  \"베이징\",\n  \"벨트\",\n  \"변경\",\n  \"변동\",\n  \"변명\",\n  \"변신\",\n  \"변호사\",\n  \"변화\",\n  \"별도\",\n  \"별명\",\n  \"별일\",\n  \"병실\",\n  \"병아리\",\n  \"병원\",\n  \"보관\",\n  \"보너스\",\n  \"보라색\",\n  \"보람\",\n  \"보름\",\n  \"보상\",\n  \"보안\",\n  \"보자기\",\n  \"보장\",\n  \"보전\",\n  \"보존\",\n  \"보통\",\n  \"보편적\",\n  \"보험\",\n  \"복도\",\n  \"복사\",\n  \"복숭아\",\n  \"복습\",\n  \"볶음\",\n  \"본격적\",\n  \"본래\",\n  \"본부\",\n  \"본사\",\n  \"본성\",\n  \"본인\",\n  \"본질\",\n  \"볼펜\",\n  \"봉사\",\n  \"봉지\",\n  \"봉투\",\n  \"부근\",\n  \"부끄러움\",\n  \"부담\",\n  \"부동산\",\n  \"부문\",\n  \"부분\",\n  \"부산\",\n  \"부상\",\n  \"부엌\",\n  \"부인\",\n  \"부작용\",\n  \"부장\",\n  \"부정\",\n  \"부족\",\n  \"부지런히\",\n  \"부친\",\n  \"부탁\",\n  \"부품\",\n  \"부회장\",\n  \"북부\",\n  \"북한\",\n  \"분노\",\n  \"분량\",\n  \"분리\",\n  \"분명\",\n  \"분석\",\n  \"분야\",\n  \"분위기\",\n  \"분필\",\n  \"분홍색\",\n  \"불고기\",\n  \"불과\",\n  \"불교\",\n  \"불꽃\",\n  \"불만\",\n  \"불법\",\n  \"불빛\",\n  \"불안\",\n  \"불이익\",\n  \"불행\",\n  \"브랜드\",\n  \"비극\",\n  \"비난\",\n  \"비닐\",\n  \"비둘기\",\n  \"비디오\",\n  \"비로소\",\n  \"비만\",\n  \"비명\",\n  \"비밀\",\n  \"비바람\",\n  \"비빔밥\",\n  \"비상\",\n  \"비용\",\n  \"비율\",\n  \"비중\",\n  \"비타민\",\n  \"비판\",\n  \"빌딩\",\n  \"빗물\",\n  \"빗방울\",\n  \"빗줄기\",\n  \"빛깔\",\n  \"빨간색\",\n  \"빨래\",\n  \"빨리\",\n  \"사건\",\n  \"사계절\",\n  \"사나이\",\n  \"사냥\",\n  \"사람\",\n  \"사랑\",\n  \"사립\",\n  \"사모님\",\n  \"사물\",\n  \"사방\",\n  \"사상\",\n  \"사생활\",\n  \"사설\",\n  \"사슴\",\n  \"사실\",\n  \"사업\",\n  \"사용\",\n  \"사월\",\n  \"사장\",\n  \"사전\",\n  \"사진\",\n  \"사촌\",\n  \"사춘기\",\n  \"사탕\",\n  \"사투리\",\n  \"사흘\",\n  \"산길\",\n  \"산부인과\",\n  \"산업\",\n  \"산책\",\n  \"살림\",\n  \"살인\",\n  \"살짝\",\n  \"삼계탕\",\n  \"삼국\",\n  \"삼십\",\n  \"삼월\",\n  \"삼촌\",\n  \"상관\",\n  \"상금\",\n  \"상대\",\n  \"상류\",\n  \"상반기\",\n  \"상상\",\n  \"상식\",\n  \"상업\",\n  \"상인\",\n  \"상자\",\n  \"상점\",\n  \"상처\",\n  \"상추\",\n  \"상태\",\n  \"상표\",\n  \"상품\",\n  \"상황\",\n  \"새벽\",\n  \"색깔\",\n  \"색연필\",\n  \"생각\",\n  \"생명\",\n  \"생물\",\n  \"생방송\",\n  \"생산\",\n  \"생선\",\n  \"생신\",\n  \"생일\",\n  \"생활\",\n  \"서랍\",\n  \"서른\",\n  \"서명\",\n  \"서민\",\n  \"서비스\",\n  \"서양\",\n  \"서울\",\n  \"서적\",\n  \"서점\",\n  \"서쪽\",\n  \"서클\",\n  \"석사\",\n  \"석유\",\n  \"선거\",\n  \"선물\",\n  \"선배\",\n  \"선생\",\n  \"선수\",\n  \"선원\",\n  \"선장\",\n  \"선전\",\n  \"선택\",\n  \"선풍기\",\n  \"설거지\",\n  \"설날\",\n  \"설렁탕\",\n  \"설명\",\n  \"설문\",\n  \"설사\",\n  \"설악산\",\n  \"설치\",\n  \"설탕\",\n  \"섭씨\",\n  \"성공\",\n  \"성당\",\n  \"성명\",\n  \"성별\",\n  \"성인\",\n  \"성장\",\n  \"성적\",\n  \"성질\",\n  \"성함\",\n  \"세금\",\n  \"세미나\",\n  \"세상\",\n  \"세월\",\n  \"세종대왕\",\n  \"세탁\",\n  \"센터\",\n  \"센티미터\",\n  \"셋째\",\n  \"소규모\",\n  \"소극적\",\n  \"소금\",\n  \"소나기\",\n  \"소년\",\n  \"소득\",\n  \"소망\",\n  \"소문\",\n  \"소설\",\n  \"소속\",\n  \"소아과\",\n  \"소용\",\n  \"소원\",\n  \"소음\",\n  \"소중히\",\n  \"소지품\",\n  \"소질\",\n  \"소풍\",\n  \"소형\",\n  \"속담\",\n  \"속도\",\n  \"속옷\",\n  \"손가락\",\n  \"손길\",\n  \"손녀\",\n  \"손님\",\n  \"손등\",\n  \"손목\",\n  \"손뼉\",\n  \"손실\",\n  \"손질\",\n  \"손톱\",\n  \"손해\",\n  \"솔직히\",\n  \"솜씨\",\n  \"송아지\",\n  \"송이\",\n  \"송편\",\n  \"쇠고기\",\n  \"쇼핑\",\n  \"수건\",\n  \"수년\",\n  \"수단\",\n  \"수돗물\",\n  \"수동적\",\n  \"수면\",\n  \"수명\",\n  \"수박\",\n  \"수상\",\n  \"수석\",\n  \"수술\",\n  \"수시로\",\n  \"수업\",\n  \"수염\",\n  \"수영\",\n  \"수입\",\n  \"수준\",\n  \"수집\",\n  \"수출\",\n  \"수컷\",\n  \"수필\",\n  \"수학\",\n  \"수험생\",\n  \"수화기\",\n  \"숙녀\",\n  \"숙소\",\n  \"숙제\",\n  \"순간\",\n  \"순서\",\n  \"순수\",\n  \"순식간\",\n  \"순위\",\n  \"숟가락\",\n  \"술병\",\n  \"술집\",\n  \"숫자\",\n  \"스님\",\n  \"스물\",\n  \"스스로\",\n  \"스승\",\n  \"스웨터\",\n  \"스위치\",\n  \"스케이트\",\n  \"스튜디오\",\n  \"스트레스\",\n  \"스포츠\",\n  \"슬쩍\",\n  \"슬픔\",\n  \"습관\",\n  \"습기\",\n  \"승객\",\n  \"승리\",\n  \"승부\",\n  \"승용차\",\n  \"승진\",\n  \"시각\",\n  \"시간\",\n  \"시골\",\n  \"시금치\",\n  \"시나리오\",\n  \"시댁\",\n  \"시리즈\",\n  \"시멘트\",\n  \"시민\",\n  \"시부모\",\n  \"시선\",\n  \"시설\",\n  \"시스템\",\n  \"시아버지\",\n  \"시어머니\",\n  \"시월\",\n  \"시인\",\n  \"시일\",\n  \"시작\",\n  \"시장\",\n  \"시절\",\n  \"시점\",\n  \"시중\",\n  \"시즌\",\n  \"시집\",\n  \"시청\",\n  \"시합\",\n  \"시험\",\n  \"식구\",\n  \"식기\",\n  \"식당\",\n  \"식량\",\n  \"식료품\",\n  \"식물\",\n  \"식빵\",\n  \"식사\",\n  \"식생활\",\n  \"식초\",\n  \"식탁\",\n  \"식품\",\n  \"신고\",\n  \"신규\",\n  \"신념\",\n  \"신문\",\n  \"신발\",\n  \"신비\",\n  \"신사\",\n  \"신세\",\n  \"신용\",\n  \"신제품\",\n  \"신청\",\n  \"신체\",\n  \"신화\",\n  \"실감\",\n  \"실내\",\n  \"실력\",\n  \"실례\",\n  \"실망\",\n  \"실수\",\n  \"실습\",\n  \"실시\",\n  \"실장\",\n  \"실정\",\n  \"실질적\",\n  \"실천\",\n  \"실체\",\n  \"실컷\",\n  \"실태\",\n  \"실패\",\n  \"실험\",\n  \"실현\",\n  \"심리\",\n  \"심부름\",\n  \"심사\",\n  \"심장\",\n  \"심정\",\n  \"심판\",\n  \"쌍둥이\",\n  \"씨름\",\n  \"씨앗\",\n  \"아가씨\",\n  \"아나운서\",\n  \"아드님\",\n  \"아들\",\n  \"아쉬움\",\n  \"아스팔트\",\n  \"아시아\",\n  \"아울러\",\n  \"아저씨\",\n  \"아줌마\",\n  \"아직\",\n  \"아침\",\n  \"아파트\",\n  \"아프리카\",\n  \"아픔\",\n  \"아홉\",\n  \"아흔\",\n  \"악기\",\n  \"악몽\",\n  \"악수\",\n  \"안개\",\n  \"안경\",\n  \"안과\",\n  \"안내\",\n  \"안녕\",\n  \"안동\",\n  \"안방\",\n  \"안부\",\n  \"안주\",\n  \"알루미늄\",\n  \"알코올\",\n  \"암시\",\n  \"암컷\",\n  \"압력\",\n  \"앞날\",\n  \"앞문\",\n  \"애인\",\n  \"애정\",\n  \"액수\",\n  \"앨범\",\n  \"야간\",\n  \"야단\",\n  \"야옹\",\n  \"약간\",\n  \"약국\",\n  \"약속\",\n  \"약수\",\n  \"약점\",\n  \"약품\",\n  \"약혼녀\",\n  \"양념\",\n  \"양력\",\n  \"양말\",\n  \"양배추\",\n  \"양주\",\n  \"양파\",\n  \"어둠\",\n  \"어려움\",\n  \"어른\",\n  \"어젯밤\",\n  \"어쨌든\",\n  \"어쩌다가\",\n  \"어쩐지\",\n  \"언니\",\n  \"언덕\",\n  \"언론\",\n  \"언어\",\n  \"얼굴\",\n  \"얼른\",\n  \"얼음\",\n  \"얼핏\",\n  \"엄마\",\n  \"업무\",\n  \"업종\",\n  \"업체\",\n  \"엉덩이\",\n  \"엉망\",\n  \"엉터리\",\n  \"엊그제\",\n  \"에너지\",\n  \"에어컨\",\n  \"엔진\",\n  \"여건\",\n  \"여고생\",\n  \"여관\",\n  \"여군\",\n  \"여권\",\n  \"여대생\",\n  \"여덟\",\n  \"여동생\",\n  \"여든\",\n  \"여론\",\n  \"여름\",\n  \"여섯\",\n  \"여성\",\n  \"여왕\",\n  \"여인\",\n  \"여전히\",\n  \"여직원\",\n  \"여학생\",\n  \"여행\",\n  \"역사\",\n  \"역시\",\n  \"역할\",\n  \"연결\",\n  \"연구\",\n  \"연극\",\n  \"연기\",\n  \"연락\",\n  \"연설\",\n  \"연세\",\n  \"연속\",\n  \"연습\",\n  \"연애\",\n  \"연예인\",\n  \"연인\",\n  \"연장\",\n  \"연주\",\n  \"연출\",\n  \"연필\",\n  \"연합\",\n  \"연휴\",\n  \"열기\",\n  \"열매\",\n  \"열쇠\",\n  \"열심히\",\n  \"열정\",\n  \"열차\",\n  \"열흘\",\n  \"염려\",\n  \"엽서\",\n  \"영국\",\n  \"영남\",\n  \"영상\",\n  \"영양\",\n  \"영역\",\n  \"영웅\",\n  \"영원히\",\n  \"영하\",\n  \"영향\",\n  \"영혼\",\n  \"영화\",\n  \"옆구리\",\n  \"옆방\",\n  \"옆집\",\n  \"예감\",\n  \"예금\",\n  \"예방\",\n  \"예산\",\n  \"예상\",\n  \"예선\",\n  \"예술\",\n  \"예습\",\n  \"예식장\",\n  \"예약\",\n  \"예전\",\n  \"예절\",\n  \"예정\",\n  \"예컨대\",\n  \"옛날\",\n  \"오늘\",\n  \"오락\",\n  \"오랫동안\",\n  \"오렌지\",\n  \"오로지\",\n  \"오른발\",\n  \"오븐\",\n  \"오십\",\n  \"오염\",\n  \"오월\",\n  \"오전\",\n  \"오직\",\n  \"오징어\",\n  \"오페라\",\n  \"오피스텔\",\n  \"오히려\",\n  \"옥상\",\n  \"옥수수\",\n  \"온갖\",\n  \"온라인\",\n  \"온몸\",\n  \"온종일\",\n  \"온통\",\n  \"올가을\",\n  \"올림픽\",\n  \"올해\",\n  \"옷차림\",\n  \"와이셔츠\",\n  \"와인\",\n  \"완성\",\n  \"완전\",\n  \"왕비\",\n  \"왕자\",\n  \"왜냐하면\",\n  \"왠지\",\n  \"외갓집\",\n  \"외국\",\n  \"외로움\",\n  \"외삼촌\",\n  \"외출\",\n  \"외침\",\n  \"외할머니\",\n  \"왼발\",\n  \"왼손\",\n  \"왼쪽\",\n  \"요금\",\n  \"요일\",\n  \"요즘\",\n  \"요청\",\n  \"용기\",\n  \"용서\",\n  \"용어\",\n  \"우산\",\n  \"우선\",\n  \"우승\",\n  \"우연히\",\n  \"우정\",\n  \"우체국\",\n  \"우편\",\n  \"운동\",\n  \"운명\",\n  \"운반\",\n  \"운전\",\n  \"운행\",\n  \"울산\",\n  \"울음\",\n  \"움직임\",\n  \"웃어른\",\n  \"웃음\",\n  \"워낙\",\n  \"원고\",\n  \"원래\",\n  \"원서\",\n  \"원숭이\",\n  \"원인\",\n  \"원장\",\n  \"원피스\",\n  \"월급\",\n  \"월드컵\",\n  \"월세\",\n  \"월요일\",\n  \"웨이터\",\n  \"위반\",\n  \"위법\",\n  \"위성\",\n  \"위원\",\n  \"위험\",\n  \"위협\",\n  \"윗사람\",\n  \"유난히\",\n  \"유럽\",\n  \"유명\",\n  \"유물\",\n  \"유산\",\n  \"유적\",\n  \"유치원\",\n  \"유학\",\n  \"유행\",\n  \"유형\",\n  \"육군\",\n  \"육상\",\n  \"육십\",\n  \"육체\",\n  \"은행\",\n  \"음력\",\n  \"음료\",\n  \"음반\",\n  \"음성\",\n  \"음식\",\n  \"음악\",\n  \"음주\",\n  \"의견\",\n  \"의논\",\n  \"의문\",\n  \"의복\",\n  \"의식\",\n  \"의심\",\n  \"의외로\",\n  \"의욕\",\n  \"의원\",\n  \"의학\",\n  \"이것\",\n  \"이곳\",\n  \"이념\",\n  \"이놈\",\n  \"이달\",\n  \"이대로\",\n  \"이동\",\n  \"이렇게\",\n  \"이력서\",\n  \"이론적\",\n  \"이름\",\n  \"이민\",\n  \"이발소\",\n  \"이별\",\n  \"이불\",\n  \"이빨\",\n  \"이상\",\n  \"이성\",\n  \"이슬\",\n  \"이야기\",\n  \"이용\",\n  \"이웃\",\n  \"이월\",\n  \"이윽고\",\n  \"이익\",\n  \"이전\",\n  \"이중\",\n  \"이튿날\",\n  \"이틀\",\n  \"이혼\",\n  \"인간\",\n  \"인격\",\n  \"인공\",\n  \"인구\",\n  \"인근\",\n  \"인기\",\n  \"인도\",\n  \"인류\",\n  \"인물\",\n  \"인생\",\n  \"인쇄\",\n  \"인연\",\n  \"인원\",\n  \"인재\",\n  \"인종\",\n  \"인천\",\n  \"인체\",\n  \"인터넷\",\n  \"인하\",\n  \"인형\",\n  \"일곱\",\n  \"일기\",\n  \"일단\",\n  \"일대\",\n  \"일등\",\n  \"일반\",\n  \"일본\",\n  \"일부\",\n  \"일상\",\n  \"일생\",\n  \"일손\",\n  \"일요일\",\n  \"일월\",\n  \"일정\",\n  \"일종\",\n  \"일주일\",\n  \"일찍\",\n  \"일체\",\n  \"일치\",\n  \"일행\",\n  \"일회용\",\n  \"임금\",\n  \"임무\",\n  \"입대\",\n  \"입력\",\n  \"입맛\",\n  \"입사\",\n  \"입술\",\n  \"입시\",\n  \"입원\",\n  \"입장\",\n  \"입학\",\n  \"자가용\",\n  \"자격\",\n  \"자극\",\n  \"자동\",\n  \"자랑\",\n  \"자부심\",\n  \"자식\",\n  \"자신\",\n  \"자연\",\n  \"자원\",\n  \"자율\",\n  \"자전거\",\n  \"자정\",\n  \"자존심\",\n  \"자판\",\n  \"작가\",\n  \"작년\",\n  \"작성\",\n  \"작업\",\n  \"작용\",\n  \"작은딸\",\n  \"작품\",\n  \"잔디\",\n  \"잔뜩\",\n  \"잔치\",\n  \"잘못\",\n  \"잠깐\",\n  \"잠수함\",\n  \"잠시\",\n  \"잠옷\",\n  \"잠자리\",\n  \"잡지\",\n  \"장관\",\n  \"장군\",\n  \"장기간\",\n  \"장래\",\n  \"장례\",\n  \"장르\",\n  \"장마\",\n  \"장면\",\n  \"장모\",\n  \"장미\",\n  \"장비\",\n  \"장사\",\n  \"장소\",\n  \"장식\",\n  \"장애인\",\n  \"장인\",\n  \"장점\",\n  \"장차\",\n  \"장학금\",\n  \"재능\",\n  \"재빨리\",\n  \"재산\",\n  \"재생\",\n  \"재작년\",\n  \"재정\",\n  \"재채기\",\n  \"재판\",\n  \"재학\",\n  \"재활용\",\n  \"저것\",\n  \"저고리\",\n  \"저곳\",\n  \"저녁\",\n  \"저런\",\n  \"저렇게\",\n  \"저번\",\n  \"저울\",\n  \"저절로\",\n  \"저축\",\n  \"적극\",\n  \"적당히\",\n  \"적성\",\n  \"적용\",\n  \"적응\",\n  \"전개\",\n  \"전공\",\n  \"전기\",\n  \"전달\",\n  \"전라도\",\n  \"전망\",\n  \"전문\",\n  \"전반\",\n  \"전부\",\n  \"전세\",\n  \"전시\",\n  \"전용\",\n  \"전자\",\n  \"전쟁\",\n  \"전주\",\n  \"전철\",\n  \"전체\",\n  \"전통\",\n  \"전혀\",\n  \"전후\",\n  \"절대\",\n  \"절망\",\n  \"절반\",\n  \"절약\",\n  \"절차\",\n  \"점검\",\n  \"점수\",\n  \"점심\",\n  \"점원\",\n  \"점점\",\n  \"점차\",\n  \"접근\",\n  \"접시\",\n  \"접촉\",\n  \"젓가락\",\n  \"정거장\",\n  \"정도\",\n  \"정류장\",\n  \"정리\",\n  \"정말\",\n  \"정면\",\n  \"정문\",\n  \"정반대\",\n  \"정보\",\n  \"정부\",\n  \"정비\",\n  \"정상\",\n  \"정성\",\n  \"정오\",\n  \"정원\",\n  \"정장\",\n  \"정지\",\n  \"정치\",\n  \"정확히\",\n  \"제공\",\n  \"제과점\",\n  \"제대로\",\n  \"제목\",\n  \"제발\",\n  \"제법\",\n  \"제삿날\",\n  \"제안\",\n  \"제일\",\n  \"제작\",\n  \"제주도\",\n  \"제출\",\n  \"제품\",\n  \"제한\",\n  \"조각\",\n  \"조건\",\n  \"조금\",\n  \"조깅\",\n  \"조명\",\n  \"조미료\",\n  \"조상\",\n  \"조선\",\n  \"조용히\",\n  \"조절\",\n  \"조정\",\n  \"조직\",\n  \"존댓말\",\n  \"존재\",\n  \"졸업\",\n  \"졸음\",\n  \"종교\",\n  \"종로\",\n  \"종류\",\n  \"종소리\",\n  \"종업원\",\n  \"종종\",\n  \"종합\",\n  \"좌석\",\n  \"죄인\",\n  \"주관적\",\n  \"주름\",\n  \"주말\",\n  \"주머니\",\n  \"주먹\",\n  \"주문\",\n  \"주민\",\n  \"주방\",\n  \"주변\",\n  \"주식\",\n  \"주인\",\n  \"주일\",\n  \"주장\",\n  \"주전자\",\n  \"주택\",\n  \"준비\",\n  \"줄거리\",\n  \"줄기\",\n  \"줄무늬\",\n  \"중간\",\n  \"중계방송\",\n  \"중국\",\n  \"중년\",\n  \"중단\",\n  \"중독\",\n  \"중반\",\n  \"중부\",\n  \"중세\",\n  \"중소기업\",\n  \"중순\",\n  \"중앙\",\n  \"중요\",\n  \"중학교\",\n  \"즉석\",\n  \"즉시\",\n  \"즐거움\",\n  \"증가\",\n  \"증거\",\n  \"증권\",\n  \"증상\",\n  \"증세\",\n  \"지각\",\n  \"지갑\",\n  \"지경\",\n  \"지극히\",\n  \"지금\",\n  \"지급\",\n  \"지능\",\n  \"지름길\",\n  \"지리산\",\n  \"지방\",\n  \"지붕\",\n  \"지식\",\n  \"지역\",\n  \"지우개\",\n  \"지원\",\n  \"지적\",\n  \"지점\",\n  \"지진\",\n  \"지출\",\n  \"직선\",\n  \"직업\",\n  \"직원\",\n  \"직장\",\n  \"진급\",\n  \"진동\",\n  \"진로\",\n  \"진료\",\n  \"진리\",\n  \"진짜\",\n  \"진찰\",\n  \"진출\",\n  \"진통\",\n  \"진행\",\n  \"질문\",\n  \"질병\",\n  \"질서\",\n  \"짐작\",\n  \"집단\",\n  \"집안\",\n  \"집중\",\n  \"짜증\",\n  \"찌꺼기\",\n  \"차남\",\n  \"차라리\",\n  \"차량\",\n  \"차림\",\n  \"차별\",\n  \"차선\",\n  \"차츰\",\n  \"착각\",\n  \"찬물\",\n  \"찬성\",\n  \"참가\",\n  \"참기름\",\n  \"참새\",\n  \"참석\",\n  \"참여\",\n  \"참외\",\n  \"참조\",\n  \"찻잔\",\n  \"창가\",\n  \"창고\",\n  \"창구\",\n  \"창문\",\n  \"창밖\",\n  \"창작\",\n  \"창조\",\n  \"채널\",\n  \"채점\",\n  \"책가방\",\n  \"책방\",\n  \"책상\",\n  \"책임\",\n  \"챔피언\",\n  \"처벌\",\n  \"처음\",\n  \"천국\",\n  \"천둥\",\n  \"천장\",\n  \"천재\",\n  \"천천히\",\n  \"철도\",\n  \"철저히\",\n  \"철학\",\n  \"첫날\",\n  \"첫째\",\n  \"청년\",\n  \"청바지\",\n  \"청소\",\n  \"청춘\",\n  \"체계\",\n  \"체력\",\n  \"체온\",\n  \"체육\",\n  \"체중\",\n  \"체험\",\n  \"초등학생\",\n  \"초반\",\n  \"초밥\",\n  \"초상화\",\n  \"초순\",\n  \"초여름\",\n  \"초원\",\n  \"초저녁\",\n  \"초점\",\n  \"초청\",\n  \"초콜릿\",\n  \"촛불\",\n  \"총각\",\n  \"총리\",\n  \"총장\",\n  \"촬영\",\n  \"최근\",\n  \"최상\",\n  \"최선\",\n  \"최신\",\n  \"최악\",\n  \"최종\",\n  \"추석\",\n  \"추억\",\n  \"추진\",\n  \"추천\",\n  \"추측\",\n  \"축구\",\n  \"축소\",\n  \"축제\",\n  \"축하\",\n  \"출근\",\n  \"출발\",\n  \"출산\",\n  \"출신\",\n  \"출연\",\n  \"출입\",\n  \"출장\",\n  \"출판\",\n  \"충격\",\n  \"충고\",\n  \"충돌\",\n  \"충분히\",\n  \"충청도\",\n  \"취업\",\n  \"취직\",\n  \"취향\",\n  \"치약\",\n  \"친구\",\n  \"친척\",\n  \"칠십\",\n  \"칠월\",\n  \"칠판\",\n  \"침대\",\n  \"침묵\",\n  \"침실\",\n  \"칫솔\",\n  \"칭찬\",\n  \"카메라\",\n  \"카운터\",\n  \"칼국수\",\n  \"캐릭터\",\n  \"캠퍼스\",\n  \"캠페인\",\n  \"커튼\",\n  \"컨디션\",\n  \"컬러\",\n  \"컴퓨터\",\n  \"코끼리\",\n  \"코미디\",\n  \"콘서트\",\n  \"콜라\",\n  \"콤플렉스\",\n  \"콩나물\",\n  \"쾌감\",\n  \"쿠데타\",\n  \"크림\",\n  \"큰길\",\n  \"큰딸\",\n  \"큰소리\",\n  \"큰아들\",\n  \"큰어머니\",\n  \"큰일\",\n  \"큰절\",\n  \"클래식\",\n  \"클럽\",\n  \"킬로\",\n  \"타입\",\n  \"타자기\",\n  \"탁구\",\n  \"탁자\",\n  \"탄생\",\n  \"태권도\",\n  \"태양\",\n  \"태풍\",\n  \"택시\",\n  \"탤런트\",\n  \"터널\",\n  \"터미널\",\n  \"테니스\",\n  \"테스트\",\n  \"테이블\",\n  \"텔레비전\",\n  \"토론\",\n  \"토마토\",\n  \"토요일\",\n  \"통계\",\n  \"통과\",\n  \"통로\",\n  \"통신\",\n  \"통역\",\n  \"통일\",\n  \"통장\",\n  \"통제\",\n  \"통증\",\n  \"통합\",\n  \"통화\",\n  \"퇴근\",\n  \"퇴원\",\n  \"퇴직금\",\n  \"튀김\",\n  \"트럭\",\n  \"특급\",\n  \"특별\",\n  \"특성\",\n  \"특수\",\n  \"특징\",\n  \"특히\",\n  \"튼튼히\",\n  \"티셔츠\",\n  \"파란색\",\n  \"파일\",\n  \"파출소\",\n  \"판결\",\n  \"판단\",\n  \"판매\",\n  \"판사\",\n  \"팔십\",\n  \"팔월\",\n  \"팝송\",\n  \"패션\",\n  \"팩스\",\n  \"팩시밀리\",\n  \"팬티\",\n  \"퍼센트\",\n  \"페인트\",\n  \"편견\",\n  \"편의\",\n  \"편지\",\n  \"편히\",\n  \"평가\",\n  \"평균\",\n  \"평생\",\n  \"평소\",\n  \"평양\",\n  \"평일\",\n  \"평화\",\n  \"포스터\",\n  \"포인트\",\n  \"포장\",\n  \"포함\",\n  \"표면\",\n  \"표정\",\n  \"표준\",\n  \"표현\",\n  \"품목\",\n  \"품질\",\n  \"풍경\",\n  \"풍속\",\n  \"풍습\",\n  \"프랑스\",\n  \"프린터\",\n  \"플라스틱\",\n  \"피곤\",\n  \"피망\",\n  \"피아노\",\n  \"필름\",\n  \"필수\",\n  \"필요\",\n  \"필자\",\n  \"필통\",\n  \"핑계\",\n  \"하느님\",\n  \"하늘\",\n  \"하드웨어\",\n  \"하룻밤\",\n  \"하반기\",\n  \"하숙집\",\n  \"하순\",\n  \"하여튼\",\n  \"하지만\",\n  \"하천\",\n  \"하품\",\n  \"하필\",\n  \"학과\",\n  \"학교\",\n  \"학급\",\n  \"학기\",\n  \"학년\",\n  \"학력\",\n  \"학번\",\n  \"학부모\",\n  \"학비\",\n  \"학생\",\n  \"학술\",\n  \"학습\",\n  \"학용품\",\n  \"학원\",\n  \"학위\",\n  \"학자\",\n  \"학점\",\n  \"한계\",\n  \"한글\",\n  \"한꺼번에\",\n  \"한낮\",\n  \"한눈\",\n  \"한동안\",\n  \"한때\",\n  \"한라산\",\n  \"한마디\",\n  \"한문\",\n  \"한번\",\n  \"한복\",\n  \"한식\",\n  \"한여름\",\n  \"한쪽\",\n  \"할머니\",\n  \"할아버지\",\n  \"할인\",\n  \"함께\",\n  \"함부로\",\n  \"합격\",\n  \"합리적\",\n  \"항공\",\n  \"항구\",\n  \"항상\",\n  \"항의\",\n  \"해결\",\n  \"해군\",\n  \"해답\",\n  \"해당\",\n  \"해물\",\n  \"해석\",\n  \"해설\",\n  \"해수욕장\",\n  \"해안\",\n  \"핵심\",\n  \"핸드백\",\n  \"햄버거\",\n  \"햇볕\",\n  \"햇살\",\n  \"행동\",\n  \"행복\",\n  \"행사\",\n  \"행운\",\n  \"행위\",\n  \"향기\",\n  \"향상\",\n  \"향수\",\n  \"허락\",\n  \"허용\",\n  \"헬기\",\n  \"현관\",\n  \"현금\",\n  \"현대\",\n  \"현상\",\n  \"현실\",\n  \"현장\",\n  \"현재\",\n  \"현지\",\n  \"혈액\",\n  \"협력\",\n  \"형부\",\n  \"형사\",\n  \"형수\",\n  \"형식\",\n  \"형제\",\n  \"형태\",\n  \"형편\",\n  \"혜택\",\n  \"호기심\",\n  \"호남\",\n  \"호랑이\",\n  \"호박\",\n  \"호텔\",\n  \"호흡\",\n  \"혹시\",\n  \"홀로\",\n  \"홈페이지\",\n  \"홍보\",\n  \"홍수\",\n  \"홍차\",\n  \"화면\",\n  \"화분\",\n  \"화살\",\n  \"화요일\",\n  \"화장\",\n  \"화학\",\n  \"확보\",\n  \"확인\",\n  \"확장\",\n  \"확정\",\n  \"환갑\",\n  \"환경\",\n  \"환영\",\n  \"환율\",\n  \"환자\",\n  \"활기\",\n  \"활동\",\n  \"활발히\",\n  \"활용\",\n  \"활짝\",\n  \"회견\",\n  \"회관\",\n  \"회복\",\n  \"회색\",\n  \"회원\",\n  \"회장\",\n  \"회전\",\n  \"횟수\",\n  \"횡단보도\",\n  \"효율적\",\n  \"후반\",\n  \"후춧가루\",\n  \"훈련\",\n  \"훨씬\",\n  \"휴식\",\n  \"휴일\",\n  \"흉내\",\n  \"흐름\",\n  \"흑백\",\n  \"흑인\",\n  \"흔적\",\n  \"흔히\",\n  \"흥미\",\n  \"흥분\",\n  \"희곡\",\n  \"희망\",\n  \"희생\",\n  \"흰색\",\n  \"힘껏\"\n], Nh = [\n  \"abaisser\",\n  \"abandon\",\n  \"abdiquer\",\n  \"abeille\",\n  \"abolir\",\n  \"aborder\",\n  \"aboutir\",\n  \"aboyer\",\n  \"abrasif\",\n  \"abreuver\",\n  \"abriter\",\n  \"abroger\",\n  \"abrupt\",\n  \"absence\",\n  \"absolu\",\n  \"absurde\",\n  \"abusif\",\n  \"abyssal\",\n  \"académie\",\n  \"acajou\",\n  \"acarien\",\n  \"accabler\",\n  \"accepter\",\n  \"acclamer\",\n  \"accolade\",\n  \"accroche\",\n  \"accuser\",\n  \"acerbe\",\n  \"achat\",\n  \"acheter\",\n  \"aciduler\",\n  \"acier\",\n  \"acompte\",\n  \"acquérir\",\n  \"acronyme\",\n  \"acteur\",\n  \"actif\",\n  \"actuel\",\n  \"adepte\",\n  \"adéquat\",\n  \"adhésif\",\n  \"adjectif\",\n  \"adjuger\",\n  \"admettre\",\n  \"admirer\",\n  \"adopter\",\n  \"adorer\",\n  \"adoucir\",\n  \"adresse\",\n  \"adroit\",\n  \"adulte\",\n  \"adverbe\",\n  \"aérer\",\n  \"aéronef\",\n  \"affaire\",\n  \"affecter\",\n  \"affiche\",\n  \"affreux\",\n  \"affubler\",\n  \"agacer\",\n  \"agencer\",\n  \"agile\",\n  \"agiter\",\n  \"agrafer\",\n  \"agréable\",\n  \"agrume\",\n  \"aider\",\n  \"aiguille\",\n  \"ailier\",\n  \"aimable\",\n  \"aisance\",\n  \"ajouter\",\n  \"ajuster\",\n  \"alarmer\",\n  \"alchimie\",\n  \"alerte\",\n  \"algèbre\",\n  \"algue\",\n  \"aliéner\",\n  \"aliment\",\n  \"alléger\",\n  \"alliage\",\n  \"allouer\",\n  \"allumer\",\n  \"alourdir\",\n  \"alpaga\",\n  \"altesse\",\n  \"alvéole\",\n  \"amateur\",\n  \"ambigu\",\n  \"ambre\",\n  \"aménager\",\n  \"amertume\",\n  \"amidon\",\n  \"amiral\",\n  \"amorcer\",\n  \"amour\",\n  \"amovible\",\n  \"amphibie\",\n  \"ampleur\",\n  \"amusant\",\n  \"analyse\",\n  \"anaphore\",\n  \"anarchie\",\n  \"anatomie\",\n  \"ancien\",\n  \"anéantir\",\n  \"angle\",\n  \"angoisse\",\n  \"anguleux\",\n  \"animal\",\n  \"annexer\",\n  \"annonce\",\n  \"annuel\",\n  \"anodin\",\n  \"anomalie\",\n  \"anonyme\",\n  \"anormal\",\n  \"antenne\",\n  \"antidote\",\n  \"anxieux\",\n  \"apaiser\",\n  \"apéritif\",\n  \"aplanir\",\n  \"apologie\",\n  \"appareil\",\n  \"appeler\",\n  \"apporter\",\n  \"appuyer\",\n  \"aquarium\",\n  \"aqueduc\",\n  \"arbitre\",\n  \"arbuste\",\n  \"ardeur\",\n  \"ardoise\",\n  \"argent\",\n  \"arlequin\",\n  \"armature\",\n  \"armement\",\n  \"armoire\",\n  \"armure\",\n  \"arpenter\",\n  \"arracher\",\n  \"arriver\",\n  \"arroser\",\n  \"arsenic\",\n  \"artériel\",\n  \"article\",\n  \"aspect\",\n  \"asphalte\",\n  \"aspirer\",\n  \"assaut\",\n  \"asservir\",\n  \"assiette\",\n  \"associer\",\n  \"assurer\",\n  \"asticot\",\n  \"astre\",\n  \"astuce\",\n  \"atelier\",\n  \"atome\",\n  \"atrium\",\n  \"atroce\",\n  \"attaque\",\n  \"attentif\",\n  \"attirer\",\n  \"attraper\",\n  \"aubaine\",\n  \"auberge\",\n  \"audace\",\n  \"audible\",\n  \"augurer\",\n  \"aurore\",\n  \"automne\",\n  \"autruche\",\n  \"avaler\",\n  \"avancer\",\n  \"avarice\",\n  \"avenir\",\n  \"averse\",\n  \"aveugle\",\n  \"aviateur\",\n  \"avide\",\n  \"avion\",\n  \"aviser\",\n  \"avoine\",\n  \"avouer\",\n  \"avril\",\n  \"axial\",\n  \"axiome\",\n  \"badge\",\n  \"bafouer\",\n  \"bagage\",\n  \"baguette\",\n  \"baignade\",\n  \"balancer\",\n  \"balcon\",\n  \"baleine\",\n  \"balisage\",\n  \"bambin\",\n  \"bancaire\",\n  \"bandage\",\n  \"banlieue\",\n  \"bannière\",\n  \"banquier\",\n  \"barbier\",\n  \"baril\",\n  \"baron\",\n  \"barque\",\n  \"barrage\",\n  \"bassin\",\n  \"bastion\",\n  \"bataille\",\n  \"bateau\",\n  \"batterie\",\n  \"baudrier\",\n  \"bavarder\",\n  \"belette\",\n  \"bélier\",\n  \"belote\",\n  \"bénéfice\",\n  \"berceau\",\n  \"berger\",\n  \"berline\",\n  \"bermuda\",\n  \"besace\",\n  \"besogne\",\n  \"bétail\",\n  \"beurre\",\n  \"biberon\",\n  \"bicycle\",\n  \"bidule\",\n  \"bijou\",\n  \"bilan\",\n  \"bilingue\",\n  \"billard\",\n  \"binaire\",\n  \"biologie\",\n  \"biopsie\",\n  \"biotype\",\n  \"biscuit\",\n  \"bison\",\n  \"bistouri\",\n  \"bitume\",\n  \"bizarre\",\n  \"blafard\",\n  \"blague\",\n  \"blanchir\",\n  \"blessant\",\n  \"blinder\",\n  \"blond\",\n  \"bloquer\",\n  \"blouson\",\n  \"bobard\",\n  \"bobine\",\n  \"boire\",\n  \"boiser\",\n  \"bolide\",\n  \"bonbon\",\n  \"bondir\",\n  \"bonheur\",\n  \"bonifier\",\n  \"bonus\",\n  \"bordure\",\n  \"borne\",\n  \"botte\",\n  \"boucle\",\n  \"boueux\",\n  \"bougie\",\n  \"boulon\",\n  \"bouquin\",\n  \"bourse\",\n  \"boussole\",\n  \"boutique\",\n  \"boxeur\",\n  \"branche\",\n  \"brasier\",\n  \"brave\",\n  \"brebis\",\n  \"brèche\",\n  \"breuvage\",\n  \"bricoler\",\n  \"brigade\",\n  \"brillant\",\n  \"brioche\",\n  \"brique\",\n  \"brochure\",\n  \"broder\",\n  \"bronzer\",\n  \"brousse\",\n  \"broyeur\",\n  \"brume\",\n  \"brusque\",\n  \"brutal\",\n  \"bruyant\",\n  \"buffle\",\n  \"buisson\",\n  \"bulletin\",\n  \"bureau\",\n  \"burin\",\n  \"bustier\",\n  \"butiner\",\n  \"butoir\",\n  \"buvable\",\n  \"buvette\",\n  \"cabanon\",\n  \"cabine\",\n  \"cachette\",\n  \"cadeau\",\n  \"cadre\",\n  \"caféine\",\n  \"caillou\",\n  \"caisson\",\n  \"calculer\",\n  \"calepin\",\n  \"calibre\",\n  \"calmer\",\n  \"calomnie\",\n  \"calvaire\",\n  \"camarade\",\n  \"caméra\",\n  \"camion\",\n  \"campagne\",\n  \"canal\",\n  \"caneton\",\n  \"canon\",\n  \"cantine\",\n  \"canular\",\n  \"capable\",\n  \"caporal\",\n  \"caprice\",\n  \"capsule\",\n  \"capter\",\n  \"capuche\",\n  \"carabine\",\n  \"carbone\",\n  \"caresser\",\n  \"caribou\",\n  \"carnage\",\n  \"carotte\",\n  \"carreau\",\n  \"carton\",\n  \"cascade\",\n  \"casier\",\n  \"casque\",\n  \"cassure\",\n  \"causer\",\n  \"caution\",\n  \"cavalier\",\n  \"caverne\",\n  \"caviar\",\n  \"cédille\",\n  \"ceinture\",\n  \"céleste\",\n  \"cellule\",\n  \"cendrier\",\n  \"censurer\",\n  \"central\",\n  \"cercle\",\n  \"cérébral\",\n  \"cerise\",\n  \"cerner\",\n  \"cerveau\",\n  \"cesser\",\n  \"chagrin\",\n  \"chaise\",\n  \"chaleur\",\n  \"chambre\",\n  \"chance\",\n  \"chapitre\",\n  \"charbon\",\n  \"chasseur\",\n  \"chaton\",\n  \"chausson\",\n  \"chavirer\",\n  \"chemise\",\n  \"chenille\",\n  \"chéquier\",\n  \"chercher\",\n  \"cheval\",\n  \"chien\",\n  \"chiffre\",\n  \"chignon\",\n  \"chimère\",\n  \"chiot\",\n  \"chlorure\",\n  \"chocolat\",\n  \"choisir\",\n  \"chose\",\n  \"chouette\",\n  \"chrome\",\n  \"chute\",\n  \"cigare\",\n  \"cigogne\",\n  \"cimenter\",\n  \"cinéma\",\n  \"cintrer\",\n  \"circuler\",\n  \"cirer\",\n  \"cirque\",\n  \"citerne\",\n  \"citoyen\",\n  \"citron\",\n  \"civil\",\n  \"clairon\",\n  \"clameur\",\n  \"claquer\",\n  \"classe\",\n  \"clavier\",\n  \"client\",\n  \"cligner\",\n  \"climat\",\n  \"clivage\",\n  \"cloche\",\n  \"clonage\",\n  \"cloporte\",\n  \"cobalt\",\n  \"cobra\",\n  \"cocasse\",\n  \"cocotier\",\n  \"coder\",\n  \"codifier\",\n  \"coffre\",\n  \"cogner\",\n  \"cohésion\",\n  \"coiffer\",\n  \"coincer\",\n  \"colère\",\n  \"colibri\",\n  \"colline\",\n  \"colmater\",\n  \"colonel\",\n  \"combat\",\n  \"comédie\",\n  \"commande\",\n  \"compact\",\n  \"concert\",\n  \"conduire\",\n  \"confier\",\n  \"congeler\",\n  \"connoter\",\n  \"consonne\",\n  \"contact\",\n  \"convexe\",\n  \"copain\",\n  \"copie\",\n  \"corail\",\n  \"corbeau\",\n  \"cordage\",\n  \"corniche\",\n  \"corpus\",\n  \"correct\",\n  \"cortège\",\n  \"cosmique\",\n  \"costume\",\n  \"coton\",\n  \"coude\",\n  \"coupure\",\n  \"courage\",\n  \"couteau\",\n  \"couvrir\",\n  \"coyote\",\n  \"crabe\",\n  \"crainte\",\n  \"cravate\",\n  \"crayon\",\n  \"créature\",\n  \"créditer\",\n  \"crémeux\",\n  \"creuser\",\n  \"crevette\",\n  \"cribler\",\n  \"crier\",\n  \"cristal\",\n  \"critère\",\n  \"croire\",\n  \"croquer\",\n  \"crotale\",\n  \"crucial\",\n  \"cruel\",\n  \"crypter\",\n  \"cubique\",\n  \"cueillir\",\n  \"cuillère\",\n  \"cuisine\",\n  \"cuivre\",\n  \"culminer\",\n  \"cultiver\",\n  \"cumuler\",\n  \"cupide\",\n  \"curatif\",\n  \"curseur\",\n  \"cyanure\",\n  \"cycle\",\n  \"cylindre\",\n  \"cynique\",\n  \"daigner\",\n  \"damier\",\n  \"danger\",\n  \"danseur\",\n  \"dauphin\",\n  \"débattre\",\n  \"débiter\",\n  \"déborder\",\n  \"débrider\",\n  \"débutant\",\n  \"décaler\",\n  \"décembre\",\n  \"déchirer\",\n  \"décider\",\n  \"déclarer\",\n  \"décorer\",\n  \"décrire\",\n  \"décupler\",\n  \"dédale\",\n  \"déductif\",\n  \"déesse\",\n  \"défensif\",\n  \"défiler\",\n  \"défrayer\",\n  \"dégager\",\n  \"dégivrer\",\n  \"déglutir\",\n  \"dégrafer\",\n  \"déjeuner\",\n  \"délice\",\n  \"déloger\",\n  \"demander\",\n  \"demeurer\",\n  \"démolir\",\n  \"dénicher\",\n  \"dénouer\",\n  \"dentelle\",\n  \"dénuder\",\n  \"départ\",\n  \"dépenser\",\n  \"déphaser\",\n  \"déplacer\",\n  \"déposer\",\n  \"déranger\",\n  \"dérober\",\n  \"désastre\",\n  \"descente\",\n  \"désert\",\n  \"désigner\",\n  \"désobéir\",\n  \"dessiner\",\n  \"destrier\",\n  \"détacher\",\n  \"détester\",\n  \"détourer\",\n  \"détresse\",\n  \"devancer\",\n  \"devenir\",\n  \"deviner\",\n  \"devoir\",\n  \"diable\",\n  \"dialogue\",\n  \"diamant\",\n  \"dicter\",\n  \"différer\",\n  \"digérer\",\n  \"digital\",\n  \"digne\",\n  \"diluer\",\n  \"dimanche\",\n  \"diminuer\",\n  \"dioxyde\",\n  \"directif\",\n  \"diriger\",\n  \"discuter\",\n  \"disposer\",\n  \"dissiper\",\n  \"distance\",\n  \"divertir\",\n  \"diviser\",\n  \"docile\",\n  \"docteur\",\n  \"dogme\",\n  \"doigt\",\n  \"domaine\",\n  \"domicile\",\n  \"dompter\",\n  \"donateur\",\n  \"donjon\",\n  \"donner\",\n  \"dopamine\",\n  \"dortoir\",\n  \"dorure\",\n  \"dosage\",\n  \"doseur\",\n  \"dossier\",\n  \"dotation\",\n  \"douanier\",\n  \"double\",\n  \"douceur\",\n  \"douter\",\n  \"doyen\",\n  \"dragon\",\n  \"draper\",\n  \"dresser\",\n  \"dribbler\",\n  \"droiture\",\n  \"duperie\",\n  \"duplexe\",\n  \"durable\",\n  \"durcir\",\n  \"dynastie\",\n  \"éblouir\",\n  \"écarter\",\n  \"écharpe\",\n  \"échelle\",\n  \"éclairer\",\n  \"éclipse\",\n  \"éclore\",\n  \"écluse\",\n  \"école\",\n  \"économie\",\n  \"écorce\",\n  \"écouter\",\n  \"écraser\",\n  \"écrémer\",\n  \"écrivain\",\n  \"écrou\",\n  \"écume\",\n  \"écureuil\",\n  \"édifier\",\n  \"éduquer\",\n  \"effacer\",\n  \"effectif\",\n  \"effigie\",\n  \"effort\",\n  \"effrayer\",\n  \"effusion\",\n  \"égaliser\",\n  \"égarer\",\n  \"éjecter\",\n  \"élaborer\",\n  \"élargir\",\n  \"électron\",\n  \"élégant\",\n  \"éléphant\",\n  \"élève\",\n  \"éligible\",\n  \"élitisme\",\n  \"éloge\",\n  \"élucider\",\n  \"éluder\",\n  \"emballer\",\n  \"embellir\",\n  \"embryon\",\n  \"émeraude\",\n  \"émission\",\n  \"emmener\",\n  \"émotion\",\n  \"émouvoir\",\n  \"empereur\",\n  \"employer\",\n  \"emporter\",\n  \"emprise\",\n  \"émulsion\",\n  \"encadrer\",\n  \"enchère\",\n  \"enclave\",\n  \"encoche\",\n  \"endiguer\",\n  \"endosser\",\n  \"endroit\",\n  \"enduire\",\n  \"énergie\",\n  \"enfance\",\n  \"enfermer\",\n  \"enfouir\",\n  \"engager\",\n  \"engin\",\n  \"englober\",\n  \"énigme\",\n  \"enjamber\",\n  \"enjeu\",\n  \"enlever\",\n  \"ennemi\",\n  \"ennuyeux\",\n  \"enrichir\",\n  \"enrobage\",\n  \"enseigne\",\n  \"entasser\",\n  \"entendre\",\n  \"entier\",\n  \"entourer\",\n  \"entraver\",\n  \"énumérer\",\n  \"envahir\",\n  \"enviable\",\n  \"envoyer\",\n  \"enzyme\",\n  \"éolien\",\n  \"épaissir\",\n  \"épargne\",\n  \"épatant\",\n  \"épaule\",\n  \"épicerie\",\n  \"épidémie\",\n  \"épier\",\n  \"épilogue\",\n  \"épine\",\n  \"épisode\",\n  \"épitaphe\",\n  \"époque\",\n  \"épreuve\",\n  \"éprouver\",\n  \"épuisant\",\n  \"équerre\",\n  \"équipe\",\n  \"ériger\",\n  \"érosion\",\n  \"erreur\",\n  \"éruption\",\n  \"escalier\",\n  \"espadon\",\n  \"espèce\",\n  \"espiègle\",\n  \"espoir\",\n  \"esprit\",\n  \"esquiver\",\n  \"essayer\",\n  \"essence\",\n  \"essieu\",\n  \"essorer\",\n  \"estime\",\n  \"estomac\",\n  \"estrade\",\n  \"étagère\",\n  \"étaler\",\n  \"étanche\",\n  \"étatique\",\n  \"éteindre\",\n  \"étendoir\",\n  \"éternel\",\n  \"éthanol\",\n  \"éthique\",\n  \"ethnie\",\n  \"étirer\",\n  \"étoffer\",\n  \"étoile\",\n  \"étonnant\",\n  \"étourdir\",\n  \"étrange\",\n  \"étroit\",\n  \"étude\",\n  \"euphorie\",\n  \"évaluer\",\n  \"évasion\",\n  \"éventail\",\n  \"évidence\",\n  \"éviter\",\n  \"évolutif\",\n  \"évoquer\",\n  \"exact\",\n  \"exagérer\",\n  \"exaucer\",\n  \"exceller\",\n  \"excitant\",\n  \"exclusif\",\n  \"excuse\",\n  \"exécuter\",\n  \"exemple\",\n  \"exercer\",\n  \"exhaler\",\n  \"exhorter\",\n  \"exigence\",\n  \"exiler\",\n  \"exister\",\n  \"exotique\",\n  \"expédier\",\n  \"explorer\",\n  \"exposer\",\n  \"exprimer\",\n  \"exquis\",\n  \"extensif\",\n  \"extraire\",\n  \"exulter\",\n  \"fable\",\n  \"fabuleux\",\n  \"facette\",\n  \"facile\",\n  \"facture\",\n  \"faiblir\",\n  \"falaise\",\n  \"fameux\",\n  \"famille\",\n  \"farceur\",\n  \"farfelu\",\n  \"farine\",\n  \"farouche\",\n  \"fasciner\",\n  \"fatal\",\n  \"fatigue\",\n  \"faucon\",\n  \"fautif\",\n  \"faveur\",\n  \"favori\",\n  \"fébrile\",\n  \"féconder\",\n  \"fédérer\",\n  \"félin\",\n  \"femme\",\n  \"fémur\",\n  \"fendoir\",\n  \"féodal\",\n  \"fermer\",\n  \"féroce\",\n  \"ferveur\",\n  \"festival\",\n  \"feuille\",\n  \"feutre\",\n  \"février\",\n  \"fiasco\",\n  \"ficeler\",\n  \"fictif\",\n  \"fidèle\",\n  \"figure\",\n  \"filature\",\n  \"filetage\",\n  \"filière\",\n  \"filleul\",\n  \"filmer\",\n  \"filou\",\n  \"filtrer\",\n  \"financer\",\n  \"finir\",\n  \"fiole\",\n  \"firme\",\n  \"fissure\",\n  \"fixer\",\n  \"flairer\",\n  \"flamme\",\n  \"flasque\",\n  \"flatteur\",\n  \"fléau\",\n  \"flèche\",\n  \"fleur\",\n  \"flexion\",\n  \"flocon\",\n  \"flore\",\n  \"fluctuer\",\n  \"fluide\",\n  \"fluvial\",\n  \"folie\",\n  \"fonderie\",\n  \"fongible\",\n  \"fontaine\",\n  \"forcer\",\n  \"forgeron\",\n  \"formuler\",\n  \"fortune\",\n  \"fossile\",\n  \"foudre\",\n  \"fougère\",\n  \"fouiller\",\n  \"foulure\",\n  \"fourmi\",\n  \"fragile\",\n  \"fraise\",\n  \"franchir\",\n  \"frapper\",\n  \"frayeur\",\n  \"frégate\",\n  \"freiner\",\n  \"frelon\",\n  \"frémir\",\n  \"frénésie\",\n  \"frère\",\n  \"friable\",\n  \"friction\",\n  \"frisson\",\n  \"frivole\",\n  \"froid\",\n  \"fromage\",\n  \"frontal\",\n  \"frotter\",\n  \"fruit\",\n  \"fugitif\",\n  \"fuite\",\n  \"fureur\",\n  \"furieux\",\n  \"furtif\",\n  \"fusion\",\n  \"futur\",\n  \"gagner\",\n  \"galaxie\",\n  \"galerie\",\n  \"gambader\",\n  \"garantir\",\n  \"gardien\",\n  \"garnir\",\n  \"garrigue\",\n  \"gazelle\",\n  \"gazon\",\n  \"géant\",\n  \"gélatine\",\n  \"gélule\",\n  \"gendarme\",\n  \"général\",\n  \"génie\",\n  \"genou\",\n  \"gentil\",\n  \"géologie\",\n  \"géomètre\",\n  \"géranium\",\n  \"germe\",\n  \"gestuel\",\n  \"geyser\",\n  \"gibier\",\n  \"gicler\",\n  \"girafe\",\n  \"givre\",\n  \"glace\",\n  \"glaive\",\n  \"glisser\",\n  \"globe\",\n  \"gloire\",\n  \"glorieux\",\n  \"golfeur\",\n  \"gomme\",\n  \"gonfler\",\n  \"gorge\",\n  \"gorille\",\n  \"goudron\",\n  \"gouffre\",\n  \"goulot\",\n  \"goupille\",\n  \"gourmand\",\n  \"goutte\",\n  \"graduel\",\n  \"graffiti\",\n  \"graine\",\n  \"grand\",\n  \"grappin\",\n  \"gratuit\",\n  \"gravir\",\n  \"grenat\",\n  \"griffure\",\n  \"griller\",\n  \"grimper\",\n  \"grogner\",\n  \"gronder\",\n  \"grotte\",\n  \"groupe\",\n  \"gruger\",\n  \"grutier\",\n  \"gruyère\",\n  \"guépard\",\n  \"guerrier\",\n  \"guide\",\n  \"guimauve\",\n  \"guitare\",\n  \"gustatif\",\n  \"gymnaste\",\n  \"gyrostat\",\n  \"habitude\",\n  \"hachoir\",\n  \"halte\",\n  \"hameau\",\n  \"hangar\",\n  \"hanneton\",\n  \"haricot\",\n  \"harmonie\",\n  \"harpon\",\n  \"hasard\",\n  \"hélium\",\n  \"hématome\",\n  \"herbe\",\n  \"hérisson\",\n  \"hermine\",\n  \"héron\",\n  \"hésiter\",\n  \"heureux\",\n  \"hiberner\",\n  \"hibou\",\n  \"hilarant\",\n  \"histoire\",\n  \"hiver\",\n  \"homard\",\n  \"hommage\",\n  \"homogène\",\n  \"honneur\",\n  \"honorer\",\n  \"honteux\",\n  \"horde\",\n  \"horizon\",\n  \"horloge\",\n  \"hormone\",\n  \"horrible\",\n  \"houleux\",\n  \"housse\",\n  \"hublot\",\n  \"huileux\",\n  \"humain\",\n  \"humble\",\n  \"humide\",\n  \"humour\",\n  \"hurler\",\n  \"hydromel\",\n  \"hygiène\",\n  \"hymne\",\n  \"hypnose\",\n  \"idylle\",\n  \"ignorer\",\n  \"iguane\",\n  \"illicite\",\n  \"illusion\",\n  \"image\",\n  \"imbiber\",\n  \"imiter\",\n  \"immense\",\n  \"immobile\",\n  \"immuable\",\n  \"impact\",\n  \"impérial\",\n  \"implorer\",\n  \"imposer\",\n  \"imprimer\",\n  \"imputer\",\n  \"incarner\",\n  \"incendie\",\n  \"incident\",\n  \"incliner\",\n  \"incolore\",\n  \"indexer\",\n  \"indice\",\n  \"inductif\",\n  \"inédit\",\n  \"ineptie\",\n  \"inexact\",\n  \"infini\",\n  \"infliger\",\n  \"informer\",\n  \"infusion\",\n  \"ingérer\",\n  \"inhaler\",\n  \"inhiber\",\n  \"injecter\",\n  \"injure\",\n  \"innocent\",\n  \"inoculer\",\n  \"inonder\",\n  \"inscrire\",\n  \"insecte\",\n  \"insigne\",\n  \"insolite\",\n  \"inspirer\",\n  \"instinct\",\n  \"insulter\",\n  \"intact\",\n  \"intense\",\n  \"intime\",\n  \"intrigue\",\n  \"intuitif\",\n  \"inutile\",\n  \"invasion\",\n  \"inventer\",\n  \"inviter\",\n  \"invoquer\",\n  \"ironique\",\n  \"irradier\",\n  \"irréel\",\n  \"irriter\",\n  \"isoler\",\n  \"ivoire\",\n  \"ivresse\",\n  \"jaguar\",\n  \"jaillir\",\n  \"jambe\",\n  \"janvier\",\n  \"jardin\",\n  \"jauger\",\n  \"jaune\",\n  \"javelot\",\n  \"jetable\",\n  \"jeton\",\n  \"jeudi\",\n  \"jeunesse\",\n  \"joindre\",\n  \"joncher\",\n  \"jongler\",\n  \"joueur\",\n  \"jouissif\",\n  \"journal\",\n  \"jovial\",\n  \"joyau\",\n  \"joyeux\",\n  \"jubiler\",\n  \"jugement\",\n  \"junior\",\n  \"jupon\",\n  \"juriste\",\n  \"justice\",\n  \"juteux\",\n  \"juvénile\",\n  \"kayak\",\n  \"kimono\",\n  \"kiosque\",\n  \"label\",\n  \"labial\",\n  \"labourer\",\n  \"lacérer\",\n  \"lactose\",\n  \"lagune\",\n  \"laine\",\n  \"laisser\",\n  \"laitier\",\n  \"lambeau\",\n  \"lamelle\",\n  \"lampe\",\n  \"lanceur\",\n  \"langage\",\n  \"lanterne\",\n  \"lapin\",\n  \"largeur\",\n  \"larme\",\n  \"laurier\",\n  \"lavabo\",\n  \"lavoir\",\n  \"lecture\",\n  \"légal\",\n  \"léger\",\n  \"légume\",\n  \"lessive\",\n  \"lettre\",\n  \"levier\",\n  \"lexique\",\n  \"lézard\",\n  \"liasse\",\n  \"libérer\",\n  \"libre\",\n  \"licence\",\n  \"licorne\",\n  \"liège\",\n  \"lièvre\",\n  \"ligature\",\n  \"ligoter\",\n  \"ligue\",\n  \"limer\",\n  \"limite\",\n  \"limonade\",\n  \"limpide\",\n  \"linéaire\",\n  \"lingot\",\n  \"lionceau\",\n  \"liquide\",\n  \"lisière\",\n  \"lister\",\n  \"lithium\",\n  \"litige\",\n  \"littoral\",\n  \"livreur\",\n  \"logique\",\n  \"lointain\",\n  \"loisir\",\n  \"lombric\",\n  \"loterie\",\n  \"louer\",\n  \"lourd\",\n  \"loutre\",\n  \"louve\",\n  \"loyal\",\n  \"lubie\",\n  \"lucide\",\n  \"lucratif\",\n  \"lueur\",\n  \"lugubre\",\n  \"luisant\",\n  \"lumière\",\n  \"lunaire\",\n  \"lundi\",\n  \"luron\",\n  \"lutter\",\n  \"luxueux\",\n  \"machine\",\n  \"magasin\",\n  \"magenta\",\n  \"magique\",\n  \"maigre\",\n  \"maillon\",\n  \"maintien\",\n  \"mairie\",\n  \"maison\",\n  \"majorer\",\n  \"malaxer\",\n  \"maléfice\",\n  \"malheur\",\n  \"malice\",\n  \"mallette\",\n  \"mammouth\",\n  \"mandater\",\n  \"maniable\",\n  \"manquant\",\n  \"manteau\",\n  \"manuel\",\n  \"marathon\",\n  \"marbre\",\n  \"marchand\",\n  \"mardi\",\n  \"maritime\",\n  \"marqueur\",\n  \"marron\",\n  \"marteler\",\n  \"mascotte\",\n  \"massif\",\n  \"matériel\",\n  \"matière\",\n  \"matraque\",\n  \"maudire\",\n  \"maussade\",\n  \"mauve\",\n  \"maximal\",\n  \"méchant\",\n  \"méconnu\",\n  \"médaille\",\n  \"médecin\",\n  \"méditer\",\n  \"méduse\",\n  \"meilleur\",\n  \"mélange\",\n  \"mélodie\",\n  \"membre\",\n  \"mémoire\",\n  \"menacer\",\n  \"mener\",\n  \"menhir\",\n  \"mensonge\",\n  \"mentor\",\n  \"mercredi\",\n  \"mérite\",\n  \"merle\",\n  \"messager\",\n  \"mesure\",\n  \"métal\",\n  \"météore\",\n  \"méthode\",\n  \"métier\",\n  \"meuble\",\n  \"miauler\",\n  \"microbe\",\n  \"miette\",\n  \"mignon\",\n  \"migrer\",\n  \"milieu\",\n  \"million\",\n  \"mimique\",\n  \"mince\",\n  \"minéral\",\n  \"minimal\",\n  \"minorer\",\n  \"minute\",\n  \"miracle\",\n  \"miroiter\",\n  \"missile\",\n  \"mixte\",\n  \"mobile\",\n  \"moderne\",\n  \"moelleux\",\n  \"mondial\",\n  \"moniteur\",\n  \"monnaie\",\n  \"monotone\",\n  \"monstre\",\n  \"montagne\",\n  \"monument\",\n  \"moqueur\",\n  \"morceau\",\n  \"morsure\",\n  \"mortier\",\n  \"moteur\",\n  \"motif\",\n  \"mouche\",\n  \"moufle\",\n  \"moulin\",\n  \"mousson\",\n  \"mouton\",\n  \"mouvant\",\n  \"multiple\",\n  \"munition\",\n  \"muraille\",\n  \"murène\",\n  \"murmure\",\n  \"muscle\",\n  \"muséum\",\n  \"musicien\",\n  \"mutation\",\n  \"muter\",\n  \"mutuel\",\n  \"myriade\",\n  \"myrtille\",\n  \"mystère\",\n  \"mythique\",\n  \"nageur\",\n  \"nappe\",\n  \"narquois\",\n  \"narrer\",\n  \"natation\",\n  \"nation\",\n  \"nature\",\n  \"naufrage\",\n  \"nautique\",\n  \"navire\",\n  \"nébuleux\",\n  \"nectar\",\n  \"néfaste\",\n  \"négation\",\n  \"négliger\",\n  \"négocier\",\n  \"neige\",\n  \"nerveux\",\n  \"nettoyer\",\n  \"neurone\",\n  \"neutron\",\n  \"neveu\",\n  \"niche\",\n  \"nickel\",\n  \"nitrate\",\n  \"niveau\",\n  \"noble\",\n  \"nocif\",\n  \"nocturne\",\n  \"noirceur\",\n  \"noisette\",\n  \"nomade\",\n  \"nombreux\",\n  \"nommer\",\n  \"normatif\",\n  \"notable\",\n  \"notifier\",\n  \"notoire\",\n  \"nourrir\",\n  \"nouveau\",\n  \"novateur\",\n  \"novembre\",\n  \"novice\",\n  \"nuage\",\n  \"nuancer\",\n  \"nuire\",\n  \"nuisible\",\n  \"numéro\",\n  \"nuptial\",\n  \"nuque\",\n  \"nutritif\",\n  \"obéir\",\n  \"objectif\",\n  \"obliger\",\n  \"obscur\",\n  \"observer\",\n  \"obstacle\",\n  \"obtenir\",\n  \"obturer\",\n  \"occasion\",\n  \"occuper\",\n  \"océan\",\n  \"octobre\",\n  \"octroyer\",\n  \"octupler\",\n  \"oculaire\",\n  \"odeur\",\n  \"odorant\",\n  \"offenser\",\n  \"officier\",\n  \"offrir\",\n  \"ogive\",\n  \"oiseau\",\n  \"oisillon\",\n  \"olfactif\",\n  \"olivier\",\n  \"ombrage\",\n  \"omettre\",\n  \"onctueux\",\n  \"onduler\",\n  \"onéreux\",\n  \"onirique\",\n  \"opale\",\n  \"opaque\",\n  \"opérer\",\n  \"opinion\",\n  \"opportun\",\n  \"opprimer\",\n  \"opter\",\n  \"optique\",\n  \"orageux\",\n  \"orange\",\n  \"orbite\",\n  \"ordonner\",\n  \"oreille\",\n  \"organe\",\n  \"orgueil\",\n  \"orifice\",\n  \"ornement\",\n  \"orque\",\n  \"ortie\",\n  \"osciller\",\n  \"osmose\",\n  \"ossature\",\n  \"otarie\",\n  \"ouragan\",\n  \"ourson\",\n  \"outil\",\n  \"outrager\",\n  \"ouvrage\",\n  \"ovation\",\n  \"oxyde\",\n  \"oxygène\",\n  \"ozone\",\n  \"paisible\",\n  \"palace\",\n  \"palmarès\",\n  \"palourde\",\n  \"palper\",\n  \"panache\",\n  \"panda\",\n  \"pangolin\",\n  \"paniquer\",\n  \"panneau\",\n  \"panorama\",\n  \"pantalon\",\n  \"papaye\",\n  \"papier\",\n  \"papoter\",\n  \"papyrus\",\n  \"paradoxe\",\n  \"parcelle\",\n  \"paresse\",\n  \"parfumer\",\n  \"parler\",\n  \"parole\",\n  \"parrain\",\n  \"parsemer\",\n  \"partager\",\n  \"parure\",\n  \"parvenir\",\n  \"passion\",\n  \"pastèque\",\n  \"paternel\",\n  \"patience\",\n  \"patron\",\n  \"pavillon\",\n  \"pavoiser\",\n  \"payer\",\n  \"paysage\",\n  \"peigne\",\n  \"peintre\",\n  \"pelage\",\n  \"pélican\",\n  \"pelle\",\n  \"pelouse\",\n  \"peluche\",\n  \"pendule\",\n  \"pénétrer\",\n  \"pénible\",\n  \"pensif\",\n  \"pénurie\",\n  \"pépite\",\n  \"péplum\",\n  \"perdrix\",\n  \"perforer\",\n  \"période\",\n  \"permuter\",\n  \"perplexe\",\n  \"persil\",\n  \"perte\",\n  \"peser\",\n  \"pétale\",\n  \"petit\",\n  \"pétrir\",\n  \"peuple\",\n  \"pharaon\",\n  \"phobie\",\n  \"phoque\",\n  \"photon\",\n  \"phrase\",\n  \"physique\",\n  \"piano\",\n  \"pictural\",\n  \"pièce\",\n  \"pierre\",\n  \"pieuvre\",\n  \"pilote\",\n  \"pinceau\",\n  \"pipette\",\n  \"piquer\",\n  \"pirogue\",\n  \"piscine\",\n  \"piston\",\n  \"pivoter\",\n  \"pixel\",\n  \"pizza\",\n  \"placard\",\n  \"plafond\",\n  \"plaisir\",\n  \"planer\",\n  \"plaque\",\n  \"plastron\",\n  \"plateau\",\n  \"pleurer\",\n  \"plexus\",\n  \"pliage\",\n  \"plomb\",\n  \"plonger\",\n  \"pluie\",\n  \"plumage\",\n  \"pochette\",\n  \"poésie\",\n  \"poète\",\n  \"pointe\",\n  \"poirier\",\n  \"poisson\",\n  \"poivre\",\n  \"polaire\",\n  \"policier\",\n  \"pollen\",\n  \"polygone\",\n  \"pommade\",\n  \"pompier\",\n  \"ponctuel\",\n  \"pondérer\",\n  \"poney\",\n  \"portique\",\n  \"position\",\n  \"posséder\",\n  \"posture\",\n  \"potager\",\n  \"poteau\",\n  \"potion\",\n  \"pouce\",\n  \"poulain\",\n  \"poumon\",\n  \"pourpre\",\n  \"poussin\",\n  \"pouvoir\",\n  \"prairie\",\n  \"pratique\",\n  \"précieux\",\n  \"prédire\",\n  \"préfixe\",\n  \"prélude\",\n  \"prénom\",\n  \"présence\",\n  \"prétexte\",\n  \"prévoir\",\n  \"primitif\",\n  \"prince\",\n  \"prison\",\n  \"priver\",\n  \"problème\",\n  \"procéder\",\n  \"prodige\",\n  \"profond\",\n  \"progrès\",\n  \"proie\",\n  \"projeter\",\n  \"prologue\",\n  \"promener\",\n  \"propre\",\n  \"prospère\",\n  \"protéger\",\n  \"prouesse\",\n  \"proverbe\",\n  \"prudence\",\n  \"pruneau\",\n  \"psychose\",\n  \"public\",\n  \"puceron\",\n  \"puiser\",\n  \"pulpe\",\n  \"pulsar\",\n  \"punaise\",\n  \"punitif\",\n  \"pupitre\",\n  \"purifier\",\n  \"puzzle\",\n  \"pyramide\",\n  \"quasar\",\n  \"querelle\",\n  \"question\",\n  \"quiétude\",\n  \"quitter\",\n  \"quotient\",\n  \"racine\",\n  \"raconter\",\n  \"radieux\",\n  \"ragondin\",\n  \"raideur\",\n  \"raisin\",\n  \"ralentir\",\n  \"rallonge\",\n  \"ramasser\",\n  \"rapide\",\n  \"rasage\",\n  \"ratisser\",\n  \"ravager\",\n  \"ravin\",\n  \"rayonner\",\n  \"réactif\",\n  \"réagir\",\n  \"réaliser\",\n  \"réanimer\",\n  \"recevoir\",\n  \"réciter\",\n  \"réclamer\",\n  \"récolter\",\n  \"recruter\",\n  \"reculer\",\n  \"recycler\",\n  \"rédiger\",\n  \"redouter\",\n  \"refaire\",\n  \"réflexe\",\n  \"réformer\",\n  \"refrain\",\n  \"refuge\",\n  \"régalien\",\n  \"région\",\n  \"réglage\",\n  \"régulier\",\n  \"réitérer\",\n  \"rejeter\",\n  \"rejouer\",\n  \"relatif\",\n  \"relever\",\n  \"relief\",\n  \"remarque\",\n  \"remède\",\n  \"remise\",\n  \"remonter\",\n  \"remplir\",\n  \"remuer\",\n  \"renard\",\n  \"renfort\",\n  \"renifler\",\n  \"renoncer\",\n  \"rentrer\",\n  \"renvoi\",\n  \"replier\",\n  \"reporter\",\n  \"reprise\",\n  \"reptile\",\n  \"requin\",\n  \"réserve\",\n  \"résineux\",\n  \"résoudre\",\n  \"respect\",\n  \"rester\",\n  \"résultat\",\n  \"rétablir\",\n  \"retenir\",\n  \"réticule\",\n  \"retomber\",\n  \"retracer\",\n  \"réunion\",\n  \"réussir\",\n  \"revanche\",\n  \"revivre\",\n  \"révolte\",\n  \"révulsif\",\n  \"richesse\",\n  \"rideau\",\n  \"rieur\",\n  \"rigide\",\n  \"rigoler\",\n  \"rincer\",\n  \"riposter\",\n  \"risible\",\n  \"risque\",\n  \"rituel\",\n  \"rival\",\n  \"rivière\",\n  \"rocheux\",\n  \"romance\",\n  \"rompre\",\n  \"ronce\",\n  \"rondin\",\n  \"roseau\",\n  \"rosier\",\n  \"rotatif\",\n  \"rotor\",\n  \"rotule\",\n  \"rouge\",\n  \"rouille\",\n  \"rouleau\",\n  \"routine\",\n  \"royaume\",\n  \"ruban\",\n  \"rubis\",\n  \"ruche\",\n  \"ruelle\",\n  \"rugueux\",\n  \"ruiner\",\n  \"ruisseau\",\n  \"ruser\",\n  \"rustique\",\n  \"rythme\",\n  \"sabler\",\n  \"saboter\",\n  \"sabre\",\n  \"sacoche\",\n  \"safari\",\n  \"sagesse\",\n  \"saisir\",\n  \"salade\",\n  \"salive\",\n  \"salon\",\n  \"saluer\",\n  \"samedi\",\n  \"sanction\",\n  \"sanglier\",\n  \"sarcasme\",\n  \"sardine\",\n  \"saturer\",\n  \"saugrenu\",\n  \"saumon\",\n  \"sauter\",\n  \"sauvage\",\n  \"savant\",\n  \"savonner\",\n  \"scalpel\",\n  \"scandale\",\n  \"scélérat\",\n  \"scénario\",\n  \"sceptre\",\n  \"schéma\",\n  \"science\",\n  \"scinder\",\n  \"score\",\n  \"scrutin\",\n  \"sculpter\",\n  \"séance\",\n  \"sécable\",\n  \"sécher\",\n  \"secouer\",\n  \"sécréter\",\n  \"sédatif\",\n  \"séduire\",\n  \"seigneur\",\n  \"séjour\",\n  \"sélectif\",\n  \"semaine\",\n  \"sembler\",\n  \"semence\",\n  \"séminal\",\n  \"sénateur\",\n  \"sensible\",\n  \"sentence\",\n  \"séparer\",\n  \"séquence\",\n  \"serein\",\n  \"sergent\",\n  \"sérieux\",\n  \"serrure\",\n  \"sérum\",\n  \"service\",\n  \"sésame\",\n  \"sévir\",\n  \"sevrage\",\n  \"sextuple\",\n  \"sidéral\",\n  \"siècle\",\n  \"siéger\",\n  \"siffler\",\n  \"sigle\",\n  \"signal\",\n  \"silence\",\n  \"silicium\",\n  \"simple\",\n  \"sincère\",\n  \"sinistre\",\n  \"siphon\",\n  \"sirop\",\n  \"sismique\",\n  \"situer\",\n  \"skier\",\n  \"social\",\n  \"socle\",\n  \"sodium\",\n  \"soigneux\",\n  \"soldat\",\n  \"soleil\",\n  \"solitude\",\n  \"soluble\",\n  \"sombre\",\n  \"sommeil\",\n  \"somnoler\",\n  \"sonde\",\n  \"songeur\",\n  \"sonnette\",\n  \"sonore\",\n  \"sorcier\",\n  \"sortir\",\n  \"sosie\",\n  \"sottise\",\n  \"soucieux\",\n  \"soudure\",\n  \"souffle\",\n  \"soulever\",\n  \"soupape\",\n  \"source\",\n  \"soutirer\",\n  \"souvenir\",\n  \"spacieux\",\n  \"spatial\",\n  \"spécial\",\n  \"sphère\",\n  \"spiral\",\n  \"stable\",\n  \"station\",\n  \"sternum\",\n  \"stimulus\",\n  \"stipuler\",\n  \"strict\",\n  \"studieux\",\n  \"stupeur\",\n  \"styliste\",\n  \"sublime\",\n  \"substrat\",\n  \"subtil\",\n  \"subvenir\",\n  \"succès\",\n  \"sucre\",\n  \"suffixe\",\n  \"suggérer\",\n  \"suiveur\",\n  \"sulfate\",\n  \"superbe\",\n  \"supplier\",\n  \"surface\",\n  \"suricate\",\n  \"surmener\",\n  \"surprise\",\n  \"sursaut\",\n  \"survie\",\n  \"suspect\",\n  \"syllabe\",\n  \"symbole\",\n  \"symétrie\",\n  \"synapse\",\n  \"syntaxe\",\n  \"système\",\n  \"tabac\",\n  \"tablier\",\n  \"tactile\",\n  \"tailler\",\n  \"talent\",\n  \"talisman\",\n  \"talonner\",\n  \"tambour\",\n  \"tamiser\",\n  \"tangible\",\n  \"tapis\",\n  \"taquiner\",\n  \"tarder\",\n  \"tarif\",\n  \"tartine\",\n  \"tasse\",\n  \"tatami\",\n  \"tatouage\",\n  \"taupe\",\n  \"taureau\",\n  \"taxer\",\n  \"témoin\",\n  \"temporel\",\n  \"tenaille\",\n  \"tendre\",\n  \"teneur\",\n  \"tenir\",\n  \"tension\",\n  \"terminer\",\n  \"terne\",\n  \"terrible\",\n  \"tétine\",\n  \"texte\",\n  \"thème\",\n  \"théorie\",\n  \"thérapie\",\n  \"thorax\",\n  \"tibia\",\n  \"tiède\",\n  \"timide\",\n  \"tirelire\",\n  \"tiroir\",\n  \"tissu\",\n  \"titane\",\n  \"titre\",\n  \"tituber\",\n  \"toboggan\",\n  \"tolérant\",\n  \"tomate\",\n  \"tonique\",\n  \"tonneau\",\n  \"toponyme\",\n  \"torche\",\n  \"tordre\",\n  \"tornade\",\n  \"torpille\",\n  \"torrent\",\n  \"torse\",\n  \"tortue\",\n  \"totem\",\n  \"toucher\",\n  \"tournage\",\n  \"tousser\",\n  \"toxine\",\n  \"traction\",\n  \"trafic\",\n  \"tragique\",\n  \"trahir\",\n  \"train\",\n  \"trancher\",\n  \"travail\",\n  \"trèfle\",\n  \"tremper\",\n  \"trésor\",\n  \"treuil\",\n  \"triage\",\n  \"tribunal\",\n  \"tricoter\",\n  \"trilogie\",\n  \"triomphe\",\n  \"tripler\",\n  \"triturer\",\n  \"trivial\",\n  \"trombone\",\n  \"tronc\",\n  \"tropical\",\n  \"troupeau\",\n  \"tuile\",\n  \"tulipe\",\n  \"tumulte\",\n  \"tunnel\",\n  \"turbine\",\n  \"tuteur\",\n  \"tutoyer\",\n  \"tuyau\",\n  \"tympan\",\n  \"typhon\",\n  \"typique\",\n  \"tyran\",\n  \"ubuesque\",\n  \"ultime\",\n  \"ultrason\",\n  \"unanime\",\n  \"unifier\",\n  \"union\",\n  \"unique\",\n  \"unitaire\",\n  \"univers\",\n  \"uranium\",\n  \"urbain\",\n  \"urticant\",\n  \"usage\",\n  \"usine\",\n  \"usuel\",\n  \"usure\",\n  \"utile\",\n  \"utopie\",\n  \"vacarme\",\n  \"vaccin\",\n  \"vagabond\",\n  \"vague\",\n  \"vaillant\",\n  \"vaincre\",\n  \"vaisseau\",\n  \"valable\",\n  \"valise\",\n  \"vallon\",\n  \"valve\",\n  \"vampire\",\n  \"vanille\",\n  \"vapeur\",\n  \"varier\",\n  \"vaseux\",\n  \"vassal\",\n  \"vaste\",\n  \"vecteur\",\n  \"vedette\",\n  \"végétal\",\n  \"véhicule\",\n  \"veinard\",\n  \"véloce\",\n  \"vendredi\",\n  \"vénérer\",\n  \"venger\",\n  \"venimeux\",\n  \"ventouse\",\n  \"verdure\",\n  \"vérin\",\n  \"vernir\",\n  \"verrou\",\n  \"verser\",\n  \"vertu\",\n  \"veston\",\n  \"vétéran\",\n  \"vétuste\",\n  \"vexant\",\n  \"vexer\",\n  \"viaduc\",\n  \"viande\",\n  \"victoire\",\n  \"vidange\",\n  \"vidéo\",\n  \"vignette\",\n  \"vigueur\",\n  \"vilain\",\n  \"village\",\n  \"vinaigre\",\n  \"violon\",\n  \"vipère\",\n  \"virement\",\n  \"virtuose\",\n  \"virus\",\n  \"visage\",\n  \"viseur\",\n  \"vision\",\n  \"visqueux\",\n  \"visuel\",\n  \"vital\",\n  \"vitesse\",\n  \"viticole\",\n  \"vitrine\",\n  \"vivace\",\n  \"vivipare\",\n  \"vocation\",\n  \"voguer\",\n  \"voile\",\n  \"voisin\",\n  \"voiture\",\n  \"volaille\",\n  \"volcan\",\n  \"voltiger\",\n  \"volume\",\n  \"vorace\",\n  \"vortex\",\n  \"voter\",\n  \"vouloir\",\n  \"voyage\",\n  \"voyelle\",\n  \"wagon\",\n  \"xénon\",\n  \"yacht\",\n  \"zèbre\",\n  \"zénith\",\n  \"zeste\",\n  \"zoologie\"\n], Fh = [\n  \"abaco\",\n  \"abbaglio\",\n  \"abbinato\",\n  \"abete\",\n  \"abisso\",\n  \"abolire\",\n  \"abrasivo\",\n  \"abrogato\",\n  \"accadere\",\n  \"accenno\",\n  \"accusato\",\n  \"acetone\",\n  \"achille\",\n  \"acido\",\n  \"acqua\",\n  \"acre\",\n  \"acrilico\",\n  \"acrobata\",\n  \"acuto\",\n  \"adagio\",\n  \"addebito\",\n  \"addome\",\n  \"adeguato\",\n  \"aderire\",\n  \"adipe\",\n  \"adottare\",\n  \"adulare\",\n  \"affabile\",\n  \"affetto\",\n  \"affisso\",\n  \"affranto\",\n  \"aforisma\",\n  \"afoso\",\n  \"africano\",\n  \"agave\",\n  \"agente\",\n  \"agevole\",\n  \"aggancio\",\n  \"agire\",\n  \"agitare\",\n  \"agonismo\",\n  \"agricolo\",\n  \"agrumeto\",\n  \"aguzzo\",\n  \"alabarda\",\n  \"alato\",\n  \"albatro\",\n  \"alberato\",\n  \"albo\",\n  \"albume\",\n  \"alce\",\n  \"alcolico\",\n  \"alettone\",\n  \"alfa\",\n  \"algebra\",\n  \"aliante\",\n  \"alibi\",\n  \"alimento\",\n  \"allagato\",\n  \"allegro\",\n  \"allievo\",\n  \"allodola\",\n  \"allusivo\",\n  \"almeno\",\n  \"alogeno\",\n  \"alpaca\",\n  \"alpestre\",\n  \"altalena\",\n  \"alterno\",\n  \"alticcio\",\n  \"altrove\",\n  \"alunno\",\n  \"alveolo\",\n  \"alzare\",\n  \"amalgama\",\n  \"amanita\",\n  \"amarena\",\n  \"ambito\",\n  \"ambrato\",\n  \"ameba\",\n  \"america\",\n  \"ametista\",\n  \"amico\",\n  \"ammasso\",\n  \"ammenda\",\n  \"ammirare\",\n  \"ammonito\",\n  \"amore\",\n  \"ampio\",\n  \"ampliare\",\n  \"amuleto\",\n  \"anacardo\",\n  \"anagrafe\",\n  \"analista\",\n  \"anarchia\",\n  \"anatra\",\n  \"anca\",\n  \"ancella\",\n  \"ancora\",\n  \"andare\",\n  \"andrea\",\n  \"anello\",\n  \"angelo\",\n  \"angolare\",\n  \"angusto\",\n  \"anima\",\n  \"annegare\",\n  \"annidato\",\n  \"anno\",\n  \"annuncio\",\n  \"anonimo\",\n  \"anticipo\",\n  \"anzi\",\n  \"apatico\",\n  \"apertura\",\n  \"apode\",\n  \"apparire\",\n  \"appetito\",\n  \"appoggio\",\n  \"approdo\",\n  \"appunto\",\n  \"aprile\",\n  \"arabica\",\n  \"arachide\",\n  \"aragosta\",\n  \"araldica\",\n  \"arancio\",\n  \"aratura\",\n  \"arazzo\",\n  \"arbitro\",\n  \"archivio\",\n  \"ardito\",\n  \"arenile\",\n  \"argento\",\n  \"argine\",\n  \"arguto\",\n  \"aria\",\n  \"armonia\",\n  \"arnese\",\n  \"arredato\",\n  \"arringa\",\n  \"arrosto\",\n  \"arsenico\",\n  \"arso\",\n  \"artefice\",\n  \"arzillo\",\n  \"asciutto\",\n  \"ascolto\",\n  \"asepsi\",\n  \"asettico\",\n  \"asfalto\",\n  \"asino\",\n  \"asola\",\n  \"aspirato\",\n  \"aspro\",\n  \"assaggio\",\n  \"asse\",\n  \"assoluto\",\n  \"assurdo\",\n  \"asta\",\n  \"astenuto\",\n  \"astice\",\n  \"astratto\",\n  \"atavico\",\n  \"ateismo\",\n  \"atomico\",\n  \"atono\",\n  \"attesa\",\n  \"attivare\",\n  \"attorno\",\n  \"attrito\",\n  \"attuale\",\n  \"ausilio\",\n  \"austria\",\n  \"autista\",\n  \"autonomo\",\n  \"autunno\",\n  \"avanzato\",\n  \"avere\",\n  \"avvenire\",\n  \"avviso\",\n  \"avvolgere\",\n  \"azione\",\n  \"azoto\",\n  \"azzimo\",\n  \"azzurro\",\n  \"babele\",\n  \"baccano\",\n  \"bacino\",\n  \"baco\",\n  \"badessa\",\n  \"badilata\",\n  \"bagnato\",\n  \"baita\",\n  \"balcone\",\n  \"baldo\",\n  \"balena\",\n  \"ballata\",\n  \"balzano\",\n  \"bambino\",\n  \"bandire\",\n  \"baraonda\",\n  \"barbaro\",\n  \"barca\",\n  \"baritono\",\n  \"barlume\",\n  \"barocco\",\n  \"basilico\",\n  \"basso\",\n  \"batosta\",\n  \"battuto\",\n  \"baule\",\n  \"bava\",\n  \"bavosa\",\n  \"becco\",\n  \"beffa\",\n  \"belgio\",\n  \"belva\",\n  \"benda\",\n  \"benevole\",\n  \"benigno\",\n  \"benzina\",\n  \"bere\",\n  \"berlina\",\n  \"beta\",\n  \"bibita\",\n  \"bici\",\n  \"bidone\",\n  \"bifido\",\n  \"biga\",\n  \"bilancia\",\n  \"bimbo\",\n  \"binocolo\",\n  \"biologo\",\n  \"bipede\",\n  \"bipolare\",\n  \"birbante\",\n  \"birra\",\n  \"biscotto\",\n  \"bisesto\",\n  \"bisnonno\",\n  \"bisonte\",\n  \"bisturi\",\n  \"bizzarro\",\n  \"blando\",\n  \"blatta\",\n  \"bollito\",\n  \"bonifico\",\n  \"bordo\",\n  \"bosco\",\n  \"botanico\",\n  \"bottino\",\n  \"bozzolo\",\n  \"braccio\",\n  \"bradipo\",\n  \"brama\",\n  \"branca\",\n  \"bravura\",\n  \"bretella\",\n  \"brevetto\",\n  \"brezza\",\n  \"briglia\",\n  \"brillante\",\n  \"brindare\",\n  \"broccolo\",\n  \"brodo\",\n  \"bronzina\",\n  \"brullo\",\n  \"bruno\",\n  \"bubbone\",\n  \"buca\",\n  \"budino\",\n  \"buffone\",\n  \"buio\",\n  \"bulbo\",\n  \"buono\",\n  \"burlone\",\n  \"burrasca\",\n  \"bussola\",\n  \"busta\",\n  \"cadetto\",\n  \"caduco\",\n  \"calamaro\",\n  \"calcolo\",\n  \"calesse\",\n  \"calibro\",\n  \"calmo\",\n  \"caloria\",\n  \"cambusa\",\n  \"camerata\",\n  \"camicia\",\n  \"cammino\",\n  \"camola\",\n  \"campale\",\n  \"canapa\",\n  \"candela\",\n  \"cane\",\n  \"canino\",\n  \"canotto\",\n  \"cantina\",\n  \"capace\",\n  \"capello\",\n  \"capitolo\",\n  \"capogiro\",\n  \"cappero\",\n  \"capra\",\n  \"capsula\",\n  \"carapace\",\n  \"carcassa\",\n  \"cardo\",\n  \"carisma\",\n  \"carovana\",\n  \"carretto\",\n  \"cartolina\",\n  \"casaccio\",\n  \"cascata\",\n  \"caserma\",\n  \"caso\",\n  \"cassone\",\n  \"castello\",\n  \"casuale\",\n  \"catasta\",\n  \"catena\",\n  \"catrame\",\n  \"cauto\",\n  \"cavillo\",\n  \"cedibile\",\n  \"cedrata\",\n  \"cefalo\",\n  \"celebre\",\n  \"cellulare\",\n  \"cena\",\n  \"cenone\",\n  \"centesimo\",\n  \"ceramica\",\n  \"cercare\",\n  \"certo\",\n  \"cerume\",\n  \"cervello\",\n  \"cesoia\",\n  \"cespo\",\n  \"ceto\",\n  \"chela\",\n  \"chiaro\",\n  \"chicca\",\n  \"chiedere\",\n  \"chimera\",\n  \"china\",\n  \"chirurgo\",\n  \"chitarra\",\n  \"ciao\",\n  \"ciclismo\",\n  \"cifrare\",\n  \"cigno\",\n  \"cilindro\",\n  \"ciottolo\",\n  \"circa\",\n  \"cirrosi\",\n  \"citrico\",\n  \"cittadino\",\n  \"ciuffo\",\n  \"civetta\",\n  \"civile\",\n  \"classico\",\n  \"clinica\",\n  \"cloro\",\n  \"cocco\",\n  \"codardo\",\n  \"codice\",\n  \"coerente\",\n  \"cognome\",\n  \"collare\",\n  \"colmato\",\n  \"colore\",\n  \"colposo\",\n  \"coltivato\",\n  \"colza\",\n  \"coma\",\n  \"cometa\",\n  \"commando\",\n  \"comodo\",\n  \"computer\",\n  \"comune\",\n  \"conciso\",\n  \"condurre\",\n  \"conferma\",\n  \"congelare\",\n  \"coniuge\",\n  \"connesso\",\n  \"conoscere\",\n  \"consumo\",\n  \"continuo\",\n  \"convegno\",\n  \"coperto\",\n  \"copione\",\n  \"coppia\",\n  \"copricapo\",\n  \"corazza\",\n  \"cordata\",\n  \"coricato\",\n  \"cornice\",\n  \"corolla\",\n  \"corpo\",\n  \"corredo\",\n  \"corsia\",\n  \"cortese\",\n  \"cosmico\",\n  \"costante\",\n  \"cottura\",\n  \"covato\",\n  \"cratere\",\n  \"cravatta\",\n  \"creato\",\n  \"credere\",\n  \"cremoso\",\n  \"crescita\",\n  \"creta\",\n  \"criceto\",\n  \"crinale\",\n  \"crisi\",\n  \"critico\",\n  \"croce\",\n  \"cronaca\",\n  \"crostata\",\n  \"cruciale\",\n  \"crusca\",\n  \"cucire\",\n  \"cuculo\",\n  \"cugino\",\n  \"cullato\",\n  \"cupola\",\n  \"curatore\",\n  \"cursore\",\n  \"curvo\",\n  \"cuscino\",\n  \"custode\",\n  \"dado\",\n  \"daino\",\n  \"dalmata\",\n  \"damerino\",\n  \"daniela\",\n  \"dannoso\",\n  \"danzare\",\n  \"datato\",\n  \"davanti\",\n  \"davvero\",\n  \"debutto\",\n  \"decennio\",\n  \"deciso\",\n  \"declino\",\n  \"decollo\",\n  \"decreto\",\n  \"dedicato\",\n  \"definito\",\n  \"deforme\",\n  \"degno\",\n  \"delegare\",\n  \"delfino\",\n  \"delirio\",\n  \"delta\",\n  \"demenza\",\n  \"denotato\",\n  \"dentro\",\n  \"deposito\",\n  \"derapata\",\n  \"derivare\",\n  \"deroga\",\n  \"descritto\",\n  \"deserto\",\n  \"desiderio\",\n  \"desumere\",\n  \"detersivo\",\n  \"devoto\",\n  \"diametro\",\n  \"dicembre\",\n  \"diedro\",\n  \"difeso\",\n  \"diffuso\",\n  \"digerire\",\n  \"digitale\",\n  \"diluvio\",\n  \"dinamico\",\n  \"dinnanzi\",\n  \"dipinto\",\n  \"diploma\",\n  \"dipolo\",\n  \"diradare\",\n  \"dire\",\n  \"dirotto\",\n  \"dirupo\",\n  \"disagio\",\n  \"discreto\",\n  \"disfare\",\n  \"disgelo\",\n  \"disposto\",\n  \"distanza\",\n  \"disumano\",\n  \"dito\",\n  \"divano\",\n  \"divelto\",\n  \"dividere\",\n  \"divorato\",\n  \"doblone\",\n  \"docente\",\n  \"doganale\",\n  \"dogma\",\n  \"dolce\",\n  \"domato\",\n  \"domenica\",\n  \"dominare\",\n  \"dondolo\",\n  \"dono\",\n  \"dormire\",\n  \"dote\",\n  \"dottore\",\n  \"dovuto\",\n  \"dozzina\",\n  \"drago\",\n  \"druido\",\n  \"dubbio\",\n  \"dubitare\",\n  \"ducale\",\n  \"duna\",\n  \"duomo\",\n  \"duplice\",\n  \"duraturo\",\n  \"ebano\",\n  \"eccesso\",\n  \"ecco\",\n  \"eclissi\",\n  \"economia\",\n  \"edera\",\n  \"edicola\",\n  \"edile\",\n  \"editoria\",\n  \"educare\",\n  \"egemonia\",\n  \"egli\",\n  \"egoismo\",\n  \"egregio\",\n  \"elaborato\",\n  \"elargire\",\n  \"elegante\",\n  \"elencato\",\n  \"eletto\",\n  \"elevare\",\n  \"elfico\",\n  \"elica\",\n  \"elmo\",\n  \"elsa\",\n  \"eluso\",\n  \"emanato\",\n  \"emblema\",\n  \"emesso\",\n  \"emiro\",\n  \"emotivo\",\n  \"emozione\",\n  \"empirico\",\n  \"emulo\",\n  \"endemico\",\n  \"enduro\",\n  \"energia\",\n  \"enfasi\",\n  \"enoteca\",\n  \"entrare\",\n  \"enzima\",\n  \"epatite\",\n  \"epilogo\",\n  \"episodio\",\n  \"epocale\",\n  \"eppure\",\n  \"equatore\",\n  \"erario\",\n  \"erba\",\n  \"erboso\",\n  \"erede\",\n  \"eremita\",\n  \"erigere\",\n  \"ermetico\",\n  \"eroe\",\n  \"erosivo\",\n  \"errante\",\n  \"esagono\",\n  \"esame\",\n  \"esanime\",\n  \"esaudire\",\n  \"esca\",\n  \"esempio\",\n  \"esercito\",\n  \"esibito\",\n  \"esigente\",\n  \"esistere\",\n  \"esito\",\n  \"esofago\",\n  \"esortato\",\n  \"esoso\",\n  \"espanso\",\n  \"espresso\",\n  \"essenza\",\n  \"esso\",\n  \"esteso\",\n  \"estimare\",\n  \"estonia\",\n  \"estroso\",\n  \"esultare\",\n  \"etilico\",\n  \"etnico\",\n  \"etrusco\",\n  \"etto\",\n  \"euclideo\",\n  \"europa\",\n  \"evaso\",\n  \"evidenza\",\n  \"evitato\",\n  \"evoluto\",\n  \"evviva\",\n  \"fabbrica\",\n  \"faccenda\",\n  \"fachiro\",\n  \"falco\",\n  \"famiglia\",\n  \"fanale\",\n  \"fanfara\",\n  \"fango\",\n  \"fantasma\",\n  \"fare\",\n  \"farfalla\",\n  \"farinoso\",\n  \"farmaco\",\n  \"fascia\",\n  \"fastoso\",\n  \"fasullo\",\n  \"faticare\",\n  \"fato\",\n  \"favoloso\",\n  \"febbre\",\n  \"fecola\",\n  \"fede\",\n  \"fegato\",\n  \"felpa\",\n  \"feltro\",\n  \"femmina\",\n  \"fendere\",\n  \"fenomeno\",\n  \"fermento\",\n  \"ferro\",\n  \"fertile\",\n  \"fessura\",\n  \"festivo\",\n  \"fetta\",\n  \"feudo\",\n  \"fiaba\",\n  \"fiducia\",\n  \"fifa\",\n  \"figurato\",\n  \"filo\",\n  \"finanza\",\n  \"finestra\",\n  \"finire\",\n  \"fiore\",\n  \"fiscale\",\n  \"fisico\",\n  \"fiume\",\n  \"flacone\",\n  \"flamenco\",\n  \"flebo\",\n  \"flemma\",\n  \"florido\",\n  \"fluente\",\n  \"fluoro\",\n  \"fobico\",\n  \"focaccia\",\n  \"focoso\",\n  \"foderato\",\n  \"foglio\",\n  \"folata\",\n  \"folclore\",\n  \"folgore\",\n  \"fondente\",\n  \"fonetico\",\n  \"fonia\",\n  \"fontana\",\n  \"forbito\",\n  \"forchetta\",\n  \"foresta\",\n  \"formica\",\n  \"fornaio\",\n  \"foro\",\n  \"fortezza\",\n  \"forzare\",\n  \"fosfato\",\n  \"fosso\",\n  \"fracasso\",\n  \"frana\",\n  \"frassino\",\n  \"fratello\",\n  \"freccetta\",\n  \"frenata\",\n  \"fresco\",\n  \"frigo\",\n  \"frollino\",\n  \"fronde\",\n  \"frugale\",\n  \"frutta\",\n  \"fucilata\",\n  \"fucsia\",\n  \"fuggente\",\n  \"fulmine\",\n  \"fulvo\",\n  \"fumante\",\n  \"fumetto\",\n  \"fumoso\",\n  \"fune\",\n  \"funzione\",\n  \"fuoco\",\n  \"furbo\",\n  \"furgone\",\n  \"furore\",\n  \"fuso\",\n  \"futile\",\n  \"gabbiano\",\n  \"gaffe\",\n  \"galateo\",\n  \"gallina\",\n  \"galoppo\",\n  \"gambero\",\n  \"gamma\",\n  \"garanzia\",\n  \"garbo\",\n  \"garofano\",\n  \"garzone\",\n  \"gasdotto\",\n  \"gasolio\",\n  \"gastrico\",\n  \"gatto\",\n  \"gaudio\",\n  \"gazebo\",\n  \"gazzella\",\n  \"geco\",\n  \"gelatina\",\n  \"gelso\",\n  \"gemello\",\n  \"gemmato\",\n  \"gene\",\n  \"genitore\",\n  \"gennaio\",\n  \"genotipo\",\n  \"gergo\",\n  \"ghepardo\",\n  \"ghiaccio\",\n  \"ghisa\",\n  \"giallo\",\n  \"gilda\",\n  \"ginepro\",\n  \"giocare\",\n  \"gioiello\",\n  \"giorno\",\n  \"giove\",\n  \"girato\",\n  \"girone\",\n  \"gittata\",\n  \"giudizio\",\n  \"giurato\",\n  \"giusto\",\n  \"globulo\",\n  \"glutine\",\n  \"gnomo\",\n  \"gobba\",\n  \"golf\",\n  \"gomito\",\n  \"gommone\",\n  \"gonfio\",\n  \"gonna\",\n  \"governo\",\n  \"gracile\",\n  \"grado\",\n  \"grafico\",\n  \"grammo\",\n  \"grande\",\n  \"grattare\",\n  \"gravoso\",\n  \"grazia\",\n  \"greca\",\n  \"gregge\",\n  \"grifone\",\n  \"grigio\",\n  \"grinza\",\n  \"grotta\",\n  \"gruppo\",\n  \"guadagno\",\n  \"guaio\",\n  \"guanto\",\n  \"guardare\",\n  \"gufo\",\n  \"guidare\",\n  \"ibernato\",\n  \"icona\",\n  \"identico\",\n  \"idillio\",\n  \"idolo\",\n  \"idra\",\n  \"idrico\",\n  \"idrogeno\",\n  \"igiene\",\n  \"ignaro\",\n  \"ignorato\",\n  \"ilare\",\n  \"illeso\",\n  \"illogico\",\n  \"illudere\",\n  \"imballo\",\n  \"imbevuto\",\n  \"imbocco\",\n  \"imbuto\",\n  \"immane\",\n  \"immerso\",\n  \"immolato\",\n  \"impacco\",\n  \"impeto\",\n  \"impiego\",\n  \"importo\",\n  \"impronta\",\n  \"inalare\",\n  \"inarcare\",\n  \"inattivo\",\n  \"incanto\",\n  \"incendio\",\n  \"inchino\",\n  \"incisivo\",\n  \"incluso\",\n  \"incontro\",\n  \"incrocio\",\n  \"incubo\",\n  \"indagine\",\n  \"india\",\n  \"indole\",\n  \"inedito\",\n  \"infatti\",\n  \"infilare\",\n  \"inflitto\",\n  \"ingaggio\",\n  \"ingegno\",\n  \"inglese\",\n  \"ingordo\",\n  \"ingrosso\",\n  \"innesco\",\n  \"inodore\",\n  \"inoltrare\",\n  \"inondato\",\n  \"insano\",\n  \"insetto\",\n  \"insieme\",\n  \"insonnia\",\n  \"insulina\",\n  \"intasato\",\n  \"intero\",\n  \"intonaco\",\n  \"intuito\",\n  \"inumidire\",\n  \"invalido\",\n  \"invece\",\n  \"invito\",\n  \"iperbole\",\n  \"ipnotico\",\n  \"ipotesi\",\n  \"ippica\",\n  \"iride\",\n  \"irlanda\",\n  \"ironico\",\n  \"irrigato\",\n  \"irrorare\",\n  \"isolato\",\n  \"isotopo\",\n  \"isterico\",\n  \"istituto\",\n  \"istrice\",\n  \"italia\",\n  \"iterare\",\n  \"labbro\",\n  \"labirinto\",\n  \"lacca\",\n  \"lacerato\",\n  \"lacrima\",\n  \"lacuna\",\n  \"laddove\",\n  \"lago\",\n  \"lampo\",\n  \"lancetta\",\n  \"lanterna\",\n  \"lardoso\",\n  \"larga\",\n  \"laringe\",\n  \"lastra\",\n  \"latenza\",\n  \"latino\",\n  \"lattuga\",\n  \"lavagna\",\n  \"lavoro\",\n  \"legale\",\n  \"leggero\",\n  \"lembo\",\n  \"lentezza\",\n  \"lenza\",\n  \"leone\",\n  \"lepre\",\n  \"lesivo\",\n  \"lessato\",\n  \"lesto\",\n  \"letterale\",\n  \"leva\",\n  \"levigato\",\n  \"libero\",\n  \"lido\",\n  \"lievito\",\n  \"lilla\",\n  \"limatura\",\n  \"limitare\",\n  \"limpido\",\n  \"lineare\",\n  \"lingua\",\n  \"liquido\",\n  \"lira\",\n  \"lirica\",\n  \"lisca\",\n  \"lite\",\n  \"litigio\",\n  \"livrea\",\n  \"locanda\",\n  \"lode\",\n  \"logica\",\n  \"lombare\",\n  \"londra\",\n  \"longevo\",\n  \"loquace\",\n  \"lorenzo\",\n  \"loto\",\n  \"lotteria\",\n  \"luce\",\n  \"lucidato\",\n  \"lumaca\",\n  \"luminoso\",\n  \"lungo\",\n  \"lupo\",\n  \"luppolo\",\n  \"lusinga\",\n  \"lusso\",\n  \"lutto\",\n  \"macabro\",\n  \"macchina\",\n  \"macero\",\n  \"macinato\",\n  \"madama\",\n  \"magico\",\n  \"maglia\",\n  \"magnete\",\n  \"magro\",\n  \"maiolica\",\n  \"malafede\",\n  \"malgrado\",\n  \"malinteso\",\n  \"malsano\",\n  \"malto\",\n  \"malumore\",\n  \"mana\",\n  \"mancia\",\n  \"mandorla\",\n  \"mangiare\",\n  \"manifesto\",\n  \"mannaro\",\n  \"manovra\",\n  \"mansarda\",\n  \"mantide\",\n  \"manubrio\",\n  \"mappa\",\n  \"maratona\",\n  \"marcire\",\n  \"maretta\",\n  \"marmo\",\n  \"marsupio\",\n  \"maschera\",\n  \"massaia\",\n  \"mastino\",\n  \"materasso\",\n  \"matricola\",\n  \"mattone\",\n  \"maturo\",\n  \"mazurca\",\n  \"meandro\",\n  \"meccanico\",\n  \"mecenate\",\n  \"medesimo\",\n  \"meditare\",\n  \"mega\",\n  \"melassa\",\n  \"melis\",\n  \"melodia\",\n  \"meninge\",\n  \"meno\",\n  \"mensola\",\n  \"mercurio\",\n  \"merenda\",\n  \"merlo\",\n  \"meschino\",\n  \"mese\",\n  \"messere\",\n  \"mestolo\",\n  \"metallo\",\n  \"metodo\",\n  \"mettere\",\n  \"miagolare\",\n  \"mica\",\n  \"micelio\",\n  \"michele\",\n  \"microbo\",\n  \"midollo\",\n  \"miele\",\n  \"migliore\",\n  \"milano\",\n  \"milite\",\n  \"mimosa\",\n  \"minerale\",\n  \"mini\",\n  \"minore\",\n  \"mirino\",\n  \"mirtillo\",\n  \"miscela\",\n  \"missiva\",\n  \"misto\",\n  \"misurare\",\n  \"mitezza\",\n  \"mitigare\",\n  \"mitra\",\n  \"mittente\",\n  \"mnemonico\",\n  \"modello\",\n  \"modifica\",\n  \"modulo\",\n  \"mogano\",\n  \"mogio\",\n  \"mole\",\n  \"molosso\",\n  \"monastero\",\n  \"monco\",\n  \"mondina\",\n  \"monetario\",\n  \"monile\",\n  \"monotono\",\n  \"monsone\",\n  \"montato\",\n  \"monviso\",\n  \"mora\",\n  \"mordere\",\n  \"morsicato\",\n  \"mostro\",\n  \"motivato\",\n  \"motosega\",\n  \"motto\",\n  \"movenza\",\n  \"movimento\",\n  \"mozzo\",\n  \"mucca\",\n  \"mucosa\",\n  \"muffa\",\n  \"mughetto\",\n  \"mugnaio\",\n  \"mulatto\",\n  \"mulinello\",\n  \"multiplo\",\n  \"mummia\",\n  \"munto\",\n  \"muovere\",\n  \"murale\",\n  \"musa\",\n  \"muscolo\",\n  \"musica\",\n  \"mutevole\",\n  \"muto\",\n  \"nababbo\",\n  \"nafta\",\n  \"nanometro\",\n  \"narciso\",\n  \"narice\",\n  \"narrato\",\n  \"nascere\",\n  \"nastrare\",\n  \"naturale\",\n  \"nautica\",\n  \"naviglio\",\n  \"nebulosa\",\n  \"necrosi\",\n  \"negativo\",\n  \"negozio\",\n  \"nemmeno\",\n  \"neofita\",\n  \"neretto\",\n  \"nervo\",\n  \"nessuno\",\n  \"nettuno\",\n  \"neutrale\",\n  \"neve\",\n  \"nevrotico\",\n  \"nicchia\",\n  \"ninfa\",\n  \"nitido\",\n  \"nobile\",\n  \"nocivo\",\n  \"nodo\",\n  \"nome\",\n  \"nomina\",\n  \"nordico\",\n  \"normale\",\n  \"norvegese\",\n  \"nostrano\",\n  \"notare\",\n  \"notizia\",\n  \"notturno\",\n  \"novella\",\n  \"nucleo\",\n  \"nulla\",\n  \"numero\",\n  \"nuovo\",\n  \"nutrire\",\n  \"nuvola\",\n  \"nuziale\",\n  \"oasi\",\n  \"obbedire\",\n  \"obbligo\",\n  \"obelisco\",\n  \"oblio\",\n  \"obolo\",\n  \"obsoleto\",\n  \"occasione\",\n  \"occhio\",\n  \"occidente\",\n  \"occorrere\",\n  \"occultare\",\n  \"ocra\",\n  \"oculato\",\n  \"odierno\",\n  \"odorare\",\n  \"offerta\",\n  \"offrire\",\n  \"offuscato\",\n  \"oggetto\",\n  \"oggi\",\n  \"ognuno\",\n  \"olandese\",\n  \"olfatto\",\n  \"oliato\",\n  \"oliva\",\n  \"ologramma\",\n  \"oltre\",\n  \"omaggio\",\n  \"ombelico\",\n  \"ombra\",\n  \"omega\",\n  \"omissione\",\n  \"ondoso\",\n  \"onere\",\n  \"onice\",\n  \"onnivoro\",\n  \"onorevole\",\n  \"onta\",\n  \"operato\",\n  \"opinione\",\n  \"opposto\",\n  \"oracolo\",\n  \"orafo\",\n  \"ordine\",\n  \"orecchino\",\n  \"orefice\",\n  \"orfano\",\n  \"organico\",\n  \"origine\",\n  \"orizzonte\",\n  \"orma\",\n  \"ormeggio\",\n  \"ornativo\",\n  \"orologio\",\n  \"orrendo\",\n  \"orribile\",\n  \"ortensia\",\n  \"ortica\",\n  \"orzata\",\n  \"orzo\",\n  \"osare\",\n  \"oscurare\",\n  \"osmosi\",\n  \"ospedale\",\n  \"ospite\",\n  \"ossa\",\n  \"ossidare\",\n  \"ostacolo\",\n  \"oste\",\n  \"otite\",\n  \"otre\",\n  \"ottagono\",\n  \"ottimo\",\n  \"ottobre\",\n  \"ovale\",\n  \"ovest\",\n  \"ovino\",\n  \"oviparo\",\n  \"ovocito\",\n  \"ovunque\",\n  \"ovviare\",\n  \"ozio\",\n  \"pacchetto\",\n  \"pace\",\n  \"pacifico\",\n  \"padella\",\n  \"padrone\",\n  \"paese\",\n  \"paga\",\n  \"pagina\",\n  \"palazzina\",\n  \"palesare\",\n  \"pallido\",\n  \"palo\",\n  \"palude\",\n  \"pandoro\",\n  \"pannello\",\n  \"paolo\",\n  \"paonazzo\",\n  \"paprica\",\n  \"parabola\",\n  \"parcella\",\n  \"parere\",\n  \"pargolo\",\n  \"pari\",\n  \"parlato\",\n  \"parola\",\n  \"partire\",\n  \"parvenza\",\n  \"parziale\",\n  \"passivo\",\n  \"pasticca\",\n  \"patacca\",\n  \"patologia\",\n  \"pattume\",\n  \"pavone\",\n  \"peccato\",\n  \"pedalare\",\n  \"pedonale\",\n  \"peggio\",\n  \"peloso\",\n  \"penare\",\n  \"pendice\",\n  \"penisola\",\n  \"pennuto\",\n  \"penombra\",\n  \"pensare\",\n  \"pentola\",\n  \"pepe\",\n  \"pepita\",\n  \"perbene\",\n  \"percorso\",\n  \"perdonato\",\n  \"perforare\",\n  \"pergamena\",\n  \"periodo\",\n  \"permesso\",\n  \"perno\",\n  \"perplesso\",\n  \"persuaso\",\n  \"pertugio\",\n  \"pervaso\",\n  \"pesatore\",\n  \"pesista\",\n  \"peso\",\n  \"pestifero\",\n  \"petalo\",\n  \"pettine\",\n  \"petulante\",\n  \"pezzo\",\n  \"piacere\",\n  \"pianta\",\n  \"piattino\",\n  \"piccino\",\n  \"picozza\",\n  \"piega\",\n  \"pietra\",\n  \"piffero\",\n  \"pigiama\",\n  \"pigolio\",\n  \"pigro\",\n  \"pila\",\n  \"pilifero\",\n  \"pillola\",\n  \"pilota\",\n  \"pimpante\",\n  \"pineta\",\n  \"pinna\",\n  \"pinolo\",\n  \"pioggia\",\n  \"piombo\",\n  \"piramide\",\n  \"piretico\",\n  \"pirite\",\n  \"pirolisi\",\n  \"pitone\",\n  \"pizzico\",\n  \"placebo\",\n  \"planare\",\n  \"plasma\",\n  \"platano\",\n  \"plenario\",\n  \"pochezza\",\n  \"poderoso\",\n  \"podismo\",\n  \"poesia\",\n  \"poggiare\",\n  \"polenta\",\n  \"poligono\",\n  \"pollice\",\n  \"polmonite\",\n  \"polpetta\",\n  \"polso\",\n  \"poltrona\",\n  \"polvere\",\n  \"pomice\",\n  \"pomodoro\",\n  \"ponte\",\n  \"popoloso\",\n  \"porfido\",\n  \"poroso\",\n  \"porpora\",\n  \"porre\",\n  \"portata\",\n  \"posa\",\n  \"positivo\",\n  \"possesso\",\n  \"postulato\",\n  \"potassio\",\n  \"potere\",\n  \"pranzo\",\n  \"prassi\",\n  \"pratica\",\n  \"precluso\",\n  \"predica\",\n  \"prefisso\",\n  \"pregiato\",\n  \"prelievo\",\n  \"premere\",\n  \"prenotare\",\n  \"preparato\",\n  \"presenza\",\n  \"pretesto\",\n  \"prevalso\",\n  \"prima\",\n  \"principe\",\n  \"privato\",\n  \"problema\",\n  \"procura\",\n  \"produrre\",\n  \"profumo\",\n  \"progetto\",\n  \"prolunga\",\n  \"promessa\",\n  \"pronome\",\n  \"proposta\",\n  \"proroga\",\n  \"proteso\",\n  \"prova\",\n  \"prudente\",\n  \"prugna\",\n  \"prurito\",\n  \"psiche\",\n  \"pubblico\",\n  \"pudica\",\n  \"pugilato\",\n  \"pugno\",\n  \"pulce\",\n  \"pulito\",\n  \"pulsante\",\n  \"puntare\",\n  \"pupazzo\",\n  \"pupilla\",\n  \"puro\",\n  \"quadro\",\n  \"qualcosa\",\n  \"quasi\",\n  \"querela\",\n  \"quota\",\n  \"raccolto\",\n  \"raddoppio\",\n  \"radicale\",\n  \"radunato\",\n  \"raffica\",\n  \"ragazzo\",\n  \"ragione\",\n  \"ragno\",\n  \"ramarro\",\n  \"ramingo\",\n  \"ramo\",\n  \"randagio\",\n  \"rantolare\",\n  \"rapato\",\n  \"rapina\",\n  \"rappreso\",\n  \"rasatura\",\n  \"raschiato\",\n  \"rasente\",\n  \"rassegna\",\n  \"rastrello\",\n  \"rata\",\n  \"ravveduto\",\n  \"reale\",\n  \"recepire\",\n  \"recinto\",\n  \"recluta\",\n  \"recondito\",\n  \"recupero\",\n  \"reddito\",\n  \"redimere\",\n  \"regalato\",\n  \"registro\",\n  \"regola\",\n  \"regresso\",\n  \"relazione\",\n  \"remare\",\n  \"remoto\",\n  \"renna\",\n  \"replica\",\n  \"reprimere\",\n  \"reputare\",\n  \"resa\",\n  \"residente\",\n  \"responso\",\n  \"restauro\",\n  \"rete\",\n  \"retina\",\n  \"retorica\",\n  \"rettifica\",\n  \"revocato\",\n  \"riassunto\",\n  \"ribadire\",\n  \"ribelle\",\n  \"ribrezzo\",\n  \"ricarica\",\n  \"ricco\",\n  \"ricevere\",\n  \"riciclato\",\n  \"ricordo\",\n  \"ricreduto\",\n  \"ridicolo\",\n  \"ridurre\",\n  \"rifasare\",\n  \"riflesso\",\n  \"riforma\",\n  \"rifugio\",\n  \"rigare\",\n  \"rigettato\",\n  \"righello\",\n  \"rilassato\",\n  \"rilevato\",\n  \"rimanere\",\n  \"rimbalzo\",\n  \"rimedio\",\n  \"rimorchio\",\n  \"rinascita\",\n  \"rincaro\",\n  \"rinforzo\",\n  \"rinnovo\",\n  \"rinomato\",\n  \"rinsavito\",\n  \"rintocco\",\n  \"rinuncia\",\n  \"rinvenire\",\n  \"riparato\",\n  \"ripetuto\",\n  \"ripieno\",\n  \"riportare\",\n  \"ripresa\",\n  \"ripulire\",\n  \"risata\",\n  \"rischio\",\n  \"riserva\",\n  \"risibile\",\n  \"riso\",\n  \"rispetto\",\n  \"ristoro\",\n  \"risultato\",\n  \"risvolto\",\n  \"ritardo\",\n  \"ritegno\",\n  \"ritmico\",\n  \"ritrovo\",\n  \"riunione\",\n  \"riva\",\n  \"riverso\",\n  \"rivincita\",\n  \"rivolto\",\n  \"rizoma\",\n  \"roba\",\n  \"robotico\",\n  \"robusto\",\n  \"roccia\",\n  \"roco\",\n  \"rodaggio\",\n  \"rodere\",\n  \"roditore\",\n  \"rogito\",\n  \"rollio\",\n  \"romantico\",\n  \"rompere\",\n  \"ronzio\",\n  \"rosolare\",\n  \"rospo\",\n  \"rotante\",\n  \"rotondo\",\n  \"rotula\",\n  \"rovescio\",\n  \"rubizzo\",\n  \"rubrica\",\n  \"ruga\",\n  \"rullino\",\n  \"rumine\",\n  \"rumoroso\",\n  \"ruolo\",\n  \"rupe\",\n  \"russare\",\n  \"rustico\",\n  \"sabato\",\n  \"sabbiare\",\n  \"sabotato\",\n  \"sagoma\",\n  \"salasso\",\n  \"saldatura\",\n  \"salgemma\",\n  \"salivare\",\n  \"salmone\",\n  \"salone\",\n  \"saltare\",\n  \"saluto\",\n  \"salvo\",\n  \"sapere\",\n  \"sapido\",\n  \"saporito\",\n  \"saraceno\",\n  \"sarcasmo\",\n  \"sarto\",\n  \"sassoso\",\n  \"satellite\",\n  \"satira\",\n  \"satollo\",\n  \"saturno\",\n  \"savana\",\n  \"savio\",\n  \"saziato\",\n  \"sbadiglio\",\n  \"sbalzo\",\n  \"sbancato\",\n  \"sbarra\",\n  \"sbattere\",\n  \"sbavare\",\n  \"sbendare\",\n  \"sbirciare\",\n  \"sbloccato\",\n  \"sbocciato\",\n  \"sbrinare\",\n  \"sbruffone\",\n  \"sbuffare\",\n  \"scabroso\",\n  \"scadenza\",\n  \"scala\",\n  \"scambiare\",\n  \"scandalo\",\n  \"scapola\",\n  \"scarso\",\n  \"scatenare\",\n  \"scavato\",\n  \"scelto\",\n  \"scenico\",\n  \"scettro\",\n  \"scheda\",\n  \"schiena\",\n  \"sciarpa\",\n  \"scienza\",\n  \"scindere\",\n  \"scippo\",\n  \"sciroppo\",\n  \"scivolo\",\n  \"sclerare\",\n  \"scodella\",\n  \"scolpito\",\n  \"scomparto\",\n  \"sconforto\",\n  \"scoprire\",\n  \"scorta\",\n  \"scossone\",\n  \"scozzese\",\n  \"scriba\",\n  \"scrollare\",\n  \"scrutinio\",\n  \"scuderia\",\n  \"scultore\",\n  \"scuola\",\n  \"scuro\",\n  \"scusare\",\n  \"sdebitare\",\n  \"sdoganare\",\n  \"seccatura\",\n  \"secondo\",\n  \"sedano\",\n  \"seggiola\",\n  \"segnalato\",\n  \"segregato\",\n  \"seguito\",\n  \"selciato\",\n  \"selettivo\",\n  \"sella\",\n  \"selvaggio\",\n  \"semaforo\",\n  \"sembrare\",\n  \"seme\",\n  \"seminato\",\n  \"sempre\",\n  \"senso\",\n  \"sentire\",\n  \"sepolto\",\n  \"sequenza\",\n  \"serata\",\n  \"serbato\",\n  \"sereno\",\n  \"serio\",\n  \"serpente\",\n  \"serraglio\",\n  \"servire\",\n  \"sestina\",\n  \"setola\",\n  \"settimana\",\n  \"sfacelo\",\n  \"sfaldare\",\n  \"sfamato\",\n  \"sfarzoso\",\n  \"sfaticato\",\n  \"sfera\",\n  \"sfida\",\n  \"sfilato\",\n  \"sfinge\",\n  \"sfocato\",\n  \"sfoderare\",\n  \"sfogo\",\n  \"sfoltire\",\n  \"sforzato\",\n  \"sfratto\",\n  \"sfruttato\",\n  \"sfuggito\",\n  \"sfumare\",\n  \"sfuso\",\n  \"sgabello\",\n  \"sgarbato\",\n  \"sgonfiare\",\n  \"sgorbio\",\n  \"sgrassato\",\n  \"sguardo\",\n  \"sibilo\",\n  \"siccome\",\n  \"sierra\",\n  \"sigla\",\n  \"signore\",\n  \"silenzio\",\n  \"sillaba\",\n  \"simbolo\",\n  \"simpatico\",\n  \"simulato\",\n  \"sinfonia\",\n  \"singolo\",\n  \"sinistro\",\n  \"sino\",\n  \"sintesi\",\n  \"sinusoide\",\n  \"sipario\",\n  \"sisma\",\n  \"sistole\",\n  \"situato\",\n  \"slitta\",\n  \"slogatura\",\n  \"sloveno\",\n  \"smarrito\",\n  \"smemorato\",\n  \"smentito\",\n  \"smeraldo\",\n  \"smilzo\",\n  \"smontare\",\n  \"smottato\",\n  \"smussato\",\n  \"snellire\",\n  \"snervato\",\n  \"snodo\",\n  \"sobbalzo\",\n  \"sobrio\",\n  \"soccorso\",\n  \"sociale\",\n  \"sodale\",\n  \"soffitto\",\n  \"sogno\",\n  \"soldato\",\n  \"solenne\",\n  \"solido\",\n  \"sollazzo\",\n  \"solo\",\n  \"solubile\",\n  \"solvente\",\n  \"somatico\",\n  \"somma\",\n  \"sonda\",\n  \"sonetto\",\n  \"sonnifero\",\n  \"sopire\",\n  \"soppeso\",\n  \"sopra\",\n  \"sorgere\",\n  \"sorpasso\",\n  \"sorriso\",\n  \"sorso\",\n  \"sorteggio\",\n  \"sorvolato\",\n  \"sospiro\",\n  \"sosta\",\n  \"sottile\",\n  \"spada\",\n  \"spalla\",\n  \"spargere\",\n  \"spatola\",\n  \"spavento\",\n  \"spazzola\",\n  \"specie\",\n  \"spedire\",\n  \"spegnere\",\n  \"spelatura\",\n  \"speranza\",\n  \"spessore\",\n  \"spettrale\",\n  \"spezzato\",\n  \"spia\",\n  \"spigoloso\",\n  \"spillato\",\n  \"spinoso\",\n  \"spirale\",\n  \"splendido\",\n  \"sportivo\",\n  \"sposo\",\n  \"spranga\",\n  \"sprecare\",\n  \"spronato\",\n  \"spruzzo\",\n  \"spuntino\",\n  \"squillo\",\n  \"sradicare\",\n  \"srotolato\",\n  \"stabile\",\n  \"stacco\",\n  \"staffa\",\n  \"stagnare\",\n  \"stampato\",\n  \"stantio\",\n  \"starnuto\",\n  \"stasera\",\n  \"statuto\",\n  \"stelo\",\n  \"steppa\",\n  \"sterzo\",\n  \"stiletto\",\n  \"stima\",\n  \"stirpe\",\n  \"stivale\",\n  \"stizzoso\",\n  \"stonato\",\n  \"storico\",\n  \"strappo\",\n  \"stregato\",\n  \"stridulo\",\n  \"strozzare\",\n  \"strutto\",\n  \"stuccare\",\n  \"stufo\",\n  \"stupendo\",\n  \"subentro\",\n  \"succoso\",\n  \"sudore\",\n  \"suggerito\",\n  \"sugo\",\n  \"sultano\",\n  \"suonare\",\n  \"superbo\",\n  \"supporto\",\n  \"surgelato\",\n  \"surrogato\",\n  \"sussurro\",\n  \"sutura\",\n  \"svagare\",\n  \"svedese\",\n  \"sveglio\",\n  \"svelare\",\n  \"svenuto\",\n  \"svezia\",\n  \"sviluppo\",\n  \"svista\",\n  \"svizzera\",\n  \"svolta\",\n  \"svuotare\",\n  \"tabacco\",\n  \"tabulato\",\n  \"tacciare\",\n  \"taciturno\",\n  \"tale\",\n  \"talismano\",\n  \"tampone\",\n  \"tannino\",\n  \"tara\",\n  \"tardivo\",\n  \"targato\",\n  \"tariffa\",\n  \"tarpare\",\n  \"tartaruga\",\n  \"tasto\",\n  \"tattico\",\n  \"taverna\",\n  \"tavolata\",\n  \"tazza\",\n  \"teca\",\n  \"tecnico\",\n  \"telefono\",\n  \"temerario\",\n  \"tempo\",\n  \"temuto\",\n  \"tendone\",\n  \"tenero\",\n  \"tensione\",\n  \"tentacolo\",\n  \"teorema\",\n  \"terme\",\n  \"terrazzo\",\n  \"terzetto\",\n  \"tesi\",\n  \"tesserato\",\n  \"testato\",\n  \"tetro\",\n  \"tettoia\",\n  \"tifare\",\n  \"tigella\",\n  \"timbro\",\n  \"tinto\",\n  \"tipico\",\n  \"tipografo\",\n  \"tiraggio\",\n  \"tiro\",\n  \"titanio\",\n  \"titolo\",\n  \"titubante\",\n  \"tizio\",\n  \"tizzone\",\n  \"toccare\",\n  \"tollerare\",\n  \"tolto\",\n  \"tombola\",\n  \"tomo\",\n  \"tonfo\",\n  \"tonsilla\",\n  \"topazio\",\n  \"topologia\",\n  \"toppa\",\n  \"torba\",\n  \"tornare\",\n  \"torrone\",\n  \"tortora\",\n  \"toscano\",\n  \"tossire\",\n  \"tostatura\",\n  \"totano\",\n  \"trabocco\",\n  \"trachea\",\n  \"trafila\",\n  \"tragedia\",\n  \"tralcio\",\n  \"tramonto\",\n  \"transito\",\n  \"trapano\",\n  \"trarre\",\n  \"trasloco\",\n  \"trattato\",\n  \"trave\",\n  \"treccia\",\n  \"tremolio\",\n  \"trespolo\",\n  \"tributo\",\n  \"tricheco\",\n  \"trifoglio\",\n  \"trillo\",\n  \"trincea\",\n  \"trio\",\n  \"tristezza\",\n  \"triturato\",\n  \"trivella\",\n  \"tromba\",\n  \"trono\",\n  \"troppo\",\n  \"trottola\",\n  \"trovare\",\n  \"truccato\",\n  \"tubatura\",\n  \"tuffato\",\n  \"tulipano\",\n  \"tumulto\",\n  \"tunisia\",\n  \"turbare\",\n  \"turchino\",\n  \"tuta\",\n  \"tutela\",\n  \"ubicato\",\n  \"uccello\",\n  \"uccisore\",\n  \"udire\",\n  \"uditivo\",\n  \"uffa\",\n  \"ufficio\",\n  \"uguale\",\n  \"ulisse\",\n  \"ultimato\",\n  \"umano\",\n  \"umile\",\n  \"umorismo\",\n  \"uncinetto\",\n  \"ungere\",\n  \"ungherese\",\n  \"unicorno\",\n  \"unificato\",\n  \"unisono\",\n  \"unitario\",\n  \"unte\",\n  \"uovo\",\n  \"upupa\",\n  \"uragano\",\n  \"urgenza\",\n  \"urlo\",\n  \"usanza\",\n  \"usato\",\n  \"uscito\",\n  \"usignolo\",\n  \"usuraio\",\n  \"utensile\",\n  \"utilizzo\",\n  \"utopia\",\n  \"vacante\",\n  \"vaccinato\",\n  \"vagabondo\",\n  \"vagliato\",\n  \"valanga\",\n  \"valgo\",\n  \"valico\",\n  \"valletta\",\n  \"valoroso\",\n  \"valutare\",\n  \"valvola\",\n  \"vampata\",\n  \"vangare\",\n  \"vanitoso\",\n  \"vano\",\n  \"vantaggio\",\n  \"vanvera\",\n  \"vapore\",\n  \"varano\",\n  \"varcato\",\n  \"variante\",\n  \"vasca\",\n  \"vedetta\",\n  \"vedova\",\n  \"veduto\",\n  \"vegetale\",\n  \"veicolo\",\n  \"velcro\",\n  \"velina\",\n  \"velluto\",\n  \"veloce\",\n  \"venato\",\n  \"vendemmia\",\n  \"vento\",\n  \"verace\",\n  \"verbale\",\n  \"vergogna\",\n  \"verifica\",\n  \"vero\",\n  \"verruca\",\n  \"verticale\",\n  \"vescica\",\n  \"vessillo\",\n  \"vestale\",\n  \"veterano\",\n  \"vetrina\",\n  \"vetusto\",\n  \"viandante\",\n  \"vibrante\",\n  \"vicenda\",\n  \"vichingo\",\n  \"vicinanza\",\n  \"vidimare\",\n  \"vigilia\",\n  \"vigneto\",\n  \"vigore\",\n  \"vile\",\n  \"villano\",\n  \"vimini\",\n  \"vincitore\",\n  \"viola\",\n  \"vipera\",\n  \"virgola\",\n  \"virologo\",\n  \"virulento\",\n  \"viscoso\",\n  \"visione\",\n  \"vispo\",\n  \"vissuto\",\n  \"visura\",\n  \"vita\",\n  \"vitello\",\n  \"vittima\",\n  \"vivanda\",\n  \"vivido\",\n  \"viziare\",\n  \"voce\",\n  \"voga\",\n  \"volatile\",\n  \"volere\",\n  \"volpe\",\n  \"voragine\",\n  \"vulcano\",\n  \"zampogna\",\n  \"zanna\",\n  \"zappato\",\n  \"zattera\",\n  \"zavorra\",\n  \"zefiro\",\n  \"zelante\",\n  \"zelo\",\n  \"zenzero\",\n  \"zerbino\",\n  \"zibetto\",\n  \"zinco\",\n  \"zircone\",\n  \"zitto\",\n  \"zolla\",\n  \"zotico\",\n  \"zucchero\",\n  \"zufolo\",\n  \"zulu\",\n  \"zuppa\"\n], Ch = [\n  \"ábaco\",\n  \"abdomen\",\n  \"abeja\",\n  \"abierto\",\n  \"abogado\",\n  \"abono\",\n  \"aborto\",\n  \"abrazo\",\n  \"abrir\",\n  \"abuelo\",\n  \"abuso\",\n  \"acabar\",\n  \"academia\",\n  \"acceso\",\n  \"acción\",\n  \"aceite\",\n  \"acelga\",\n  \"acento\",\n  \"aceptar\",\n  \"ácido\",\n  \"aclarar\",\n  \"acné\",\n  \"acoger\",\n  \"acoso\",\n  \"activo\",\n  \"acto\",\n  \"actriz\",\n  \"actuar\",\n  \"acudir\",\n  \"acuerdo\",\n  \"acusar\",\n  \"adicto\",\n  \"admitir\",\n  \"adoptar\",\n  \"adorno\",\n  \"aduana\",\n  \"adulto\",\n  \"aéreo\",\n  \"afectar\",\n  \"afición\",\n  \"afinar\",\n  \"afirmar\",\n  \"ágil\",\n  \"agitar\",\n  \"agonía\",\n  \"agosto\",\n  \"agotar\",\n  \"agregar\",\n  \"agrio\",\n  \"agua\",\n  \"agudo\",\n  \"águila\",\n  \"aguja\",\n  \"ahogo\",\n  \"ahorro\",\n  \"aire\",\n  \"aislar\",\n  \"ajedrez\",\n  \"ajeno\",\n  \"ajuste\",\n  \"alacrán\",\n  \"alambre\",\n  \"alarma\",\n  \"alba\",\n  \"álbum\",\n  \"alcalde\",\n  \"aldea\",\n  \"alegre\",\n  \"alejar\",\n  \"alerta\",\n  \"aleta\",\n  \"alfiler\",\n  \"alga\",\n  \"algodón\",\n  \"aliado\",\n  \"aliento\",\n  \"alivio\",\n  \"alma\",\n  \"almeja\",\n  \"almíbar\",\n  \"altar\",\n  \"alteza\",\n  \"altivo\",\n  \"alto\",\n  \"altura\",\n  \"alumno\",\n  \"alzar\",\n  \"amable\",\n  \"amante\",\n  \"amapola\",\n  \"amargo\",\n  \"amasar\",\n  \"ámbar\",\n  \"ámbito\",\n  \"ameno\",\n  \"amigo\",\n  \"amistad\",\n  \"amor\",\n  \"amparo\",\n  \"amplio\",\n  \"ancho\",\n  \"anciano\",\n  \"ancla\",\n  \"andar\",\n  \"andén\",\n  \"anemia\",\n  \"ángulo\",\n  \"anillo\",\n  \"ánimo\",\n  \"anís\",\n  \"anotar\",\n  \"antena\",\n  \"antiguo\",\n  \"antojo\",\n  \"anual\",\n  \"anular\",\n  \"anuncio\",\n  \"añadir\",\n  \"añejo\",\n  \"año\",\n  \"apagar\",\n  \"aparato\",\n  \"apetito\",\n  \"apio\",\n  \"aplicar\",\n  \"apodo\",\n  \"aporte\",\n  \"apoyo\",\n  \"aprender\",\n  \"aprobar\",\n  \"apuesta\",\n  \"apuro\",\n  \"arado\",\n  \"araña\",\n  \"arar\",\n  \"árbitro\",\n  \"árbol\",\n  \"arbusto\",\n  \"archivo\",\n  \"arco\",\n  \"arder\",\n  \"ardilla\",\n  \"arduo\",\n  \"área\",\n  \"árido\",\n  \"aries\",\n  \"armonía\",\n  \"arnés\",\n  \"aroma\",\n  \"arpa\",\n  \"arpón\",\n  \"arreglo\",\n  \"arroz\",\n  \"arruga\",\n  \"arte\",\n  \"artista\",\n  \"asa\",\n  \"asado\",\n  \"asalto\",\n  \"ascenso\",\n  \"asegurar\",\n  \"aseo\",\n  \"asesor\",\n  \"asiento\",\n  \"asilo\",\n  \"asistir\",\n  \"asno\",\n  \"asombro\",\n  \"áspero\",\n  \"astilla\",\n  \"astro\",\n  \"astuto\",\n  \"asumir\",\n  \"asunto\",\n  \"atajo\",\n  \"ataque\",\n  \"atar\",\n  \"atento\",\n  \"ateo\",\n  \"ático\",\n  \"atleta\",\n  \"átomo\",\n  \"atraer\",\n  \"atroz\",\n  \"atún\",\n  \"audaz\",\n  \"audio\",\n  \"auge\",\n  \"aula\",\n  \"aumento\",\n  \"ausente\",\n  \"autor\",\n  \"aval\",\n  \"avance\",\n  \"avaro\",\n  \"ave\",\n  \"avellana\",\n  \"avena\",\n  \"avestruz\",\n  \"avión\",\n  \"aviso\",\n  \"ayer\",\n  \"ayuda\",\n  \"ayuno\",\n  \"azafrán\",\n  \"azar\",\n  \"azote\",\n  \"azúcar\",\n  \"azufre\",\n  \"azul\",\n  \"baba\",\n  \"babor\",\n  \"bache\",\n  \"bahía\",\n  \"baile\",\n  \"bajar\",\n  \"balanza\",\n  \"balcón\",\n  \"balde\",\n  \"bambú\",\n  \"banco\",\n  \"banda\",\n  \"baño\",\n  \"barba\",\n  \"barco\",\n  \"barniz\",\n  \"barro\",\n  \"báscula\",\n  \"bastón\",\n  \"basura\",\n  \"batalla\",\n  \"batería\",\n  \"batir\",\n  \"batuta\",\n  \"baúl\",\n  \"bazar\",\n  \"bebé\",\n  \"bebida\",\n  \"bello\",\n  \"besar\",\n  \"beso\",\n  \"bestia\",\n  \"bicho\",\n  \"bien\",\n  \"bingo\",\n  \"blanco\",\n  \"bloque\",\n  \"blusa\",\n  \"boa\",\n  \"bobina\",\n  \"bobo\",\n  \"boca\",\n  \"bocina\",\n  \"boda\",\n  \"bodega\",\n  \"boina\",\n  \"bola\",\n  \"bolero\",\n  \"bolsa\",\n  \"bomba\",\n  \"bondad\",\n  \"bonito\",\n  \"bono\",\n  \"bonsái\",\n  \"borde\",\n  \"borrar\",\n  \"bosque\",\n  \"bote\",\n  \"botín\",\n  \"bóveda\",\n  \"bozal\",\n  \"bravo\",\n  \"brazo\",\n  \"brecha\",\n  \"breve\",\n  \"brillo\",\n  \"brinco\",\n  \"brisa\",\n  \"broca\",\n  \"broma\",\n  \"bronce\",\n  \"brote\",\n  \"bruja\",\n  \"brusco\",\n  \"bruto\",\n  \"buceo\",\n  \"bucle\",\n  \"bueno\",\n  \"buey\",\n  \"bufanda\",\n  \"bufón\",\n  \"búho\",\n  \"buitre\",\n  \"bulto\",\n  \"burbuja\",\n  \"burla\",\n  \"burro\",\n  \"buscar\",\n  \"butaca\",\n  \"buzón\",\n  \"caballo\",\n  \"cabeza\",\n  \"cabina\",\n  \"cabra\",\n  \"cacao\",\n  \"cadáver\",\n  \"cadena\",\n  \"caer\",\n  \"café\",\n  \"caída\",\n  \"caimán\",\n  \"caja\",\n  \"cajón\",\n  \"cal\",\n  \"calamar\",\n  \"calcio\",\n  \"caldo\",\n  \"calidad\",\n  \"calle\",\n  \"calma\",\n  \"calor\",\n  \"calvo\",\n  \"cama\",\n  \"cambio\",\n  \"camello\",\n  \"camino\",\n  \"campo\",\n  \"cáncer\",\n  \"candil\",\n  \"canela\",\n  \"canguro\",\n  \"canica\",\n  \"canto\",\n  \"caña\",\n  \"cañón\",\n  \"caoba\",\n  \"caos\",\n  \"capaz\",\n  \"capitán\",\n  \"capote\",\n  \"captar\",\n  \"capucha\",\n  \"cara\",\n  \"carbón\",\n  \"cárcel\",\n  \"careta\",\n  \"carga\",\n  \"cariño\",\n  \"carne\",\n  \"carpeta\",\n  \"carro\",\n  \"carta\",\n  \"casa\",\n  \"casco\",\n  \"casero\",\n  \"caspa\",\n  \"castor\",\n  \"catorce\",\n  \"catre\",\n  \"caudal\",\n  \"causa\",\n  \"cazo\",\n  \"cebolla\",\n  \"ceder\",\n  \"cedro\",\n  \"celda\",\n  \"célebre\",\n  \"celoso\",\n  \"célula\",\n  \"cemento\",\n  \"ceniza\",\n  \"centro\",\n  \"cerca\",\n  \"cerdo\",\n  \"cereza\",\n  \"cero\",\n  \"cerrar\",\n  \"certeza\",\n  \"césped\",\n  \"cetro\",\n  \"chacal\",\n  \"chaleco\",\n  \"champú\",\n  \"chancla\",\n  \"chapa\",\n  \"charla\",\n  \"chico\",\n  \"chiste\",\n  \"chivo\",\n  \"choque\",\n  \"choza\",\n  \"chuleta\",\n  \"chupar\",\n  \"ciclón\",\n  \"ciego\",\n  \"cielo\",\n  \"cien\",\n  \"cierto\",\n  \"cifra\",\n  \"cigarro\",\n  \"cima\",\n  \"cinco\",\n  \"cine\",\n  \"cinta\",\n  \"ciprés\",\n  \"circo\",\n  \"ciruela\",\n  \"cisne\",\n  \"cita\",\n  \"ciudad\",\n  \"clamor\",\n  \"clan\",\n  \"claro\",\n  \"clase\",\n  \"clave\",\n  \"cliente\",\n  \"clima\",\n  \"clínica\",\n  \"cobre\",\n  \"cocción\",\n  \"cochino\",\n  \"cocina\",\n  \"coco\",\n  \"código\",\n  \"codo\",\n  \"cofre\",\n  \"coger\",\n  \"cohete\",\n  \"cojín\",\n  \"cojo\",\n  \"cola\",\n  \"colcha\",\n  \"colegio\",\n  \"colgar\",\n  \"colina\",\n  \"collar\",\n  \"colmo\",\n  \"columna\",\n  \"combate\",\n  \"comer\",\n  \"comida\",\n  \"cómodo\",\n  \"compra\",\n  \"conde\",\n  \"conejo\",\n  \"conga\",\n  \"conocer\",\n  \"consejo\",\n  \"contar\",\n  \"copa\",\n  \"copia\",\n  \"corazón\",\n  \"corbata\",\n  \"corcho\",\n  \"cordón\",\n  \"corona\",\n  \"correr\",\n  \"coser\",\n  \"cosmos\",\n  \"costa\",\n  \"cráneo\",\n  \"cráter\",\n  \"crear\",\n  \"crecer\",\n  \"creído\",\n  \"crema\",\n  \"cría\",\n  \"crimen\",\n  \"cripta\",\n  \"crisis\",\n  \"cromo\",\n  \"crónica\",\n  \"croqueta\",\n  \"crudo\",\n  \"cruz\",\n  \"cuadro\",\n  \"cuarto\",\n  \"cuatro\",\n  \"cubo\",\n  \"cubrir\",\n  \"cuchara\",\n  \"cuello\",\n  \"cuento\",\n  \"cuerda\",\n  \"cuesta\",\n  \"cueva\",\n  \"cuidar\",\n  \"culebra\",\n  \"culpa\",\n  \"culto\",\n  \"cumbre\",\n  \"cumplir\",\n  \"cuna\",\n  \"cuneta\",\n  \"cuota\",\n  \"cupón\",\n  \"cúpula\",\n  \"curar\",\n  \"curioso\",\n  \"curso\",\n  \"curva\",\n  \"cutis\",\n  \"dama\",\n  \"danza\",\n  \"dar\",\n  \"dardo\",\n  \"dátil\",\n  \"deber\",\n  \"débil\",\n  \"década\",\n  \"decir\",\n  \"dedo\",\n  \"defensa\",\n  \"definir\",\n  \"dejar\",\n  \"delfín\",\n  \"delgado\",\n  \"delito\",\n  \"demora\",\n  \"denso\",\n  \"dental\",\n  \"deporte\",\n  \"derecho\",\n  \"derrota\",\n  \"desayuno\",\n  \"deseo\",\n  \"desfile\",\n  \"desnudo\",\n  \"destino\",\n  \"desvío\",\n  \"detalle\",\n  \"detener\",\n  \"deuda\",\n  \"día\",\n  \"diablo\",\n  \"diadema\",\n  \"diamante\",\n  \"diana\",\n  \"diario\",\n  \"dibujo\",\n  \"dictar\",\n  \"diente\",\n  \"dieta\",\n  \"diez\",\n  \"difícil\",\n  \"digno\",\n  \"dilema\",\n  \"diluir\",\n  \"dinero\",\n  \"directo\",\n  \"dirigir\",\n  \"disco\",\n  \"diseño\",\n  \"disfraz\",\n  \"diva\",\n  \"divino\",\n  \"doble\",\n  \"doce\",\n  \"dolor\",\n  \"domingo\",\n  \"don\",\n  \"donar\",\n  \"dorado\",\n  \"dormir\",\n  \"dorso\",\n  \"dos\",\n  \"dosis\",\n  \"dragón\",\n  \"droga\",\n  \"ducha\",\n  \"duda\",\n  \"duelo\",\n  \"dueño\",\n  \"dulce\",\n  \"dúo\",\n  \"duque\",\n  \"durar\",\n  \"dureza\",\n  \"duro\",\n  \"ébano\",\n  \"ebrio\",\n  \"echar\",\n  \"eco\",\n  \"ecuador\",\n  \"edad\",\n  \"edición\",\n  \"edificio\",\n  \"editor\",\n  \"educar\",\n  \"efecto\",\n  \"eficaz\",\n  \"eje\",\n  \"ejemplo\",\n  \"elefante\",\n  \"elegir\",\n  \"elemento\",\n  \"elevar\",\n  \"elipse\",\n  \"élite\",\n  \"elixir\",\n  \"elogio\",\n  \"eludir\",\n  \"embudo\",\n  \"emitir\",\n  \"emoción\",\n  \"empate\",\n  \"empeño\",\n  \"empleo\",\n  \"empresa\",\n  \"enano\",\n  \"encargo\",\n  \"enchufe\",\n  \"encía\",\n  \"enemigo\",\n  \"enero\",\n  \"enfado\",\n  \"enfermo\",\n  \"engaño\",\n  \"enigma\",\n  \"enlace\",\n  \"enorme\",\n  \"enredo\",\n  \"ensayo\",\n  \"enseñar\",\n  \"entero\",\n  \"entrar\",\n  \"envase\",\n  \"envío\",\n  \"época\",\n  \"equipo\",\n  \"erizo\",\n  \"escala\",\n  \"escena\",\n  \"escolar\",\n  \"escribir\",\n  \"escudo\",\n  \"esencia\",\n  \"esfera\",\n  \"esfuerzo\",\n  \"espada\",\n  \"espejo\",\n  \"espía\",\n  \"esposa\",\n  \"espuma\",\n  \"esquí\",\n  \"estar\",\n  \"este\",\n  \"estilo\",\n  \"estufa\",\n  \"etapa\",\n  \"eterno\",\n  \"ética\",\n  \"etnia\",\n  \"evadir\",\n  \"evaluar\",\n  \"evento\",\n  \"evitar\",\n  \"exacto\",\n  \"examen\",\n  \"exceso\",\n  \"excusa\",\n  \"exento\",\n  \"exigir\",\n  \"exilio\",\n  \"existir\",\n  \"éxito\",\n  \"experto\",\n  \"explicar\",\n  \"exponer\",\n  \"extremo\",\n  \"fábrica\",\n  \"fábula\",\n  \"fachada\",\n  \"fácil\",\n  \"factor\",\n  \"faena\",\n  \"faja\",\n  \"falda\",\n  \"fallo\",\n  \"falso\",\n  \"faltar\",\n  \"fama\",\n  \"familia\",\n  \"famoso\",\n  \"faraón\",\n  \"farmacia\",\n  \"farol\",\n  \"farsa\",\n  \"fase\",\n  \"fatiga\",\n  \"fauna\",\n  \"favor\",\n  \"fax\",\n  \"febrero\",\n  \"fecha\",\n  \"feliz\",\n  \"feo\",\n  \"feria\",\n  \"feroz\",\n  \"fértil\",\n  \"fervor\",\n  \"festín\",\n  \"fiable\",\n  \"fianza\",\n  \"fiar\",\n  \"fibra\",\n  \"ficción\",\n  \"ficha\",\n  \"fideo\",\n  \"fiebre\",\n  \"fiel\",\n  \"fiera\",\n  \"fiesta\",\n  \"figura\",\n  \"fijar\",\n  \"fijo\",\n  \"fila\",\n  \"filete\",\n  \"filial\",\n  \"filtro\",\n  \"fin\",\n  \"finca\",\n  \"fingir\",\n  \"finito\",\n  \"firma\",\n  \"flaco\",\n  \"flauta\",\n  \"flecha\",\n  \"flor\",\n  \"flota\",\n  \"fluir\",\n  \"flujo\",\n  \"flúor\",\n  \"fobia\",\n  \"foca\",\n  \"fogata\",\n  \"fogón\",\n  \"folio\",\n  \"folleto\",\n  \"fondo\",\n  \"forma\",\n  \"forro\",\n  \"fortuna\",\n  \"forzar\",\n  \"fosa\",\n  \"foto\",\n  \"fracaso\",\n  \"frágil\",\n  \"franja\",\n  \"frase\",\n  \"fraude\",\n  \"freír\",\n  \"freno\",\n  \"fresa\",\n  \"frío\",\n  \"frito\",\n  \"fruta\",\n  \"fuego\",\n  \"fuente\",\n  \"fuerza\",\n  \"fuga\",\n  \"fumar\",\n  \"función\",\n  \"funda\",\n  \"furgón\",\n  \"furia\",\n  \"fusil\",\n  \"fútbol\",\n  \"futuro\",\n  \"gacela\",\n  \"gafas\",\n  \"gaita\",\n  \"gajo\",\n  \"gala\",\n  \"galería\",\n  \"gallo\",\n  \"gamba\",\n  \"ganar\",\n  \"gancho\",\n  \"ganga\",\n  \"ganso\",\n  \"garaje\",\n  \"garza\",\n  \"gasolina\",\n  \"gastar\",\n  \"gato\",\n  \"gavilán\",\n  \"gemelo\",\n  \"gemir\",\n  \"gen\",\n  \"género\",\n  \"genio\",\n  \"gente\",\n  \"geranio\",\n  \"gerente\",\n  \"germen\",\n  \"gesto\",\n  \"gigante\",\n  \"gimnasio\",\n  \"girar\",\n  \"giro\",\n  \"glaciar\",\n  \"globo\",\n  \"gloria\",\n  \"gol\",\n  \"golfo\",\n  \"goloso\",\n  \"golpe\",\n  \"goma\",\n  \"gordo\",\n  \"gorila\",\n  \"gorra\",\n  \"gota\",\n  \"goteo\",\n  \"gozar\",\n  \"grada\",\n  \"gráfico\",\n  \"grano\",\n  \"grasa\",\n  \"gratis\",\n  \"grave\",\n  \"grieta\",\n  \"grillo\",\n  \"gripe\",\n  \"gris\",\n  \"grito\",\n  \"grosor\",\n  \"grúa\",\n  \"grueso\",\n  \"grumo\",\n  \"grupo\",\n  \"guante\",\n  \"guapo\",\n  \"guardia\",\n  \"guerra\",\n  \"guía\",\n  \"guiño\",\n  \"guion\",\n  \"guiso\",\n  \"guitarra\",\n  \"gusano\",\n  \"gustar\",\n  \"haber\",\n  \"hábil\",\n  \"hablar\",\n  \"hacer\",\n  \"hacha\",\n  \"hada\",\n  \"hallar\",\n  \"hamaca\",\n  \"harina\",\n  \"haz\",\n  \"hazaña\",\n  \"hebilla\",\n  \"hebra\",\n  \"hecho\",\n  \"helado\",\n  \"helio\",\n  \"hembra\",\n  \"herir\",\n  \"hermano\",\n  \"héroe\",\n  \"hervir\",\n  \"hielo\",\n  \"hierro\",\n  \"hígado\",\n  \"higiene\",\n  \"hijo\",\n  \"himno\",\n  \"historia\",\n  \"hocico\",\n  \"hogar\",\n  \"hoguera\",\n  \"hoja\",\n  \"hombre\",\n  \"hongo\",\n  \"honor\",\n  \"honra\",\n  \"hora\",\n  \"hormiga\",\n  \"horno\",\n  \"hostil\",\n  \"hoyo\",\n  \"hueco\",\n  \"huelga\",\n  \"huerta\",\n  \"hueso\",\n  \"huevo\",\n  \"huida\",\n  \"huir\",\n  \"humano\",\n  \"húmedo\",\n  \"humilde\",\n  \"humo\",\n  \"hundir\",\n  \"huracán\",\n  \"hurto\",\n  \"icono\",\n  \"ideal\",\n  \"idioma\",\n  \"ídolo\",\n  \"iglesia\",\n  \"iglú\",\n  \"igual\",\n  \"ilegal\",\n  \"ilusión\",\n  \"imagen\",\n  \"imán\",\n  \"imitar\",\n  \"impar\",\n  \"imperio\",\n  \"imponer\",\n  \"impulso\",\n  \"incapaz\",\n  \"índice\",\n  \"inerte\",\n  \"infiel\",\n  \"informe\",\n  \"ingenio\",\n  \"inicio\",\n  \"inmenso\",\n  \"inmune\",\n  \"innato\",\n  \"insecto\",\n  \"instante\",\n  \"interés\",\n  \"íntimo\",\n  \"intuir\",\n  \"inútil\",\n  \"invierno\",\n  \"ira\",\n  \"iris\",\n  \"ironía\",\n  \"isla\",\n  \"islote\",\n  \"jabalí\",\n  \"jabón\",\n  \"jamón\",\n  \"jarabe\",\n  \"jardín\",\n  \"jarra\",\n  \"jaula\",\n  \"jazmín\",\n  \"jefe\",\n  \"jeringa\",\n  \"jinete\",\n  \"jornada\",\n  \"joroba\",\n  \"joven\",\n  \"joya\",\n  \"juerga\",\n  \"jueves\",\n  \"juez\",\n  \"jugador\",\n  \"jugo\",\n  \"juguete\",\n  \"juicio\",\n  \"junco\",\n  \"jungla\",\n  \"junio\",\n  \"juntar\",\n  \"júpiter\",\n  \"jurar\",\n  \"justo\",\n  \"juvenil\",\n  \"juzgar\",\n  \"kilo\",\n  \"koala\",\n  \"labio\",\n  \"lacio\",\n  \"lacra\",\n  \"lado\",\n  \"ladrón\",\n  \"lagarto\",\n  \"lágrima\",\n  \"laguna\",\n  \"laico\",\n  \"lamer\",\n  \"lámina\",\n  \"lámpara\",\n  \"lana\",\n  \"lancha\",\n  \"langosta\",\n  \"lanza\",\n  \"lápiz\",\n  \"largo\",\n  \"larva\",\n  \"lástima\",\n  \"lata\",\n  \"látex\",\n  \"latir\",\n  \"laurel\",\n  \"lavar\",\n  \"lazo\",\n  \"leal\",\n  \"lección\",\n  \"leche\",\n  \"lector\",\n  \"leer\",\n  \"legión\",\n  \"legumbre\",\n  \"lejano\",\n  \"lengua\",\n  \"lento\",\n  \"leña\",\n  \"león\",\n  \"leopardo\",\n  \"lesión\",\n  \"letal\",\n  \"letra\",\n  \"leve\",\n  \"leyenda\",\n  \"libertad\",\n  \"libro\",\n  \"licor\",\n  \"líder\",\n  \"lidiar\",\n  \"lienzo\",\n  \"liga\",\n  \"ligero\",\n  \"lima\",\n  \"límite\",\n  \"limón\",\n  \"limpio\",\n  \"lince\",\n  \"lindo\",\n  \"línea\",\n  \"lingote\",\n  \"lino\",\n  \"linterna\",\n  \"líquido\",\n  \"liso\",\n  \"lista\",\n  \"litera\",\n  \"litio\",\n  \"litro\",\n  \"llaga\",\n  \"llama\",\n  \"llanto\",\n  \"llave\",\n  \"llegar\",\n  \"llenar\",\n  \"llevar\",\n  \"llorar\",\n  \"llover\",\n  \"lluvia\",\n  \"lobo\",\n  \"loción\",\n  \"loco\",\n  \"locura\",\n  \"lógica\",\n  \"logro\",\n  \"lombriz\",\n  \"lomo\",\n  \"lonja\",\n  \"lote\",\n  \"lucha\",\n  \"lucir\",\n  \"lugar\",\n  \"lujo\",\n  \"luna\",\n  \"lunes\",\n  \"lupa\",\n  \"lustro\",\n  \"luto\",\n  \"luz\",\n  \"maceta\",\n  \"macho\",\n  \"madera\",\n  \"madre\",\n  \"maduro\",\n  \"maestro\",\n  \"mafia\",\n  \"magia\",\n  \"mago\",\n  \"maíz\",\n  \"maldad\",\n  \"maleta\",\n  \"malla\",\n  \"malo\",\n  \"mamá\",\n  \"mambo\",\n  \"mamut\",\n  \"manco\",\n  \"mando\",\n  \"manejar\",\n  \"manga\",\n  \"maniquí\",\n  \"manjar\",\n  \"mano\",\n  \"manso\",\n  \"manta\",\n  \"mañana\",\n  \"mapa\",\n  \"máquina\",\n  \"mar\",\n  \"marco\",\n  \"marea\",\n  \"marfil\",\n  \"margen\",\n  \"marido\",\n  \"mármol\",\n  \"marrón\",\n  \"martes\",\n  \"marzo\",\n  \"masa\",\n  \"máscara\",\n  \"masivo\",\n  \"matar\",\n  \"materia\",\n  \"matiz\",\n  \"matriz\",\n  \"máximo\",\n  \"mayor\",\n  \"mazorca\",\n  \"mecha\",\n  \"medalla\",\n  \"medio\",\n  \"médula\",\n  \"mejilla\",\n  \"mejor\",\n  \"melena\",\n  \"melón\",\n  \"memoria\",\n  \"menor\",\n  \"mensaje\",\n  \"mente\",\n  \"menú\",\n  \"mercado\",\n  \"merengue\",\n  \"mérito\",\n  \"mes\",\n  \"mesón\",\n  \"meta\",\n  \"meter\",\n  \"método\",\n  \"metro\",\n  \"mezcla\",\n  \"miedo\",\n  \"miel\",\n  \"miembro\",\n  \"miga\",\n  \"mil\",\n  \"milagro\",\n  \"militar\",\n  \"millón\",\n  \"mimo\",\n  \"mina\",\n  \"minero\",\n  \"mínimo\",\n  \"minuto\",\n  \"miope\",\n  \"mirar\",\n  \"misa\",\n  \"miseria\",\n  \"misil\",\n  \"mismo\",\n  \"mitad\",\n  \"mito\",\n  \"mochila\",\n  \"moción\",\n  \"moda\",\n  \"modelo\",\n  \"moho\",\n  \"mojar\",\n  \"molde\",\n  \"moler\",\n  \"molino\",\n  \"momento\",\n  \"momia\",\n  \"monarca\",\n  \"moneda\",\n  \"monja\",\n  \"monto\",\n  \"moño\",\n  \"morada\",\n  \"morder\",\n  \"moreno\",\n  \"morir\",\n  \"morro\",\n  \"morsa\",\n  \"mortal\",\n  \"mosca\",\n  \"mostrar\",\n  \"motivo\",\n  \"mover\",\n  \"móvil\",\n  \"mozo\",\n  \"mucho\",\n  \"mudar\",\n  \"mueble\",\n  \"muela\",\n  \"muerte\",\n  \"muestra\",\n  \"mugre\",\n  \"mujer\",\n  \"mula\",\n  \"muleta\",\n  \"multa\",\n  \"mundo\",\n  \"muñeca\",\n  \"mural\",\n  \"muro\",\n  \"músculo\",\n  \"museo\",\n  \"musgo\",\n  \"música\",\n  \"muslo\",\n  \"nácar\",\n  \"nación\",\n  \"nadar\",\n  \"naipe\",\n  \"naranja\",\n  \"nariz\",\n  \"narrar\",\n  \"nasal\",\n  \"natal\",\n  \"nativo\",\n  \"natural\",\n  \"náusea\",\n  \"naval\",\n  \"nave\",\n  \"navidad\",\n  \"necio\",\n  \"néctar\",\n  \"negar\",\n  \"negocio\",\n  \"negro\",\n  \"neón\",\n  \"nervio\",\n  \"neto\",\n  \"neutro\",\n  \"nevar\",\n  \"nevera\",\n  \"nicho\",\n  \"nido\",\n  \"niebla\",\n  \"nieto\",\n  \"niñez\",\n  \"niño\",\n  \"nítido\",\n  \"nivel\",\n  \"nobleza\",\n  \"noche\",\n  \"nómina\",\n  \"noria\",\n  \"norma\",\n  \"norte\",\n  \"nota\",\n  \"noticia\",\n  \"novato\",\n  \"novela\",\n  \"novio\",\n  \"nube\",\n  \"nuca\",\n  \"núcleo\",\n  \"nudillo\",\n  \"nudo\",\n  \"nuera\",\n  \"nueve\",\n  \"nuez\",\n  \"nulo\",\n  \"número\",\n  \"nutria\",\n  \"oasis\",\n  \"obeso\",\n  \"obispo\",\n  \"objeto\",\n  \"obra\",\n  \"obrero\",\n  \"observar\",\n  \"obtener\",\n  \"obvio\",\n  \"oca\",\n  \"ocaso\",\n  \"océano\",\n  \"ochenta\",\n  \"ocho\",\n  \"ocio\",\n  \"ocre\",\n  \"octavo\",\n  \"octubre\",\n  \"oculto\",\n  \"ocupar\",\n  \"ocurrir\",\n  \"odiar\",\n  \"odio\",\n  \"odisea\",\n  \"oeste\",\n  \"ofensa\",\n  \"oferta\",\n  \"oficio\",\n  \"ofrecer\",\n  \"ogro\",\n  \"oído\",\n  \"oír\",\n  \"ojo\",\n  \"ola\",\n  \"oleada\",\n  \"olfato\",\n  \"olivo\",\n  \"olla\",\n  \"olmo\",\n  \"olor\",\n  \"olvido\",\n  \"ombligo\",\n  \"onda\",\n  \"onza\",\n  \"opaco\",\n  \"opción\",\n  \"ópera\",\n  \"opinar\",\n  \"oponer\",\n  \"optar\",\n  \"óptica\",\n  \"opuesto\",\n  \"oración\",\n  \"orador\",\n  \"oral\",\n  \"órbita\",\n  \"orca\",\n  \"orden\",\n  \"oreja\",\n  \"órgano\",\n  \"orgía\",\n  \"orgullo\",\n  \"oriente\",\n  \"origen\",\n  \"orilla\",\n  \"oro\",\n  \"orquesta\",\n  \"oruga\",\n  \"osadía\",\n  \"oscuro\",\n  \"osezno\",\n  \"oso\",\n  \"ostra\",\n  \"otoño\",\n  \"otro\",\n  \"oveja\",\n  \"óvulo\",\n  \"óxido\",\n  \"oxígeno\",\n  \"oyente\",\n  \"ozono\",\n  \"pacto\",\n  \"padre\",\n  \"paella\",\n  \"página\",\n  \"pago\",\n  \"país\",\n  \"pájaro\",\n  \"palabra\",\n  \"palco\",\n  \"paleta\",\n  \"pálido\",\n  \"palma\",\n  \"paloma\",\n  \"palpar\",\n  \"pan\",\n  \"panal\",\n  \"pánico\",\n  \"pantera\",\n  \"pañuelo\",\n  \"papá\",\n  \"papel\",\n  \"papilla\",\n  \"paquete\",\n  \"parar\",\n  \"parcela\",\n  \"pared\",\n  \"parir\",\n  \"paro\",\n  \"párpado\",\n  \"parque\",\n  \"párrafo\",\n  \"parte\",\n  \"pasar\",\n  \"paseo\",\n  \"pasión\",\n  \"paso\",\n  \"pasta\",\n  \"pata\",\n  \"patio\",\n  \"patria\",\n  \"pausa\",\n  \"pauta\",\n  \"pavo\",\n  \"payaso\",\n  \"peatón\",\n  \"pecado\",\n  \"pecera\",\n  \"pecho\",\n  \"pedal\",\n  \"pedir\",\n  \"pegar\",\n  \"peine\",\n  \"pelar\",\n  \"peldaño\",\n  \"pelea\",\n  \"peligro\",\n  \"pellejo\",\n  \"pelo\",\n  \"peluca\",\n  \"pena\",\n  \"pensar\",\n  \"peñón\",\n  \"peón\",\n  \"peor\",\n  \"pepino\",\n  \"pequeño\",\n  \"pera\",\n  \"percha\",\n  \"perder\",\n  \"pereza\",\n  \"perfil\",\n  \"perico\",\n  \"perla\",\n  \"permiso\",\n  \"perro\",\n  \"persona\",\n  \"pesa\",\n  \"pesca\",\n  \"pésimo\",\n  \"pestaña\",\n  \"pétalo\",\n  \"petróleo\",\n  \"pez\",\n  \"pezuña\",\n  \"picar\",\n  \"pichón\",\n  \"pie\",\n  \"piedra\",\n  \"pierna\",\n  \"pieza\",\n  \"pijama\",\n  \"pilar\",\n  \"piloto\",\n  \"pimienta\",\n  \"pino\",\n  \"pintor\",\n  \"pinza\",\n  \"piña\",\n  \"piojo\",\n  \"pipa\",\n  \"pirata\",\n  \"pisar\",\n  \"piscina\",\n  \"piso\",\n  \"pista\",\n  \"pitón\",\n  \"pizca\",\n  \"placa\",\n  \"plan\",\n  \"plata\",\n  \"playa\",\n  \"plaza\",\n  \"pleito\",\n  \"pleno\",\n  \"plomo\",\n  \"pluma\",\n  \"plural\",\n  \"pobre\",\n  \"poco\",\n  \"poder\",\n  \"podio\",\n  \"poema\",\n  \"poesía\",\n  \"poeta\",\n  \"polen\",\n  \"policía\",\n  \"pollo\",\n  \"polvo\",\n  \"pomada\",\n  \"pomelo\",\n  \"pomo\",\n  \"pompa\",\n  \"poner\",\n  \"porción\",\n  \"portal\",\n  \"posada\",\n  \"poseer\",\n  \"posible\",\n  \"poste\",\n  \"potencia\",\n  \"potro\",\n  \"pozo\",\n  \"prado\",\n  \"precoz\",\n  \"pregunta\",\n  \"premio\",\n  \"prensa\",\n  \"preso\",\n  \"previo\",\n  \"primo\",\n  \"príncipe\",\n  \"prisión\",\n  \"privar\",\n  \"proa\",\n  \"probar\",\n  \"proceso\",\n  \"producto\",\n  \"proeza\",\n  \"profesor\",\n  \"programa\",\n  \"prole\",\n  \"promesa\",\n  \"pronto\",\n  \"propio\",\n  \"próximo\",\n  \"prueba\",\n  \"público\",\n  \"puchero\",\n  \"pudor\",\n  \"pueblo\",\n  \"puerta\",\n  \"puesto\",\n  \"pulga\",\n  \"pulir\",\n  \"pulmón\",\n  \"pulpo\",\n  \"pulso\",\n  \"puma\",\n  \"punto\",\n  \"puñal\",\n  \"puño\",\n  \"pupa\",\n  \"pupila\",\n  \"puré\",\n  \"quedar\",\n  \"queja\",\n  \"quemar\",\n  \"querer\",\n  \"queso\",\n  \"quieto\",\n  \"química\",\n  \"quince\",\n  \"quitar\",\n  \"rábano\",\n  \"rabia\",\n  \"rabo\",\n  \"ración\",\n  \"radical\",\n  \"raíz\",\n  \"rama\",\n  \"rampa\",\n  \"rancho\",\n  \"rango\",\n  \"rapaz\",\n  \"rápido\",\n  \"rapto\",\n  \"rasgo\",\n  \"raspa\",\n  \"rato\",\n  \"rayo\",\n  \"raza\",\n  \"razón\",\n  \"reacción\",\n  \"realidad\",\n  \"rebaño\",\n  \"rebote\",\n  \"recaer\",\n  \"receta\",\n  \"rechazo\",\n  \"recoger\",\n  \"recreo\",\n  \"recto\",\n  \"recurso\",\n  \"red\",\n  \"redondo\",\n  \"reducir\",\n  \"reflejo\",\n  \"reforma\",\n  \"refrán\",\n  \"refugio\",\n  \"regalo\",\n  \"regir\",\n  \"regla\",\n  \"regreso\",\n  \"rehén\",\n  \"reino\",\n  \"reír\",\n  \"reja\",\n  \"relato\",\n  \"relevo\",\n  \"relieve\",\n  \"relleno\",\n  \"reloj\",\n  \"remar\",\n  \"remedio\",\n  \"remo\",\n  \"rencor\",\n  \"rendir\",\n  \"renta\",\n  \"reparto\",\n  \"repetir\",\n  \"reposo\",\n  \"reptil\",\n  \"res\",\n  \"rescate\",\n  \"resina\",\n  \"respeto\",\n  \"resto\",\n  \"resumen\",\n  \"retiro\",\n  \"retorno\",\n  \"retrato\",\n  \"reunir\",\n  \"revés\",\n  \"revista\",\n  \"rey\",\n  \"rezar\",\n  \"rico\",\n  \"riego\",\n  \"rienda\",\n  \"riesgo\",\n  \"rifa\",\n  \"rígido\",\n  \"rigor\",\n  \"rincón\",\n  \"riñón\",\n  \"río\",\n  \"riqueza\",\n  \"risa\",\n  \"ritmo\",\n  \"rito\",\n  \"rizo\",\n  \"roble\",\n  \"roce\",\n  \"rociar\",\n  \"rodar\",\n  \"rodeo\",\n  \"rodilla\",\n  \"roer\",\n  \"rojizo\",\n  \"rojo\",\n  \"romero\",\n  \"romper\",\n  \"ron\",\n  \"ronco\",\n  \"ronda\",\n  \"ropa\",\n  \"ropero\",\n  \"rosa\",\n  \"rosca\",\n  \"rostro\",\n  \"rotar\",\n  \"rubí\",\n  \"rubor\",\n  \"rudo\",\n  \"rueda\",\n  \"rugir\",\n  \"ruido\",\n  \"ruina\",\n  \"ruleta\",\n  \"rulo\",\n  \"rumbo\",\n  \"rumor\",\n  \"ruptura\",\n  \"ruta\",\n  \"rutina\",\n  \"sábado\",\n  \"saber\",\n  \"sabio\",\n  \"sable\",\n  \"sacar\",\n  \"sagaz\",\n  \"sagrado\",\n  \"sala\",\n  \"saldo\",\n  \"salero\",\n  \"salir\",\n  \"salmón\",\n  \"salón\",\n  \"salsa\",\n  \"salto\",\n  \"salud\",\n  \"salvar\",\n  \"samba\",\n  \"sanción\",\n  \"sandía\",\n  \"sanear\",\n  \"sangre\",\n  \"sanidad\",\n  \"sano\",\n  \"santo\",\n  \"sapo\",\n  \"saque\",\n  \"sardina\",\n  \"sartén\",\n  \"sastre\",\n  \"satán\",\n  \"sauna\",\n  \"saxofón\",\n  \"sección\",\n  \"seco\",\n  \"secreto\",\n  \"secta\",\n  \"sed\",\n  \"seguir\",\n  \"seis\",\n  \"sello\",\n  \"selva\",\n  \"semana\",\n  \"semilla\",\n  \"senda\",\n  \"sensor\",\n  \"señal\",\n  \"señor\",\n  \"separar\",\n  \"sepia\",\n  \"sequía\",\n  \"ser\",\n  \"serie\",\n  \"sermón\",\n  \"servir\",\n  \"sesenta\",\n  \"sesión\",\n  \"seta\",\n  \"setenta\",\n  \"severo\",\n  \"sexo\",\n  \"sexto\",\n  \"sidra\",\n  \"siesta\",\n  \"siete\",\n  \"siglo\",\n  \"signo\",\n  \"sílaba\",\n  \"silbar\",\n  \"silencio\",\n  \"silla\",\n  \"símbolo\",\n  \"simio\",\n  \"sirena\",\n  \"sistema\",\n  \"sitio\",\n  \"situar\",\n  \"sobre\",\n  \"socio\",\n  \"sodio\",\n  \"sol\",\n  \"solapa\",\n  \"soldado\",\n  \"soledad\",\n  \"sólido\",\n  \"soltar\",\n  \"solución\",\n  \"sombra\",\n  \"sondeo\",\n  \"sonido\",\n  \"sonoro\",\n  \"sonrisa\",\n  \"sopa\",\n  \"soplar\",\n  \"soporte\",\n  \"sordo\",\n  \"sorpresa\",\n  \"sorteo\",\n  \"sostén\",\n  \"sótano\",\n  \"suave\",\n  \"subir\",\n  \"suceso\",\n  \"sudor\",\n  \"suegra\",\n  \"suelo\",\n  \"sueño\",\n  \"suerte\",\n  \"sufrir\",\n  \"sujeto\",\n  \"sultán\",\n  \"sumar\",\n  \"superar\",\n  \"suplir\",\n  \"suponer\",\n  \"supremo\",\n  \"sur\",\n  \"surco\",\n  \"sureño\",\n  \"surgir\",\n  \"susto\",\n  \"sutil\",\n  \"tabaco\",\n  \"tabique\",\n  \"tabla\",\n  \"tabú\",\n  \"taco\",\n  \"tacto\",\n  \"tajo\",\n  \"talar\",\n  \"talco\",\n  \"talento\",\n  \"talla\",\n  \"talón\",\n  \"tamaño\",\n  \"tambor\",\n  \"tango\",\n  \"tanque\",\n  \"tapa\",\n  \"tapete\",\n  \"tapia\",\n  \"tapón\",\n  \"taquilla\",\n  \"tarde\",\n  \"tarea\",\n  \"tarifa\",\n  \"tarjeta\",\n  \"tarot\",\n  \"tarro\",\n  \"tarta\",\n  \"tatuaje\",\n  \"tauro\",\n  \"taza\",\n  \"tazón\",\n  \"teatro\",\n  \"techo\",\n  \"tecla\",\n  \"técnica\",\n  \"tejado\",\n  \"tejer\",\n  \"tejido\",\n  \"tela\",\n  \"teléfono\",\n  \"tema\",\n  \"temor\",\n  \"templo\",\n  \"tenaz\",\n  \"tender\",\n  \"tener\",\n  \"tenis\",\n  \"tenso\",\n  \"teoría\",\n  \"terapia\",\n  \"terco\",\n  \"término\",\n  \"ternura\",\n  \"terror\",\n  \"tesis\",\n  \"tesoro\",\n  \"testigo\",\n  \"tetera\",\n  \"texto\",\n  \"tez\",\n  \"tibio\",\n  \"tiburón\",\n  \"tiempo\",\n  \"tienda\",\n  \"tierra\",\n  \"tieso\",\n  \"tigre\",\n  \"tijera\",\n  \"tilde\",\n  \"timbre\",\n  \"tímido\",\n  \"timo\",\n  \"tinta\",\n  \"tío\",\n  \"típico\",\n  \"tipo\",\n  \"tira\",\n  \"tirón\",\n  \"titán\",\n  \"títere\",\n  \"título\",\n  \"tiza\",\n  \"toalla\",\n  \"tobillo\",\n  \"tocar\",\n  \"tocino\",\n  \"todo\",\n  \"toga\",\n  \"toldo\",\n  \"tomar\",\n  \"tono\",\n  \"tonto\",\n  \"topar\",\n  \"tope\",\n  \"toque\",\n  \"tórax\",\n  \"torero\",\n  \"tormenta\",\n  \"torneo\",\n  \"toro\",\n  \"torpedo\",\n  \"torre\",\n  \"torso\",\n  \"tortuga\",\n  \"tos\",\n  \"tosco\",\n  \"toser\",\n  \"tóxico\",\n  \"trabajo\",\n  \"tractor\",\n  \"traer\",\n  \"tráfico\",\n  \"trago\",\n  \"traje\",\n  \"tramo\",\n  \"trance\",\n  \"trato\",\n  \"trauma\",\n  \"trazar\",\n  \"trébol\",\n  \"tregua\",\n  \"treinta\",\n  \"tren\",\n  \"trepar\",\n  \"tres\",\n  \"tribu\",\n  \"trigo\",\n  \"tripa\",\n  \"triste\",\n  \"triunfo\",\n  \"trofeo\",\n  \"trompa\",\n  \"tronco\",\n  \"tropa\",\n  \"trote\",\n  \"trozo\",\n  \"truco\",\n  \"trueno\",\n  \"trufa\",\n  \"tubería\",\n  \"tubo\",\n  \"tuerto\",\n  \"tumba\",\n  \"tumor\",\n  \"túnel\",\n  \"túnica\",\n  \"turbina\",\n  \"turismo\",\n  \"turno\",\n  \"tutor\",\n  \"ubicar\",\n  \"úlcera\",\n  \"umbral\",\n  \"unidad\",\n  \"unir\",\n  \"universo\",\n  \"uno\",\n  \"untar\",\n  \"uña\",\n  \"urbano\",\n  \"urbe\",\n  \"urgente\",\n  \"urna\",\n  \"usar\",\n  \"usuario\",\n  \"útil\",\n  \"utopía\",\n  \"uva\",\n  \"vaca\",\n  \"vacío\",\n  \"vacuna\",\n  \"vagar\",\n  \"vago\",\n  \"vaina\",\n  \"vajilla\",\n  \"vale\",\n  \"válido\",\n  \"valle\",\n  \"valor\",\n  \"válvula\",\n  \"vampiro\",\n  \"vara\",\n  \"variar\",\n  \"varón\",\n  \"vaso\",\n  \"vecino\",\n  \"vector\",\n  \"vehículo\",\n  \"veinte\",\n  \"vejez\",\n  \"vela\",\n  \"velero\",\n  \"veloz\",\n  \"vena\",\n  \"vencer\",\n  \"venda\",\n  \"veneno\",\n  \"vengar\",\n  \"venir\",\n  \"venta\",\n  \"venus\",\n  \"ver\",\n  \"verano\",\n  \"verbo\",\n  \"verde\",\n  \"vereda\",\n  \"verja\",\n  \"verso\",\n  \"verter\",\n  \"vía\",\n  \"viaje\",\n  \"vibrar\",\n  \"vicio\",\n  \"víctima\",\n  \"vida\",\n  \"vídeo\",\n  \"vidrio\",\n  \"viejo\",\n  \"viernes\",\n  \"vigor\",\n  \"vil\",\n  \"villa\",\n  \"vinagre\",\n  \"vino\",\n  \"viñedo\",\n  \"violín\",\n  \"viral\",\n  \"virgo\",\n  \"virtud\",\n  \"visor\",\n  \"víspera\",\n  \"vista\",\n  \"vitamina\",\n  \"viudo\",\n  \"vivaz\",\n  \"vivero\",\n  \"vivir\",\n  \"vivo\",\n  \"volcán\",\n  \"volumen\",\n  \"volver\",\n  \"voraz\",\n  \"votar\",\n  \"voto\",\n  \"voz\",\n  \"vuelo\",\n  \"vulgar\",\n  \"yacer\",\n  \"yate\",\n  \"yegua\",\n  \"yema\",\n  \"yerno\",\n  \"yeso\",\n  \"yodo\",\n  \"yoga\",\n  \"yogur\",\n  \"zafiro\",\n  \"zanja\",\n  \"zapato\",\n  \"zarza\",\n  \"zona\",\n  \"zorro\",\n  \"zumo\",\n  \"zurdo\"\n], Lh = [\n  \"あいこくしん\",\n  \"あいさつ\",\n  \"あいだ\",\n  \"あおぞら\",\n  \"あかちゃん\",\n  \"あきる\",\n  \"あけがた\",\n  \"あける\",\n  \"あこがれる\",\n  \"あさい\",\n  \"あさひ\",\n  \"あしあと\",\n  \"あじわう\",\n  \"あずかる\",\n  \"あずき\",\n  \"あそぶ\",\n  \"あたえる\",\n  \"あたためる\",\n  \"あたりまえ\",\n  \"あたる\",\n  \"あつい\",\n  \"あつかう\",\n  \"あっしゅく\",\n  \"あつまり\",\n  \"あつめる\",\n  \"あてな\",\n  \"あてはまる\",\n  \"あひる\",\n  \"あぶら\",\n  \"あぶる\",\n  \"あふれる\",\n  \"あまい\",\n  \"あまど\",\n  \"あまやかす\",\n  \"あまり\",\n  \"あみもの\",\n  \"あめりか\",\n  \"あやまる\",\n  \"あゆむ\",\n  \"あらいぐま\",\n  \"あらし\",\n  \"あらすじ\",\n  \"あらためる\",\n  \"あらゆる\",\n  \"あらわす\",\n  \"ありがとう\",\n  \"あわせる\",\n  \"あわてる\",\n  \"あんい\",\n  \"あんがい\",\n  \"あんこ\",\n  \"あんぜん\",\n  \"あんてい\",\n  \"あんない\",\n  \"あんまり\",\n  \"いいだす\",\n  \"いおん\",\n  \"いがい\",\n  \"いがく\",\n  \"いきおい\",\n  \"いきなり\",\n  \"いきもの\",\n  \"いきる\",\n  \"いくじ\",\n  \"いくぶん\",\n  \"いけばな\",\n  \"いけん\",\n  \"いこう\",\n  \"いこく\",\n  \"いこつ\",\n  \"いさましい\",\n  \"いさん\",\n  \"いしき\",\n  \"いじゅう\",\n  \"いじょう\",\n  \"いじわる\",\n  \"いずみ\",\n  \"いずれ\",\n  \"いせい\",\n  \"いせえび\",\n  \"いせかい\",\n  \"いせき\",\n  \"いぜん\",\n  \"いそうろう\",\n  \"いそがしい\",\n  \"いだい\",\n  \"いだく\",\n  \"いたずら\",\n  \"いたみ\",\n  \"いたりあ\",\n  \"いちおう\",\n  \"いちじ\",\n  \"いちど\",\n  \"いちば\",\n  \"いちぶ\",\n  \"いちりゅう\",\n  \"いつか\",\n  \"いっしゅん\",\n  \"いっせい\",\n  \"いっそう\",\n  \"いったん\",\n  \"いっち\",\n  \"いってい\",\n  \"いっぽう\",\n  \"いてざ\",\n  \"いてん\",\n  \"いどう\",\n  \"いとこ\",\n  \"いない\",\n  \"いなか\",\n  \"いねむり\",\n  \"いのち\",\n  \"いのる\",\n  \"いはつ\",\n  \"いばる\",\n  \"いはん\",\n  \"いびき\",\n  \"いひん\",\n  \"いふく\",\n  \"いへん\",\n  \"いほう\",\n  \"いみん\",\n  \"いもうと\",\n  \"いもたれ\",\n  \"いもり\",\n  \"いやがる\",\n  \"いやす\",\n  \"いよかん\",\n  \"いよく\",\n  \"いらい\",\n  \"いらすと\",\n  \"いりぐち\",\n  \"いりょう\",\n  \"いれい\",\n  \"いれもの\",\n  \"いれる\",\n  \"いろえんぴつ\",\n  \"いわい\",\n  \"いわう\",\n  \"いわかん\",\n  \"いわば\",\n  \"いわゆる\",\n  \"いんげんまめ\",\n  \"いんさつ\",\n  \"いんしょう\",\n  \"いんよう\",\n  \"うえき\",\n  \"うえる\",\n  \"うおざ\",\n  \"うがい\",\n  \"うかぶ\",\n  \"うかべる\",\n  \"うきわ\",\n  \"うくらいな\",\n  \"うくれれ\",\n  \"うけたまわる\",\n  \"うけつけ\",\n  \"うけとる\",\n  \"うけもつ\",\n  \"うける\",\n  \"うごかす\",\n  \"うごく\",\n  \"うこん\",\n  \"うさぎ\",\n  \"うしなう\",\n  \"うしろがみ\",\n  \"うすい\",\n  \"うすぎ\",\n  \"うすぐらい\",\n  \"うすめる\",\n  \"うせつ\",\n  \"うちあわせ\",\n  \"うちがわ\",\n  \"うちき\",\n  \"うちゅう\",\n  \"うっかり\",\n  \"うつくしい\",\n  \"うったえる\",\n  \"うつる\",\n  \"うどん\",\n  \"うなぎ\",\n  \"うなじ\",\n  \"うなずく\",\n  \"うなる\",\n  \"うねる\",\n  \"うのう\",\n  \"うぶげ\",\n  \"うぶごえ\",\n  \"うまれる\",\n  \"うめる\",\n  \"うもう\",\n  \"うやまう\",\n  \"うよく\",\n  \"うらがえす\",\n  \"うらぐち\",\n  \"うらない\",\n  \"うりあげ\",\n  \"うりきれ\",\n  \"うるさい\",\n  \"うれしい\",\n  \"うれゆき\",\n  \"うれる\",\n  \"うろこ\",\n  \"うわき\",\n  \"うわさ\",\n  \"うんこう\",\n  \"うんちん\",\n  \"うんてん\",\n  \"うんどう\",\n  \"えいえん\",\n  \"えいが\",\n  \"えいきょう\",\n  \"えいご\",\n  \"えいせい\",\n  \"えいぶん\",\n  \"えいよう\",\n  \"えいわ\",\n  \"えおり\",\n  \"えがお\",\n  \"えがく\",\n  \"えきたい\",\n  \"えくせる\",\n  \"えしゃく\",\n  \"えすて\",\n  \"えつらん\",\n  \"えのぐ\",\n  \"えほうまき\",\n  \"えほん\",\n  \"えまき\",\n  \"えもじ\",\n  \"えもの\",\n  \"えらい\",\n  \"えらぶ\",\n  \"えりあ\",\n  \"えんえん\",\n  \"えんかい\",\n  \"えんぎ\",\n  \"えんげき\",\n  \"えんしゅう\",\n  \"えんぜつ\",\n  \"えんそく\",\n  \"えんちょう\",\n  \"えんとつ\",\n  \"おいかける\",\n  \"おいこす\",\n  \"おいしい\",\n  \"おいつく\",\n  \"おうえん\",\n  \"おうさま\",\n  \"おうじ\",\n  \"おうせつ\",\n  \"おうたい\",\n  \"おうふく\",\n  \"おうべい\",\n  \"おうよう\",\n  \"おえる\",\n  \"おおい\",\n  \"おおう\",\n  \"おおどおり\",\n  \"おおや\",\n  \"おおよそ\",\n  \"おかえり\",\n  \"おかず\",\n  \"おがむ\",\n  \"おかわり\",\n  \"おぎなう\",\n  \"おきる\",\n  \"おくさま\",\n  \"おくじょう\",\n  \"おくりがな\",\n  \"おくる\",\n  \"おくれる\",\n  \"おこす\",\n  \"おこなう\",\n  \"おこる\",\n  \"おさえる\",\n  \"おさない\",\n  \"おさめる\",\n  \"おしいれ\",\n  \"おしえる\",\n  \"おじぎ\",\n  \"おじさん\",\n  \"おしゃれ\",\n  \"おそらく\",\n  \"おそわる\",\n  \"おたがい\",\n  \"おたく\",\n  \"おだやか\",\n  \"おちつく\",\n  \"おっと\",\n  \"おつり\",\n  \"おでかけ\",\n  \"おとしもの\",\n  \"おとなしい\",\n  \"おどり\",\n  \"おどろかす\",\n  \"おばさん\",\n  \"おまいり\",\n  \"おめでとう\",\n  \"おもいで\",\n  \"おもう\",\n  \"おもたい\",\n  \"おもちゃ\",\n  \"おやつ\",\n  \"おやゆび\",\n  \"およぼす\",\n  \"おらんだ\",\n  \"おろす\",\n  \"おんがく\",\n  \"おんけい\",\n  \"おんしゃ\",\n  \"おんせん\",\n  \"おんだん\",\n  \"おんちゅう\",\n  \"おんどけい\",\n  \"かあつ\",\n  \"かいが\",\n  \"がいき\",\n  \"がいけん\",\n  \"がいこう\",\n  \"かいさつ\",\n  \"かいしゃ\",\n  \"かいすいよく\",\n  \"かいぜん\",\n  \"かいぞうど\",\n  \"かいつう\",\n  \"かいてん\",\n  \"かいとう\",\n  \"かいふく\",\n  \"がいへき\",\n  \"かいほう\",\n  \"かいよう\",\n  \"がいらい\",\n  \"かいわ\",\n  \"かえる\",\n  \"かおり\",\n  \"かかえる\",\n  \"かがく\",\n  \"かがし\",\n  \"かがみ\",\n  \"かくご\",\n  \"かくとく\",\n  \"かざる\",\n  \"がぞう\",\n  \"かたい\",\n  \"かたち\",\n  \"がちょう\",\n  \"がっきゅう\",\n  \"がっこう\",\n  \"がっさん\",\n  \"がっしょう\",\n  \"かなざわし\",\n  \"かのう\",\n  \"がはく\",\n  \"かぶか\",\n  \"かほう\",\n  \"かほご\",\n  \"かまう\",\n  \"かまぼこ\",\n  \"かめれおん\",\n  \"かゆい\",\n  \"かようび\",\n  \"からい\",\n  \"かるい\",\n  \"かろう\",\n  \"かわく\",\n  \"かわら\",\n  \"がんか\",\n  \"かんけい\",\n  \"かんこう\",\n  \"かんしゃ\",\n  \"かんそう\",\n  \"かんたん\",\n  \"かんち\",\n  \"がんばる\",\n  \"きあい\",\n  \"きあつ\",\n  \"きいろ\",\n  \"ぎいん\",\n  \"きうい\",\n  \"きうん\",\n  \"きえる\",\n  \"きおう\",\n  \"きおく\",\n  \"きおち\",\n  \"きおん\",\n  \"きかい\",\n  \"きかく\",\n  \"きかんしゃ\",\n  \"ききて\",\n  \"きくばり\",\n  \"きくらげ\",\n  \"きけんせい\",\n  \"きこう\",\n  \"きこえる\",\n  \"きこく\",\n  \"きさい\",\n  \"きさく\",\n  \"きさま\",\n  \"きさらぎ\",\n  \"ぎじかがく\",\n  \"ぎしき\",\n  \"ぎじたいけん\",\n  \"ぎじにってい\",\n  \"ぎじゅつしゃ\",\n  \"きすう\",\n  \"きせい\",\n  \"きせき\",\n  \"きせつ\",\n  \"きそう\",\n  \"きぞく\",\n  \"きぞん\",\n  \"きたえる\",\n  \"きちょう\",\n  \"きつえん\",\n  \"ぎっちり\",\n  \"きつつき\",\n  \"きつね\",\n  \"きてい\",\n  \"きどう\",\n  \"きどく\",\n  \"きない\",\n  \"きなが\",\n  \"きなこ\",\n  \"きぬごし\",\n  \"きねん\",\n  \"きのう\",\n  \"きのした\",\n  \"きはく\",\n  \"きびしい\",\n  \"きひん\",\n  \"きふく\",\n  \"きぶん\",\n  \"きぼう\",\n  \"きほん\",\n  \"きまる\",\n  \"きみつ\",\n  \"きむずかしい\",\n  \"きめる\",\n  \"きもだめし\",\n  \"きもち\",\n  \"きもの\",\n  \"きゃく\",\n  \"きやく\",\n  \"ぎゅうにく\",\n  \"きよう\",\n  \"きょうりゅう\",\n  \"きらい\",\n  \"きらく\",\n  \"きりん\",\n  \"きれい\",\n  \"きれつ\",\n  \"きろく\",\n  \"ぎろん\",\n  \"きわめる\",\n  \"ぎんいろ\",\n  \"きんかくじ\",\n  \"きんじょ\",\n  \"きんようび\",\n  \"ぐあい\",\n  \"くいず\",\n  \"くうかん\",\n  \"くうき\",\n  \"くうぐん\",\n  \"くうこう\",\n  \"ぐうせい\",\n  \"くうそう\",\n  \"ぐうたら\",\n  \"くうふく\",\n  \"くうぼ\",\n  \"くかん\",\n  \"くきょう\",\n  \"くげん\",\n  \"ぐこう\",\n  \"くさい\",\n  \"くさき\",\n  \"くさばな\",\n  \"くさる\",\n  \"くしゃみ\",\n  \"くしょう\",\n  \"くすのき\",\n  \"くすりゆび\",\n  \"くせげ\",\n  \"くせん\",\n  \"ぐたいてき\",\n  \"くださる\",\n  \"くたびれる\",\n  \"くちこみ\",\n  \"くちさき\",\n  \"くつした\",\n  \"ぐっすり\",\n  \"くつろぐ\",\n  \"くとうてん\",\n  \"くどく\",\n  \"くなん\",\n  \"くねくね\",\n  \"くのう\",\n  \"くふう\",\n  \"くみあわせ\",\n  \"くみたてる\",\n  \"くめる\",\n  \"くやくしょ\",\n  \"くらす\",\n  \"くらべる\",\n  \"くるま\",\n  \"くれる\",\n  \"くろう\",\n  \"くわしい\",\n  \"ぐんかん\",\n  \"ぐんしょく\",\n  \"ぐんたい\",\n  \"ぐんて\",\n  \"けあな\",\n  \"けいかく\",\n  \"けいけん\",\n  \"けいこ\",\n  \"けいさつ\",\n  \"げいじゅつ\",\n  \"けいたい\",\n  \"げいのうじん\",\n  \"けいれき\",\n  \"けいろ\",\n  \"けおとす\",\n  \"けおりもの\",\n  \"げきか\",\n  \"げきげん\",\n  \"げきだん\",\n  \"げきちん\",\n  \"げきとつ\",\n  \"げきは\",\n  \"げきやく\",\n  \"げこう\",\n  \"げこくじょう\",\n  \"げざい\",\n  \"けさき\",\n  \"げざん\",\n  \"けしき\",\n  \"けしごむ\",\n  \"けしょう\",\n  \"げすと\",\n  \"けたば\",\n  \"けちゃっぷ\",\n  \"けちらす\",\n  \"けつあつ\",\n  \"けつい\",\n  \"けつえき\",\n  \"けっこん\",\n  \"けつじょ\",\n  \"けっせき\",\n  \"けってい\",\n  \"けつまつ\",\n  \"げつようび\",\n  \"げつれい\",\n  \"けつろん\",\n  \"げどく\",\n  \"けとばす\",\n  \"けとる\",\n  \"けなげ\",\n  \"けなす\",\n  \"けなみ\",\n  \"けぬき\",\n  \"げねつ\",\n  \"けねん\",\n  \"けはい\",\n  \"げひん\",\n  \"けぶかい\",\n  \"げぼく\",\n  \"けまり\",\n  \"けみかる\",\n  \"けむし\",\n  \"けむり\",\n  \"けもの\",\n  \"けらい\",\n  \"けろけろ\",\n  \"けわしい\",\n  \"けんい\",\n  \"けんえつ\",\n  \"けんお\",\n  \"けんか\",\n  \"げんき\",\n  \"けんげん\",\n  \"けんこう\",\n  \"けんさく\",\n  \"けんしゅう\",\n  \"けんすう\",\n  \"げんそう\",\n  \"けんちく\",\n  \"けんてい\",\n  \"けんとう\",\n  \"けんない\",\n  \"けんにん\",\n  \"げんぶつ\",\n  \"けんま\",\n  \"けんみん\",\n  \"けんめい\",\n  \"けんらん\",\n  \"けんり\",\n  \"こあくま\",\n  \"こいぬ\",\n  \"こいびと\",\n  \"ごうい\",\n  \"こうえん\",\n  \"こうおん\",\n  \"こうかん\",\n  \"ごうきゅう\",\n  \"ごうけい\",\n  \"こうこう\",\n  \"こうさい\",\n  \"こうじ\",\n  \"こうすい\",\n  \"ごうせい\",\n  \"こうそく\",\n  \"こうたい\",\n  \"こうちゃ\",\n  \"こうつう\",\n  \"こうてい\",\n  \"こうどう\",\n  \"こうない\",\n  \"こうはい\",\n  \"ごうほう\",\n  \"ごうまん\",\n  \"こうもく\",\n  \"こうりつ\",\n  \"こえる\",\n  \"こおり\",\n  \"ごかい\",\n  \"ごがつ\",\n  \"ごかん\",\n  \"こくご\",\n  \"こくさい\",\n  \"こくとう\",\n  \"こくない\",\n  \"こくはく\",\n  \"こぐま\",\n  \"こけい\",\n  \"こける\",\n  \"ここのか\",\n  \"こころ\",\n  \"こさめ\",\n  \"こしつ\",\n  \"こすう\",\n  \"こせい\",\n  \"こせき\",\n  \"こぜん\",\n  \"こそだて\",\n  \"こたい\",\n  \"こたえる\",\n  \"こたつ\",\n  \"こちょう\",\n  \"こっか\",\n  \"こつこつ\",\n  \"こつばん\",\n  \"こつぶ\",\n  \"こてい\",\n  \"こてん\",\n  \"ことがら\",\n  \"ことし\",\n  \"ことば\",\n  \"ことり\",\n  \"こなごな\",\n  \"こねこね\",\n  \"このまま\",\n  \"このみ\",\n  \"このよ\",\n  \"ごはん\",\n  \"こひつじ\",\n  \"こふう\",\n  \"こふん\",\n  \"こぼれる\",\n  \"ごまあぶら\",\n  \"こまかい\",\n  \"ごますり\",\n  \"こまつな\",\n  \"こまる\",\n  \"こむぎこ\",\n  \"こもじ\",\n  \"こもち\",\n  \"こもの\",\n  \"こもん\",\n  \"こやく\",\n  \"こやま\",\n  \"こゆう\",\n  \"こゆび\",\n  \"こよい\",\n  \"こよう\",\n  \"こりる\",\n  \"これくしょん\",\n  \"ころっけ\",\n  \"こわもて\",\n  \"こわれる\",\n  \"こんいん\",\n  \"こんかい\",\n  \"こんき\",\n  \"こんしゅう\",\n  \"こんすい\",\n  \"こんだて\",\n  \"こんとん\",\n  \"こんなん\",\n  \"こんびに\",\n  \"こんぽん\",\n  \"こんまけ\",\n  \"こんや\",\n  \"こんれい\",\n  \"こんわく\",\n  \"ざいえき\",\n  \"さいかい\",\n  \"さいきん\",\n  \"ざいげん\",\n  \"ざいこ\",\n  \"さいしょ\",\n  \"さいせい\",\n  \"ざいたく\",\n  \"ざいちゅう\",\n  \"さいてき\",\n  \"ざいりょう\",\n  \"さうな\",\n  \"さかいし\",\n  \"さがす\",\n  \"さかな\",\n  \"さかみち\",\n  \"さがる\",\n  \"さぎょう\",\n  \"さくし\",\n  \"さくひん\",\n  \"さくら\",\n  \"さこく\",\n  \"さこつ\",\n  \"さずかる\",\n  \"ざせき\",\n  \"さたん\",\n  \"さつえい\",\n  \"ざつおん\",\n  \"ざっか\",\n  \"ざつがく\",\n  \"さっきょく\",\n  \"ざっし\",\n  \"さつじん\",\n  \"ざっそう\",\n  \"さつたば\",\n  \"さつまいも\",\n  \"さてい\",\n  \"さといも\",\n  \"さとう\",\n  \"さとおや\",\n  \"さとし\",\n  \"さとる\",\n  \"さのう\",\n  \"さばく\",\n  \"さびしい\",\n  \"さべつ\",\n  \"さほう\",\n  \"さほど\",\n  \"さます\",\n  \"さみしい\",\n  \"さみだれ\",\n  \"さむけ\",\n  \"さめる\",\n  \"さやえんどう\",\n  \"さゆう\",\n  \"さよう\",\n  \"さよく\",\n  \"さらだ\",\n  \"ざるそば\",\n  \"さわやか\",\n  \"さわる\",\n  \"さんいん\",\n  \"さんか\",\n  \"さんきゃく\",\n  \"さんこう\",\n  \"さんさい\",\n  \"ざんしょ\",\n  \"さんすう\",\n  \"さんせい\",\n  \"さんそ\",\n  \"さんち\",\n  \"さんま\",\n  \"さんみ\",\n  \"さんらん\",\n  \"しあい\",\n  \"しあげ\",\n  \"しあさって\",\n  \"しあわせ\",\n  \"しいく\",\n  \"しいん\",\n  \"しうち\",\n  \"しえい\",\n  \"しおけ\",\n  \"しかい\",\n  \"しかく\",\n  \"じかん\",\n  \"しごと\",\n  \"しすう\",\n  \"じだい\",\n  \"したうけ\",\n  \"したぎ\",\n  \"したて\",\n  \"したみ\",\n  \"しちょう\",\n  \"しちりん\",\n  \"しっかり\",\n  \"しつじ\",\n  \"しつもん\",\n  \"してい\",\n  \"してき\",\n  \"してつ\",\n  \"じてん\",\n  \"じどう\",\n  \"しなぎれ\",\n  \"しなもの\",\n  \"しなん\",\n  \"しねま\",\n  \"しねん\",\n  \"しのぐ\",\n  \"しのぶ\",\n  \"しはい\",\n  \"しばかり\",\n  \"しはつ\",\n  \"しはらい\",\n  \"しはん\",\n  \"しひょう\",\n  \"しふく\",\n  \"じぶん\",\n  \"しへい\",\n  \"しほう\",\n  \"しほん\",\n  \"しまう\",\n  \"しまる\",\n  \"しみん\",\n  \"しむける\",\n  \"じむしょ\",\n  \"しめい\",\n  \"しめる\",\n  \"しもん\",\n  \"しゃいん\",\n  \"しゃうん\",\n  \"しゃおん\",\n  \"じゃがいも\",\n  \"しやくしょ\",\n  \"しゃくほう\",\n  \"しゃけん\",\n  \"しゃこ\",\n  \"しゃざい\",\n  \"しゃしん\",\n  \"しゃせん\",\n  \"しゃそう\",\n  \"しゃたい\",\n  \"しゃちょう\",\n  \"しゃっきん\",\n  \"じゃま\",\n  \"しゃりん\",\n  \"しゃれい\",\n  \"じゆう\",\n  \"じゅうしょ\",\n  \"しゅくはく\",\n  \"じゅしん\",\n  \"しゅっせき\",\n  \"しゅみ\",\n  \"しゅらば\",\n  \"じゅんばん\",\n  \"しょうかい\",\n  \"しょくたく\",\n  \"しょっけん\",\n  \"しょどう\",\n  \"しょもつ\",\n  \"しらせる\",\n  \"しらべる\",\n  \"しんか\",\n  \"しんこう\",\n  \"じんじゃ\",\n  \"しんせいじ\",\n  \"しんちく\",\n  \"しんりん\",\n  \"すあげ\",\n  \"すあし\",\n  \"すあな\",\n  \"ずあん\",\n  \"すいえい\",\n  \"すいか\",\n  \"すいとう\",\n  \"ずいぶん\",\n  \"すいようび\",\n  \"すうがく\",\n  \"すうじつ\",\n  \"すうせん\",\n  \"すおどり\",\n  \"すきま\",\n  \"すくう\",\n  \"すくない\",\n  \"すける\",\n  \"すごい\",\n  \"すこし\",\n  \"ずさん\",\n  \"すずしい\",\n  \"すすむ\",\n  \"すすめる\",\n  \"すっかり\",\n  \"ずっしり\",\n  \"ずっと\",\n  \"すてき\",\n  \"すてる\",\n  \"すねる\",\n  \"すのこ\",\n  \"すはだ\",\n  \"すばらしい\",\n  \"ずひょう\",\n  \"ずぶぬれ\",\n  \"すぶり\",\n  \"すふれ\",\n  \"すべて\",\n  \"すべる\",\n  \"ずほう\",\n  \"すぼん\",\n  \"すまい\",\n  \"すめし\",\n  \"すもう\",\n  \"すやき\",\n  \"すらすら\",\n  \"するめ\",\n  \"すれちがう\",\n  \"すろっと\",\n  \"すわる\",\n  \"すんぜん\",\n  \"すんぽう\",\n  \"せあぶら\",\n  \"せいかつ\",\n  \"せいげん\",\n  \"せいじ\",\n  \"せいよう\",\n  \"せおう\",\n  \"せかいかん\",\n  \"せきにん\",\n  \"せきむ\",\n  \"せきゆ\",\n  \"せきらんうん\",\n  \"せけん\",\n  \"せこう\",\n  \"せすじ\",\n  \"せたい\",\n  \"せたけ\",\n  \"せっかく\",\n  \"せっきゃく\",\n  \"ぜっく\",\n  \"せっけん\",\n  \"せっこつ\",\n  \"せっさたくま\",\n  \"せつぞく\",\n  \"せつだん\",\n  \"せつでん\",\n  \"せっぱん\",\n  \"せつび\",\n  \"せつぶん\",\n  \"せつめい\",\n  \"せつりつ\",\n  \"せなか\",\n  \"せのび\",\n  \"せはば\",\n  \"せびろ\",\n  \"せぼね\",\n  \"せまい\",\n  \"せまる\",\n  \"せめる\",\n  \"せもたれ\",\n  \"せりふ\",\n  \"ぜんあく\",\n  \"せんい\",\n  \"せんえい\",\n  \"せんか\",\n  \"せんきょ\",\n  \"せんく\",\n  \"せんげん\",\n  \"ぜんご\",\n  \"せんさい\",\n  \"せんしゅ\",\n  \"せんすい\",\n  \"せんせい\",\n  \"せんぞ\",\n  \"せんたく\",\n  \"せんちょう\",\n  \"せんてい\",\n  \"せんとう\",\n  \"せんぬき\",\n  \"せんねん\",\n  \"せんぱい\",\n  \"ぜんぶ\",\n  \"ぜんぽう\",\n  \"せんむ\",\n  \"せんめんじょ\",\n  \"せんもん\",\n  \"せんやく\",\n  \"せんゆう\",\n  \"せんよう\",\n  \"ぜんら\",\n  \"ぜんりゃく\",\n  \"せんれい\",\n  \"せんろ\",\n  \"そあく\",\n  \"そいとげる\",\n  \"そいね\",\n  \"そうがんきょう\",\n  \"そうき\",\n  \"そうご\",\n  \"そうしん\",\n  \"そうだん\",\n  \"そうなん\",\n  \"そうび\",\n  \"そうめん\",\n  \"そうり\",\n  \"そえもの\",\n  \"そえん\",\n  \"そがい\",\n  \"そげき\",\n  \"そこう\",\n  \"そこそこ\",\n  \"そざい\",\n  \"そしな\",\n  \"そせい\",\n  \"そせん\",\n  \"そそぐ\",\n  \"そだてる\",\n  \"そつう\",\n  \"そつえん\",\n  \"そっかん\",\n  \"そつぎょう\",\n  \"そっけつ\",\n  \"そっこう\",\n  \"そっせん\",\n  \"そっと\",\n  \"そとがわ\",\n  \"そとづら\",\n  \"そなえる\",\n  \"そなた\",\n  \"そふぼ\",\n  \"そぼく\",\n  \"そぼろ\",\n  \"そまつ\",\n  \"そまる\",\n  \"そむく\",\n  \"そむりえ\",\n  \"そめる\",\n  \"そもそも\",\n  \"そよかぜ\",\n  \"そらまめ\",\n  \"そろう\",\n  \"そんかい\",\n  \"そんけい\",\n  \"そんざい\",\n  \"そんしつ\",\n  \"そんぞく\",\n  \"そんちょう\",\n  \"ぞんび\",\n  \"ぞんぶん\",\n  \"そんみん\",\n  \"たあい\",\n  \"たいいん\",\n  \"たいうん\",\n  \"たいえき\",\n  \"たいおう\",\n  \"だいがく\",\n  \"たいき\",\n  \"たいぐう\",\n  \"たいけん\",\n  \"たいこ\",\n  \"たいざい\",\n  \"だいじょうぶ\",\n  \"だいすき\",\n  \"たいせつ\",\n  \"たいそう\",\n  \"だいたい\",\n  \"たいちょう\",\n  \"たいてい\",\n  \"だいどころ\",\n  \"たいない\",\n  \"たいねつ\",\n  \"たいのう\",\n  \"たいはん\",\n  \"だいひょう\",\n  \"たいふう\",\n  \"たいへん\",\n  \"たいほ\",\n  \"たいまつばな\",\n  \"たいみんぐ\",\n  \"たいむ\",\n  \"たいめん\",\n  \"たいやき\",\n  \"たいよう\",\n  \"たいら\",\n  \"たいりょく\",\n  \"たいる\",\n  \"たいわん\",\n  \"たうえ\",\n  \"たえる\",\n  \"たおす\",\n  \"たおる\",\n  \"たおれる\",\n  \"たかい\",\n  \"たかね\",\n  \"たきび\",\n  \"たくさん\",\n  \"たこく\",\n  \"たこやき\",\n  \"たさい\",\n  \"たしざん\",\n  \"だじゃれ\",\n  \"たすける\",\n  \"たずさわる\",\n  \"たそがれ\",\n  \"たたかう\",\n  \"たたく\",\n  \"ただしい\",\n  \"たたみ\",\n  \"たちばな\",\n  \"だっかい\",\n  \"だっきゃく\",\n  \"だっこ\",\n  \"だっしゅつ\",\n  \"だったい\",\n  \"たてる\",\n  \"たとえる\",\n  \"たなばた\",\n  \"たにん\",\n  \"たぬき\",\n  \"たのしみ\",\n  \"たはつ\",\n  \"たぶん\",\n  \"たべる\",\n  \"たぼう\",\n  \"たまご\",\n  \"たまる\",\n  \"だむる\",\n  \"ためいき\",\n  \"ためす\",\n  \"ためる\",\n  \"たもつ\",\n  \"たやすい\",\n  \"たよる\",\n  \"たらす\",\n  \"たりきほんがん\",\n  \"たりょう\",\n  \"たりる\",\n  \"たると\",\n  \"たれる\",\n  \"たれんと\",\n  \"たろっと\",\n  \"たわむれる\",\n  \"だんあつ\",\n  \"たんい\",\n  \"たんおん\",\n  \"たんか\",\n  \"たんき\",\n  \"たんけん\",\n  \"たんご\",\n  \"たんさん\",\n  \"たんじょうび\",\n  \"だんせい\",\n  \"たんそく\",\n  \"たんたい\",\n  \"だんち\",\n  \"たんてい\",\n  \"たんとう\",\n  \"だんな\",\n  \"たんにん\",\n  \"だんねつ\",\n  \"たんのう\",\n  \"たんぴん\",\n  \"だんぼう\",\n  \"たんまつ\",\n  \"たんめい\",\n  \"だんれつ\",\n  \"だんろ\",\n  \"だんわ\",\n  \"ちあい\",\n  \"ちあん\",\n  \"ちいき\",\n  \"ちいさい\",\n  \"ちえん\",\n  \"ちかい\",\n  \"ちから\",\n  \"ちきゅう\",\n  \"ちきん\",\n  \"ちけいず\",\n  \"ちけん\",\n  \"ちこく\",\n  \"ちさい\",\n  \"ちしき\",\n  \"ちしりょう\",\n  \"ちせい\",\n  \"ちそう\",\n  \"ちたい\",\n  \"ちたん\",\n  \"ちちおや\",\n  \"ちつじょ\",\n  \"ちてき\",\n  \"ちてん\",\n  \"ちぬき\",\n  \"ちぬり\",\n  \"ちのう\",\n  \"ちひょう\",\n  \"ちへいせん\",\n  \"ちほう\",\n  \"ちまた\",\n  \"ちみつ\",\n  \"ちみどろ\",\n  \"ちめいど\",\n  \"ちゃんこなべ\",\n  \"ちゅうい\",\n  \"ちゆりょく\",\n  \"ちょうし\",\n  \"ちょさくけん\",\n  \"ちらし\",\n  \"ちらみ\",\n  \"ちりがみ\",\n  \"ちりょう\",\n  \"ちるど\",\n  \"ちわわ\",\n  \"ちんたい\",\n  \"ちんもく\",\n  \"ついか\",\n  \"ついたち\",\n  \"つうか\",\n  \"つうじょう\",\n  \"つうはん\",\n  \"つうわ\",\n  \"つかう\",\n  \"つかれる\",\n  \"つくね\",\n  \"つくる\",\n  \"つけね\",\n  \"つける\",\n  \"つごう\",\n  \"つたえる\",\n  \"つづく\",\n  \"つつじ\",\n  \"つつむ\",\n  \"つとめる\",\n  \"つながる\",\n  \"つなみ\",\n  \"つねづね\",\n  \"つのる\",\n  \"つぶす\",\n  \"つまらない\",\n  \"つまる\",\n  \"つみき\",\n  \"つめたい\",\n  \"つもり\",\n  \"つもる\",\n  \"つよい\",\n  \"つるぼ\",\n  \"つるみく\",\n  \"つわもの\",\n  \"つわり\",\n  \"てあし\",\n  \"てあて\",\n  \"てあみ\",\n  \"ていおん\",\n  \"ていか\",\n  \"ていき\",\n  \"ていけい\",\n  \"ていこく\",\n  \"ていさつ\",\n  \"ていし\",\n  \"ていせい\",\n  \"ていたい\",\n  \"ていど\",\n  \"ていねい\",\n  \"ていひょう\",\n  \"ていへん\",\n  \"ていぼう\",\n  \"てうち\",\n  \"ておくれ\",\n  \"てきとう\",\n  \"てくび\",\n  \"でこぼこ\",\n  \"てさぎょう\",\n  \"てさげ\",\n  \"てすり\",\n  \"てそう\",\n  \"てちがい\",\n  \"てちょう\",\n  \"てつがく\",\n  \"てつづき\",\n  \"でっぱ\",\n  \"てつぼう\",\n  \"てつや\",\n  \"でぬかえ\",\n  \"てぬき\",\n  \"てぬぐい\",\n  \"てのひら\",\n  \"てはい\",\n  \"てぶくろ\",\n  \"てふだ\",\n  \"てほどき\",\n  \"てほん\",\n  \"てまえ\",\n  \"てまきずし\",\n  \"てみじか\",\n  \"てみやげ\",\n  \"てらす\",\n  \"てれび\",\n  \"てわけ\",\n  \"てわたし\",\n  \"でんあつ\",\n  \"てんいん\",\n  \"てんかい\",\n  \"てんき\",\n  \"てんぐ\",\n  \"てんけん\",\n  \"てんごく\",\n  \"てんさい\",\n  \"てんし\",\n  \"てんすう\",\n  \"でんち\",\n  \"てんてき\",\n  \"てんとう\",\n  \"てんない\",\n  \"てんぷら\",\n  \"てんぼうだい\",\n  \"てんめつ\",\n  \"てんらんかい\",\n  \"でんりょく\",\n  \"でんわ\",\n  \"どあい\",\n  \"といれ\",\n  \"どうかん\",\n  \"とうきゅう\",\n  \"どうぐ\",\n  \"とうし\",\n  \"とうむぎ\",\n  \"とおい\",\n  \"とおか\",\n  \"とおく\",\n  \"とおす\",\n  \"とおる\",\n  \"とかい\",\n  \"とかす\",\n  \"ときおり\",\n  \"ときどき\",\n  \"とくい\",\n  \"とくしゅう\",\n  \"とくてん\",\n  \"とくに\",\n  \"とくべつ\",\n  \"とけい\",\n  \"とける\",\n  \"とこや\",\n  \"とさか\",\n  \"としょかん\",\n  \"とそう\",\n  \"とたん\",\n  \"とちゅう\",\n  \"とっきゅう\",\n  \"とっくん\",\n  \"とつぜん\",\n  \"とつにゅう\",\n  \"とどける\",\n  \"ととのえる\",\n  \"とない\",\n  \"となえる\",\n  \"となり\",\n  \"とのさま\",\n  \"とばす\",\n  \"どぶがわ\",\n  \"とほう\",\n  \"とまる\",\n  \"とめる\",\n  \"ともだち\",\n  \"ともる\",\n  \"どようび\",\n  \"とらえる\",\n  \"とんかつ\",\n  \"どんぶり\",\n  \"ないかく\",\n  \"ないこう\",\n  \"ないしょ\",\n  \"ないす\",\n  \"ないせん\",\n  \"ないそう\",\n  \"なおす\",\n  \"ながい\",\n  \"なくす\",\n  \"なげる\",\n  \"なこうど\",\n  \"なさけ\",\n  \"なたでここ\",\n  \"なっとう\",\n  \"なつやすみ\",\n  \"ななおし\",\n  \"なにごと\",\n  \"なにもの\",\n  \"なにわ\",\n  \"なのか\",\n  \"なふだ\",\n  \"なまいき\",\n  \"なまえ\",\n  \"なまみ\",\n  \"なみだ\",\n  \"なめらか\",\n  \"なめる\",\n  \"なやむ\",\n  \"ならう\",\n  \"ならび\",\n  \"ならぶ\",\n  \"なれる\",\n  \"なわとび\",\n  \"なわばり\",\n  \"にあう\",\n  \"にいがた\",\n  \"にうけ\",\n  \"におい\",\n  \"にかい\",\n  \"にがて\",\n  \"にきび\",\n  \"にくしみ\",\n  \"にくまん\",\n  \"にげる\",\n  \"にさんかたんそ\",\n  \"にしき\",\n  \"にせもの\",\n  \"にちじょう\",\n  \"にちようび\",\n  \"にっか\",\n  \"にっき\",\n  \"にっけい\",\n  \"にっこう\",\n  \"にっさん\",\n  \"にっしょく\",\n  \"にっすう\",\n  \"にっせき\",\n  \"にってい\",\n  \"になう\",\n  \"にほん\",\n  \"にまめ\",\n  \"にもつ\",\n  \"にやり\",\n  \"にゅういん\",\n  \"にりんしゃ\",\n  \"にわとり\",\n  \"にんい\",\n  \"にんか\",\n  \"にんき\",\n  \"にんげん\",\n  \"にんしき\",\n  \"にんずう\",\n  \"にんそう\",\n  \"にんたい\",\n  \"にんち\",\n  \"にんてい\",\n  \"にんにく\",\n  \"にんぷ\",\n  \"にんまり\",\n  \"にんむ\",\n  \"にんめい\",\n  \"にんよう\",\n  \"ぬいくぎ\",\n  \"ぬかす\",\n  \"ぬぐいとる\",\n  \"ぬぐう\",\n  \"ぬくもり\",\n  \"ぬすむ\",\n  \"ぬまえび\",\n  \"ぬめり\",\n  \"ぬらす\",\n  \"ぬんちゃく\",\n  \"ねあげ\",\n  \"ねいき\",\n  \"ねいる\",\n  \"ねいろ\",\n  \"ねぐせ\",\n  \"ねくたい\",\n  \"ねくら\",\n  \"ねこぜ\",\n  \"ねこむ\",\n  \"ねさげ\",\n  \"ねすごす\",\n  \"ねそべる\",\n  \"ねだん\",\n  \"ねつい\",\n  \"ねっしん\",\n  \"ねつぞう\",\n  \"ねったいぎょ\",\n  \"ねぶそく\",\n  \"ねふだ\",\n  \"ねぼう\",\n  \"ねほりはほり\",\n  \"ねまき\",\n  \"ねまわし\",\n  \"ねみみ\",\n  \"ねむい\",\n  \"ねむたい\",\n  \"ねもと\",\n  \"ねらう\",\n  \"ねわざ\",\n  \"ねんいり\",\n  \"ねんおし\",\n  \"ねんかん\",\n  \"ねんきん\",\n  \"ねんぐ\",\n  \"ねんざ\",\n  \"ねんし\",\n  \"ねんちゃく\",\n  \"ねんど\",\n  \"ねんぴ\",\n  \"ねんぶつ\",\n  \"ねんまつ\",\n  \"ねんりょう\",\n  \"ねんれい\",\n  \"のいず\",\n  \"のおづま\",\n  \"のがす\",\n  \"のきなみ\",\n  \"のこぎり\",\n  \"のこす\",\n  \"のこる\",\n  \"のせる\",\n  \"のぞく\",\n  \"のぞむ\",\n  \"のたまう\",\n  \"のちほど\",\n  \"のっく\",\n  \"のばす\",\n  \"のはら\",\n  \"のべる\",\n  \"のぼる\",\n  \"のみもの\",\n  \"のやま\",\n  \"のらいぬ\",\n  \"のらねこ\",\n  \"のりもの\",\n  \"のりゆき\",\n  \"のれん\",\n  \"のんき\",\n  \"ばあい\",\n  \"はあく\",\n  \"ばあさん\",\n  \"ばいか\",\n  \"ばいく\",\n  \"はいけん\",\n  \"はいご\",\n  \"はいしん\",\n  \"はいすい\",\n  \"はいせん\",\n  \"はいそう\",\n  \"はいち\",\n  \"ばいばい\",\n  \"はいれつ\",\n  \"はえる\",\n  \"はおる\",\n  \"はかい\",\n  \"ばかり\",\n  \"はかる\",\n  \"はくしゅ\",\n  \"はけん\",\n  \"はこぶ\",\n  \"はさみ\",\n  \"はさん\",\n  \"はしご\",\n  \"ばしょ\",\n  \"はしる\",\n  \"はせる\",\n  \"ぱそこん\",\n  \"はそん\",\n  \"はたん\",\n  \"はちみつ\",\n  \"はつおん\",\n  \"はっかく\",\n  \"はづき\",\n  \"はっきり\",\n  \"はっくつ\",\n  \"はっけん\",\n  \"はっこう\",\n  \"はっさん\",\n  \"はっしん\",\n  \"はったつ\",\n  \"はっちゅう\",\n  \"はってん\",\n  \"はっぴょう\",\n  \"はっぽう\",\n  \"はなす\",\n  \"はなび\",\n  \"はにかむ\",\n  \"はぶらし\",\n  \"はみがき\",\n  \"はむかう\",\n  \"はめつ\",\n  \"はやい\",\n  \"はやし\",\n  \"はらう\",\n  \"はろうぃん\",\n  \"はわい\",\n  \"はんい\",\n  \"はんえい\",\n  \"はんおん\",\n  \"はんかく\",\n  \"はんきょう\",\n  \"ばんぐみ\",\n  \"はんこ\",\n  \"はんしゃ\",\n  \"はんすう\",\n  \"はんだん\",\n  \"ぱんち\",\n  \"ぱんつ\",\n  \"はんてい\",\n  \"はんとし\",\n  \"はんのう\",\n  \"はんぱ\",\n  \"はんぶん\",\n  \"はんぺん\",\n  \"はんぼうき\",\n  \"はんめい\",\n  \"はんらん\",\n  \"はんろん\",\n  \"ひいき\",\n  \"ひうん\",\n  \"ひえる\",\n  \"ひかく\",\n  \"ひかり\",\n  \"ひかる\",\n  \"ひかん\",\n  \"ひくい\",\n  \"ひけつ\",\n  \"ひこうき\",\n  \"ひこく\",\n  \"ひさい\",\n  \"ひさしぶり\",\n  \"ひさん\",\n  \"びじゅつかん\",\n  \"ひしょ\",\n  \"ひそか\",\n  \"ひそむ\",\n  \"ひたむき\",\n  \"ひだり\",\n  \"ひたる\",\n  \"ひつぎ\",\n  \"ひっこし\",\n  \"ひっし\",\n  \"ひつじゅひん\",\n  \"ひっす\",\n  \"ひつぜん\",\n  \"ぴったり\",\n  \"ぴっちり\",\n  \"ひつよう\",\n  \"ひてい\",\n  \"ひとごみ\",\n  \"ひなまつり\",\n  \"ひなん\",\n  \"ひねる\",\n  \"ひはん\",\n  \"ひびく\",\n  \"ひひょう\",\n  \"ひほう\",\n  \"ひまわり\",\n  \"ひまん\",\n  \"ひみつ\",\n  \"ひめい\",\n  \"ひめじし\",\n  \"ひやけ\",\n  \"ひやす\",\n  \"ひよう\",\n  \"びょうき\",\n  \"ひらがな\",\n  \"ひらく\",\n  \"ひりつ\",\n  \"ひりょう\",\n  \"ひるま\",\n  \"ひるやすみ\",\n  \"ひれい\",\n  \"ひろい\",\n  \"ひろう\",\n  \"ひろき\",\n  \"ひろゆき\",\n  \"ひんかく\",\n  \"ひんけつ\",\n  \"ひんこん\",\n  \"ひんしゅ\",\n  \"ひんそう\",\n  \"ぴんち\",\n  \"ひんぱん\",\n  \"びんぼう\",\n  \"ふあん\",\n  \"ふいうち\",\n  \"ふうけい\",\n  \"ふうせん\",\n  \"ぷうたろう\",\n  \"ふうとう\",\n  \"ふうふ\",\n  \"ふえる\",\n  \"ふおん\",\n  \"ふかい\",\n  \"ふきん\",\n  \"ふくざつ\",\n  \"ふくぶくろ\",\n  \"ふこう\",\n  \"ふさい\",\n  \"ふしぎ\",\n  \"ふじみ\",\n  \"ふすま\",\n  \"ふせい\",\n  \"ふせぐ\",\n  \"ふそく\",\n  \"ぶたにく\",\n  \"ふたん\",\n  \"ふちょう\",\n  \"ふつう\",\n  \"ふつか\",\n  \"ふっかつ\",\n  \"ふっき\",\n  \"ふっこく\",\n  \"ぶどう\",\n  \"ふとる\",\n  \"ふとん\",\n  \"ふのう\",\n  \"ふはい\",\n  \"ふひょう\",\n  \"ふへん\",\n  \"ふまん\",\n  \"ふみん\",\n  \"ふめつ\",\n  \"ふめん\",\n  \"ふよう\",\n  \"ふりこ\",\n  \"ふりる\",\n  \"ふるい\",\n  \"ふんいき\",\n  \"ぶんがく\",\n  \"ぶんぐ\",\n  \"ふんしつ\",\n  \"ぶんせき\",\n  \"ふんそう\",\n  \"ぶんぽう\",\n  \"へいあん\",\n  \"へいおん\",\n  \"へいがい\",\n  \"へいき\",\n  \"へいげん\",\n  \"へいこう\",\n  \"へいさ\",\n  \"へいしゃ\",\n  \"へいせつ\",\n  \"へいそ\",\n  \"へいたく\",\n  \"へいてん\",\n  \"へいねつ\",\n  \"へいわ\",\n  \"へきが\",\n  \"へこむ\",\n  \"べにいろ\",\n  \"べにしょうが\",\n  \"へらす\",\n  \"へんかん\",\n  \"べんきょう\",\n  \"べんごし\",\n  \"へんさい\",\n  \"へんたい\",\n  \"べんり\",\n  \"ほあん\",\n  \"ほいく\",\n  \"ぼうぎょ\",\n  \"ほうこく\",\n  \"ほうそう\",\n  \"ほうほう\",\n  \"ほうもん\",\n  \"ほうりつ\",\n  \"ほえる\",\n  \"ほおん\",\n  \"ほかん\",\n  \"ほきょう\",\n  \"ぼきん\",\n  \"ほくろ\",\n  \"ほけつ\",\n  \"ほけん\",\n  \"ほこう\",\n  \"ほこる\",\n  \"ほしい\",\n  \"ほしつ\",\n  \"ほしゅ\",\n  \"ほしょう\",\n  \"ほせい\",\n  \"ほそい\",\n  \"ほそく\",\n  \"ほたて\",\n  \"ほたる\",\n  \"ぽちぶくろ\",\n  \"ほっきょく\",\n  \"ほっさ\",\n  \"ほったん\",\n  \"ほとんど\",\n  \"ほめる\",\n  \"ほんい\",\n  \"ほんき\",\n  \"ほんけ\",\n  \"ほんしつ\",\n  \"ほんやく\",\n  \"まいにち\",\n  \"まかい\",\n  \"まかせる\",\n  \"まがる\",\n  \"まける\",\n  \"まこと\",\n  \"まさつ\",\n  \"まじめ\",\n  \"ますく\",\n  \"まぜる\",\n  \"まつり\",\n  \"まとめ\",\n  \"まなぶ\",\n  \"まぬけ\",\n  \"まねく\",\n  \"まほう\",\n  \"まもる\",\n  \"まゆげ\",\n  \"まよう\",\n  \"まろやか\",\n  \"まわす\",\n  \"まわり\",\n  \"まわる\",\n  \"まんが\",\n  \"まんきつ\",\n  \"まんぞく\",\n  \"まんなか\",\n  \"みいら\",\n  \"みうち\",\n  \"みえる\",\n  \"みがく\",\n  \"みかた\",\n  \"みかん\",\n  \"みけん\",\n  \"みこん\",\n  \"みじかい\",\n  \"みすい\",\n  \"みすえる\",\n  \"みせる\",\n  \"みっか\",\n  \"みつかる\",\n  \"みつける\",\n  \"みてい\",\n  \"みとめる\",\n  \"みなと\",\n  \"みなみかさい\",\n  \"みねらる\",\n  \"みのう\",\n  \"みのがす\",\n  \"みほん\",\n  \"みもと\",\n  \"みやげ\",\n  \"みらい\",\n  \"みりょく\",\n  \"みわく\",\n  \"みんか\",\n  \"みんぞく\",\n  \"むいか\",\n  \"むえき\",\n  \"むえん\",\n  \"むかい\",\n  \"むかう\",\n  \"むかえ\",\n  \"むかし\",\n  \"むぎちゃ\",\n  \"むける\",\n  \"むげん\",\n  \"むさぼる\",\n  \"むしあつい\",\n  \"むしば\",\n  \"むじゅん\",\n  \"むしろ\",\n  \"むすう\",\n  \"むすこ\",\n  \"むすぶ\",\n  \"むすめ\",\n  \"むせる\",\n  \"むせん\",\n  \"むちゅう\",\n  \"むなしい\",\n  \"むのう\",\n  \"むやみ\",\n  \"むよう\",\n  \"むらさき\",\n  \"むりょう\",\n  \"むろん\",\n  \"めいあん\",\n  \"めいうん\",\n  \"めいえん\",\n  \"めいかく\",\n  \"めいきょく\",\n  \"めいさい\",\n  \"めいし\",\n  \"めいそう\",\n  \"めいぶつ\",\n  \"めいれい\",\n  \"めいわく\",\n  \"めぐまれる\",\n  \"めざす\",\n  \"めした\",\n  \"めずらしい\",\n  \"めだつ\",\n  \"めまい\",\n  \"めやす\",\n  \"めんきょ\",\n  \"めんせき\",\n  \"めんどう\",\n  \"もうしあげる\",\n  \"もうどうけん\",\n  \"もえる\",\n  \"もくし\",\n  \"もくてき\",\n  \"もくようび\",\n  \"もちろん\",\n  \"もどる\",\n  \"もらう\",\n  \"もんく\",\n  \"もんだい\",\n  \"やおや\",\n  \"やける\",\n  \"やさい\",\n  \"やさしい\",\n  \"やすい\",\n  \"やすたろう\",\n  \"やすみ\",\n  \"やせる\",\n  \"やそう\",\n  \"やたい\",\n  \"やちん\",\n  \"やっと\",\n  \"やっぱり\",\n  \"やぶる\",\n  \"やめる\",\n  \"ややこしい\",\n  \"やよい\",\n  \"やわらかい\",\n  \"ゆうき\",\n  \"ゆうびんきょく\",\n  \"ゆうべ\",\n  \"ゆうめい\",\n  \"ゆけつ\",\n  \"ゆしゅつ\",\n  \"ゆせん\",\n  \"ゆそう\",\n  \"ゆたか\",\n  \"ゆちゃく\",\n  \"ゆでる\",\n  \"ゆにゅう\",\n  \"ゆびわ\",\n  \"ゆらい\",\n  \"ゆれる\",\n  \"ようい\",\n  \"ようか\",\n  \"ようきゅう\",\n  \"ようじ\",\n  \"ようす\",\n  \"ようちえん\",\n  \"よかぜ\",\n  \"よかん\",\n  \"よきん\",\n  \"よくせい\",\n  \"よくぼう\",\n  \"よけい\",\n  \"よごれる\",\n  \"よさん\",\n  \"よしゅう\",\n  \"よそう\",\n  \"よそく\",\n  \"よっか\",\n  \"よてい\",\n  \"よどがわく\",\n  \"よねつ\",\n  \"よやく\",\n  \"よゆう\",\n  \"よろこぶ\",\n  \"よろしい\",\n  \"らいう\",\n  \"らくがき\",\n  \"らくご\",\n  \"らくさつ\",\n  \"らくだ\",\n  \"らしんばん\",\n  \"らせん\",\n  \"らぞく\",\n  \"らたい\",\n  \"らっか\",\n  \"られつ\",\n  \"りえき\",\n  \"りかい\",\n  \"りきさく\",\n  \"りきせつ\",\n  \"りくぐん\",\n  \"りくつ\",\n  \"りけん\",\n  \"りこう\",\n  \"りせい\",\n  \"りそう\",\n  \"りそく\",\n  \"りてん\",\n  \"りねん\",\n  \"りゆう\",\n  \"りゅうがく\",\n  \"りよう\",\n  \"りょうり\",\n  \"りょかん\",\n  \"りょくちゃ\",\n  \"りょこう\",\n  \"りりく\",\n  \"りれき\",\n  \"りろん\",\n  \"りんご\",\n  \"るいけい\",\n  \"るいさい\",\n  \"るいじ\",\n  \"るいせき\",\n  \"るすばん\",\n  \"るりがわら\",\n  \"れいかん\",\n  \"れいぎ\",\n  \"れいせい\",\n  \"れいぞうこ\",\n  \"れいとう\",\n  \"れいぼう\",\n  \"れきし\",\n  \"れきだい\",\n  \"れんあい\",\n  \"れんけい\",\n  \"れんこん\",\n  \"れんさい\",\n  \"れんしゅう\",\n  \"れんぞく\",\n  \"れんらく\",\n  \"ろうか\",\n  \"ろうご\",\n  \"ろうじん\",\n  \"ろうそく\",\n  \"ろくが\",\n  \"ろこつ\",\n  \"ろじうら\",\n  \"ろしゅつ\",\n  \"ろせん\",\n  \"ろてん\",\n  \"ろめん\",\n  \"ろれつ\",\n  \"ろんぎ\",\n  \"ろんぱ\",\n  \"ろんぶん\",\n  \"ろんり\",\n  \"わかす\",\n  \"わかめ\",\n  \"わかやま\",\n  \"わかれる\",\n  \"わしつ\",\n  \"わじまし\",\n  \"わすれもの\",\n  \"わらう\",\n  \"われる\"\n], Uh = [\n  \"abacate\",\n  \"abaixo\",\n  \"abalar\",\n  \"abater\",\n  \"abduzir\",\n  \"abelha\",\n  \"aberto\",\n  \"abismo\",\n  \"abotoar\",\n  \"abranger\",\n  \"abreviar\",\n  \"abrigar\",\n  \"abrupto\",\n  \"absinto\",\n  \"absoluto\",\n  \"absurdo\",\n  \"abutre\",\n  \"acabado\",\n  \"acalmar\",\n  \"acampar\",\n  \"acanhar\",\n  \"acaso\",\n  \"aceitar\",\n  \"acelerar\",\n  \"acenar\",\n  \"acervo\",\n  \"acessar\",\n  \"acetona\",\n  \"achatar\",\n  \"acidez\",\n  \"acima\",\n  \"acionado\",\n  \"acirrar\",\n  \"aclamar\",\n  \"aclive\",\n  \"acolhida\",\n  \"acomodar\",\n  \"acoplar\",\n  \"acordar\",\n  \"acumular\",\n  \"acusador\",\n  \"adaptar\",\n  \"adega\",\n  \"adentro\",\n  \"adepto\",\n  \"adequar\",\n  \"aderente\",\n  \"adesivo\",\n  \"adeus\",\n  \"adiante\",\n  \"aditivo\",\n  \"adjetivo\",\n  \"adjunto\",\n  \"admirar\",\n  \"adorar\",\n  \"adquirir\",\n  \"adubo\",\n  \"adverso\",\n  \"advogado\",\n  \"aeronave\",\n  \"afastar\",\n  \"aferir\",\n  \"afetivo\",\n  \"afinador\",\n  \"afivelar\",\n  \"aflito\",\n  \"afluente\",\n  \"afrontar\",\n  \"agachar\",\n  \"agarrar\",\n  \"agasalho\",\n  \"agenciar\",\n  \"agilizar\",\n  \"agiota\",\n  \"agitado\",\n  \"agora\",\n  \"agradar\",\n  \"agreste\",\n  \"agrupar\",\n  \"aguardar\",\n  \"agulha\",\n  \"ajoelhar\",\n  \"ajudar\",\n  \"ajustar\",\n  \"alameda\",\n  \"alarme\",\n  \"alastrar\",\n  \"alavanca\",\n  \"albergue\",\n  \"albino\",\n  \"alcatra\",\n  \"aldeia\",\n  \"alecrim\",\n  \"alegria\",\n  \"alertar\",\n  \"alface\",\n  \"alfinete\",\n  \"algum\",\n  \"alheio\",\n  \"aliar\",\n  \"alicate\",\n  \"alienar\",\n  \"alinhar\",\n  \"aliviar\",\n  \"almofada\",\n  \"alocar\",\n  \"alpiste\",\n  \"alterar\",\n  \"altitude\",\n  \"alucinar\",\n  \"alugar\",\n  \"aluno\",\n  \"alusivo\",\n  \"alvo\",\n  \"amaciar\",\n  \"amador\",\n  \"amarelo\",\n  \"amassar\",\n  \"ambas\",\n  \"ambiente\",\n  \"ameixa\",\n  \"amenizar\",\n  \"amido\",\n  \"amistoso\",\n  \"amizade\",\n  \"amolador\",\n  \"amontoar\",\n  \"amoroso\",\n  \"amostra\",\n  \"amparar\",\n  \"ampliar\",\n  \"ampola\",\n  \"anagrama\",\n  \"analisar\",\n  \"anarquia\",\n  \"anatomia\",\n  \"andaime\",\n  \"anel\",\n  \"anexo\",\n  \"angular\",\n  \"animar\",\n  \"anjo\",\n  \"anomalia\",\n  \"anotado\",\n  \"ansioso\",\n  \"anterior\",\n  \"anuidade\",\n  \"anunciar\",\n  \"anzol\",\n  \"apagador\",\n  \"apalpar\",\n  \"apanhado\",\n  \"apego\",\n  \"apelido\",\n  \"apertada\",\n  \"apesar\",\n  \"apetite\",\n  \"apito\",\n  \"aplauso\",\n  \"aplicada\",\n  \"apoio\",\n  \"apontar\",\n  \"aposta\",\n  \"aprendiz\",\n  \"aprovar\",\n  \"aquecer\",\n  \"arame\",\n  \"aranha\",\n  \"arara\",\n  \"arcada\",\n  \"ardente\",\n  \"areia\",\n  \"arejar\",\n  \"arenito\",\n  \"aresta\",\n  \"argiloso\",\n  \"argola\",\n  \"arma\",\n  \"arquivo\",\n  \"arraial\",\n  \"arrebate\",\n  \"arriscar\",\n  \"arroba\",\n  \"arrumar\",\n  \"arsenal\",\n  \"arterial\",\n  \"artigo\",\n  \"arvoredo\",\n  \"asfaltar\",\n  \"asilado\",\n  \"aspirar\",\n  \"assador\",\n  \"assinar\",\n  \"assoalho\",\n  \"assunto\",\n  \"astral\",\n  \"atacado\",\n  \"atadura\",\n  \"atalho\",\n  \"atarefar\",\n  \"atear\",\n  \"atender\",\n  \"aterro\",\n  \"ateu\",\n  \"atingir\",\n  \"atirador\",\n  \"ativo\",\n  \"atoleiro\",\n  \"atracar\",\n  \"atrevido\",\n  \"atriz\",\n  \"atual\",\n  \"atum\",\n  \"auditor\",\n  \"aumentar\",\n  \"aura\",\n  \"aurora\",\n  \"autismo\",\n  \"autoria\",\n  \"autuar\",\n  \"avaliar\",\n  \"avante\",\n  \"avaria\",\n  \"avental\",\n  \"avesso\",\n  \"aviador\",\n  \"avisar\",\n  \"avulso\",\n  \"axila\",\n  \"azarar\",\n  \"azedo\",\n  \"azeite\",\n  \"azulejo\",\n  \"babar\",\n  \"babosa\",\n  \"bacalhau\",\n  \"bacharel\",\n  \"bacia\",\n  \"bagagem\",\n  \"baiano\",\n  \"bailar\",\n  \"baioneta\",\n  \"bairro\",\n  \"baixista\",\n  \"bajular\",\n  \"baleia\",\n  \"baliza\",\n  \"balsa\",\n  \"banal\",\n  \"bandeira\",\n  \"banho\",\n  \"banir\",\n  \"banquete\",\n  \"barato\",\n  \"barbado\",\n  \"baronesa\",\n  \"barraca\",\n  \"barulho\",\n  \"baseado\",\n  \"bastante\",\n  \"batata\",\n  \"batedor\",\n  \"batida\",\n  \"batom\",\n  \"batucar\",\n  \"baunilha\",\n  \"beber\",\n  \"beijo\",\n  \"beirada\",\n  \"beisebol\",\n  \"beldade\",\n  \"beleza\",\n  \"belga\",\n  \"beliscar\",\n  \"bendito\",\n  \"bengala\",\n  \"benzer\",\n  \"berimbau\",\n  \"berlinda\",\n  \"berro\",\n  \"besouro\",\n  \"bexiga\",\n  \"bezerro\",\n  \"bico\",\n  \"bicudo\",\n  \"bienal\",\n  \"bifocal\",\n  \"bifurcar\",\n  \"bigorna\",\n  \"bilhete\",\n  \"bimestre\",\n  \"bimotor\",\n  \"biologia\",\n  \"biombo\",\n  \"biosfera\",\n  \"bipolar\",\n  \"birrento\",\n  \"biscoito\",\n  \"bisneto\",\n  \"bispo\",\n  \"bissexto\",\n  \"bitola\",\n  \"bizarro\",\n  \"blindado\",\n  \"bloco\",\n  \"bloquear\",\n  \"boato\",\n  \"bobagem\",\n  \"bocado\",\n  \"bocejo\",\n  \"bochecha\",\n  \"boicotar\",\n  \"bolada\",\n  \"boletim\",\n  \"bolha\",\n  \"bolo\",\n  \"bombeiro\",\n  \"bonde\",\n  \"boneco\",\n  \"bonita\",\n  \"borbulha\",\n  \"borda\",\n  \"boreal\",\n  \"borracha\",\n  \"bovino\",\n  \"boxeador\",\n  \"branco\",\n  \"brasa\",\n  \"braveza\",\n  \"breu\",\n  \"briga\",\n  \"brilho\",\n  \"brincar\",\n  \"broa\",\n  \"brochura\",\n  \"bronzear\",\n  \"broto\",\n  \"bruxo\",\n  \"bucha\",\n  \"budismo\",\n  \"bufar\",\n  \"bule\",\n  \"buraco\",\n  \"busca\",\n  \"busto\",\n  \"buzina\",\n  \"cabana\",\n  \"cabelo\",\n  \"cabide\",\n  \"cabo\",\n  \"cabrito\",\n  \"cacau\",\n  \"cacetada\",\n  \"cachorro\",\n  \"cacique\",\n  \"cadastro\",\n  \"cadeado\",\n  \"cafezal\",\n  \"caiaque\",\n  \"caipira\",\n  \"caixote\",\n  \"cajado\",\n  \"caju\",\n  \"calafrio\",\n  \"calcular\",\n  \"caldeira\",\n  \"calibrar\",\n  \"calmante\",\n  \"calota\",\n  \"camada\",\n  \"cambista\",\n  \"camisa\",\n  \"camomila\",\n  \"campanha\",\n  \"camuflar\",\n  \"canavial\",\n  \"cancelar\",\n  \"caneta\",\n  \"canguru\",\n  \"canhoto\",\n  \"canivete\",\n  \"canoa\",\n  \"cansado\",\n  \"cantar\",\n  \"canudo\",\n  \"capacho\",\n  \"capela\",\n  \"capinar\",\n  \"capotar\",\n  \"capricho\",\n  \"captador\",\n  \"capuz\",\n  \"caracol\",\n  \"carbono\",\n  \"cardeal\",\n  \"careca\",\n  \"carimbar\",\n  \"carneiro\",\n  \"carpete\",\n  \"carreira\",\n  \"cartaz\",\n  \"carvalho\",\n  \"casaco\",\n  \"casca\",\n  \"casebre\",\n  \"castelo\",\n  \"casulo\",\n  \"catarata\",\n  \"cativar\",\n  \"caule\",\n  \"causador\",\n  \"cautelar\",\n  \"cavalo\",\n  \"caverna\",\n  \"cebola\",\n  \"cedilha\",\n  \"cegonha\",\n  \"celebrar\",\n  \"celular\",\n  \"cenoura\",\n  \"censo\",\n  \"centeio\",\n  \"cercar\",\n  \"cerrado\",\n  \"certeiro\",\n  \"cerveja\",\n  \"cetim\",\n  \"cevada\",\n  \"chacota\",\n  \"chaleira\",\n  \"chamado\",\n  \"chapada\",\n  \"charme\",\n  \"chatice\",\n  \"chave\",\n  \"chefe\",\n  \"chegada\",\n  \"cheiro\",\n  \"cheque\",\n  \"chicote\",\n  \"chifre\",\n  \"chinelo\",\n  \"chocalho\",\n  \"chover\",\n  \"chumbo\",\n  \"chutar\",\n  \"chuva\",\n  \"cicatriz\",\n  \"ciclone\",\n  \"cidade\",\n  \"cidreira\",\n  \"ciente\",\n  \"cigana\",\n  \"cimento\",\n  \"cinto\",\n  \"cinza\",\n  \"ciranda\",\n  \"circuito\",\n  \"cirurgia\",\n  \"citar\",\n  \"clareza\",\n  \"clero\",\n  \"clicar\",\n  \"clone\",\n  \"clube\",\n  \"coado\",\n  \"coagir\",\n  \"cobaia\",\n  \"cobertor\",\n  \"cobrar\",\n  \"cocada\",\n  \"coelho\",\n  \"coentro\",\n  \"coeso\",\n  \"cogumelo\",\n  \"coibir\",\n  \"coifa\",\n  \"coiote\",\n  \"colar\",\n  \"coleira\",\n  \"colher\",\n  \"colidir\",\n  \"colmeia\",\n  \"colono\",\n  \"coluna\",\n  \"comando\",\n  \"combinar\",\n  \"comentar\",\n  \"comitiva\",\n  \"comover\",\n  \"complexo\",\n  \"comum\",\n  \"concha\",\n  \"condor\",\n  \"conectar\",\n  \"confuso\",\n  \"congelar\",\n  \"conhecer\",\n  \"conjugar\",\n  \"consumir\",\n  \"contrato\",\n  \"convite\",\n  \"cooperar\",\n  \"copeiro\",\n  \"copiador\",\n  \"copo\",\n  \"coquetel\",\n  \"coragem\",\n  \"cordial\",\n  \"corneta\",\n  \"coronha\",\n  \"corporal\",\n  \"correio\",\n  \"cortejo\",\n  \"coruja\",\n  \"corvo\",\n  \"cosseno\",\n  \"costela\",\n  \"cotonete\",\n  \"couro\",\n  \"couve\",\n  \"covil\",\n  \"cozinha\",\n  \"cratera\",\n  \"cravo\",\n  \"creche\",\n  \"credor\",\n  \"creme\",\n  \"crer\",\n  \"crespo\",\n  \"criada\",\n  \"criminal\",\n  \"crioulo\",\n  \"crise\",\n  \"criticar\",\n  \"crosta\",\n  \"crua\",\n  \"cruzeiro\",\n  \"cubano\",\n  \"cueca\",\n  \"cuidado\",\n  \"cujo\",\n  \"culatra\",\n  \"culminar\",\n  \"culpar\",\n  \"cultura\",\n  \"cumprir\",\n  \"cunhado\",\n  \"cupido\",\n  \"curativo\",\n  \"curral\",\n  \"cursar\",\n  \"curto\",\n  \"cuspir\",\n  \"custear\",\n  \"cutelo\",\n  \"damasco\",\n  \"datar\",\n  \"debater\",\n  \"debitar\",\n  \"deboche\",\n  \"debulhar\",\n  \"decalque\",\n  \"decimal\",\n  \"declive\",\n  \"decote\",\n  \"decretar\",\n  \"dedal\",\n  \"dedicado\",\n  \"deduzir\",\n  \"defesa\",\n  \"defumar\",\n  \"degelo\",\n  \"degrau\",\n  \"degustar\",\n  \"deitado\",\n  \"deixar\",\n  \"delator\",\n  \"delegado\",\n  \"delinear\",\n  \"delonga\",\n  \"demanda\",\n  \"demitir\",\n  \"demolido\",\n  \"dentista\",\n  \"depenado\",\n  \"depilar\",\n  \"depois\",\n  \"depressa\",\n  \"depurar\",\n  \"deriva\",\n  \"derramar\",\n  \"desafio\",\n  \"desbotar\",\n  \"descanso\",\n  \"desenho\",\n  \"desfiado\",\n  \"desgaste\",\n  \"desigual\",\n  \"deslize\",\n  \"desmamar\",\n  \"desova\",\n  \"despesa\",\n  \"destaque\",\n  \"desviar\",\n  \"detalhar\",\n  \"detentor\",\n  \"detonar\",\n  \"detrito\",\n  \"deusa\",\n  \"dever\",\n  \"devido\",\n  \"devotado\",\n  \"dezena\",\n  \"diagrama\",\n  \"dialeto\",\n  \"didata\",\n  \"difuso\",\n  \"digitar\",\n  \"dilatado\",\n  \"diluente\",\n  \"diminuir\",\n  \"dinastia\",\n  \"dinheiro\",\n  \"diocese\",\n  \"direto\",\n  \"discreta\",\n  \"disfarce\",\n  \"disparo\",\n  \"disquete\",\n  \"dissipar\",\n  \"distante\",\n  \"ditador\",\n  \"diurno\",\n  \"diverso\",\n  \"divisor\",\n  \"divulgar\",\n  \"dizer\",\n  \"dobrador\",\n  \"dolorido\",\n  \"domador\",\n  \"dominado\",\n  \"donativo\",\n  \"donzela\",\n  \"dormente\",\n  \"dorsal\",\n  \"dosagem\",\n  \"dourado\",\n  \"doutor\",\n  \"drenagem\",\n  \"drible\",\n  \"drogaria\",\n  \"duelar\",\n  \"duende\",\n  \"dueto\",\n  \"duplo\",\n  \"duquesa\",\n  \"durante\",\n  \"duvidoso\",\n  \"eclodir\",\n  \"ecoar\",\n  \"ecologia\",\n  \"edificar\",\n  \"edital\",\n  \"educado\",\n  \"efeito\",\n  \"efetivar\",\n  \"ejetar\",\n  \"elaborar\",\n  \"eleger\",\n  \"eleitor\",\n  \"elenco\",\n  \"elevador\",\n  \"eliminar\",\n  \"elogiar\",\n  \"embargo\",\n  \"embolado\",\n  \"embrulho\",\n  \"embutido\",\n  \"emenda\",\n  \"emergir\",\n  \"emissor\",\n  \"empatia\",\n  \"empenho\",\n  \"empinado\",\n  \"empolgar\",\n  \"emprego\",\n  \"empurrar\",\n  \"emulador\",\n  \"encaixe\",\n  \"encenado\",\n  \"enchente\",\n  \"encontro\",\n  \"endeusar\",\n  \"endossar\",\n  \"enfaixar\",\n  \"enfeite\",\n  \"enfim\",\n  \"engajado\",\n  \"engenho\",\n  \"englobar\",\n  \"engomado\",\n  \"engraxar\",\n  \"enguia\",\n  \"enjoar\",\n  \"enlatar\",\n  \"enquanto\",\n  \"enraizar\",\n  \"enrolado\",\n  \"enrugar\",\n  \"ensaio\",\n  \"enseada\",\n  \"ensino\",\n  \"ensopado\",\n  \"entanto\",\n  \"enteado\",\n  \"entidade\",\n  \"entortar\",\n  \"entrada\",\n  \"entulho\",\n  \"envergar\",\n  \"enviado\",\n  \"envolver\",\n  \"enxame\",\n  \"enxerto\",\n  \"enxofre\",\n  \"enxuto\",\n  \"epiderme\",\n  \"equipar\",\n  \"ereto\",\n  \"erguido\",\n  \"errata\",\n  \"erva\",\n  \"ervilha\",\n  \"esbanjar\",\n  \"esbelto\",\n  \"escama\",\n  \"escola\",\n  \"escrita\",\n  \"escuta\",\n  \"esfinge\",\n  \"esfolar\",\n  \"esfregar\",\n  \"esfumado\",\n  \"esgrima\",\n  \"esmalte\",\n  \"espanto\",\n  \"espelho\",\n  \"espiga\",\n  \"esponja\",\n  \"espreita\",\n  \"espumar\",\n  \"esquerda\",\n  \"estaca\",\n  \"esteira\",\n  \"esticar\",\n  \"estofado\",\n  \"estrela\",\n  \"estudo\",\n  \"esvaziar\",\n  \"etanol\",\n  \"etiqueta\",\n  \"euforia\",\n  \"europeu\",\n  \"evacuar\",\n  \"evaporar\",\n  \"evasivo\",\n  \"eventual\",\n  \"evidente\",\n  \"evoluir\",\n  \"exagero\",\n  \"exalar\",\n  \"examinar\",\n  \"exato\",\n  \"exausto\",\n  \"excesso\",\n  \"excitar\",\n  \"exclamar\",\n  \"executar\",\n  \"exemplo\",\n  \"exibir\",\n  \"exigente\",\n  \"exonerar\",\n  \"expandir\",\n  \"expelir\",\n  \"expirar\",\n  \"explanar\",\n  \"exposto\",\n  \"expresso\",\n  \"expulsar\",\n  \"externo\",\n  \"extinto\",\n  \"extrato\",\n  \"fabricar\",\n  \"fabuloso\",\n  \"faceta\",\n  \"facial\",\n  \"fada\",\n  \"fadiga\",\n  \"faixa\",\n  \"falar\",\n  \"falta\",\n  \"familiar\",\n  \"fandango\",\n  \"fanfarra\",\n  \"fantoche\",\n  \"fardado\",\n  \"farelo\",\n  \"farinha\",\n  \"farofa\",\n  \"farpa\",\n  \"fartura\",\n  \"fatia\",\n  \"fator\",\n  \"favorita\",\n  \"faxina\",\n  \"fazenda\",\n  \"fechado\",\n  \"feijoada\",\n  \"feirante\",\n  \"felino\",\n  \"feminino\",\n  \"fenda\",\n  \"feno\",\n  \"fera\",\n  \"feriado\",\n  \"ferrugem\",\n  \"ferver\",\n  \"festejar\",\n  \"fetal\",\n  \"feudal\",\n  \"fiapo\",\n  \"fibrose\",\n  \"ficar\",\n  \"ficheiro\",\n  \"figurado\",\n  \"fileira\",\n  \"filho\",\n  \"filme\",\n  \"filtrar\",\n  \"firmeza\",\n  \"fisgada\",\n  \"fissura\",\n  \"fita\",\n  \"fivela\",\n  \"fixador\",\n  \"fixo\",\n  \"flacidez\",\n  \"flamingo\",\n  \"flanela\",\n  \"flechada\",\n  \"flora\",\n  \"flutuar\",\n  \"fluxo\",\n  \"focal\",\n  \"focinho\",\n  \"fofocar\",\n  \"fogo\",\n  \"foguete\",\n  \"foice\",\n  \"folgado\",\n  \"folheto\",\n  \"forjar\",\n  \"formiga\",\n  \"forno\",\n  \"forte\",\n  \"fosco\",\n  \"fossa\",\n  \"fragata\",\n  \"fralda\",\n  \"frango\",\n  \"frasco\",\n  \"fraterno\",\n  \"freira\",\n  \"frente\",\n  \"fretar\",\n  \"frieza\",\n  \"friso\",\n  \"fritura\",\n  \"fronha\",\n  \"frustrar\",\n  \"fruteira\",\n  \"fugir\",\n  \"fulano\",\n  \"fuligem\",\n  \"fundar\",\n  \"fungo\",\n  \"funil\",\n  \"furador\",\n  \"furioso\",\n  \"futebol\",\n  \"gabarito\",\n  \"gabinete\",\n  \"gado\",\n  \"gaiato\",\n  \"gaiola\",\n  \"gaivota\",\n  \"galega\",\n  \"galho\",\n  \"galinha\",\n  \"galocha\",\n  \"ganhar\",\n  \"garagem\",\n  \"garfo\",\n  \"gargalo\",\n  \"garimpo\",\n  \"garoupa\",\n  \"garrafa\",\n  \"gasoduto\",\n  \"gasto\",\n  \"gata\",\n  \"gatilho\",\n  \"gaveta\",\n  \"gazela\",\n  \"gelado\",\n  \"geleia\",\n  \"gelo\",\n  \"gemada\",\n  \"gemer\",\n  \"gemido\",\n  \"generoso\",\n  \"gengiva\",\n  \"genial\",\n  \"genoma\",\n  \"genro\",\n  \"geologia\",\n  \"gerador\",\n  \"germinar\",\n  \"gesso\",\n  \"gestor\",\n  \"ginasta\",\n  \"gincana\",\n  \"gingado\",\n  \"girafa\",\n  \"girino\",\n  \"glacial\",\n  \"glicose\",\n  \"global\",\n  \"glorioso\",\n  \"goela\",\n  \"goiaba\",\n  \"golfe\",\n  \"golpear\",\n  \"gordura\",\n  \"gorjeta\",\n  \"gorro\",\n  \"gostoso\",\n  \"goteira\",\n  \"governar\",\n  \"gracejo\",\n  \"gradual\",\n  \"grafite\",\n  \"gralha\",\n  \"grampo\",\n  \"granada\",\n  \"gratuito\",\n  \"graveto\",\n  \"graxa\",\n  \"grego\",\n  \"grelhar\",\n  \"greve\",\n  \"grilo\",\n  \"grisalho\",\n  \"gritaria\",\n  \"grosso\",\n  \"grotesco\",\n  \"grudado\",\n  \"grunhido\",\n  \"gruta\",\n  \"guache\",\n  \"guarani\",\n  \"guaxinim\",\n  \"guerrear\",\n  \"guiar\",\n  \"guincho\",\n  \"guisado\",\n  \"gula\",\n  \"guloso\",\n  \"guru\",\n  \"habitar\",\n  \"harmonia\",\n  \"haste\",\n  \"haver\",\n  \"hectare\",\n  \"herdar\",\n  \"heresia\",\n  \"hesitar\",\n  \"hiato\",\n  \"hibernar\",\n  \"hidratar\",\n  \"hiena\",\n  \"hino\",\n  \"hipismo\",\n  \"hipnose\",\n  \"hipoteca\",\n  \"hoje\",\n  \"holofote\",\n  \"homem\",\n  \"honesto\",\n  \"honrado\",\n  \"hormonal\",\n  \"hospedar\",\n  \"humorado\",\n  \"iate\",\n  \"ideia\",\n  \"idoso\",\n  \"ignorado\",\n  \"igreja\",\n  \"iguana\",\n  \"ileso\",\n  \"ilha\",\n  \"iludido\",\n  \"iluminar\",\n  \"ilustrar\",\n  \"imagem\",\n  \"imediato\",\n  \"imenso\",\n  \"imersivo\",\n  \"iminente\",\n  \"imitador\",\n  \"imortal\",\n  \"impacto\",\n  \"impedir\",\n  \"implante\",\n  \"impor\",\n  \"imprensa\",\n  \"impune\",\n  \"imunizar\",\n  \"inalador\",\n  \"inapto\",\n  \"inativo\",\n  \"incenso\",\n  \"inchar\",\n  \"incidir\",\n  \"incluir\",\n  \"incolor\",\n  \"indeciso\",\n  \"indireto\",\n  \"indutor\",\n  \"ineficaz\",\n  \"inerente\",\n  \"infantil\",\n  \"infestar\",\n  \"infinito\",\n  \"inflamar\",\n  \"informal\",\n  \"infrator\",\n  \"ingerir\",\n  \"inibido\",\n  \"inicial\",\n  \"inimigo\",\n  \"injetar\",\n  \"inocente\",\n  \"inodoro\",\n  \"inovador\",\n  \"inox\",\n  \"inquieto\",\n  \"inscrito\",\n  \"inseto\",\n  \"insistir\",\n  \"inspetor\",\n  \"instalar\",\n  \"insulto\",\n  \"intacto\",\n  \"integral\",\n  \"intimar\",\n  \"intocado\",\n  \"intriga\",\n  \"invasor\",\n  \"inverno\",\n  \"invicto\",\n  \"invocar\",\n  \"iogurte\",\n  \"iraniano\",\n  \"ironizar\",\n  \"irreal\",\n  \"irritado\",\n  \"isca\",\n  \"isento\",\n  \"isolado\",\n  \"isqueiro\",\n  \"italiano\",\n  \"janeiro\",\n  \"jangada\",\n  \"janta\",\n  \"jararaca\",\n  \"jardim\",\n  \"jarro\",\n  \"jasmim\",\n  \"jato\",\n  \"javali\",\n  \"jazida\",\n  \"jejum\",\n  \"joaninha\",\n  \"joelhada\",\n  \"jogador\",\n  \"joia\",\n  \"jornal\",\n  \"jorrar\",\n  \"jovem\",\n  \"juba\",\n  \"judeu\",\n  \"judoca\",\n  \"juiz\",\n  \"julgador\",\n  \"julho\",\n  \"jurado\",\n  \"jurista\",\n  \"juro\",\n  \"justa\",\n  \"labareda\",\n  \"laboral\",\n  \"lacre\",\n  \"lactante\",\n  \"ladrilho\",\n  \"lagarta\",\n  \"lagoa\",\n  \"laje\",\n  \"lamber\",\n  \"lamentar\",\n  \"laminar\",\n  \"lampejo\",\n  \"lanche\",\n  \"lapidar\",\n  \"lapso\",\n  \"laranja\",\n  \"lareira\",\n  \"largura\",\n  \"lasanha\",\n  \"lastro\",\n  \"lateral\",\n  \"latido\",\n  \"lavanda\",\n  \"lavoura\",\n  \"lavrador\",\n  \"laxante\",\n  \"lazer\",\n  \"lealdade\",\n  \"lebre\",\n  \"legado\",\n  \"legendar\",\n  \"legista\",\n  \"leigo\",\n  \"leiloar\",\n  \"leitura\",\n  \"lembrete\",\n  \"leme\",\n  \"lenhador\",\n  \"lentilha\",\n  \"leoa\",\n  \"lesma\",\n  \"leste\",\n  \"letivo\",\n  \"letreiro\",\n  \"levar\",\n  \"leveza\",\n  \"levitar\",\n  \"liberal\",\n  \"libido\",\n  \"liderar\",\n  \"ligar\",\n  \"ligeiro\",\n  \"limitar\",\n  \"limoeiro\",\n  \"limpador\",\n  \"linda\",\n  \"linear\",\n  \"linhagem\",\n  \"liquidez\",\n  \"listagem\",\n  \"lisura\",\n  \"litoral\",\n  \"livro\",\n  \"lixa\",\n  \"lixeira\",\n  \"locador\",\n  \"locutor\",\n  \"lojista\",\n  \"lombo\",\n  \"lona\",\n  \"longe\",\n  \"lontra\",\n  \"lorde\",\n  \"lotado\",\n  \"loteria\",\n  \"loucura\",\n  \"lousa\",\n  \"louvar\",\n  \"luar\",\n  \"lucidez\",\n  \"lucro\",\n  \"luneta\",\n  \"lustre\",\n  \"lutador\",\n  \"luva\",\n  \"macaco\",\n  \"macete\",\n  \"machado\",\n  \"macio\",\n  \"madeira\",\n  \"madrinha\",\n  \"magnata\",\n  \"magreza\",\n  \"maior\",\n  \"mais\",\n  \"malandro\",\n  \"malha\",\n  \"malote\",\n  \"maluco\",\n  \"mamilo\",\n  \"mamoeiro\",\n  \"mamute\",\n  \"manada\",\n  \"mancha\",\n  \"mandato\",\n  \"manequim\",\n  \"manhoso\",\n  \"manivela\",\n  \"manobrar\",\n  \"mansa\",\n  \"manter\",\n  \"manusear\",\n  \"mapeado\",\n  \"maquinar\",\n  \"marcador\",\n  \"maresia\",\n  \"marfim\",\n  \"margem\",\n  \"marinho\",\n  \"marmita\",\n  \"maroto\",\n  \"marquise\",\n  \"marreco\",\n  \"martelo\",\n  \"marujo\",\n  \"mascote\",\n  \"masmorra\",\n  \"massagem\",\n  \"mastigar\",\n  \"matagal\",\n  \"materno\",\n  \"matinal\",\n  \"matutar\",\n  \"maxilar\",\n  \"medalha\",\n  \"medida\",\n  \"medusa\",\n  \"megafone\",\n  \"meiga\",\n  \"melancia\",\n  \"melhor\",\n  \"membro\",\n  \"memorial\",\n  \"menino\",\n  \"menos\",\n  \"mensagem\",\n  \"mental\",\n  \"merecer\",\n  \"mergulho\",\n  \"mesada\",\n  \"mesclar\",\n  \"mesmo\",\n  \"mesquita\",\n  \"mestre\",\n  \"metade\",\n  \"meteoro\",\n  \"metragem\",\n  \"mexer\",\n  \"mexicano\",\n  \"micro\",\n  \"migalha\",\n  \"migrar\",\n  \"milagre\",\n  \"milenar\",\n  \"milhar\",\n  \"mimado\",\n  \"minerar\",\n  \"minhoca\",\n  \"ministro\",\n  \"minoria\",\n  \"miolo\",\n  \"mirante\",\n  \"mirtilo\",\n  \"misturar\",\n  \"mocidade\",\n  \"moderno\",\n  \"modular\",\n  \"moeda\",\n  \"moer\",\n  \"moinho\",\n  \"moita\",\n  \"moldura\",\n  \"moleza\",\n  \"molho\",\n  \"molinete\",\n  \"molusco\",\n  \"montanha\",\n  \"moqueca\",\n  \"morango\",\n  \"morcego\",\n  \"mordomo\",\n  \"morena\",\n  \"mosaico\",\n  \"mosquete\",\n  \"mostarda\",\n  \"motel\",\n  \"motim\",\n  \"moto\",\n  \"motriz\",\n  \"muda\",\n  \"muito\",\n  \"mulata\",\n  \"mulher\",\n  \"multar\",\n  \"mundial\",\n  \"munido\",\n  \"muralha\",\n  \"murcho\",\n  \"muscular\",\n  \"museu\",\n  \"musical\",\n  \"nacional\",\n  \"nadador\",\n  \"naja\",\n  \"namoro\",\n  \"narina\",\n  \"narrado\",\n  \"nascer\",\n  \"nativa\",\n  \"natureza\",\n  \"navalha\",\n  \"navegar\",\n  \"navio\",\n  \"neblina\",\n  \"nebuloso\",\n  \"negativa\",\n  \"negociar\",\n  \"negrito\",\n  \"nervoso\",\n  \"neta\",\n  \"neural\",\n  \"nevasca\",\n  \"nevoeiro\",\n  \"ninar\",\n  \"ninho\",\n  \"nitidez\",\n  \"nivelar\",\n  \"nobreza\",\n  \"noite\",\n  \"noiva\",\n  \"nomear\",\n  \"nominal\",\n  \"nordeste\",\n  \"nortear\",\n  \"notar\",\n  \"noticiar\",\n  \"noturno\",\n  \"novelo\",\n  \"novilho\",\n  \"novo\",\n  \"nublado\",\n  \"nudez\",\n  \"numeral\",\n  \"nupcial\",\n  \"nutrir\",\n  \"nuvem\",\n  \"obcecado\",\n  \"obedecer\",\n  \"objetivo\",\n  \"obrigado\",\n  \"obscuro\",\n  \"obstetra\",\n  \"obter\",\n  \"obturar\",\n  \"ocidente\",\n  \"ocioso\",\n  \"ocorrer\",\n  \"oculista\",\n  \"ocupado\",\n  \"ofegante\",\n  \"ofensiva\",\n  \"oferenda\",\n  \"oficina\",\n  \"ofuscado\",\n  \"ogiva\",\n  \"olaria\",\n  \"oleoso\",\n  \"olhar\",\n  \"oliveira\",\n  \"ombro\",\n  \"omelete\",\n  \"omisso\",\n  \"omitir\",\n  \"ondulado\",\n  \"oneroso\",\n  \"ontem\",\n  \"opcional\",\n  \"operador\",\n  \"oponente\",\n  \"oportuno\",\n  \"oposto\",\n  \"orar\",\n  \"orbitar\",\n  \"ordem\",\n  \"ordinal\",\n  \"orfanato\",\n  \"orgasmo\",\n  \"orgulho\",\n  \"oriental\",\n  \"origem\",\n  \"oriundo\",\n  \"orla\",\n  \"ortodoxo\",\n  \"orvalho\",\n  \"oscilar\",\n  \"ossada\",\n  \"osso\",\n  \"ostentar\",\n  \"otimismo\",\n  \"ousadia\",\n  \"outono\",\n  \"outubro\",\n  \"ouvido\",\n  \"ovelha\",\n  \"ovular\",\n  \"oxidar\",\n  \"oxigenar\",\n  \"pacato\",\n  \"paciente\",\n  \"pacote\",\n  \"pactuar\",\n  \"padaria\",\n  \"padrinho\",\n  \"pagar\",\n  \"pagode\",\n  \"painel\",\n  \"pairar\",\n  \"paisagem\",\n  \"palavra\",\n  \"palestra\",\n  \"palheta\",\n  \"palito\",\n  \"palmada\",\n  \"palpitar\",\n  \"pancada\",\n  \"panela\",\n  \"panfleto\",\n  \"panqueca\",\n  \"pantanal\",\n  \"papagaio\",\n  \"papelada\",\n  \"papiro\",\n  \"parafina\",\n  \"parcial\",\n  \"pardal\",\n  \"parede\",\n  \"partida\",\n  \"pasmo\",\n  \"passado\",\n  \"pastel\",\n  \"patamar\",\n  \"patente\",\n  \"patinar\",\n  \"patrono\",\n  \"paulada\",\n  \"pausar\",\n  \"peculiar\",\n  \"pedalar\",\n  \"pedestre\",\n  \"pediatra\",\n  \"pedra\",\n  \"pegada\",\n  \"peitoral\",\n  \"peixe\",\n  \"pele\",\n  \"pelicano\",\n  \"penca\",\n  \"pendurar\",\n  \"peneira\",\n  \"penhasco\",\n  \"pensador\",\n  \"pente\",\n  \"perceber\",\n  \"perfeito\",\n  \"pergunta\",\n  \"perito\",\n  \"permitir\",\n  \"perna\",\n  \"perplexo\",\n  \"persiana\",\n  \"pertence\",\n  \"peruca\",\n  \"pescado\",\n  \"pesquisa\",\n  \"pessoa\",\n  \"petiscar\",\n  \"piada\",\n  \"picado\",\n  \"piedade\",\n  \"pigmento\",\n  \"pilastra\",\n  \"pilhado\",\n  \"pilotar\",\n  \"pimenta\",\n  \"pincel\",\n  \"pinguim\",\n  \"pinha\",\n  \"pinote\",\n  \"pintar\",\n  \"pioneiro\",\n  \"pipoca\",\n  \"piquete\",\n  \"piranha\",\n  \"pires\",\n  \"pirueta\",\n  \"piscar\",\n  \"pistola\",\n  \"pitanga\",\n  \"pivete\",\n  \"planta\",\n  \"plaqueta\",\n  \"platina\",\n  \"plebeu\",\n  \"plumagem\",\n  \"pluvial\",\n  \"pneu\",\n  \"poda\",\n  \"poeira\",\n  \"poetisa\",\n  \"polegada\",\n  \"policiar\",\n  \"poluente\",\n  \"polvilho\",\n  \"pomar\",\n  \"pomba\",\n  \"ponderar\",\n  \"pontaria\",\n  \"populoso\",\n  \"porta\",\n  \"possuir\",\n  \"postal\",\n  \"pote\",\n  \"poupar\",\n  \"pouso\",\n  \"povoar\",\n  \"praia\",\n  \"prancha\",\n  \"prato\",\n  \"praxe\",\n  \"prece\",\n  \"predador\",\n  \"prefeito\",\n  \"premiar\",\n  \"prensar\",\n  \"preparar\",\n  \"presilha\",\n  \"pretexto\",\n  \"prevenir\",\n  \"prezar\",\n  \"primata\",\n  \"princesa\",\n  \"prisma\",\n  \"privado\",\n  \"processo\",\n  \"produto\",\n  \"profeta\",\n  \"proibido\",\n  \"projeto\",\n  \"prometer\",\n  \"propagar\",\n  \"prosa\",\n  \"protetor\",\n  \"provador\",\n  \"publicar\",\n  \"pudim\",\n  \"pular\",\n  \"pulmonar\",\n  \"pulseira\",\n  \"punhal\",\n  \"punir\",\n  \"pupilo\",\n  \"pureza\",\n  \"puxador\",\n  \"quadra\",\n  \"quantia\",\n  \"quarto\",\n  \"quase\",\n  \"quebrar\",\n  \"queda\",\n  \"queijo\",\n  \"quente\",\n  \"querido\",\n  \"quimono\",\n  \"quina\",\n  \"quiosque\",\n  \"rabanada\",\n  \"rabisco\",\n  \"rachar\",\n  \"racionar\",\n  \"radial\",\n  \"raiar\",\n  \"rainha\",\n  \"raio\",\n  \"raiva\",\n  \"rajada\",\n  \"ralado\",\n  \"ramal\",\n  \"ranger\",\n  \"ranhura\",\n  \"rapadura\",\n  \"rapel\",\n  \"rapidez\",\n  \"raposa\",\n  \"raquete\",\n  \"raridade\",\n  \"rasante\",\n  \"rascunho\",\n  \"rasgar\",\n  \"raspador\",\n  \"rasteira\",\n  \"rasurar\",\n  \"ratazana\",\n  \"ratoeira\",\n  \"realeza\",\n  \"reanimar\",\n  \"reaver\",\n  \"rebaixar\",\n  \"rebelde\",\n  \"rebolar\",\n  \"recado\",\n  \"recente\",\n  \"recheio\",\n  \"recibo\",\n  \"recordar\",\n  \"recrutar\",\n  \"recuar\",\n  \"rede\",\n  \"redimir\",\n  \"redonda\",\n  \"reduzida\",\n  \"reenvio\",\n  \"refinar\",\n  \"refletir\",\n  \"refogar\",\n  \"refresco\",\n  \"refugiar\",\n  \"regalia\",\n  \"regime\",\n  \"regra\",\n  \"reinado\",\n  \"reitor\",\n  \"rejeitar\",\n  \"relativo\",\n  \"remador\",\n  \"remendo\",\n  \"remorso\",\n  \"renovado\",\n  \"reparo\",\n  \"repelir\",\n  \"repleto\",\n  \"repolho\",\n  \"represa\",\n  \"repudiar\",\n  \"requerer\",\n  \"resenha\",\n  \"resfriar\",\n  \"resgatar\",\n  \"residir\",\n  \"resolver\",\n  \"respeito\",\n  \"ressaca\",\n  \"restante\",\n  \"resumir\",\n  \"retalho\",\n  \"reter\",\n  \"retirar\",\n  \"retomada\",\n  \"retratar\",\n  \"revelar\",\n  \"revisor\",\n  \"revolta\",\n  \"riacho\",\n  \"rica\",\n  \"rigidez\",\n  \"rigoroso\",\n  \"rimar\",\n  \"ringue\",\n  \"risada\",\n  \"risco\",\n  \"risonho\",\n  \"robalo\",\n  \"rochedo\",\n  \"rodada\",\n  \"rodeio\",\n  \"rodovia\",\n  \"roedor\",\n  \"roleta\",\n  \"romano\",\n  \"roncar\",\n  \"rosado\",\n  \"roseira\",\n  \"rosto\",\n  \"rota\",\n  \"roteiro\",\n  \"rotina\",\n  \"rotular\",\n  \"rouco\",\n  \"roupa\",\n  \"roxo\",\n  \"rubro\",\n  \"rugido\",\n  \"rugoso\",\n  \"ruivo\",\n  \"rumo\",\n  \"rupestre\",\n  \"russo\",\n  \"sabor\",\n  \"saciar\",\n  \"sacola\",\n  \"sacudir\",\n  \"sadio\",\n  \"safira\",\n  \"saga\",\n  \"sagrada\",\n  \"saibro\",\n  \"salada\",\n  \"saleiro\",\n  \"salgado\",\n  \"saliva\",\n  \"salpicar\",\n  \"salsicha\",\n  \"saltar\",\n  \"salvador\",\n  \"sambar\",\n  \"samurai\",\n  \"sanar\",\n  \"sanfona\",\n  \"sangue\",\n  \"sanidade\",\n  \"sapato\",\n  \"sarda\",\n  \"sargento\",\n  \"sarjeta\",\n  \"saturar\",\n  \"saudade\",\n  \"saxofone\",\n  \"sazonal\",\n  \"secar\",\n  \"secular\",\n  \"seda\",\n  \"sedento\",\n  \"sediado\",\n  \"sedoso\",\n  \"sedutor\",\n  \"segmento\",\n  \"segredo\",\n  \"segundo\",\n  \"seiva\",\n  \"seleto\",\n  \"selvagem\",\n  \"semanal\",\n  \"semente\",\n  \"senador\",\n  \"senhor\",\n  \"sensual\",\n  \"sentado\",\n  \"separado\",\n  \"sereia\",\n  \"seringa\",\n  \"serra\",\n  \"servo\",\n  \"setembro\",\n  \"setor\",\n  \"sigilo\",\n  \"silhueta\",\n  \"silicone\",\n  \"simetria\",\n  \"simpatia\",\n  \"simular\",\n  \"sinal\",\n  \"sincero\",\n  \"singular\",\n  \"sinopse\",\n  \"sintonia\",\n  \"sirene\",\n  \"siri\",\n  \"situado\",\n  \"soberano\",\n  \"sobra\",\n  \"socorro\",\n  \"sogro\",\n  \"soja\",\n  \"solda\",\n  \"soletrar\",\n  \"solteiro\",\n  \"sombrio\",\n  \"sonata\",\n  \"sondar\",\n  \"sonegar\",\n  \"sonhador\",\n  \"sono\",\n  \"soprano\",\n  \"soquete\",\n  \"sorrir\",\n  \"sorteio\",\n  \"sossego\",\n  \"sotaque\",\n  \"soterrar\",\n  \"sovado\",\n  \"sozinho\",\n  \"suavizar\",\n  \"subida\",\n  \"submerso\",\n  \"subsolo\",\n  \"subtrair\",\n  \"sucata\",\n  \"sucesso\",\n  \"suco\",\n  \"sudeste\",\n  \"sufixo\",\n  \"sugador\",\n  \"sugerir\",\n  \"sujeito\",\n  \"sulfato\",\n  \"sumir\",\n  \"suor\",\n  \"superior\",\n  \"suplicar\",\n  \"suposto\",\n  \"suprimir\",\n  \"surdina\",\n  \"surfista\",\n  \"surpresa\",\n  \"surreal\",\n  \"surtir\",\n  \"suspiro\",\n  \"sustento\",\n  \"tabela\",\n  \"tablete\",\n  \"tabuada\",\n  \"tacho\",\n  \"tagarela\",\n  \"talher\",\n  \"talo\",\n  \"talvez\",\n  \"tamanho\",\n  \"tamborim\",\n  \"tampa\",\n  \"tangente\",\n  \"tanto\",\n  \"tapar\",\n  \"tapioca\",\n  \"tardio\",\n  \"tarefa\",\n  \"tarja\",\n  \"tarraxa\",\n  \"tatuagem\",\n  \"taurino\",\n  \"taxativo\",\n  \"taxista\",\n  \"teatral\",\n  \"tecer\",\n  \"tecido\",\n  \"teclado\",\n  \"tedioso\",\n  \"teia\",\n  \"teimar\",\n  \"telefone\",\n  \"telhado\",\n  \"tempero\",\n  \"tenente\",\n  \"tensor\",\n  \"tentar\",\n  \"termal\",\n  \"terno\",\n  \"terreno\",\n  \"tese\",\n  \"tesoura\",\n  \"testado\",\n  \"teto\",\n  \"textura\",\n  \"texugo\",\n  \"tiara\",\n  \"tigela\",\n  \"tijolo\",\n  \"timbrar\",\n  \"timidez\",\n  \"tingido\",\n  \"tinteiro\",\n  \"tiragem\",\n  \"titular\",\n  \"toalha\",\n  \"tocha\",\n  \"tolerar\",\n  \"tolice\",\n  \"tomada\",\n  \"tomilho\",\n  \"tonel\",\n  \"tontura\",\n  \"topete\",\n  \"tora\",\n  \"torcido\",\n  \"torneio\",\n  \"torque\",\n  \"torrada\",\n  \"torto\",\n  \"tostar\",\n  \"touca\",\n  \"toupeira\",\n  \"toxina\",\n  \"trabalho\",\n  \"tracejar\",\n  \"tradutor\",\n  \"trafegar\",\n  \"trajeto\",\n  \"trama\",\n  \"trancar\",\n  \"trapo\",\n  \"traseiro\",\n  \"tratador\",\n  \"travar\",\n  \"treino\",\n  \"tremer\",\n  \"trepidar\",\n  \"trevo\",\n  \"triagem\",\n  \"tribo\",\n  \"triciclo\",\n  \"tridente\",\n  \"trilogia\",\n  \"trindade\",\n  \"triplo\",\n  \"triturar\",\n  \"triunfal\",\n  \"trocar\",\n  \"trombeta\",\n  \"trova\",\n  \"trunfo\",\n  \"truque\",\n  \"tubular\",\n  \"tucano\",\n  \"tudo\",\n  \"tulipa\",\n  \"tupi\",\n  \"turbo\",\n  \"turma\",\n  \"turquesa\",\n  \"tutelar\",\n  \"tutorial\",\n  \"uivar\",\n  \"umbigo\",\n  \"unha\",\n  \"unidade\",\n  \"uniforme\",\n  \"urologia\",\n  \"urso\",\n  \"urtiga\",\n  \"urubu\",\n  \"usado\",\n  \"usina\",\n  \"usufruir\",\n  \"vacina\",\n  \"vadiar\",\n  \"vagaroso\",\n  \"vaidoso\",\n  \"vala\",\n  \"valente\",\n  \"validade\",\n  \"valores\",\n  \"vantagem\",\n  \"vaqueiro\",\n  \"varanda\",\n  \"vareta\",\n  \"varrer\",\n  \"vascular\",\n  \"vasilha\",\n  \"vassoura\",\n  \"vazar\",\n  \"vazio\",\n  \"veado\",\n  \"vedar\",\n  \"vegetar\",\n  \"veicular\",\n  \"veleiro\",\n  \"velhice\",\n  \"veludo\",\n  \"vencedor\",\n  \"vendaval\",\n  \"venerar\",\n  \"ventre\",\n  \"verbal\",\n  \"verdade\",\n  \"vereador\",\n  \"vergonha\",\n  \"vermelho\",\n  \"verniz\",\n  \"versar\",\n  \"vertente\",\n  \"vespa\",\n  \"vestido\",\n  \"vetorial\",\n  \"viaduto\",\n  \"viagem\",\n  \"viajar\",\n  \"viatura\",\n  \"vibrador\",\n  \"videira\",\n  \"vidraria\",\n  \"viela\",\n  \"viga\",\n  \"vigente\",\n  \"vigiar\",\n  \"vigorar\",\n  \"vilarejo\",\n  \"vinco\",\n  \"vinheta\",\n  \"vinil\",\n  \"violeta\",\n  \"virada\",\n  \"virtude\",\n  \"visitar\",\n  \"visto\",\n  \"vitral\",\n  \"viveiro\",\n  \"vizinho\",\n  \"voador\",\n  \"voar\",\n  \"vogal\",\n  \"volante\",\n  \"voleibol\",\n  \"voltagem\",\n  \"volumoso\",\n  \"vontade\",\n  \"vulto\",\n  \"vuvuzela\",\n  \"xadrez\",\n  \"xarope\",\n  \"xeque\",\n  \"xeretar\",\n  \"xerife\",\n  \"xingar\",\n  \"zangado\",\n  \"zarpar\",\n  \"zebu\",\n  \"zelador\",\n  \"zombar\",\n  \"zoologia\",\n  \"zumbido\"\n], $h = [\n  \"abandon\",\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"absent\",\n  \"absorb\",\n  \"abstract\",\n  \"absurd\",\n  \"abuse\",\n  \"access\",\n  \"accident\",\n  \"account\",\n  \"accuse\",\n  \"achieve\",\n  \"acid\",\n  \"acoustic\",\n  \"acquire\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"actor\",\n  \"actress\",\n  \"actual\",\n  \"adapt\",\n  \"add\",\n  \"addict\",\n  \"address\",\n  \"adjust\",\n  \"admit\",\n  \"adult\",\n  \"advance\",\n  \"advice\",\n  \"aerobic\",\n  \"affair\",\n  \"afford\",\n  \"afraid\",\n  \"again\",\n  \"age\",\n  \"agent\",\n  \"agree\",\n  \"ahead\",\n  \"aim\",\n  \"air\",\n  \"airport\",\n  \"aisle\",\n  \"alarm\",\n  \"album\",\n  \"alcohol\",\n  \"alert\",\n  \"alien\",\n  \"all\",\n  \"alley\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"alpha\",\n  \"already\",\n  \"also\",\n  \"alter\",\n  \"always\",\n  \"amateur\",\n  \"amazing\",\n  \"among\",\n  \"amount\",\n  \"amused\",\n  \"analyst\",\n  \"anchor\",\n  \"ancient\",\n  \"anger\",\n  \"angle\",\n  \"angry\",\n  \"animal\",\n  \"ankle\",\n  \"announce\",\n  \"annual\",\n  \"another\",\n  \"answer\",\n  \"antenna\",\n  \"antique\",\n  \"anxiety\",\n  \"any\",\n  \"apart\",\n  \"apology\",\n  \"appear\",\n  \"apple\",\n  \"approve\",\n  \"april\",\n  \"arch\",\n  \"arctic\",\n  \"area\",\n  \"arena\",\n  \"argue\",\n  \"arm\",\n  \"armed\",\n  \"armor\",\n  \"army\",\n  \"around\",\n  \"arrange\",\n  \"arrest\",\n  \"arrive\",\n  \"arrow\",\n  \"art\",\n  \"artefact\",\n  \"artist\",\n  \"artwork\",\n  \"ask\",\n  \"aspect\",\n  \"assault\",\n  \"asset\",\n  \"assist\",\n  \"assume\",\n  \"asthma\",\n  \"athlete\",\n  \"atom\",\n  \"attack\",\n  \"attend\",\n  \"attitude\",\n  \"attract\",\n  \"auction\",\n  \"audit\",\n  \"august\",\n  \"aunt\",\n  \"author\",\n  \"auto\",\n  \"autumn\",\n  \"average\",\n  \"avocado\",\n  \"avoid\",\n  \"awake\",\n  \"aware\",\n  \"away\",\n  \"awesome\",\n  \"awful\",\n  \"awkward\",\n  \"axis\",\n  \"baby\",\n  \"bachelor\",\n  \"bacon\",\n  \"badge\",\n  \"bag\",\n  \"balance\",\n  \"balcony\",\n  \"ball\",\n  \"bamboo\",\n  \"banana\",\n  \"banner\",\n  \"bar\",\n  \"barely\",\n  \"bargain\",\n  \"barrel\",\n  \"base\",\n  \"basic\",\n  \"basket\",\n  \"battle\",\n  \"beach\",\n  \"bean\",\n  \"beauty\",\n  \"because\",\n  \"become\",\n  \"beef\",\n  \"before\",\n  \"begin\",\n  \"behave\",\n  \"behind\",\n  \"believe\",\n  \"below\",\n  \"belt\",\n  \"bench\",\n  \"benefit\",\n  \"best\",\n  \"betray\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"bicycle\",\n  \"bid\",\n  \"bike\",\n  \"bind\",\n  \"biology\",\n  \"bird\",\n  \"birth\",\n  \"bitter\",\n  \"black\",\n  \"blade\",\n  \"blame\",\n  \"blanket\",\n  \"blast\",\n  \"bleak\",\n  \"bless\",\n  \"blind\",\n  \"blood\",\n  \"blossom\",\n  \"blouse\",\n  \"blue\",\n  \"blur\",\n  \"blush\",\n  \"board\",\n  \"boat\",\n  \"body\",\n  \"boil\",\n  \"bomb\",\n  \"bone\",\n  \"bonus\",\n  \"book\",\n  \"boost\",\n  \"border\",\n  \"boring\",\n  \"borrow\",\n  \"boss\",\n  \"bottom\",\n  \"bounce\",\n  \"box\",\n  \"boy\",\n  \"bracket\",\n  \"brain\",\n  \"brand\",\n  \"brass\",\n  \"brave\",\n  \"bread\",\n  \"breeze\",\n  \"brick\",\n  \"bridge\",\n  \"brief\",\n  \"bright\",\n  \"bring\",\n  \"brisk\",\n  \"broccoli\",\n  \"broken\",\n  \"bronze\",\n  \"broom\",\n  \"brother\",\n  \"brown\",\n  \"brush\",\n  \"bubble\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"build\",\n  \"bulb\",\n  \"bulk\",\n  \"bullet\",\n  \"bundle\",\n  \"bunker\",\n  \"burden\",\n  \"burger\",\n  \"burst\",\n  \"bus\",\n  \"business\",\n  \"busy\",\n  \"butter\",\n  \"buyer\",\n  \"buzz\",\n  \"cabbage\",\n  \"cabin\",\n  \"cable\",\n  \"cactus\",\n  \"cage\",\n  \"cake\",\n  \"call\",\n  \"calm\",\n  \"camera\",\n  \"camp\",\n  \"can\",\n  \"canal\",\n  \"cancel\",\n  \"candy\",\n  \"cannon\",\n  \"canoe\",\n  \"canvas\",\n  \"canyon\",\n  \"capable\",\n  \"capital\",\n  \"captain\",\n  \"car\",\n  \"carbon\",\n  \"card\",\n  \"cargo\",\n  \"carpet\",\n  \"carry\",\n  \"cart\",\n  \"case\",\n  \"cash\",\n  \"casino\",\n  \"castle\",\n  \"casual\",\n  \"cat\",\n  \"catalog\",\n  \"catch\",\n  \"category\",\n  \"cattle\",\n  \"caught\",\n  \"cause\",\n  \"caution\",\n  \"cave\",\n  \"ceiling\",\n  \"celery\",\n  \"cement\",\n  \"census\",\n  \"century\",\n  \"cereal\",\n  \"certain\",\n  \"chair\",\n  \"chalk\",\n  \"champion\",\n  \"change\",\n  \"chaos\",\n  \"chapter\",\n  \"charge\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"check\",\n  \"cheese\",\n  \"chef\",\n  \"cherry\",\n  \"chest\",\n  \"chicken\",\n  \"chief\",\n  \"child\",\n  \"chimney\",\n  \"choice\",\n  \"choose\",\n  \"chronic\",\n  \"chuckle\",\n  \"chunk\",\n  \"churn\",\n  \"cigar\",\n  \"cinnamon\",\n  \"circle\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"clap\",\n  \"clarify\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clerk\",\n  \"clever\",\n  \"click\",\n  \"client\",\n  \"cliff\",\n  \"climb\",\n  \"clinic\",\n  \"clip\",\n  \"clock\",\n  \"clog\",\n  \"close\",\n  \"cloth\",\n  \"cloud\",\n  \"clown\",\n  \"club\",\n  \"clump\",\n  \"cluster\",\n  \"clutch\",\n  \"coach\",\n  \"coast\",\n  \"coconut\",\n  \"code\",\n  \"coffee\",\n  \"coil\",\n  \"coin\",\n  \"collect\",\n  \"color\",\n  \"column\",\n  \"combine\",\n  \"come\",\n  \"comfort\",\n  \"comic\",\n  \"common\",\n  \"company\",\n  \"concert\",\n  \"conduct\",\n  \"confirm\",\n  \"congress\",\n  \"connect\",\n  \"consider\",\n  \"control\",\n  \"convince\",\n  \"cook\",\n  \"cool\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"core\",\n  \"corn\",\n  \"correct\",\n  \"cost\",\n  \"cotton\",\n  \"couch\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"cousin\",\n  \"cover\",\n  \"coyote\",\n  \"crack\",\n  \"cradle\",\n  \"craft\",\n  \"cram\",\n  \"crane\",\n  \"crash\",\n  \"crater\",\n  \"crawl\",\n  \"crazy\",\n  \"cream\",\n  \"credit\",\n  \"creek\",\n  \"crew\",\n  \"cricket\",\n  \"crime\",\n  \"crisp\",\n  \"critic\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crowd\",\n  \"crucial\",\n  \"cruel\",\n  \"cruise\",\n  \"crumble\",\n  \"crunch\",\n  \"crush\",\n  \"cry\",\n  \"crystal\",\n  \"cube\",\n  \"culture\",\n  \"cup\",\n  \"cupboard\",\n  \"curious\",\n  \"current\",\n  \"curtain\",\n  \"curve\",\n  \"cushion\",\n  \"custom\",\n  \"cute\",\n  \"cycle\",\n  \"dad\",\n  \"damage\",\n  \"damp\",\n  \"dance\",\n  \"danger\",\n  \"daring\",\n  \"dash\",\n  \"daughter\",\n  \"dawn\",\n  \"day\",\n  \"deal\",\n  \"debate\",\n  \"debris\",\n  \"decade\",\n  \"december\",\n  \"decide\",\n  \"decline\",\n  \"decorate\",\n  \"decrease\",\n  \"deer\",\n  \"defense\",\n  \"define\",\n  \"defy\",\n  \"degree\",\n  \"delay\",\n  \"deliver\",\n  \"demand\",\n  \"demise\",\n  \"denial\",\n  \"dentist\",\n  \"deny\",\n  \"depart\",\n  \"depend\",\n  \"deposit\",\n  \"depth\",\n  \"deputy\",\n  \"derive\",\n  \"describe\",\n  \"desert\",\n  \"design\",\n  \"desk\",\n  \"despair\",\n  \"destroy\",\n  \"detail\",\n  \"detect\",\n  \"develop\",\n  \"device\",\n  \"devote\",\n  \"diagram\",\n  \"dial\",\n  \"diamond\",\n  \"diary\",\n  \"dice\",\n  \"diesel\",\n  \"diet\",\n  \"differ\",\n  \"digital\",\n  \"dignity\",\n  \"dilemma\",\n  \"dinner\",\n  \"dinosaur\",\n  \"direct\",\n  \"dirt\",\n  \"disagree\",\n  \"discover\",\n  \"disease\",\n  \"dish\",\n  \"dismiss\",\n  \"disorder\",\n  \"display\",\n  \"distance\",\n  \"divert\",\n  \"divide\",\n  \"divorce\",\n  \"dizzy\",\n  \"doctor\",\n  \"document\",\n  \"dog\",\n  \"doll\",\n  \"dolphin\",\n  \"domain\",\n  \"donate\",\n  \"donkey\",\n  \"donor\",\n  \"door\",\n  \"dose\",\n  \"double\",\n  \"dove\",\n  \"draft\",\n  \"dragon\",\n  \"drama\",\n  \"drastic\",\n  \"draw\",\n  \"dream\",\n  \"dress\",\n  \"drift\",\n  \"drill\",\n  \"drink\",\n  \"drip\",\n  \"drive\",\n  \"drop\",\n  \"drum\",\n  \"dry\",\n  \"duck\",\n  \"dumb\",\n  \"dune\",\n  \"during\",\n  \"dust\",\n  \"dutch\",\n  \"duty\",\n  \"dwarf\",\n  \"dynamic\",\n  \"eager\",\n  \"eagle\",\n  \"early\",\n  \"earn\",\n  \"earth\",\n  \"easily\",\n  \"east\",\n  \"easy\",\n  \"echo\",\n  \"ecology\",\n  \"economy\",\n  \"edge\",\n  \"edit\",\n  \"educate\",\n  \"effort\",\n  \"egg\",\n  \"eight\",\n  \"either\",\n  \"elbow\",\n  \"elder\",\n  \"electric\",\n  \"elegant\",\n  \"element\",\n  \"elephant\",\n  \"elevator\",\n  \"elite\",\n  \"else\",\n  \"embark\",\n  \"embody\",\n  \"embrace\",\n  \"emerge\",\n  \"emotion\",\n  \"employ\",\n  \"empower\",\n  \"empty\",\n  \"enable\",\n  \"enact\",\n  \"end\",\n  \"endless\",\n  \"endorse\",\n  \"enemy\",\n  \"energy\",\n  \"enforce\",\n  \"engage\",\n  \"engine\",\n  \"enhance\",\n  \"enjoy\",\n  \"enlist\",\n  \"enough\",\n  \"enrich\",\n  \"enroll\",\n  \"ensure\",\n  \"enter\",\n  \"entire\",\n  \"entry\",\n  \"envelope\",\n  \"episode\",\n  \"equal\",\n  \"equip\",\n  \"era\",\n  \"erase\",\n  \"erode\",\n  \"erosion\",\n  \"error\",\n  \"erupt\",\n  \"escape\",\n  \"essay\",\n  \"essence\",\n  \"estate\",\n  \"eternal\",\n  \"ethics\",\n  \"evidence\",\n  \"evil\",\n  \"evoke\",\n  \"evolve\",\n  \"exact\",\n  \"example\",\n  \"excess\",\n  \"exchange\",\n  \"excite\",\n  \"exclude\",\n  \"excuse\",\n  \"execute\",\n  \"exercise\",\n  \"exhaust\",\n  \"exhibit\",\n  \"exile\",\n  \"exist\",\n  \"exit\",\n  \"exotic\",\n  \"expand\",\n  \"expect\",\n  \"expire\",\n  \"explain\",\n  \"expose\",\n  \"express\",\n  \"extend\",\n  \"extra\",\n  \"eye\",\n  \"eyebrow\",\n  \"fabric\",\n  \"face\",\n  \"faculty\",\n  \"fade\",\n  \"faint\",\n  \"faith\",\n  \"fall\",\n  \"false\",\n  \"fame\",\n  \"family\",\n  \"famous\",\n  \"fan\",\n  \"fancy\",\n  \"fantasy\",\n  \"farm\",\n  \"fashion\",\n  \"fat\",\n  \"fatal\",\n  \"father\",\n  \"fatigue\",\n  \"fault\",\n  \"favorite\",\n  \"feature\",\n  \"february\",\n  \"federal\",\n  \"fee\",\n  \"feed\",\n  \"feel\",\n  \"female\",\n  \"fence\",\n  \"festival\",\n  \"fetch\",\n  \"fever\",\n  \"few\",\n  \"fiber\",\n  \"fiction\",\n  \"field\",\n  \"figure\",\n  \"file\",\n  \"film\",\n  \"filter\",\n  \"final\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fiscal\",\n  \"fish\",\n  \"fit\",\n  \"fitness\",\n  \"fix\",\n  \"flag\",\n  \"flame\",\n  \"flash\",\n  \"flat\",\n  \"flavor\",\n  \"flee\",\n  \"flight\",\n  \"flip\",\n  \"float\",\n  \"flock\",\n  \"floor\",\n  \"flower\",\n  \"fluid\",\n  \"flush\",\n  \"fly\",\n  \"foam\",\n  \"focus\",\n  \"fog\",\n  \"foil\",\n  \"fold\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"force\",\n  \"forest\",\n  \"forget\",\n  \"fork\",\n  \"fortune\",\n  \"forum\",\n  \"forward\",\n  \"fossil\",\n  \"foster\",\n  \"found\",\n  \"fox\",\n  \"fragile\",\n  \"frame\",\n  \"frequent\",\n  \"fresh\",\n  \"friend\",\n  \"fringe\",\n  \"frog\",\n  \"front\",\n  \"frost\",\n  \"frown\",\n  \"frozen\",\n  \"fruit\",\n  \"fuel\",\n  \"fun\",\n  \"funny\",\n  \"furnace\",\n  \"fury\",\n  \"future\",\n  \"gadget\",\n  \"gain\",\n  \"galaxy\",\n  \"gallery\",\n  \"game\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"garlic\",\n  \"garment\",\n  \"gas\",\n  \"gasp\",\n  \"gate\",\n  \"gather\",\n  \"gauge\",\n  \"gaze\",\n  \"general\",\n  \"genius\",\n  \"genre\",\n  \"gentle\",\n  \"genuine\",\n  \"gesture\",\n  \"ghost\",\n  \"giant\",\n  \"gift\",\n  \"giggle\",\n  \"ginger\",\n  \"giraffe\",\n  \"girl\",\n  \"give\",\n  \"glad\",\n  \"glance\",\n  \"glare\",\n  \"glass\",\n  \"glide\",\n  \"glimpse\",\n  \"globe\",\n  \"gloom\",\n  \"glory\",\n  \"glove\",\n  \"glow\",\n  \"glue\",\n  \"goat\",\n  \"goddess\",\n  \"gold\",\n  \"good\",\n  \"goose\",\n  \"gorilla\",\n  \"gospel\",\n  \"gossip\",\n  \"govern\",\n  \"gown\",\n  \"grab\",\n  \"grace\",\n  \"grain\",\n  \"grant\",\n  \"grape\",\n  \"grass\",\n  \"gravity\",\n  \"great\",\n  \"green\",\n  \"grid\",\n  \"grief\",\n  \"grit\",\n  \"grocery\",\n  \"group\",\n  \"grow\",\n  \"grunt\",\n  \"guard\",\n  \"guess\",\n  \"guide\",\n  \"guilt\",\n  \"guitar\",\n  \"gun\",\n  \"gym\",\n  \"habit\",\n  \"hair\",\n  \"half\",\n  \"hammer\",\n  \"hamster\",\n  \"hand\",\n  \"happy\",\n  \"harbor\",\n  \"hard\",\n  \"harsh\",\n  \"harvest\",\n  \"hat\",\n  \"have\",\n  \"hawk\",\n  \"hazard\",\n  \"head\",\n  \"health\",\n  \"heart\",\n  \"heavy\",\n  \"hedgehog\",\n  \"height\",\n  \"hello\",\n  \"helmet\",\n  \"help\",\n  \"hen\",\n  \"hero\",\n  \"hidden\",\n  \"high\",\n  \"hill\",\n  \"hint\",\n  \"hip\",\n  \"hire\",\n  \"history\",\n  \"hobby\",\n  \"hockey\",\n  \"hold\",\n  \"hole\",\n  \"holiday\",\n  \"hollow\",\n  \"home\",\n  \"honey\",\n  \"hood\",\n  \"hope\",\n  \"horn\",\n  \"horror\",\n  \"horse\",\n  \"hospital\",\n  \"host\",\n  \"hotel\",\n  \"hour\",\n  \"hover\",\n  \"hub\",\n  \"huge\",\n  \"human\",\n  \"humble\",\n  \"humor\",\n  \"hundred\",\n  \"hungry\",\n  \"hunt\",\n  \"hurdle\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hybrid\",\n  \"ice\",\n  \"icon\",\n  \"idea\",\n  \"identify\",\n  \"idle\",\n  \"ignore\",\n  \"ill\",\n  \"illegal\",\n  \"illness\",\n  \"image\",\n  \"imitate\",\n  \"immense\",\n  \"immune\",\n  \"impact\",\n  \"impose\",\n  \"improve\",\n  \"impulse\",\n  \"inch\",\n  \"include\",\n  \"income\",\n  \"increase\",\n  \"index\",\n  \"indicate\",\n  \"indoor\",\n  \"industry\",\n  \"infant\",\n  \"inflict\",\n  \"inform\",\n  \"inhale\",\n  \"inherit\",\n  \"initial\",\n  \"inject\",\n  \"injury\",\n  \"inmate\",\n  \"inner\",\n  \"innocent\",\n  \"input\",\n  \"inquiry\",\n  \"insane\",\n  \"insect\",\n  \"inside\",\n  \"inspire\",\n  \"install\",\n  \"intact\",\n  \"interest\",\n  \"into\",\n  \"invest\",\n  \"invite\",\n  \"involve\",\n  \"iron\",\n  \"island\",\n  \"isolate\",\n  \"issue\",\n  \"item\",\n  \"ivory\",\n  \"jacket\",\n  \"jaguar\",\n  \"jar\",\n  \"jazz\",\n  \"jealous\",\n  \"jeans\",\n  \"jelly\",\n  \"jewel\",\n  \"job\",\n  \"join\",\n  \"joke\",\n  \"journey\",\n  \"joy\",\n  \"judge\",\n  \"juice\",\n  \"jump\",\n  \"jungle\",\n  \"junior\",\n  \"junk\",\n  \"just\",\n  \"kangaroo\",\n  \"keen\",\n  \"keep\",\n  \"ketchup\",\n  \"key\",\n  \"kick\",\n  \"kid\",\n  \"kidney\",\n  \"kind\",\n  \"kingdom\",\n  \"kiss\",\n  \"kit\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kiwi\",\n  \"knee\",\n  \"knife\",\n  \"knock\",\n  \"know\",\n  \"lab\",\n  \"label\",\n  \"labor\",\n  \"ladder\",\n  \"lady\",\n  \"lake\",\n  \"lamp\",\n  \"language\",\n  \"laptop\",\n  \"large\",\n  \"later\",\n  \"latin\",\n  \"laugh\",\n  \"laundry\",\n  \"lava\",\n  \"law\",\n  \"lawn\",\n  \"lawsuit\",\n  \"layer\",\n  \"lazy\",\n  \"leader\",\n  \"leaf\",\n  \"learn\",\n  \"leave\",\n  \"lecture\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"legend\",\n  \"leisure\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"leopard\",\n  \"lesson\",\n  \"letter\",\n  \"level\",\n  \"liar\",\n  \"liberty\",\n  \"library\",\n  \"license\",\n  \"life\",\n  \"lift\",\n  \"light\",\n  \"like\",\n  \"limb\",\n  \"limit\",\n  \"link\",\n  \"lion\",\n  \"liquid\",\n  \"list\",\n  \"little\",\n  \"live\",\n  \"lizard\",\n  \"load\",\n  \"loan\",\n  \"lobster\",\n  \"local\",\n  \"lock\",\n  \"logic\",\n  \"lonely\",\n  \"long\",\n  \"loop\",\n  \"lottery\",\n  \"loud\",\n  \"lounge\",\n  \"love\",\n  \"loyal\",\n  \"lucky\",\n  \"luggage\",\n  \"lumber\",\n  \"lunar\",\n  \"lunch\",\n  \"luxury\",\n  \"lyrics\",\n  \"machine\",\n  \"mad\",\n  \"magic\",\n  \"magnet\",\n  \"maid\",\n  \"mail\",\n  \"main\",\n  \"major\",\n  \"make\",\n  \"mammal\",\n  \"man\",\n  \"manage\",\n  \"mandate\",\n  \"mango\",\n  \"mansion\",\n  \"manual\",\n  \"maple\",\n  \"marble\",\n  \"march\",\n  \"margin\",\n  \"marine\",\n  \"market\",\n  \"marriage\",\n  \"mask\",\n  \"mass\",\n  \"master\",\n  \"match\",\n  \"material\",\n  \"math\",\n  \"matrix\",\n  \"matter\",\n  \"maximum\",\n  \"maze\",\n  \"meadow\",\n  \"mean\",\n  \"measure\",\n  \"meat\",\n  \"mechanic\",\n  \"medal\",\n  \"media\",\n  \"melody\",\n  \"melt\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"menu\",\n  \"mercy\",\n  \"merge\",\n  \"merit\",\n  \"merry\",\n  \"mesh\",\n  \"message\",\n  \"metal\",\n  \"method\",\n  \"middle\",\n  \"midnight\",\n  \"milk\",\n  \"million\",\n  \"mimic\",\n  \"mind\",\n  \"minimum\",\n  \"minor\",\n  \"minute\",\n  \"miracle\",\n  \"mirror\",\n  \"misery\",\n  \"miss\",\n  \"mistake\",\n  \"mix\",\n  \"mixed\",\n  \"mixture\",\n  \"mobile\",\n  \"model\",\n  \"modify\",\n  \"mom\",\n  \"moment\",\n  \"monitor\",\n  \"monkey\",\n  \"monster\",\n  \"month\",\n  \"moon\",\n  \"moral\",\n  \"more\",\n  \"morning\",\n  \"mosquito\",\n  \"mother\",\n  \"motion\",\n  \"motor\",\n  \"mountain\",\n  \"mouse\",\n  \"move\",\n  \"movie\",\n  \"much\",\n  \"muffin\",\n  \"mule\",\n  \"multiply\",\n  \"muscle\",\n  \"museum\",\n  \"mushroom\",\n  \"music\",\n  \"must\",\n  \"mutual\",\n  \"myself\",\n  \"mystery\",\n  \"myth\",\n  \"naive\",\n  \"name\",\n  \"napkin\",\n  \"narrow\",\n  \"nasty\",\n  \"nation\",\n  \"nature\",\n  \"near\",\n  \"neck\",\n  \"need\",\n  \"negative\",\n  \"neglect\",\n  \"neither\",\n  \"nephew\",\n  \"nerve\",\n  \"nest\",\n  \"net\",\n  \"network\",\n  \"neutral\",\n  \"never\",\n  \"news\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"noble\",\n  \"noise\",\n  \"nominee\",\n  \"noodle\",\n  \"normal\",\n  \"north\",\n  \"nose\",\n  \"notable\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"novel\",\n  \"now\",\n  \"nuclear\",\n  \"number\",\n  \"nurse\",\n  \"nut\",\n  \"oak\",\n  \"obey\",\n  \"object\",\n  \"oblige\",\n  \"obscure\",\n  \"observe\",\n  \"obtain\",\n  \"obvious\",\n  \"occur\",\n  \"ocean\",\n  \"october\",\n  \"odor\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"often\",\n  \"oil\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympic\",\n  \"omit\",\n  \"once\",\n  \"one\",\n  \"onion\",\n  \"online\",\n  \"only\",\n  \"open\",\n  \"opera\",\n  \"opinion\",\n  \"oppose\",\n  \"option\",\n  \"orange\",\n  \"orbit\",\n  \"orchard\",\n  \"order\",\n  \"ordinary\",\n  \"organ\",\n  \"orient\",\n  \"original\",\n  \"orphan\",\n  \"ostrich\",\n  \"other\",\n  \"outdoor\",\n  \"outer\",\n  \"output\",\n  \"outside\",\n  \"oval\",\n  \"oven\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"oxygen\",\n  \"oyster\",\n  \"ozone\",\n  \"pact\",\n  \"paddle\",\n  \"page\",\n  \"pair\",\n  \"palace\",\n  \"palm\",\n  \"panda\",\n  \"panel\",\n  \"panic\",\n  \"panther\",\n  \"paper\",\n  \"parade\",\n  \"parent\",\n  \"park\",\n  \"parrot\",\n  \"party\",\n  \"pass\",\n  \"patch\",\n  \"path\",\n  \"patient\",\n  \"patrol\",\n  \"pattern\",\n  \"pause\",\n  \"pave\",\n  \"payment\",\n  \"peace\",\n  \"peanut\",\n  \"pear\",\n  \"peasant\",\n  \"pelican\",\n  \"pen\",\n  \"penalty\",\n  \"pencil\",\n  \"people\",\n  \"pepper\",\n  \"perfect\",\n  \"permit\",\n  \"person\",\n  \"pet\",\n  \"phone\",\n  \"photo\",\n  \"phrase\",\n  \"physical\",\n  \"piano\",\n  \"picnic\",\n  \"picture\",\n  \"piece\",\n  \"pig\",\n  \"pigeon\",\n  \"pill\",\n  \"pilot\",\n  \"pink\",\n  \"pioneer\",\n  \"pipe\",\n  \"pistol\",\n  \"pitch\",\n  \"pizza\",\n  \"place\",\n  \"planet\",\n  \"plastic\",\n  \"plate\",\n  \"play\",\n  \"please\",\n  \"pledge\",\n  \"pluck\",\n  \"plug\",\n  \"plunge\",\n  \"poem\",\n  \"poet\",\n  \"point\",\n  \"polar\",\n  \"pole\",\n  \"police\",\n  \"pond\",\n  \"pony\",\n  \"pool\",\n  \"popular\",\n  \"portion\",\n  \"position\",\n  \"possible\",\n  \"post\",\n  \"potato\",\n  \"pottery\",\n  \"poverty\",\n  \"powder\",\n  \"power\",\n  \"practice\",\n  \"praise\",\n  \"predict\",\n  \"prefer\",\n  \"prepare\",\n  \"present\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"pride\",\n  \"primary\",\n  \"print\",\n  \"priority\",\n  \"prison\",\n  \"private\",\n  \"prize\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"profit\",\n  \"program\",\n  \"project\",\n  \"promote\",\n  \"proof\",\n  \"property\",\n  \"prosper\",\n  \"protect\",\n  \"proud\",\n  \"provide\",\n  \"public\",\n  \"pudding\",\n  \"pull\",\n  \"pulp\",\n  \"pulse\",\n  \"pumpkin\",\n  \"punch\",\n  \"pupil\",\n  \"puppy\",\n  \"purchase\",\n  \"purity\",\n  \"purpose\",\n  \"purse\",\n  \"push\",\n  \"put\",\n  \"puzzle\",\n  \"pyramid\",\n  \"quality\",\n  \"quantum\",\n  \"quarter\",\n  \"question\",\n  \"quick\",\n  \"quit\",\n  \"quiz\",\n  \"quote\",\n  \"rabbit\",\n  \"raccoon\",\n  \"race\",\n  \"rack\",\n  \"radar\",\n  \"radio\",\n  \"rail\",\n  \"rain\",\n  \"raise\",\n  \"rally\",\n  \"ramp\",\n  \"ranch\",\n  \"random\",\n  \"range\",\n  \"rapid\",\n  \"rare\",\n  \"rate\",\n  \"rather\",\n  \"raven\",\n  \"raw\",\n  \"razor\",\n  \"ready\",\n  \"real\",\n  \"reason\",\n  \"rebel\",\n  \"rebuild\",\n  \"recall\",\n  \"receive\",\n  \"recipe\",\n  \"record\",\n  \"recycle\",\n  \"reduce\",\n  \"reflect\",\n  \"reform\",\n  \"refuse\",\n  \"region\",\n  \"regret\",\n  \"regular\",\n  \"reject\",\n  \"relax\",\n  \"release\",\n  \"relief\",\n  \"rely\",\n  \"remain\",\n  \"remember\",\n  \"remind\",\n  \"remove\",\n  \"render\",\n  \"renew\",\n  \"rent\",\n  \"reopen\",\n  \"repair\",\n  \"repeat\",\n  \"replace\",\n  \"report\",\n  \"require\",\n  \"rescue\",\n  \"resemble\",\n  \"resist\",\n  \"resource\",\n  \"response\",\n  \"result\",\n  \"retire\",\n  \"retreat\",\n  \"return\",\n  \"reunion\",\n  \"reveal\",\n  \"review\",\n  \"reward\",\n  \"rhythm\",\n  \"rib\",\n  \"ribbon\",\n  \"rice\",\n  \"rich\",\n  \"ride\",\n  \"ridge\",\n  \"rifle\",\n  \"right\",\n  \"rigid\",\n  \"ring\",\n  \"riot\",\n  \"ripple\",\n  \"risk\",\n  \"ritual\",\n  \"rival\",\n  \"river\",\n  \"road\",\n  \"roast\",\n  \"robot\",\n  \"robust\",\n  \"rocket\",\n  \"romance\",\n  \"roof\",\n  \"rookie\",\n  \"room\",\n  \"rose\",\n  \"rotate\",\n  \"rough\",\n  \"round\",\n  \"route\",\n  \"royal\",\n  \"rubber\",\n  \"rude\",\n  \"rug\",\n  \"rule\",\n  \"run\",\n  \"runway\",\n  \"rural\",\n  \"sad\",\n  \"saddle\",\n  \"sadness\",\n  \"safe\",\n  \"sail\",\n  \"salad\",\n  \"salmon\",\n  \"salon\",\n  \"salt\",\n  \"salute\",\n  \"same\",\n  \"sample\",\n  \"sand\",\n  \"satisfy\",\n  \"satoshi\",\n  \"sauce\",\n  \"sausage\",\n  \"save\",\n  \"say\",\n  \"scale\",\n  \"scan\",\n  \"scare\",\n  \"scatter\",\n  \"scene\",\n  \"scheme\",\n  \"school\",\n  \"science\",\n  \"scissors\",\n  \"scorpion\",\n  \"scout\",\n  \"scrap\",\n  \"screen\",\n  \"script\",\n  \"scrub\",\n  \"sea\",\n  \"search\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"secret\",\n  \"section\",\n  \"security\",\n  \"seed\",\n  \"seek\",\n  \"segment\",\n  \"select\",\n  \"sell\",\n  \"seminar\",\n  \"senior\",\n  \"sense\",\n  \"sentence\",\n  \"series\",\n  \"service\",\n  \"session\",\n  \"settle\",\n  \"setup\",\n  \"seven\",\n  \"shadow\",\n  \"shaft\",\n  \"shallow\",\n  \"share\",\n  \"shed\",\n  \"shell\",\n  \"sheriff\",\n  \"shield\",\n  \"shift\",\n  \"shine\",\n  \"ship\",\n  \"shiver\",\n  \"shock\",\n  \"shoe\",\n  \"shoot\",\n  \"shop\",\n  \"short\",\n  \"shoulder\",\n  \"shove\",\n  \"shrimp\",\n  \"shrug\",\n  \"shuffle\",\n  \"shy\",\n  \"sibling\",\n  \"sick\",\n  \"side\",\n  \"siege\",\n  \"sight\",\n  \"sign\",\n  \"silent\",\n  \"silk\",\n  \"silly\",\n  \"silver\",\n  \"similar\",\n  \"simple\",\n  \"since\",\n  \"sing\",\n  \"siren\",\n  \"sister\",\n  \"situate\",\n  \"six\",\n  \"size\",\n  \"skate\",\n  \"sketch\",\n  \"ski\",\n  \"skill\",\n  \"skin\",\n  \"skirt\",\n  \"skull\",\n  \"slab\",\n  \"slam\",\n  \"sleep\",\n  \"slender\",\n  \"slice\",\n  \"slide\",\n  \"slight\",\n  \"slim\",\n  \"slogan\",\n  \"slot\",\n  \"slow\",\n  \"slush\",\n  \"small\",\n  \"smart\",\n  \"smile\",\n  \"smoke\",\n  \"smooth\",\n  \"snack\",\n  \"snake\",\n  \"snap\",\n  \"sniff\",\n  \"snow\",\n  \"soap\",\n  \"soccer\",\n  \"social\",\n  \"sock\",\n  \"soda\",\n  \"soft\",\n  \"solar\",\n  \"soldier\",\n  \"solid\",\n  \"solution\",\n  \"solve\",\n  \"someone\",\n  \"song\",\n  \"soon\",\n  \"sorry\",\n  \"sort\",\n  \"soul\",\n  \"sound\",\n  \"soup\",\n  \"source\",\n  \"south\",\n  \"space\",\n  \"spare\",\n  \"spatial\",\n  \"spawn\",\n  \"speak\",\n  \"special\",\n  \"speed\",\n  \"spell\",\n  \"spend\",\n  \"sphere\",\n  \"spice\",\n  \"spider\",\n  \"spike\",\n  \"spin\",\n  \"spirit\",\n  \"split\",\n  \"spoil\",\n  \"sponsor\",\n  \"spoon\",\n  \"sport\",\n  \"spot\",\n  \"spray\",\n  \"spread\",\n  \"spring\",\n  \"spy\",\n  \"square\",\n  \"squeeze\",\n  \"squirrel\",\n  \"stable\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"stairs\",\n  \"stamp\",\n  \"stand\",\n  \"start\",\n  \"state\",\n  \"stay\",\n  \"steak\",\n  \"steel\",\n  \"stem\",\n  \"step\",\n  \"stereo\",\n  \"stick\",\n  \"still\",\n  \"sting\",\n  \"stock\",\n  \"stomach\",\n  \"stone\",\n  \"stool\",\n  \"story\",\n  \"stove\",\n  \"strategy\",\n  \"street\",\n  \"strike\",\n  \"strong\",\n  \"struggle\",\n  \"student\",\n  \"stuff\",\n  \"stumble\",\n  \"style\",\n  \"subject\",\n  \"submit\",\n  \"subway\",\n  \"success\",\n  \"such\",\n  \"sudden\",\n  \"suffer\",\n  \"sugar\",\n  \"suggest\",\n  \"suit\",\n  \"summer\",\n  \"sun\",\n  \"sunny\",\n  \"sunset\",\n  \"super\",\n  \"supply\",\n  \"supreme\",\n  \"sure\",\n  \"surface\",\n  \"surge\",\n  \"surprise\",\n  \"surround\",\n  \"survey\",\n  \"suspect\",\n  \"sustain\",\n  \"swallow\",\n  \"swamp\",\n  \"swap\",\n  \"swarm\",\n  \"swear\",\n  \"sweet\",\n  \"swift\",\n  \"swim\",\n  \"swing\",\n  \"switch\",\n  \"sword\",\n  \"symbol\",\n  \"symptom\",\n  \"syrup\",\n  \"system\",\n  \"table\",\n  \"tackle\",\n  \"tag\",\n  \"tail\",\n  \"talent\",\n  \"talk\",\n  \"tank\",\n  \"tape\",\n  \"target\",\n  \"task\",\n  \"taste\",\n  \"tattoo\",\n  \"taxi\",\n  \"teach\",\n  \"team\",\n  \"tell\",\n  \"ten\",\n  \"tenant\",\n  \"tennis\",\n  \"tent\",\n  \"term\",\n  \"test\",\n  \"text\",\n  \"thank\",\n  \"that\",\n  \"theme\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"they\",\n  \"thing\",\n  \"this\",\n  \"thought\",\n  \"three\",\n  \"thrive\",\n  \"throw\",\n  \"thumb\",\n  \"thunder\",\n  \"ticket\",\n  \"tide\",\n  \"tiger\",\n  \"tilt\",\n  \"timber\",\n  \"time\",\n  \"tiny\",\n  \"tip\",\n  \"tired\",\n  \"tissue\",\n  \"title\",\n  \"toast\",\n  \"tobacco\",\n  \"today\",\n  \"toddler\",\n  \"toe\",\n  \"together\",\n  \"toilet\",\n  \"token\",\n  \"tomato\",\n  \"tomorrow\",\n  \"tone\",\n  \"tongue\",\n  \"tonight\",\n  \"tool\",\n  \"tooth\",\n  \"top\",\n  \"topic\",\n  \"topple\",\n  \"torch\",\n  \"tornado\",\n  \"tortoise\",\n  \"toss\",\n  \"total\",\n  \"tourist\",\n  \"toward\",\n  \"tower\",\n  \"town\",\n  \"toy\",\n  \"track\",\n  \"trade\",\n  \"traffic\",\n  \"tragic\",\n  \"train\",\n  \"transfer\",\n  \"trap\",\n  \"trash\",\n  \"travel\",\n  \"tray\",\n  \"treat\",\n  \"tree\",\n  \"trend\",\n  \"trial\",\n  \"tribe\",\n  \"trick\",\n  \"trigger\",\n  \"trim\",\n  \"trip\",\n  \"trophy\",\n  \"trouble\",\n  \"truck\",\n  \"true\",\n  \"truly\",\n  \"trumpet\",\n  \"trust\",\n  \"truth\",\n  \"try\",\n  \"tube\",\n  \"tuition\",\n  \"tumble\",\n  \"tuna\",\n  \"tunnel\",\n  \"turkey\",\n  \"turn\",\n  \"turtle\",\n  \"twelve\",\n  \"twenty\",\n  \"twice\",\n  \"twin\",\n  \"twist\",\n  \"two\",\n  \"type\",\n  \"typical\",\n  \"ugly\",\n  \"umbrella\",\n  \"unable\",\n  \"unaware\",\n  \"uncle\",\n  \"uncover\",\n  \"under\",\n  \"undo\",\n  \"unfair\",\n  \"unfold\",\n  \"unhappy\",\n  \"uniform\",\n  \"unique\",\n  \"unit\",\n  \"universe\",\n  \"unknown\",\n  \"unlock\",\n  \"until\",\n  \"unusual\",\n  \"unveil\",\n  \"update\",\n  \"upgrade\",\n  \"uphold\",\n  \"upon\",\n  \"upper\",\n  \"upset\",\n  \"urban\",\n  \"urge\",\n  \"usage\",\n  \"use\",\n  \"used\",\n  \"useful\",\n  \"useless\",\n  \"usual\",\n  \"utility\",\n  \"vacant\",\n  \"vacuum\",\n  \"vague\",\n  \"valid\",\n  \"valley\",\n  \"valve\",\n  \"van\",\n  \"vanish\",\n  \"vapor\",\n  \"various\",\n  \"vast\",\n  \"vault\",\n  \"vehicle\",\n  \"velvet\",\n  \"vendor\",\n  \"venture\",\n  \"venue\",\n  \"verb\",\n  \"verify\",\n  \"version\",\n  \"very\",\n  \"vessel\",\n  \"veteran\",\n  \"viable\",\n  \"vibrant\",\n  \"vicious\",\n  \"victory\",\n  \"video\",\n  \"view\",\n  \"village\",\n  \"vintage\",\n  \"violin\",\n  \"virtual\",\n  \"virus\",\n  \"visa\",\n  \"visit\",\n  \"visual\",\n  \"vital\",\n  \"vivid\",\n  \"vocal\",\n  \"voice\",\n  \"void\",\n  \"volcano\",\n  \"volume\",\n  \"vote\",\n  \"voyage\",\n  \"wage\",\n  \"wagon\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"walnut\",\n  \"want\",\n  \"warfare\",\n  \"warm\",\n  \"warrior\",\n  \"wash\",\n  \"wasp\",\n  \"waste\",\n  \"water\",\n  \"wave\",\n  \"way\",\n  \"wealth\",\n  \"weapon\",\n  \"wear\",\n  \"weasel\",\n  \"weather\",\n  \"web\",\n  \"wedding\",\n  \"weekend\",\n  \"weird\",\n  \"welcome\",\n  \"west\",\n  \"wet\",\n  \"whale\",\n  \"what\",\n  \"wheat\",\n  \"wheel\",\n  \"when\",\n  \"where\",\n  \"whip\",\n  \"whisper\",\n  \"wide\",\n  \"width\",\n  \"wife\",\n  \"wild\",\n  \"will\",\n  \"win\",\n  \"window\",\n  \"wine\",\n  \"wing\",\n  \"wink\",\n  \"winner\",\n  \"winter\",\n  \"wire\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"witness\",\n  \"wolf\",\n  \"woman\",\n  \"wonder\",\n  \"wood\",\n  \"wool\",\n  \"word\",\n  \"work\",\n  \"world\",\n  \"worry\",\n  \"worth\",\n  \"wrap\",\n  \"wreck\",\n  \"wrestle\",\n  \"wrist\",\n  \"write\",\n  \"wrong\",\n  \"yard\",\n  \"year\",\n  \"yellow\",\n  \"you\",\n  \"young\",\n  \"youth\",\n  \"zebra\",\n  \"zero\",\n  \"zone\",\n  \"zoo\"\n];\nObject.defineProperty(Lr, \"__esModule\", { value: !0 });\nconst Wr = {};\nLr.wordlists = Wr;\nlet ir;\nvar Et = Lr._default = ir;\ntry {\n  Et = Lr._default = ir = jh, Wr.czech = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = Ph, Wr.chinese_simplified = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = Oh, Wr.chinese_traditional = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = qh, Wr.korean = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = Nh, Wr.french = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = Fh, Wr.italian = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = Ch, Wr.spanish = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = Lh, Wr.japanese = ir, Wr.JA = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = Uh, Wr.portuguese = ir;\n} catch {\n}\ntry {\n  Et = Lr._default = ir = $h, Wr.english = ir, Wr.EN = ir;\n} catch {\n}\nObject.defineProperty(kt, \"__esModule\", { value: !0 });\nconst Dh = N0, ts = F0, Kh = ln, qi = Lr;\nlet Qa = qi._default;\nconst lc = \"Invalid mnemonic\", na = \"Invalid entropy\", Hh = \"Invalid mnemonic checksum\", as = `A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.`;\nfunction Vh(e, r, t, i, c) {\n  return Promise.resolve().then(() => new Promise((n, x) => {\n    const m = (k, B) => k ? x(k) : n(B);\n    ts.pbkdf2(e, r, t, i, c, m);\n  }));\n}\nfunction ei(e) {\n  return (e || \"\").normalize(\"NFKD\");\n}\nfunction is(e, r, t) {\n  for (; e.length < t; )\n    e = r + e;\n  return e;\n}\nfunction ns(e) {\n  return parseInt(e, 2);\n}\nfunction fs(e) {\n  return e.map((r) => is(r.toString(2), \"0\", 8)).join(\"\");\n}\nfunction os(e) {\n  const t = e.length * 8 / 32, i = Dh(\"sha256\").update(e).digest();\n  return fs(Array.from(i)).slice(0, t);\n}\nfunction cs(e) {\n  return \"mnemonic\" + (e || \"\");\n}\nfunction Wh(e, r) {\n  const t = Buffer.from(ei(e), \"utf8\"), i = Buffer.from(cs(ei(r)), \"utf8\");\n  return ts.pbkdf2Sync(t, i, 2048, 64, \"sha512\");\n}\nvar Gh = kt.mnemonicToSeedSync = Wh;\nfunction Zh(e, r) {\n  return Promise.resolve().then(() => {\n    const t = Buffer.from(ei(e), \"utf8\"), i = Buffer.from(cs(ei(r)), \"utf8\");\n    return Vh(t, i, 2048, 64, \"sha512\");\n  });\n}\nkt.mnemonicToSeed = Zh;\nfunction ds(e, r) {\n  if (r = r || Qa, !r)\n    throw new Error(as);\n  const t = ei(e).split(\" \");\n  if (t.length % 3 !== 0)\n    throw new Error(lc);\n  const i = t.map((z) => {\n    const C = r.indexOf(z);\n    if (C === -1)\n      throw new Error(lc);\n    return is(C.toString(2), \"0\", 11);\n  }).join(\"\"), c = Math.floor(i.length / 33) * 32, n = i.slice(0, c), x = i.slice(c), m = n.match(/(.{1,8})/g).map(ns);\n  if (m.length < 16)\n    throw new Error(na);\n  if (m.length > 32)\n    throw new Error(na);\n  if (m.length % 4 !== 0)\n    throw new Error(na);\n  const k = Buffer.from(m);\n  if (os(k) !== x)\n    throw new Error(Hh);\n  return k.toString(\"hex\");\n}\nkt.mnemonicToEntropy = ds;\nfunction ss(e, r) {\n  if (Buffer.isBuffer(e) || (e = Buffer.from(e, \"hex\")), r = r || Qa, !r)\n    throw new Error(as);\n  if (e.length < 16)\n    throw new TypeError(na);\n  if (e.length > 32)\n    throw new TypeError(na);\n  if (e.length % 4 !== 0)\n    throw new TypeError(na);\n  const t = fs(Array.from(e)), i = os(e), x = (t + i).match(/(.{1,11})/g).map((m) => {\n    const k = ns(m);\n    return r[k];\n  });\n  return r[0] === \"あいこくしん\" ? x.join(\"　\") : x.join(\" \");\n}\nkt.entropyToMnemonic = ss;\nfunction Jh(e, r, t) {\n  if (e = e || 128, e % 32 !== 0)\n    throw new TypeError(na);\n  return r = r || Kh, ss(r(e / 8), t);\n}\nkt.generateMnemonic = Jh;\nfunction Yh(e, r) {\n  try {\n    ds(e, r);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nkt.validateMnemonic = Yh;\nfunction Xh(e) {\n  const r = qi.wordlists[e];\n  if (r)\n    Qa = r;\n  else\n    throw new Error('Could not find wordlist for language \"' + e + '\"');\n}\nkt.setDefaultWordlist = Xh;\nfunction Qh() {\n  if (!Qa)\n    throw new Error(\"No Default Wordlist set\");\n  return Object.keys(qi.wordlists).filter((e) => e === \"JA\" || e === \"EN\" ? !1 : qi.wordlists[e].every((r, t) => r === Qa[t]))[0];\n}\nkt.getDefaultWordlist = Qh;\nvar e2 = Lr;\nkt.wordlists = e2.wordlists;\nvar Bf = {}, C0 = {}, L0 = {}, $r = {}, U0 = { exports: {} };\nU0.exports;\n(function(e) {\n  (function(r, t) {\n    function i(s, a) {\n      if (!s)\n        throw new Error(a || \"Assertion failed\");\n    }\n    function c(s, a) {\n      s.super_ = a;\n      var o = function() {\n      };\n      o.prototype = a.prototype, s.prototype = new o(), s.prototype.constructor = s;\n    }\n    function n(s, a, o) {\n      if (n.isBN(s))\n        return s;\n      this.negative = 0, this.words = null, this.length = 0, this.red = null, s !== null && ((a === \"le\" || a === \"be\") && (o = a, a = 10), this._init(s || 0, a || 10, o || \"be\"));\n    }\n    typeof r == \"object\" ? r.exports = n : t.BN = n, n.BN = n, n.wordSize = 26;\n    var x;\n    try {\n      typeof window < \"u\" && typeof window.Buffer < \"u\" ? x = window.Buffer : x = dt.Buffer;\n    } catch {\n    }\n    n.isBN = function(a) {\n      return a instanceof n ? !0 : a !== null && typeof a == \"object\" && a.constructor.wordSize === n.wordSize && Array.isArray(a.words);\n    }, n.max = function(a, o) {\n      return a.cmp(o) > 0 ? a : o;\n    }, n.min = function(a, o) {\n      return a.cmp(o) < 0 ? a : o;\n    }, n.prototype._init = function(a, o, u) {\n      if (typeof a == \"number\")\n        return this._initNumber(a, o, u);\n      if (typeof a == \"object\")\n        return this._initArray(a, o, u);\n      o === \"hex\" && (o = 16), i(o === (o | 0) && o >= 2 && o <= 36), a = a.toString().replace(/\\s+/g, \"\");\n      var h = 0;\n      a[0] === \"-\" && (h++, this.negative = 1), h < a.length && (o === 16 ? this._parseHex(a, h, u) : (this._parseBase(a, o, h), u === \"le\" && this._initArray(this.toArray(), o, u)));\n    }, n.prototype._initNumber = function(a, o, u) {\n      a < 0 && (this.negative = 1, a = -a), a < 67108864 ? (this.words = [a & 67108863], this.length = 1) : a < 4503599627370496 ? (this.words = [\n        a & 67108863,\n        a / 67108864 & 67108863\n      ], this.length = 2) : (i(a < 9007199254740992), this.words = [\n        a & 67108863,\n        a / 67108864 & 67108863,\n        1\n      ], this.length = 3), u === \"le\" && this._initArray(this.toArray(), o, u);\n    }, n.prototype._initArray = function(a, o, u) {\n      if (i(typeof a.length == \"number\"), a.length <= 0)\n        return this.words = [0], this.length = 1, this;\n      this.length = Math.ceil(a.length / 3), this.words = new Array(this.length);\n      for (var h = 0; h < this.length; h++)\n        this.words[h] = 0;\n      var v, g, l = 0;\n      if (u === \"be\")\n        for (h = a.length - 1, v = 0; h >= 0; h -= 3)\n          g = a[h] | a[h - 1] << 8 | a[h - 2] << 16, this.words[v] |= g << l & 67108863, this.words[v + 1] = g >>> 26 - l & 67108863, l += 24, l >= 26 && (l -= 26, v++);\n      else if (u === \"le\")\n        for (h = 0, v = 0; h < a.length; h += 3)\n          g = a[h] | a[h + 1] << 8 | a[h + 2] << 16, this.words[v] |= g << l & 67108863, this.words[v + 1] = g >>> 26 - l & 67108863, l += 24, l >= 26 && (l -= 26, v++);\n      return this._strip();\n    };\n    function m(s, a) {\n      var o = s.charCodeAt(a);\n      if (o >= 48 && o <= 57)\n        return o - 48;\n      if (o >= 65 && o <= 70)\n        return o - 55;\n      if (o >= 97 && o <= 102)\n        return o - 87;\n      i(!1, \"Invalid character in \" + s);\n    }\n    function k(s, a, o) {\n      var u = m(s, o);\n      return o - 1 >= a && (u |= m(s, o - 1) << 4), u;\n    }\n    n.prototype._parseHex = function(a, o, u) {\n      this.length = Math.ceil((a.length - o) / 6), this.words = new Array(this.length);\n      for (var h = 0; h < this.length; h++)\n        this.words[h] = 0;\n      var v = 0, g = 0, l;\n      if (u === \"be\")\n        for (h = a.length - 1; h >= o; h -= 2)\n          l = k(a, o, h) << v, this.words[g] |= l & 67108863, v >= 18 ? (v -= 18, g += 1, this.words[g] |= l >>> 26) : v += 8;\n      else {\n        var d = a.length - o;\n        for (h = d % 2 === 0 ? o + 1 : o; h < a.length; h += 2)\n          l = k(a, o, h) << v, this.words[g] |= l & 67108863, v >= 18 ? (v -= 18, g += 1, this.words[g] |= l >>> 26) : v += 8;\n      }\n      this._strip();\n    };\n    function B(s, a, o, u) {\n      for (var h = 0, v = 0, g = Math.min(s.length, o), l = a; l < g; l++) {\n        var d = s.charCodeAt(l) - 48;\n        h *= u, d >= 49 ? v = d - 49 + 10 : d >= 17 ? v = d - 17 + 10 : v = d, i(d >= 0 && v < u, \"Invalid character\"), h += v;\n      }\n      return h;\n    }\n    n.prototype._parseBase = function(a, o, u) {\n      this.words = [0], this.length = 1;\n      for (var h = 0, v = 1; v <= 67108863; v *= o)\n        h++;\n      h--, v = v / o | 0;\n      for (var g = a.length - u, l = g % h, d = Math.min(g, g - l) + u, f = 0, b = u; b < d; b += h)\n        f = B(a, b, b + h, o), this.imuln(v), this.words[0] + f < 67108864 ? this.words[0] += f : this._iaddn(f);\n      if (l !== 0) {\n        var E = 1;\n        for (f = B(a, b, a.length, o), b = 0; b < l; b++)\n          E *= o;\n        this.imuln(E), this.words[0] + f < 67108864 ? this.words[0] += f : this._iaddn(f);\n      }\n      this._strip();\n    }, n.prototype.copy = function(a) {\n      a.words = new Array(this.length);\n      for (var o = 0; o < this.length; o++)\n        a.words[o] = this.words[o];\n      a.length = this.length, a.negative = this.negative, a.red = this.red;\n    };\n    function z(s, a) {\n      s.words = a.words, s.length = a.length, s.negative = a.negative, s.red = a.red;\n    }\n    if (n.prototype._move = function(a) {\n      z(a, this);\n    }, n.prototype.clone = function() {\n      var a = new n(null);\n      return this.copy(a), a;\n    }, n.prototype._expand = function(a) {\n      for (; this.length < a; )\n        this.words[this.length++] = 0;\n      return this;\n    }, n.prototype._strip = function() {\n      for (; this.length > 1 && this.words[this.length - 1] === 0; )\n        this.length--;\n      return this._normSign();\n    }, n.prototype._normSign = function() {\n      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;\n    }, typeof Symbol < \"u\" && typeof Symbol.for == \"function\")\n      try {\n        n.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = C;\n      } catch {\n        n.prototype.inspect = C;\n      }\n    else\n      n.prototype.inspect = C;\n    function C() {\n      return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n    }\n    var F = [\n      \"\",\n      \"0\",\n      \"00\",\n      \"000\",\n      \"0000\",\n      \"00000\",\n      \"000000\",\n      \"0000000\",\n      \"00000000\",\n      \"000000000\",\n      \"0000000000\",\n      \"00000000000\",\n      \"000000000000\",\n      \"0000000000000\",\n      \"00000000000000\",\n      \"000000000000000\",\n      \"0000000000000000\",\n      \"00000000000000000\",\n      \"000000000000000000\",\n      \"0000000000000000000\",\n      \"00000000000000000000\",\n      \"000000000000000000000\",\n      \"0000000000000000000000\",\n      \"00000000000000000000000\",\n      \"000000000000000000000000\",\n      \"0000000000000000000000000\"\n    ], T = [\n      0,\n      0,\n      25,\n      16,\n      12,\n      11,\n      10,\n      9,\n      8,\n      8,\n      7,\n      7,\n      7,\n      7,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5\n    ], L = [\n      0,\n      0,\n      33554432,\n      43046721,\n      16777216,\n      48828125,\n      60466176,\n      40353607,\n      16777216,\n      43046721,\n      1e7,\n      19487171,\n      35831808,\n      62748517,\n      7529536,\n      11390625,\n      16777216,\n      24137569,\n      34012224,\n      47045881,\n      64e6,\n      4084101,\n      5153632,\n      6436343,\n      7962624,\n      9765625,\n      11881376,\n      14348907,\n      17210368,\n      20511149,\n      243e5,\n      28629151,\n      33554432,\n      39135393,\n      45435424,\n      52521875,\n      60466176\n    ];\n    n.prototype.toString = function(a, o) {\n      a = a || 10, o = o | 0 || 1;\n      var u;\n      if (a === 16 || a === \"hex\") {\n        u = \"\";\n        for (var h = 0, v = 0, g = 0; g < this.length; g++) {\n          var l = this.words[g], d = ((l << h | v) & 16777215).toString(16);\n          v = l >>> 24 - h & 16777215, v !== 0 || g !== this.length - 1 ? u = F[6 - d.length] + d + u : u = d + u, h += 2, h >= 26 && (h -= 26, g--);\n        }\n        for (v !== 0 && (u = v.toString(16) + u); u.length % o !== 0; )\n          u = \"0\" + u;\n        return this.negative !== 0 && (u = \"-\" + u), u;\n      }\n      if (a === (a | 0) && a >= 2 && a <= 36) {\n        var f = T[a], b = L[a];\n        u = \"\";\n        var E = this.clone();\n        for (E.negative = 0; !E.isZero(); ) {\n          var y = E.modrn(b).toString(a);\n          E = E.idivn(b), E.isZero() ? u = y + u : u = F[f - y.length] + y + u;\n        }\n        for (this.isZero() && (u = \"0\" + u); u.length % o !== 0; )\n          u = \"0\" + u;\n        return this.negative !== 0 && (u = \"-\" + u), u;\n      }\n      i(!1, \"Base should be between 2 and 36\");\n    }, n.prototype.toNumber = function() {\n      var a = this.words[0];\n      return this.length === 2 ? a += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? a += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i(!1, \"Number can only safely store up to 53 bits\"), this.negative !== 0 ? -a : a;\n    }, n.prototype.toJSON = function() {\n      return this.toString(16, 2);\n    }, x && (n.prototype.toBuffer = function(a, o) {\n      return this.toArrayLike(x, a, o);\n    }), n.prototype.toArray = function(a, o) {\n      return this.toArrayLike(Array, a, o);\n    };\n    var O = function(a, o) {\n      return a.allocUnsafe ? a.allocUnsafe(o) : new a(o);\n    };\n    n.prototype.toArrayLike = function(a, o, u) {\n      this._strip();\n      var h = this.byteLength(), v = u || Math.max(1, h);\n      i(h <= v, \"byte array longer than desired length\"), i(v > 0, \"Requested array length <= 0\");\n      var g = O(a, v), l = o === \"le\" ? \"LE\" : \"BE\";\n      return this[\"_toArrayLike\" + l](g, h), g;\n    }, n.prototype._toArrayLikeLE = function(a, o) {\n      for (var u = 0, h = 0, v = 0, g = 0; v < this.length; v++) {\n        var l = this.words[v] << g | h;\n        a[u++] = l & 255, u < a.length && (a[u++] = l >> 8 & 255), u < a.length && (a[u++] = l >> 16 & 255), g === 6 ? (u < a.length && (a[u++] = l >> 24 & 255), h = 0, g = 0) : (h = l >>> 24, g += 2);\n      }\n      if (u < a.length)\n        for (a[u++] = h; u < a.length; )\n          a[u++] = 0;\n    }, n.prototype._toArrayLikeBE = function(a, o) {\n      for (var u = a.length - 1, h = 0, v = 0, g = 0; v < this.length; v++) {\n        var l = this.words[v] << g | h;\n        a[u--] = l & 255, u >= 0 && (a[u--] = l >> 8 & 255), u >= 0 && (a[u--] = l >> 16 & 255), g === 6 ? (u >= 0 && (a[u--] = l >> 24 & 255), h = 0, g = 0) : (h = l >>> 24, g += 2);\n      }\n      if (u >= 0)\n        for (a[u--] = h; u >= 0; )\n          a[u--] = 0;\n    }, Math.clz32 ? n.prototype._countBits = function(a) {\n      return 32 - Math.clz32(a);\n    } : n.prototype._countBits = function(a) {\n      var o = a, u = 0;\n      return o >= 4096 && (u += 13, o >>>= 13), o >= 64 && (u += 7, o >>>= 7), o >= 8 && (u += 4, o >>>= 4), o >= 2 && (u += 2, o >>>= 2), u + o;\n    }, n.prototype._zeroBits = function(a) {\n      if (a === 0)\n        return 26;\n      var o = a, u = 0;\n      return o & 8191 || (u += 13, o >>>= 13), o & 127 || (u += 7, o >>>= 7), o & 15 || (u += 4, o >>>= 4), o & 3 || (u += 2, o >>>= 2), o & 1 || u++, u;\n    }, n.prototype.bitLength = function() {\n      var a = this.words[this.length - 1], o = this._countBits(a);\n      return (this.length - 1) * 26 + o;\n    };\n    function q(s) {\n      for (var a = new Array(s.bitLength()), o = 0; o < a.length; o++) {\n        var u = o / 26 | 0, h = o % 26;\n        a[o] = s.words[u] >>> h & 1;\n      }\n      return a;\n    }\n    n.prototype.zeroBits = function() {\n      if (this.isZero())\n        return 0;\n      for (var a = 0, o = 0; o < this.length; o++) {\n        var u = this._zeroBits(this.words[o]);\n        if (a += u, u !== 26)\n          break;\n      }\n      return a;\n    }, n.prototype.byteLength = function() {\n      return Math.ceil(this.bitLength() / 8);\n    }, n.prototype.toTwos = function(a) {\n      return this.negative !== 0 ? this.abs().inotn(a).iaddn(1) : this.clone();\n    }, n.prototype.fromTwos = function(a) {\n      return this.testn(a - 1) ? this.notn(a).iaddn(1).ineg() : this.clone();\n    }, n.prototype.isNeg = function() {\n      return this.negative !== 0;\n    }, n.prototype.neg = function() {\n      return this.clone().ineg();\n    }, n.prototype.ineg = function() {\n      return this.isZero() || (this.negative ^= 1), this;\n    }, n.prototype.iuor = function(a) {\n      for (; this.length < a.length; )\n        this.words[this.length++] = 0;\n      for (var o = 0; o < a.length; o++)\n        this.words[o] = this.words[o] | a.words[o];\n      return this._strip();\n    }, n.prototype.ior = function(a) {\n      return i((this.negative | a.negative) === 0), this.iuor(a);\n    }, n.prototype.or = function(a) {\n      return this.length > a.length ? this.clone().ior(a) : a.clone().ior(this);\n    }, n.prototype.uor = function(a) {\n      return this.length > a.length ? this.clone().iuor(a) : a.clone().iuor(this);\n    }, n.prototype.iuand = function(a) {\n      var o;\n      this.length > a.length ? o = a : o = this;\n      for (var u = 0; u < o.length; u++)\n        this.words[u] = this.words[u] & a.words[u];\n      return this.length = o.length, this._strip();\n    }, n.prototype.iand = function(a) {\n      return i((this.negative | a.negative) === 0), this.iuand(a);\n    }, n.prototype.and = function(a) {\n      return this.length > a.length ? this.clone().iand(a) : a.clone().iand(this);\n    }, n.prototype.uand = function(a) {\n      return this.length > a.length ? this.clone().iuand(a) : a.clone().iuand(this);\n    }, n.prototype.iuxor = function(a) {\n      var o, u;\n      this.length > a.length ? (o = this, u = a) : (o = a, u = this);\n      for (var h = 0; h < u.length; h++)\n        this.words[h] = o.words[h] ^ u.words[h];\n      if (this !== o)\n        for (; h < o.length; h++)\n          this.words[h] = o.words[h];\n      return this.length = o.length, this._strip();\n    }, n.prototype.ixor = function(a) {\n      return i((this.negative | a.negative) === 0), this.iuxor(a);\n    }, n.prototype.xor = function(a) {\n      return this.length > a.length ? this.clone().ixor(a) : a.clone().ixor(this);\n    }, n.prototype.uxor = function(a) {\n      return this.length > a.length ? this.clone().iuxor(a) : a.clone().iuxor(this);\n    }, n.prototype.inotn = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = Math.ceil(a / 26) | 0, u = a % 26;\n      this._expand(o), u > 0 && o--;\n      for (var h = 0; h < o; h++)\n        this.words[h] = ~this.words[h] & 67108863;\n      return u > 0 && (this.words[h] = ~this.words[h] & 67108863 >> 26 - u), this._strip();\n    }, n.prototype.notn = function(a) {\n      return this.clone().inotn(a);\n    }, n.prototype.setn = function(a, o) {\n      i(typeof a == \"number\" && a >= 0);\n      var u = a / 26 | 0, h = a % 26;\n      return this._expand(u + 1), o ? this.words[u] = this.words[u] | 1 << h : this.words[u] = this.words[u] & ~(1 << h), this._strip();\n    }, n.prototype.iadd = function(a) {\n      var o;\n      if (this.negative !== 0 && a.negative === 0)\n        return this.negative = 0, o = this.isub(a), this.negative ^= 1, this._normSign();\n      if (this.negative === 0 && a.negative !== 0)\n        return a.negative = 0, o = this.isub(a), a.negative = 1, o._normSign();\n      var u, h;\n      this.length > a.length ? (u = this, h = a) : (u = a, h = this);\n      for (var v = 0, g = 0; g < h.length; g++)\n        o = (u.words[g] | 0) + (h.words[g] | 0) + v, this.words[g] = o & 67108863, v = o >>> 26;\n      for (; v !== 0 && g < u.length; g++)\n        o = (u.words[g] | 0) + v, this.words[g] = o & 67108863, v = o >>> 26;\n      if (this.length = u.length, v !== 0)\n        this.words[this.length] = v, this.length++;\n      else if (u !== this)\n        for (; g < u.length; g++)\n          this.words[g] = u.words[g];\n      return this;\n    }, n.prototype.add = function(a) {\n      var o;\n      return a.negative !== 0 && this.negative === 0 ? (a.negative = 0, o = this.sub(a), a.negative ^= 1, o) : a.negative === 0 && this.negative !== 0 ? (this.negative = 0, o = a.sub(this), this.negative = 1, o) : this.length > a.length ? this.clone().iadd(a) : a.clone().iadd(this);\n    }, n.prototype.isub = function(a) {\n      if (a.negative !== 0) {\n        a.negative = 0;\n        var o = this.iadd(a);\n        return a.negative = 1, o._normSign();\n      } else if (this.negative !== 0)\n        return this.negative = 0, this.iadd(a), this.negative = 1, this._normSign();\n      var u = this.cmp(a);\n      if (u === 0)\n        return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n      var h, v;\n      u > 0 ? (h = this, v = a) : (h = a, v = this);\n      for (var g = 0, l = 0; l < v.length; l++)\n        o = (h.words[l] | 0) - (v.words[l] | 0) + g, g = o >> 26, this.words[l] = o & 67108863;\n      for (; g !== 0 && l < h.length; l++)\n        o = (h.words[l] | 0) + g, g = o >> 26, this.words[l] = o & 67108863;\n      if (g === 0 && l < h.length && h !== this)\n        for (; l < h.length; l++)\n          this.words[l] = h.words[l];\n      return this.length = Math.max(this.length, l), h !== this && (this.negative = 1), this._strip();\n    }, n.prototype.sub = function(a) {\n      return this.clone().isub(a);\n    };\n    function R(s, a, o) {\n      o.negative = a.negative ^ s.negative;\n      var u = s.length + a.length | 0;\n      o.length = u, u = u - 1 | 0;\n      var h = s.words[0] | 0, v = a.words[0] | 0, g = h * v, l = g & 67108863, d = g / 67108864 | 0;\n      o.words[0] = l;\n      for (var f = 1; f < u; f++) {\n        for (var b = d >>> 26, E = d & 67108863, y = Math.min(f, a.length - 1), S = Math.max(0, f - s.length + 1); S <= y; S++) {\n          var I = f - S | 0;\n          h = s.words[I] | 0, v = a.words[S] | 0, g = h * v + E, b += g / 67108864 | 0, E = g & 67108863;\n        }\n        o.words[f] = E | 0, d = b | 0;\n      }\n      return d !== 0 ? o.words[f] = d | 0 : o.length--, o._strip();\n    }\n    var U = function(a, o, u) {\n      var h = a.words, v = o.words, g = u.words, l = 0, d, f, b, E = h[0] | 0, y = E & 8191, S = E >>> 13, I = h[1] | 0, $ = I & 8191, K = I >>> 13, ae = h[2] | 0, j = ae & 8191, P = ae >>> 13, ie = h[3] | 0, te = ie & 8191, ce = ie >>> 13, ve = h[4] | 0, le = ve & 8191, he = ve >>> 13, fe = h[5] | 0, ze = fe & 8191, ge = fe >>> 13, Q = h[6] | 0, re = Q & 8191, oe = Q >>> 13, se = h[7] | 0, de = se & 8191, A = se >>> 13, w = h[8] | 0, _ = w & 8191, N = w >>> 13, J = h[9] | 0, X = J & 8191, ee = J >>> 13, xe = v[0] | 0, pe = xe & 8191, ue = xe >>> 13, Ie = v[1] | 0, me = Ie & 8191, we = Ie >>> 13, Ke = v[2] | 0, je = Ke & 8191, _e = Ke >>> 13, He = v[3] | 0, Pe = He & 8191, Me = He >>> 13, Ve = v[4] | 0, Oe = Ve & 8191, Se = Ve >>> 13, We = v[5] | 0, qe = We & 8191, ke = We >>> 13, Ge = v[6] | 0, Ne = Ge & 8191, Ee = Ge >>> 13, Ze = v[7] | 0, Fe = Ze & 8191, Ae = Ze >>> 13, Je = v[8] | 0, Ce = Je & 8191, Be = Je >>> 13, Ye = v[9] | 0, Re = Ye & 8191, Te = Ye >>> 13;\n      u.negative = a.negative ^ o.negative, u.length = 19, d = Math.imul(y, pe), f = Math.imul(y, ue), f = f + Math.imul(S, pe) | 0, b = Math.imul(S, ue);\n      var cr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (cr >>> 26) | 0, cr &= 67108863, d = Math.imul($, pe), f = Math.imul($, ue), f = f + Math.imul(K, pe) | 0, b = Math.imul(K, ue), d = d + Math.imul(y, me) | 0, f = f + Math.imul(y, we) | 0, f = f + Math.imul(S, me) | 0, b = b + Math.imul(S, we) | 0;\n      var dr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (dr >>> 26) | 0, dr &= 67108863, d = Math.imul(j, pe), f = Math.imul(j, ue), f = f + Math.imul(P, pe) | 0, b = Math.imul(P, ue), d = d + Math.imul($, me) | 0, f = f + Math.imul($, we) | 0, f = f + Math.imul(K, me) | 0, b = b + Math.imul(K, we) | 0, d = d + Math.imul(y, je) | 0, f = f + Math.imul(y, _e) | 0, f = f + Math.imul(S, je) | 0, b = b + Math.imul(S, _e) | 0;\n      var sr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (sr >>> 26) | 0, sr &= 67108863, d = Math.imul(te, pe), f = Math.imul(te, ue), f = f + Math.imul(ce, pe) | 0, b = Math.imul(ce, ue), d = d + Math.imul(j, me) | 0, f = f + Math.imul(j, we) | 0, f = f + Math.imul(P, me) | 0, b = b + Math.imul(P, we) | 0, d = d + Math.imul($, je) | 0, f = f + Math.imul($, _e) | 0, f = f + Math.imul(K, je) | 0, b = b + Math.imul(K, _e) | 0, d = d + Math.imul(y, Pe) | 0, f = f + Math.imul(y, Me) | 0, f = f + Math.imul(S, Pe) | 0, b = b + Math.imul(S, Me) | 0;\n      var ur = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (ur >>> 26) | 0, ur &= 67108863, d = Math.imul(le, pe), f = Math.imul(le, ue), f = f + Math.imul(he, pe) | 0, b = Math.imul(he, ue), d = d + Math.imul(te, me) | 0, f = f + Math.imul(te, we) | 0, f = f + Math.imul(ce, me) | 0, b = b + Math.imul(ce, we) | 0, d = d + Math.imul(j, je) | 0, f = f + Math.imul(j, _e) | 0, f = f + Math.imul(P, je) | 0, b = b + Math.imul(P, _e) | 0, d = d + Math.imul($, Pe) | 0, f = f + Math.imul($, Me) | 0, f = f + Math.imul(K, Pe) | 0, b = b + Math.imul(K, Me) | 0, d = d + Math.imul(y, Oe) | 0, f = f + Math.imul(y, Se) | 0, f = f + Math.imul(S, Oe) | 0, b = b + Math.imul(S, Se) | 0;\n      var lr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (lr >>> 26) | 0, lr &= 67108863, d = Math.imul(ze, pe), f = Math.imul(ze, ue), f = f + Math.imul(ge, pe) | 0, b = Math.imul(ge, ue), d = d + Math.imul(le, me) | 0, f = f + Math.imul(le, we) | 0, f = f + Math.imul(he, me) | 0, b = b + Math.imul(he, we) | 0, d = d + Math.imul(te, je) | 0, f = f + Math.imul(te, _e) | 0, f = f + Math.imul(ce, je) | 0, b = b + Math.imul(ce, _e) | 0, d = d + Math.imul(j, Pe) | 0, f = f + Math.imul(j, Me) | 0, f = f + Math.imul(P, Pe) | 0, b = b + Math.imul(P, Me) | 0, d = d + Math.imul($, Oe) | 0, f = f + Math.imul($, Se) | 0, f = f + Math.imul(K, Oe) | 0, b = b + Math.imul(K, Se) | 0, d = d + Math.imul(y, qe) | 0, f = f + Math.imul(y, ke) | 0, f = f + Math.imul(S, qe) | 0, b = b + Math.imul(S, ke) | 0;\n      var Rr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Rr >>> 26) | 0, Rr &= 67108863, d = Math.imul(re, pe), f = Math.imul(re, ue), f = f + Math.imul(oe, pe) | 0, b = Math.imul(oe, ue), d = d + Math.imul(ze, me) | 0, f = f + Math.imul(ze, we) | 0, f = f + Math.imul(ge, me) | 0, b = b + Math.imul(ge, we) | 0, d = d + Math.imul(le, je) | 0, f = f + Math.imul(le, _e) | 0, f = f + Math.imul(he, je) | 0, b = b + Math.imul(he, _e) | 0, d = d + Math.imul(te, Pe) | 0, f = f + Math.imul(te, Me) | 0, f = f + Math.imul(ce, Pe) | 0, b = b + Math.imul(ce, Me) | 0, d = d + Math.imul(j, Oe) | 0, f = f + Math.imul(j, Se) | 0, f = f + Math.imul(P, Oe) | 0, b = b + Math.imul(P, Se) | 0, d = d + Math.imul($, qe) | 0, f = f + Math.imul($, ke) | 0, f = f + Math.imul(K, qe) | 0, b = b + Math.imul(K, ke) | 0, d = d + Math.imul(y, Ne) | 0, f = f + Math.imul(y, Ee) | 0, f = f + Math.imul(S, Ne) | 0, b = b + Math.imul(S, Ee) | 0;\n      var Tr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Tr >>> 26) | 0, Tr &= 67108863, d = Math.imul(de, pe), f = Math.imul(de, ue), f = f + Math.imul(A, pe) | 0, b = Math.imul(A, ue), d = d + Math.imul(re, me) | 0, f = f + Math.imul(re, we) | 0, f = f + Math.imul(oe, me) | 0, b = b + Math.imul(oe, we) | 0, d = d + Math.imul(ze, je) | 0, f = f + Math.imul(ze, _e) | 0, f = f + Math.imul(ge, je) | 0, b = b + Math.imul(ge, _e) | 0, d = d + Math.imul(le, Pe) | 0, f = f + Math.imul(le, Me) | 0, f = f + Math.imul(he, Pe) | 0, b = b + Math.imul(he, Me) | 0, d = d + Math.imul(te, Oe) | 0, f = f + Math.imul(te, Se) | 0, f = f + Math.imul(ce, Oe) | 0, b = b + Math.imul(ce, Se) | 0, d = d + Math.imul(j, qe) | 0, f = f + Math.imul(j, ke) | 0, f = f + Math.imul(P, qe) | 0, b = b + Math.imul(P, ke) | 0, d = d + Math.imul($, Ne) | 0, f = f + Math.imul($, Ee) | 0, f = f + Math.imul(K, Ne) | 0, b = b + Math.imul(K, Ee) | 0, d = d + Math.imul(y, Fe) | 0, f = f + Math.imul(y, Ae) | 0, f = f + Math.imul(S, Fe) | 0, b = b + Math.imul(S, Ae) | 0;\n      var jr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (jr >>> 26) | 0, jr &= 67108863, d = Math.imul(_, pe), f = Math.imul(_, ue), f = f + Math.imul(N, pe) | 0, b = Math.imul(N, ue), d = d + Math.imul(de, me) | 0, f = f + Math.imul(de, we) | 0, f = f + Math.imul(A, me) | 0, b = b + Math.imul(A, we) | 0, d = d + Math.imul(re, je) | 0, f = f + Math.imul(re, _e) | 0, f = f + Math.imul(oe, je) | 0, b = b + Math.imul(oe, _e) | 0, d = d + Math.imul(ze, Pe) | 0, f = f + Math.imul(ze, Me) | 0, f = f + Math.imul(ge, Pe) | 0, b = b + Math.imul(ge, Me) | 0, d = d + Math.imul(le, Oe) | 0, f = f + Math.imul(le, Se) | 0, f = f + Math.imul(he, Oe) | 0, b = b + Math.imul(he, Se) | 0, d = d + Math.imul(te, qe) | 0, f = f + Math.imul(te, ke) | 0, f = f + Math.imul(ce, qe) | 0, b = b + Math.imul(ce, ke) | 0, d = d + Math.imul(j, Ne) | 0, f = f + Math.imul(j, Ee) | 0, f = f + Math.imul(P, Ne) | 0, b = b + Math.imul(P, Ee) | 0, d = d + Math.imul($, Fe) | 0, f = f + Math.imul($, Ae) | 0, f = f + Math.imul(K, Fe) | 0, b = b + Math.imul(K, Ae) | 0, d = d + Math.imul(y, Ce) | 0, f = f + Math.imul(y, Be) | 0, f = f + Math.imul(S, Ce) | 0, b = b + Math.imul(S, Be) | 0;\n      var Pr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Pr >>> 26) | 0, Pr &= 67108863, d = Math.imul(X, pe), f = Math.imul(X, ue), f = f + Math.imul(ee, pe) | 0, b = Math.imul(ee, ue), d = d + Math.imul(_, me) | 0, f = f + Math.imul(_, we) | 0, f = f + Math.imul(N, me) | 0, b = b + Math.imul(N, we) | 0, d = d + Math.imul(de, je) | 0, f = f + Math.imul(de, _e) | 0, f = f + Math.imul(A, je) | 0, b = b + Math.imul(A, _e) | 0, d = d + Math.imul(re, Pe) | 0, f = f + Math.imul(re, Me) | 0, f = f + Math.imul(oe, Pe) | 0, b = b + Math.imul(oe, Me) | 0, d = d + Math.imul(ze, Oe) | 0, f = f + Math.imul(ze, Se) | 0, f = f + Math.imul(ge, Oe) | 0, b = b + Math.imul(ge, Se) | 0, d = d + Math.imul(le, qe) | 0, f = f + Math.imul(le, ke) | 0, f = f + Math.imul(he, qe) | 0, b = b + Math.imul(he, ke) | 0, d = d + Math.imul(te, Ne) | 0, f = f + Math.imul(te, Ee) | 0, f = f + Math.imul(ce, Ne) | 0, b = b + Math.imul(ce, Ee) | 0, d = d + Math.imul(j, Fe) | 0, f = f + Math.imul(j, Ae) | 0, f = f + Math.imul(P, Fe) | 0, b = b + Math.imul(P, Ae) | 0, d = d + Math.imul($, Ce) | 0, f = f + Math.imul($, Be) | 0, f = f + Math.imul(K, Ce) | 0, b = b + Math.imul(K, Be) | 0, d = d + Math.imul(y, Re) | 0, f = f + Math.imul(y, Te) | 0, f = f + Math.imul(S, Re) | 0, b = b + Math.imul(S, Te) | 0;\n      var Or = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Or >>> 26) | 0, Or &= 67108863, d = Math.imul(X, me), f = Math.imul(X, we), f = f + Math.imul(ee, me) | 0, b = Math.imul(ee, we), d = d + Math.imul(_, je) | 0, f = f + Math.imul(_, _e) | 0, f = f + Math.imul(N, je) | 0, b = b + Math.imul(N, _e) | 0, d = d + Math.imul(de, Pe) | 0, f = f + Math.imul(de, Me) | 0, f = f + Math.imul(A, Pe) | 0, b = b + Math.imul(A, Me) | 0, d = d + Math.imul(re, Oe) | 0, f = f + Math.imul(re, Se) | 0, f = f + Math.imul(oe, Oe) | 0, b = b + Math.imul(oe, Se) | 0, d = d + Math.imul(ze, qe) | 0, f = f + Math.imul(ze, ke) | 0, f = f + Math.imul(ge, qe) | 0, b = b + Math.imul(ge, ke) | 0, d = d + Math.imul(le, Ne) | 0, f = f + Math.imul(le, Ee) | 0, f = f + Math.imul(he, Ne) | 0, b = b + Math.imul(he, Ee) | 0, d = d + Math.imul(te, Fe) | 0, f = f + Math.imul(te, Ae) | 0, f = f + Math.imul(ce, Fe) | 0, b = b + Math.imul(ce, Ae) | 0, d = d + Math.imul(j, Ce) | 0, f = f + Math.imul(j, Be) | 0, f = f + Math.imul(P, Ce) | 0, b = b + Math.imul(P, Be) | 0, d = d + Math.imul($, Re) | 0, f = f + Math.imul($, Te) | 0, f = f + Math.imul(K, Re) | 0, b = b + Math.imul(K, Te) | 0;\n      var qr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (qr >>> 26) | 0, qr &= 67108863, d = Math.imul(X, je), f = Math.imul(X, _e), f = f + Math.imul(ee, je) | 0, b = Math.imul(ee, _e), d = d + Math.imul(_, Pe) | 0, f = f + Math.imul(_, Me) | 0, f = f + Math.imul(N, Pe) | 0, b = b + Math.imul(N, Me) | 0, d = d + Math.imul(de, Oe) | 0, f = f + Math.imul(de, Se) | 0, f = f + Math.imul(A, Oe) | 0, b = b + Math.imul(A, Se) | 0, d = d + Math.imul(re, qe) | 0, f = f + Math.imul(re, ke) | 0, f = f + Math.imul(oe, qe) | 0, b = b + Math.imul(oe, ke) | 0, d = d + Math.imul(ze, Ne) | 0, f = f + Math.imul(ze, Ee) | 0, f = f + Math.imul(ge, Ne) | 0, b = b + Math.imul(ge, Ee) | 0, d = d + Math.imul(le, Fe) | 0, f = f + Math.imul(le, Ae) | 0, f = f + Math.imul(he, Fe) | 0, b = b + Math.imul(he, Ae) | 0, d = d + Math.imul(te, Ce) | 0, f = f + Math.imul(te, Be) | 0, f = f + Math.imul(ce, Ce) | 0, b = b + Math.imul(ce, Be) | 0, d = d + Math.imul(j, Re) | 0, f = f + Math.imul(j, Te) | 0, f = f + Math.imul(P, Re) | 0, b = b + Math.imul(P, Te) | 0;\n      var Nr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Nr >>> 26) | 0, Nr &= 67108863, d = Math.imul(X, Pe), f = Math.imul(X, Me), f = f + Math.imul(ee, Pe) | 0, b = Math.imul(ee, Me), d = d + Math.imul(_, Oe) | 0, f = f + Math.imul(_, Se) | 0, f = f + Math.imul(N, Oe) | 0, b = b + Math.imul(N, Se) | 0, d = d + Math.imul(de, qe) | 0, f = f + Math.imul(de, ke) | 0, f = f + Math.imul(A, qe) | 0, b = b + Math.imul(A, ke) | 0, d = d + Math.imul(re, Ne) | 0, f = f + Math.imul(re, Ee) | 0, f = f + Math.imul(oe, Ne) | 0, b = b + Math.imul(oe, Ee) | 0, d = d + Math.imul(ze, Fe) | 0, f = f + Math.imul(ze, Ae) | 0, f = f + Math.imul(ge, Fe) | 0, b = b + Math.imul(ge, Ae) | 0, d = d + Math.imul(le, Ce) | 0, f = f + Math.imul(le, Be) | 0, f = f + Math.imul(he, Ce) | 0, b = b + Math.imul(he, Be) | 0, d = d + Math.imul(te, Re) | 0, f = f + Math.imul(te, Te) | 0, f = f + Math.imul(ce, Re) | 0, b = b + Math.imul(ce, Te) | 0;\n      var Fr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Fr >>> 26) | 0, Fr &= 67108863, d = Math.imul(X, Oe), f = Math.imul(X, Se), f = f + Math.imul(ee, Oe) | 0, b = Math.imul(ee, Se), d = d + Math.imul(_, qe) | 0, f = f + Math.imul(_, ke) | 0, f = f + Math.imul(N, qe) | 0, b = b + Math.imul(N, ke) | 0, d = d + Math.imul(de, Ne) | 0, f = f + Math.imul(de, Ee) | 0, f = f + Math.imul(A, Ne) | 0, b = b + Math.imul(A, Ee) | 0, d = d + Math.imul(re, Fe) | 0, f = f + Math.imul(re, Ae) | 0, f = f + Math.imul(oe, Fe) | 0, b = b + Math.imul(oe, Ae) | 0, d = d + Math.imul(ze, Ce) | 0, f = f + Math.imul(ze, Be) | 0, f = f + Math.imul(ge, Ce) | 0, b = b + Math.imul(ge, Be) | 0, d = d + Math.imul(le, Re) | 0, f = f + Math.imul(le, Te) | 0, f = f + Math.imul(he, Re) | 0, b = b + Math.imul(he, Te) | 0;\n      var Cr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Cr >>> 26) | 0, Cr &= 67108863, d = Math.imul(X, qe), f = Math.imul(X, ke), f = f + Math.imul(ee, qe) | 0, b = Math.imul(ee, ke), d = d + Math.imul(_, Ne) | 0, f = f + Math.imul(_, Ee) | 0, f = f + Math.imul(N, Ne) | 0, b = b + Math.imul(N, Ee) | 0, d = d + Math.imul(de, Fe) | 0, f = f + Math.imul(de, Ae) | 0, f = f + Math.imul(A, Fe) | 0, b = b + Math.imul(A, Ae) | 0, d = d + Math.imul(re, Ce) | 0, f = f + Math.imul(re, Be) | 0, f = f + Math.imul(oe, Ce) | 0, b = b + Math.imul(oe, Be) | 0, d = d + Math.imul(ze, Re) | 0, f = f + Math.imul(ze, Te) | 0, f = f + Math.imul(ge, Re) | 0, b = b + Math.imul(ge, Te) | 0;\n      var at = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (at >>> 26) | 0, at &= 67108863, d = Math.imul(X, Ne), f = Math.imul(X, Ee), f = f + Math.imul(ee, Ne) | 0, b = Math.imul(ee, Ee), d = d + Math.imul(_, Fe) | 0, f = f + Math.imul(_, Ae) | 0, f = f + Math.imul(N, Fe) | 0, b = b + Math.imul(N, Ae) | 0, d = d + Math.imul(de, Ce) | 0, f = f + Math.imul(de, Be) | 0, f = f + Math.imul(A, Ce) | 0, b = b + Math.imul(A, Be) | 0, d = d + Math.imul(re, Re) | 0, f = f + Math.imul(re, Te) | 0, f = f + Math.imul(oe, Re) | 0, b = b + Math.imul(oe, Te) | 0;\n      var it = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (it >>> 26) | 0, it &= 67108863, d = Math.imul(X, Fe), f = Math.imul(X, Ae), f = f + Math.imul(ee, Fe) | 0, b = Math.imul(ee, Ae), d = d + Math.imul(_, Ce) | 0, f = f + Math.imul(_, Be) | 0, f = f + Math.imul(N, Ce) | 0, b = b + Math.imul(N, Be) | 0, d = d + Math.imul(de, Re) | 0, f = f + Math.imul(de, Te) | 0, f = f + Math.imul(A, Re) | 0, b = b + Math.imul(A, Te) | 0;\n      var nt = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (nt >>> 26) | 0, nt &= 67108863, d = Math.imul(X, Ce), f = Math.imul(X, Be), f = f + Math.imul(ee, Ce) | 0, b = Math.imul(ee, Be), d = d + Math.imul(_, Re) | 0, f = f + Math.imul(_, Te) | 0, f = f + Math.imul(N, Re) | 0, b = b + Math.imul(N, Te) | 0;\n      var Jt = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Jt >>> 26) | 0, Jt &= 67108863, d = Math.imul(X, Re), f = Math.imul(X, Te), f = f + Math.imul(ee, Re) | 0, b = Math.imul(ee, Te);\n      var Yt = (l + d | 0) + ((f & 8191) << 13) | 0;\n      return l = (b + (f >>> 13) | 0) + (Yt >>> 26) | 0, Yt &= 67108863, g[0] = cr, g[1] = dr, g[2] = sr, g[3] = ur, g[4] = lr, g[5] = Rr, g[6] = Tr, g[7] = jr, g[8] = Pr, g[9] = Or, g[10] = qr, g[11] = Nr, g[12] = Fr, g[13] = Cr, g[14] = at, g[15] = it, g[16] = nt, g[17] = Jt, g[18] = Yt, l !== 0 && (g[19] = l, u.length++), u;\n    };\n    Math.imul || (U = R);\n    function H(s, a, o) {\n      o.negative = a.negative ^ s.negative, o.length = s.length + a.length;\n      for (var u = 0, h = 0, v = 0; v < o.length - 1; v++) {\n        var g = h;\n        h = 0;\n        for (var l = u & 67108863, d = Math.min(v, a.length - 1), f = Math.max(0, v - s.length + 1); f <= d; f++) {\n          var b = v - f, E = s.words[b] | 0, y = a.words[f] | 0, S = E * y, I = S & 67108863;\n          g = g + (S / 67108864 | 0) | 0, I = I + l | 0, l = I & 67108863, g = g + (I >>> 26) | 0, h += g >>> 26, g &= 67108863;\n        }\n        o.words[v] = l, u = g, g = h;\n      }\n      return u !== 0 ? o.words[v] = u : o.length--, o._strip();\n    }\n    function Z(s, a, o) {\n      return H(s, a, o);\n    }\n    n.prototype.mulTo = function(a, o) {\n      var u, h = this.length + a.length;\n      return this.length === 10 && a.length === 10 ? u = U(this, a, o) : h < 63 ? u = R(this, a, o) : h < 1024 ? u = H(this, a, o) : u = Z(this, a, o), u;\n    }, n.prototype.mul = function(a) {\n      var o = new n(null);\n      return o.words = new Array(this.length + a.length), this.mulTo(a, o);\n    }, n.prototype.mulf = function(a) {\n      var o = new n(null);\n      return o.words = new Array(this.length + a.length), Z(this, a, o);\n    }, n.prototype.imul = function(a) {\n      return this.clone().mulTo(a, this);\n    }, n.prototype.imuln = function(a) {\n      var o = a < 0;\n      o && (a = -a), i(typeof a == \"number\"), i(a < 67108864);\n      for (var u = 0, h = 0; h < this.length; h++) {\n        var v = (this.words[h] | 0) * a, g = (v & 67108863) + (u & 67108863);\n        u >>= 26, u += v / 67108864 | 0, u += g >>> 26, this.words[h] = g & 67108863;\n      }\n      return u !== 0 && (this.words[h] = u, this.length++), o ? this.ineg() : this;\n    }, n.prototype.muln = function(a) {\n      return this.clone().imuln(a);\n    }, n.prototype.sqr = function() {\n      return this.mul(this);\n    }, n.prototype.isqr = function() {\n      return this.imul(this.clone());\n    }, n.prototype.pow = function(a) {\n      var o = q(a);\n      if (o.length === 0)\n        return new n(1);\n      for (var u = this, h = 0; h < o.length && o[h] === 0; h++, u = u.sqr())\n        ;\n      if (++h < o.length)\n        for (var v = u.sqr(); h < o.length; h++, v = v.sqr())\n          o[h] !== 0 && (u = u.mul(v));\n      return u;\n    }, n.prototype.iushln = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = a % 26, u = (a - o) / 26, h = 67108863 >>> 26 - o << 26 - o, v;\n      if (o !== 0) {\n        var g = 0;\n        for (v = 0; v < this.length; v++) {\n          var l = this.words[v] & h, d = (this.words[v] | 0) - l << o;\n          this.words[v] = d | g, g = l >>> 26 - o;\n        }\n        g && (this.words[v] = g, this.length++);\n      }\n      if (u !== 0) {\n        for (v = this.length - 1; v >= 0; v--)\n          this.words[v + u] = this.words[v];\n        for (v = 0; v < u; v++)\n          this.words[v] = 0;\n        this.length += u;\n      }\n      return this._strip();\n    }, n.prototype.ishln = function(a) {\n      return i(this.negative === 0), this.iushln(a);\n    }, n.prototype.iushrn = function(a, o, u) {\n      i(typeof a == \"number\" && a >= 0);\n      var h;\n      o ? h = (o - o % 26) / 26 : h = 0;\n      var v = a % 26, g = Math.min((a - v) / 26, this.length), l = 67108863 ^ 67108863 >>> v << v, d = u;\n      if (h -= g, h = Math.max(0, h), d) {\n        for (var f = 0; f < g; f++)\n          d.words[f] = this.words[f];\n        d.length = g;\n      }\n      if (g !== 0)\n        if (this.length > g)\n          for (this.length -= g, f = 0; f < this.length; f++)\n            this.words[f] = this.words[f + g];\n        else\n          this.words[0] = 0, this.length = 1;\n      var b = 0;\n      for (f = this.length - 1; f >= 0 && (b !== 0 || f >= h); f--) {\n        var E = this.words[f] | 0;\n        this.words[f] = b << 26 - v | E >>> v, b = E & l;\n      }\n      return d && b !== 0 && (d.words[d.length++] = b), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();\n    }, n.prototype.ishrn = function(a, o, u) {\n      return i(this.negative === 0), this.iushrn(a, o, u);\n    }, n.prototype.shln = function(a) {\n      return this.clone().ishln(a);\n    }, n.prototype.ushln = function(a) {\n      return this.clone().iushln(a);\n    }, n.prototype.shrn = function(a) {\n      return this.clone().ishrn(a);\n    }, n.prototype.ushrn = function(a) {\n      return this.clone().iushrn(a);\n    }, n.prototype.testn = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = a % 26, u = (a - o) / 26, h = 1 << o;\n      if (this.length <= u)\n        return !1;\n      var v = this.words[u];\n      return !!(v & h);\n    }, n.prototype.imaskn = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = a % 26, u = (a - o) / 26;\n      if (i(this.negative === 0, \"imaskn works only with positive numbers\"), this.length <= u)\n        return this;\n      if (o !== 0 && u++, this.length = Math.min(u, this.length), o !== 0) {\n        var h = 67108863 ^ 67108863 >>> o << o;\n        this.words[this.length - 1] &= h;\n      }\n      return this._strip();\n    }, n.prototype.maskn = function(a) {\n      return this.clone().imaskn(a);\n    }, n.prototype.iaddn = function(a) {\n      return i(typeof a == \"number\"), i(a < 67108864), a < 0 ? this.isubn(-a) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= a ? (this.words[0] = a - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(a), this.negative = 1, this) : this._iaddn(a);\n    }, n.prototype._iaddn = function(a) {\n      this.words[0] += a;\n      for (var o = 0; o < this.length && this.words[o] >= 67108864; o++)\n        this.words[o] -= 67108864, o === this.length - 1 ? this.words[o + 1] = 1 : this.words[o + 1]++;\n      return this.length = Math.max(this.length, o + 1), this;\n    }, n.prototype.isubn = function(a) {\n      if (i(typeof a == \"number\"), i(a < 67108864), a < 0)\n        return this.iaddn(-a);\n      if (this.negative !== 0)\n        return this.negative = 0, this.iaddn(a), this.negative = 1, this;\n      if (this.words[0] -= a, this.length === 1 && this.words[0] < 0)\n        this.words[0] = -this.words[0], this.negative = 1;\n      else\n        for (var o = 0; o < this.length && this.words[o] < 0; o++)\n          this.words[o] += 67108864, this.words[o + 1] -= 1;\n      return this._strip();\n    }, n.prototype.addn = function(a) {\n      return this.clone().iaddn(a);\n    }, n.prototype.subn = function(a) {\n      return this.clone().isubn(a);\n    }, n.prototype.iabs = function() {\n      return this.negative = 0, this;\n    }, n.prototype.abs = function() {\n      return this.clone().iabs();\n    }, n.prototype._ishlnsubmul = function(a, o, u) {\n      var h = a.length + u, v;\n      this._expand(h);\n      var g, l = 0;\n      for (v = 0; v < a.length; v++) {\n        g = (this.words[v + u] | 0) + l;\n        var d = (a.words[v] | 0) * o;\n        g -= d & 67108863, l = (g >> 26) - (d / 67108864 | 0), this.words[v + u] = g & 67108863;\n      }\n      for (; v < this.length - u; v++)\n        g = (this.words[v + u] | 0) + l, l = g >> 26, this.words[v + u] = g & 67108863;\n      if (l === 0)\n        return this._strip();\n      for (i(l === -1), l = 0, v = 0; v < this.length; v++)\n        g = -(this.words[v] | 0) + l, l = g >> 26, this.words[v] = g & 67108863;\n      return this.negative = 1, this._strip();\n    }, n.prototype._wordDiv = function(a, o) {\n      var u = this.length - a.length, h = this.clone(), v = a, g = v.words[v.length - 1] | 0, l = this._countBits(g);\n      u = 26 - l, u !== 0 && (v = v.ushln(u), h.iushln(u), g = v.words[v.length - 1] | 0);\n      var d = h.length - v.length, f;\n      if (o !== \"mod\") {\n        f = new n(null), f.length = d + 1, f.words = new Array(f.length);\n        for (var b = 0; b < f.length; b++)\n          f.words[b] = 0;\n      }\n      var E = h.clone()._ishlnsubmul(v, 1, d);\n      E.negative === 0 && (h = E, f && (f.words[d] = 1));\n      for (var y = d - 1; y >= 0; y--) {\n        var S = (h.words[v.length + y] | 0) * 67108864 + (h.words[v.length + y - 1] | 0);\n        for (S = Math.min(S / g | 0, 67108863), h._ishlnsubmul(v, S, y); h.negative !== 0; )\n          S--, h.negative = 0, h._ishlnsubmul(v, 1, y), h.isZero() || (h.negative ^= 1);\n        f && (f.words[y] = S);\n      }\n      return f && f._strip(), h._strip(), o !== \"div\" && u !== 0 && h.iushrn(u), {\n        div: f || null,\n        mod: h\n      };\n    }, n.prototype.divmod = function(a, o, u) {\n      if (i(!a.isZero()), this.isZero())\n        return {\n          div: new n(0),\n          mod: new n(0)\n        };\n      var h, v, g;\n      return this.negative !== 0 && a.negative === 0 ? (g = this.neg().divmod(a, o), o !== \"mod\" && (h = g.div.neg()), o !== \"div\" && (v = g.mod.neg(), u && v.negative !== 0 && v.iadd(a)), {\n        div: h,\n        mod: v\n      }) : this.negative === 0 && a.negative !== 0 ? (g = this.divmod(a.neg(), o), o !== \"mod\" && (h = g.div.neg()), {\n        div: h,\n        mod: g.mod\n      }) : this.negative & a.negative ? (g = this.neg().divmod(a.neg(), o), o !== \"div\" && (v = g.mod.neg(), u && v.negative !== 0 && v.isub(a)), {\n        div: g.div,\n        mod: v\n      }) : a.length > this.length || this.cmp(a) < 0 ? {\n        div: new n(0),\n        mod: this\n      } : a.length === 1 ? o === \"div\" ? {\n        div: this.divn(a.words[0]),\n        mod: null\n      } : o === \"mod\" ? {\n        div: null,\n        mod: new n(this.modrn(a.words[0]))\n      } : {\n        div: this.divn(a.words[0]),\n        mod: new n(this.modrn(a.words[0]))\n      } : this._wordDiv(a, o);\n    }, n.prototype.div = function(a) {\n      return this.divmod(a, \"div\", !1).div;\n    }, n.prototype.mod = function(a) {\n      return this.divmod(a, \"mod\", !1).mod;\n    }, n.prototype.umod = function(a) {\n      return this.divmod(a, \"mod\", !0).mod;\n    }, n.prototype.divRound = function(a) {\n      var o = this.divmod(a);\n      if (o.mod.isZero())\n        return o.div;\n      var u = o.div.negative !== 0 ? o.mod.isub(a) : o.mod, h = a.ushrn(1), v = a.andln(1), g = u.cmp(h);\n      return g < 0 || v === 1 && g === 0 ? o.div : o.div.negative !== 0 ? o.div.isubn(1) : o.div.iaddn(1);\n    }, n.prototype.modrn = function(a) {\n      var o = a < 0;\n      o && (a = -a), i(a <= 67108863);\n      for (var u = (1 << 26) % a, h = 0, v = this.length - 1; v >= 0; v--)\n        h = (u * h + (this.words[v] | 0)) % a;\n      return o ? -h : h;\n    }, n.prototype.modn = function(a) {\n      return this.modrn(a);\n    }, n.prototype.idivn = function(a) {\n      var o = a < 0;\n      o && (a = -a), i(a <= 67108863);\n      for (var u = 0, h = this.length - 1; h >= 0; h--) {\n        var v = (this.words[h] | 0) + u * 67108864;\n        this.words[h] = v / a | 0, u = v % a;\n      }\n      return this._strip(), o ? this.ineg() : this;\n    }, n.prototype.divn = function(a) {\n      return this.clone().idivn(a);\n    }, n.prototype.egcd = function(a) {\n      i(a.negative === 0), i(!a.isZero());\n      var o = this, u = a.clone();\n      o.negative !== 0 ? o = o.umod(a) : o = o.clone();\n      for (var h = new n(1), v = new n(0), g = new n(0), l = new n(1), d = 0; o.isEven() && u.isEven(); )\n        o.iushrn(1), u.iushrn(1), ++d;\n      for (var f = u.clone(), b = o.clone(); !o.isZero(); ) {\n        for (var E = 0, y = 1; !(o.words[0] & y) && E < 26; ++E, y <<= 1)\n          ;\n        if (E > 0)\n          for (o.iushrn(E); E-- > 0; )\n            (h.isOdd() || v.isOdd()) && (h.iadd(f), v.isub(b)), h.iushrn(1), v.iushrn(1);\n        for (var S = 0, I = 1; !(u.words[0] & I) && S < 26; ++S, I <<= 1)\n          ;\n        if (S > 0)\n          for (u.iushrn(S); S-- > 0; )\n            (g.isOdd() || l.isOdd()) && (g.iadd(f), l.isub(b)), g.iushrn(1), l.iushrn(1);\n        o.cmp(u) >= 0 ? (o.isub(u), h.isub(g), v.isub(l)) : (u.isub(o), g.isub(h), l.isub(v));\n      }\n      return {\n        a: g,\n        b: l,\n        gcd: u.iushln(d)\n      };\n    }, n.prototype._invmp = function(a) {\n      i(a.negative === 0), i(!a.isZero());\n      var o = this, u = a.clone();\n      o.negative !== 0 ? o = o.umod(a) : o = o.clone();\n      for (var h = new n(1), v = new n(0), g = u.clone(); o.cmpn(1) > 0 && u.cmpn(1) > 0; ) {\n        for (var l = 0, d = 1; !(o.words[0] & d) && l < 26; ++l, d <<= 1)\n          ;\n        if (l > 0)\n          for (o.iushrn(l); l-- > 0; )\n            h.isOdd() && h.iadd(g), h.iushrn(1);\n        for (var f = 0, b = 1; !(u.words[0] & b) && f < 26; ++f, b <<= 1)\n          ;\n        if (f > 0)\n          for (u.iushrn(f); f-- > 0; )\n            v.isOdd() && v.iadd(g), v.iushrn(1);\n        o.cmp(u) >= 0 ? (o.isub(u), h.isub(v)) : (u.isub(o), v.isub(h));\n      }\n      var E;\n      return o.cmpn(1) === 0 ? E = h : E = v, E.cmpn(0) < 0 && E.iadd(a), E;\n    }, n.prototype.gcd = function(a) {\n      if (this.isZero())\n        return a.abs();\n      if (a.isZero())\n        return this.abs();\n      var o = this.clone(), u = a.clone();\n      o.negative = 0, u.negative = 0;\n      for (var h = 0; o.isEven() && u.isEven(); h++)\n        o.iushrn(1), u.iushrn(1);\n      do {\n        for (; o.isEven(); )\n          o.iushrn(1);\n        for (; u.isEven(); )\n          u.iushrn(1);\n        var v = o.cmp(u);\n        if (v < 0) {\n          var g = o;\n          o = u, u = g;\n        } else if (v === 0 || u.cmpn(1) === 0)\n          break;\n        o.isub(u);\n      } while (!0);\n      return u.iushln(h);\n    }, n.prototype.invm = function(a) {\n      return this.egcd(a).a.umod(a);\n    }, n.prototype.isEven = function() {\n      return (this.words[0] & 1) === 0;\n    }, n.prototype.isOdd = function() {\n      return (this.words[0] & 1) === 1;\n    }, n.prototype.andln = function(a) {\n      return this.words[0] & a;\n    }, n.prototype.bincn = function(a) {\n      i(typeof a == \"number\");\n      var o = a % 26, u = (a - o) / 26, h = 1 << o;\n      if (this.length <= u)\n        return this._expand(u + 1), this.words[u] |= h, this;\n      for (var v = h, g = u; v !== 0 && g < this.length; g++) {\n        var l = this.words[g] | 0;\n        l += v, v = l >>> 26, l &= 67108863, this.words[g] = l;\n      }\n      return v !== 0 && (this.words[g] = v, this.length++), this;\n    }, n.prototype.isZero = function() {\n      return this.length === 1 && this.words[0] === 0;\n    }, n.prototype.cmpn = function(a) {\n      var o = a < 0;\n      if (this.negative !== 0 && !o)\n        return -1;\n      if (this.negative === 0 && o)\n        return 1;\n      this._strip();\n      var u;\n      if (this.length > 1)\n        u = 1;\n      else {\n        o && (a = -a), i(a <= 67108863, \"Number is too big\");\n        var h = this.words[0] | 0;\n        u = h === a ? 0 : h < a ? -1 : 1;\n      }\n      return this.negative !== 0 ? -u | 0 : u;\n    }, n.prototype.cmp = function(a) {\n      if (this.negative !== 0 && a.negative === 0)\n        return -1;\n      if (this.negative === 0 && a.negative !== 0)\n        return 1;\n      var o = this.ucmp(a);\n      return this.negative !== 0 ? -o | 0 : o;\n    }, n.prototype.ucmp = function(a) {\n      if (this.length > a.length)\n        return 1;\n      if (this.length < a.length)\n        return -1;\n      for (var o = 0, u = this.length - 1; u >= 0; u--) {\n        var h = this.words[u] | 0, v = a.words[u] | 0;\n        if (h !== v) {\n          h < v ? o = -1 : h > v && (o = 1);\n          break;\n        }\n      }\n      return o;\n    }, n.prototype.gtn = function(a) {\n      return this.cmpn(a) === 1;\n    }, n.prototype.gt = function(a) {\n      return this.cmp(a) === 1;\n    }, n.prototype.gten = function(a) {\n      return this.cmpn(a) >= 0;\n    }, n.prototype.gte = function(a) {\n      return this.cmp(a) >= 0;\n    }, n.prototype.ltn = function(a) {\n      return this.cmpn(a) === -1;\n    }, n.prototype.lt = function(a) {\n      return this.cmp(a) === -1;\n    }, n.prototype.lten = function(a) {\n      return this.cmpn(a) <= 0;\n    }, n.prototype.lte = function(a) {\n      return this.cmp(a) <= 0;\n    }, n.prototype.eqn = function(a) {\n      return this.cmpn(a) === 0;\n    }, n.prototype.eq = function(a) {\n      return this.cmp(a) === 0;\n    }, n.red = function(a) {\n      return new M(a);\n    }, n.prototype.toRed = function(a) {\n      return i(!this.red, \"Already a number in reduction context\"), i(this.negative === 0, \"red works only with positives\"), a.convertTo(this)._forceRed(a);\n    }, n.prototype.fromRed = function() {\n      return i(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n    }, n.prototype._forceRed = function(a) {\n      return this.red = a, this;\n    }, n.prototype.forceRed = function(a) {\n      return i(!this.red, \"Already a number in reduction context\"), this._forceRed(a);\n    }, n.prototype.redAdd = function(a) {\n      return i(this.red, \"redAdd works only with red numbers\"), this.red.add(this, a);\n    }, n.prototype.redIAdd = function(a) {\n      return i(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, a);\n    }, n.prototype.redSub = function(a) {\n      return i(this.red, \"redSub works only with red numbers\"), this.red.sub(this, a);\n    }, n.prototype.redISub = function(a) {\n      return i(this.red, \"redISub works only with red numbers\"), this.red.isub(this, a);\n    }, n.prototype.redShl = function(a) {\n      return i(this.red, \"redShl works only with red numbers\"), this.red.shl(this, a);\n    }, n.prototype.redMul = function(a) {\n      return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, a), this.red.mul(this, a);\n    }, n.prototype.redIMul = function(a) {\n      return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, a), this.red.imul(this, a);\n    }, n.prototype.redSqr = function() {\n      return i(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n    }, n.prototype.redISqr = function() {\n      return i(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n    }, n.prototype.redSqrt = function() {\n      return i(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n    }, n.prototype.redInvm = function() {\n      return i(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n    }, n.prototype.redNeg = function() {\n      return i(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n    }, n.prototype.redPow = function(a) {\n      return i(this.red && !a.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, a);\n    };\n    var W = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    };\n    function Y(s, a) {\n      this.name = s, this.p = new n(a, 16), this.n = this.p.bitLength(), this.k = new n(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n    }\n    Y.prototype._tmp = function() {\n      var a = new n(null);\n      return a.words = new Array(Math.ceil(this.n / 13)), a;\n    }, Y.prototype.ireduce = function(a) {\n      var o = a, u;\n      do\n        this.split(o, this.tmp), o = this.imulK(o), o = o.iadd(this.tmp), u = o.bitLength();\n      while (u > this.n);\n      var h = u < this.n ? -1 : o.ucmp(this.p);\n      return h === 0 ? (o.words[0] = 0, o.length = 1) : h > 0 ? o.isub(this.p) : o.strip !== void 0 ? o.strip() : o._strip(), o;\n    }, Y.prototype.split = function(a, o) {\n      a.iushrn(this.n, 0, o);\n    }, Y.prototype.imulK = function(a) {\n      return a.imul(this.k);\n    };\n    function ne() {\n      Y.call(\n        this,\n        \"k256\",\n        \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\"\n      );\n    }\n    c(ne, Y), ne.prototype.split = function(a, o) {\n      for (var u = 4194303, h = Math.min(a.length, 9), v = 0; v < h; v++)\n        o.words[v] = a.words[v];\n      if (o.length = h, a.length <= 9) {\n        a.words[0] = 0, a.length = 1;\n        return;\n      }\n      var g = a.words[9];\n      for (o.words[o.length++] = g & u, v = 10; v < a.length; v++) {\n        var l = a.words[v] | 0;\n        a.words[v - 10] = (l & u) << 4 | g >>> 22, g = l;\n      }\n      g >>>= 22, a.words[v - 10] = g, g === 0 && a.length > 10 ? a.length -= 10 : a.length -= 9;\n    }, ne.prototype.imulK = function(a) {\n      a.words[a.length] = 0, a.words[a.length + 1] = 0, a.length += 2;\n      for (var o = 0, u = 0; u < a.length; u++) {\n        var h = a.words[u] | 0;\n        o += h * 977, a.words[u] = o & 67108863, o = h * 64 + (o / 67108864 | 0);\n      }\n      return a.words[a.length - 1] === 0 && (a.length--, a.words[a.length - 1] === 0 && a.length--), a;\n    };\n    function D() {\n      Y.call(\n        this,\n        \"p224\",\n        \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\"\n      );\n    }\n    c(D, Y);\n    function V() {\n      Y.call(\n        this,\n        \"p192\",\n        \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\"\n      );\n    }\n    c(V, Y);\n    function G() {\n      Y.call(\n        this,\n        \"25519\",\n        \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\"\n      );\n    }\n    c(G, Y), G.prototype.imulK = function(a) {\n      for (var o = 0, u = 0; u < a.length; u++) {\n        var h = (a.words[u] | 0) * 19 + o, v = h & 67108863;\n        h >>>= 26, a.words[u] = v, o = h;\n      }\n      return o !== 0 && (a.words[a.length++] = o), a;\n    }, n._prime = function(a) {\n      if (W[a])\n        return W[a];\n      var o;\n      if (a === \"k256\")\n        o = new ne();\n      else if (a === \"p224\")\n        o = new D();\n      else if (a === \"p192\")\n        o = new V();\n      else if (a === \"p25519\")\n        o = new G();\n      else\n        throw new Error(\"Unknown prime \" + a);\n      return W[a] = o, o;\n    };\n    function M(s) {\n      if (typeof s == \"string\") {\n        var a = n._prime(s);\n        this.m = a.p, this.prime = a;\n      } else\n        i(s.gtn(1), \"modulus must be greater than 1\"), this.m = s, this.prime = null;\n    }\n    M.prototype._verify1 = function(a) {\n      i(a.negative === 0, \"red works only with positives\"), i(a.red, \"red works only with red numbers\");\n    }, M.prototype._verify2 = function(a, o) {\n      i((a.negative | o.negative) === 0, \"red works only with positives\"), i(\n        a.red && a.red === o.red,\n        \"red works only with red numbers\"\n      );\n    }, M.prototype.imod = function(a) {\n      return this.prime ? this.prime.ireduce(a)._forceRed(this) : (z(a, a.umod(this.m)._forceRed(this)), a);\n    }, M.prototype.neg = function(a) {\n      return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);\n    }, M.prototype.add = function(a, o) {\n      this._verify2(a, o);\n      var u = a.add(o);\n      return u.cmp(this.m) >= 0 && u.isub(this.m), u._forceRed(this);\n    }, M.prototype.iadd = function(a, o) {\n      this._verify2(a, o);\n      var u = a.iadd(o);\n      return u.cmp(this.m) >= 0 && u.isub(this.m), u;\n    }, M.prototype.sub = function(a, o) {\n      this._verify2(a, o);\n      var u = a.sub(o);\n      return u.cmpn(0) < 0 && u.iadd(this.m), u._forceRed(this);\n    }, M.prototype.isub = function(a, o) {\n      this._verify2(a, o);\n      var u = a.isub(o);\n      return u.cmpn(0) < 0 && u.iadd(this.m), u;\n    }, M.prototype.shl = function(a, o) {\n      return this._verify1(a), this.imod(a.ushln(o));\n    }, M.prototype.imul = function(a, o) {\n      return this._verify2(a, o), this.imod(a.imul(o));\n    }, M.prototype.mul = function(a, o) {\n      return this._verify2(a, o), this.imod(a.mul(o));\n    }, M.prototype.isqr = function(a) {\n      return this.imul(a, a.clone());\n    }, M.prototype.sqr = function(a) {\n      return this.mul(a, a);\n    }, M.prototype.sqrt = function(a) {\n      if (a.isZero())\n        return a.clone();\n      var o = this.m.andln(3);\n      if (i(o % 2 === 1), o === 3) {\n        var u = this.m.add(new n(1)).iushrn(2);\n        return this.pow(a, u);\n      }\n      for (var h = this.m.subn(1), v = 0; !h.isZero() && h.andln(1) === 0; )\n        v++, h.iushrn(1);\n      i(!h.isZero());\n      var g = new n(1).toRed(this), l = g.redNeg(), d = this.m.subn(1).iushrn(1), f = this.m.bitLength();\n      for (f = new n(2 * f * f).toRed(this); this.pow(f, d).cmp(l) !== 0; )\n        f.redIAdd(l);\n      for (var b = this.pow(f, h), E = this.pow(a, h.addn(1).iushrn(1)), y = this.pow(a, h), S = v; y.cmp(g) !== 0; ) {\n        for (var I = y, $ = 0; I.cmp(g) !== 0; $++)\n          I = I.redSqr();\n        i($ < S);\n        var K = this.pow(b, new n(1).iushln(S - $ - 1));\n        E = E.redMul(K), b = K.redSqr(), y = y.redMul(b), S = $;\n      }\n      return E;\n    }, M.prototype.invm = function(a) {\n      var o = a._invmp(this.m);\n      return o.negative !== 0 ? (o.negative = 0, this.imod(o).redNeg()) : this.imod(o);\n    }, M.prototype.pow = function(a, o) {\n      if (o.isZero())\n        return new n(1).toRed(this);\n      if (o.cmpn(1) === 0)\n        return a.clone();\n      var u = 4, h = new Array(1 << u);\n      h[0] = new n(1).toRed(this), h[1] = a;\n      for (var v = 2; v < h.length; v++)\n        h[v] = this.mul(h[v - 1], a);\n      var g = h[0], l = 0, d = 0, f = o.bitLength() % 26;\n      for (f === 0 && (f = 26), v = o.length - 1; v >= 0; v--) {\n        for (var b = o.words[v], E = f - 1; E >= 0; E--) {\n          var y = b >> E & 1;\n          if (g !== h[0] && (g = this.sqr(g)), y === 0 && l === 0) {\n            d = 0;\n            continue;\n          }\n          l <<= 1, l |= y, d++, !(d !== u && (v !== 0 || E !== 0)) && (g = this.mul(g, h[l]), d = 0, l = 0);\n        }\n        f = 26;\n      }\n      return g;\n    }, M.prototype.convertTo = function(a) {\n      var o = a.umod(this.m);\n      return o === a ? o.clone() : o;\n    }, M.prototype.convertFrom = function(a) {\n      var o = a.clone();\n      return o.red = null, o;\n    }, n.mont = function(a) {\n      return new p(a);\n    };\n    function p(s) {\n      M.call(this, s), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new n(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n    }\n    c(p, M), p.prototype.convertTo = function(a) {\n      return this.imod(a.ushln(this.shift));\n    }, p.prototype.convertFrom = function(a) {\n      var o = this.imod(a.mul(this.rinv));\n      return o.red = null, o;\n    }, p.prototype.imul = function(a, o) {\n      if (a.isZero() || o.isZero())\n        return a.words[0] = 0, a.length = 1, a;\n      var u = a.imul(o), h = u.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), v = u.isub(h).iushrn(this.shift), g = v;\n      return v.cmp(this.m) >= 0 ? g = v.isub(this.m) : v.cmpn(0) < 0 && (g = v.iadd(this.m)), g._forceRed(this);\n    }, p.prototype.mul = function(a, o) {\n      if (a.isZero() || o.isZero())\n        return new n(0)._forceRed(this);\n      var u = a.mul(o), h = u.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), v = u.isub(h).iushrn(this.shift), g = v;\n      return v.cmp(this.m) >= 0 ? g = v.isub(this.m) : v.cmpn(0) < 0 && (g = v.iadd(this.m)), g._forceRed(this);\n    }, p.prototype.invm = function(a) {\n      var o = this.imod(a._invmp(this.m).mul(this.r2));\n      return o._forceRed(this);\n    };\n  })(e, be);\n})(U0);\nvar r2 = U0.exports, Ut = {}, $0 = { exports: {} };\n$0.exports;\n(function(e) {\n  (function(r, t) {\n    function i(s, a) {\n      if (!s)\n        throw new Error(a || \"Assertion failed\");\n    }\n    function c(s, a) {\n      s.super_ = a;\n      var o = function() {\n      };\n      o.prototype = a.prototype, s.prototype = new o(), s.prototype.constructor = s;\n    }\n    function n(s, a, o) {\n      if (n.isBN(s))\n        return s;\n      this.negative = 0, this.words = null, this.length = 0, this.red = null, s !== null && ((a === \"le\" || a === \"be\") && (o = a, a = 10), this._init(s || 0, a || 10, o || \"be\"));\n    }\n    typeof r == \"object\" ? r.exports = n : t.BN = n, n.BN = n, n.wordSize = 26;\n    var x;\n    try {\n      typeof window < \"u\" && typeof window.Buffer < \"u\" ? x = window.Buffer : x = dt.Buffer;\n    } catch {\n    }\n    n.isBN = function(a) {\n      return a instanceof n ? !0 : a !== null && typeof a == \"object\" && a.constructor.wordSize === n.wordSize && Array.isArray(a.words);\n    }, n.max = function(a, o) {\n      return a.cmp(o) > 0 ? a : o;\n    }, n.min = function(a, o) {\n      return a.cmp(o) < 0 ? a : o;\n    }, n.prototype._init = function(a, o, u) {\n      if (typeof a == \"number\")\n        return this._initNumber(a, o, u);\n      if (typeof a == \"object\")\n        return this._initArray(a, o, u);\n      o === \"hex\" && (o = 16), i(o === (o | 0) && o >= 2 && o <= 36), a = a.toString().replace(/\\s+/g, \"\");\n      var h = 0;\n      a[0] === \"-\" && (h++, this.negative = 1), h < a.length && (o === 16 ? this._parseHex(a, h, u) : (this._parseBase(a, o, h), u === \"le\" && this._initArray(this.toArray(), o, u)));\n    }, n.prototype._initNumber = function(a, o, u) {\n      a < 0 && (this.negative = 1, a = -a), a < 67108864 ? (this.words = [a & 67108863], this.length = 1) : a < 4503599627370496 ? (this.words = [\n        a & 67108863,\n        a / 67108864 & 67108863\n      ], this.length = 2) : (i(a < 9007199254740992), this.words = [\n        a & 67108863,\n        a / 67108864 & 67108863,\n        1\n      ], this.length = 3), u === \"le\" && this._initArray(this.toArray(), o, u);\n    }, n.prototype._initArray = function(a, o, u) {\n      if (i(typeof a.length == \"number\"), a.length <= 0)\n        return this.words = [0], this.length = 1, this;\n      this.length = Math.ceil(a.length / 3), this.words = new Array(this.length);\n      for (var h = 0; h < this.length; h++)\n        this.words[h] = 0;\n      var v, g, l = 0;\n      if (u === \"be\")\n        for (h = a.length - 1, v = 0; h >= 0; h -= 3)\n          g = a[h] | a[h - 1] << 8 | a[h - 2] << 16, this.words[v] |= g << l & 67108863, this.words[v + 1] = g >>> 26 - l & 67108863, l += 24, l >= 26 && (l -= 26, v++);\n      else if (u === \"le\")\n        for (h = 0, v = 0; h < a.length; h += 3)\n          g = a[h] | a[h + 1] << 8 | a[h + 2] << 16, this.words[v] |= g << l & 67108863, this.words[v + 1] = g >>> 26 - l & 67108863, l += 24, l >= 26 && (l -= 26, v++);\n      return this._strip();\n    };\n    function m(s, a) {\n      var o = s.charCodeAt(a);\n      if (o >= 48 && o <= 57)\n        return o - 48;\n      if (o >= 65 && o <= 70)\n        return o - 55;\n      if (o >= 97 && o <= 102)\n        return o - 87;\n      i(!1, \"Invalid character in \" + s);\n    }\n    function k(s, a, o) {\n      var u = m(s, o);\n      return o - 1 >= a && (u |= m(s, o - 1) << 4), u;\n    }\n    n.prototype._parseHex = function(a, o, u) {\n      this.length = Math.ceil((a.length - o) / 6), this.words = new Array(this.length);\n      for (var h = 0; h < this.length; h++)\n        this.words[h] = 0;\n      var v = 0, g = 0, l;\n      if (u === \"be\")\n        for (h = a.length - 1; h >= o; h -= 2)\n          l = k(a, o, h) << v, this.words[g] |= l & 67108863, v >= 18 ? (v -= 18, g += 1, this.words[g] |= l >>> 26) : v += 8;\n      else {\n        var d = a.length - o;\n        for (h = d % 2 === 0 ? o + 1 : o; h < a.length; h += 2)\n          l = k(a, o, h) << v, this.words[g] |= l & 67108863, v >= 18 ? (v -= 18, g += 1, this.words[g] |= l >>> 26) : v += 8;\n      }\n      this._strip();\n    };\n    function B(s, a, o, u) {\n      for (var h = 0, v = 0, g = Math.min(s.length, o), l = a; l < g; l++) {\n        var d = s.charCodeAt(l) - 48;\n        h *= u, d >= 49 ? v = d - 49 + 10 : d >= 17 ? v = d - 17 + 10 : v = d, i(d >= 0 && v < u, \"Invalid character\"), h += v;\n      }\n      return h;\n    }\n    n.prototype._parseBase = function(a, o, u) {\n      this.words = [0], this.length = 1;\n      for (var h = 0, v = 1; v <= 67108863; v *= o)\n        h++;\n      h--, v = v / o | 0;\n      for (var g = a.length - u, l = g % h, d = Math.min(g, g - l) + u, f = 0, b = u; b < d; b += h)\n        f = B(a, b, b + h, o), this.imuln(v), this.words[0] + f < 67108864 ? this.words[0] += f : this._iaddn(f);\n      if (l !== 0) {\n        var E = 1;\n        for (f = B(a, b, a.length, o), b = 0; b < l; b++)\n          E *= o;\n        this.imuln(E), this.words[0] + f < 67108864 ? this.words[0] += f : this._iaddn(f);\n      }\n      this._strip();\n    }, n.prototype.copy = function(a) {\n      a.words = new Array(this.length);\n      for (var o = 0; o < this.length; o++)\n        a.words[o] = this.words[o];\n      a.length = this.length, a.negative = this.negative, a.red = this.red;\n    };\n    function z(s, a) {\n      s.words = a.words, s.length = a.length, s.negative = a.negative, s.red = a.red;\n    }\n    if (n.prototype._move = function(a) {\n      z(a, this);\n    }, n.prototype.clone = function() {\n      var a = new n(null);\n      return this.copy(a), a;\n    }, n.prototype._expand = function(a) {\n      for (; this.length < a; )\n        this.words[this.length++] = 0;\n      return this;\n    }, n.prototype._strip = function() {\n      for (; this.length > 1 && this.words[this.length - 1] === 0; )\n        this.length--;\n      return this._normSign();\n    }, n.prototype._normSign = function() {\n      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;\n    }, typeof Symbol < \"u\" && typeof Symbol.for == \"function\")\n      try {\n        n.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = C;\n      } catch {\n        n.prototype.inspect = C;\n      }\n    else\n      n.prototype.inspect = C;\n    function C() {\n      return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n    }\n    var F = [\n      \"\",\n      \"0\",\n      \"00\",\n      \"000\",\n      \"0000\",\n      \"00000\",\n      \"000000\",\n      \"0000000\",\n      \"00000000\",\n      \"000000000\",\n      \"0000000000\",\n      \"00000000000\",\n      \"000000000000\",\n      \"0000000000000\",\n      \"00000000000000\",\n      \"000000000000000\",\n      \"0000000000000000\",\n      \"00000000000000000\",\n      \"000000000000000000\",\n      \"0000000000000000000\",\n      \"00000000000000000000\",\n      \"000000000000000000000\",\n      \"0000000000000000000000\",\n      \"00000000000000000000000\",\n      \"000000000000000000000000\",\n      \"0000000000000000000000000\"\n    ], T = [\n      0,\n      0,\n      25,\n      16,\n      12,\n      11,\n      10,\n      9,\n      8,\n      8,\n      7,\n      7,\n      7,\n      7,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5\n    ], L = [\n      0,\n      0,\n      33554432,\n      43046721,\n      16777216,\n      48828125,\n      60466176,\n      40353607,\n      16777216,\n      43046721,\n      1e7,\n      19487171,\n      35831808,\n      62748517,\n      7529536,\n      11390625,\n      16777216,\n      24137569,\n      34012224,\n      47045881,\n      64e6,\n      4084101,\n      5153632,\n      6436343,\n      7962624,\n      9765625,\n      11881376,\n      14348907,\n      17210368,\n      20511149,\n      243e5,\n      28629151,\n      33554432,\n      39135393,\n      45435424,\n      52521875,\n      60466176\n    ];\n    n.prototype.toString = function(a, o) {\n      a = a || 10, o = o | 0 || 1;\n      var u;\n      if (a === 16 || a === \"hex\") {\n        u = \"\";\n        for (var h = 0, v = 0, g = 0; g < this.length; g++) {\n          var l = this.words[g], d = ((l << h | v) & 16777215).toString(16);\n          v = l >>> 24 - h & 16777215, v !== 0 || g !== this.length - 1 ? u = F[6 - d.length] + d + u : u = d + u, h += 2, h >= 26 && (h -= 26, g--);\n        }\n        for (v !== 0 && (u = v.toString(16) + u); u.length % o !== 0; )\n          u = \"0\" + u;\n        return this.negative !== 0 && (u = \"-\" + u), u;\n      }\n      if (a === (a | 0) && a >= 2 && a <= 36) {\n        var f = T[a], b = L[a];\n        u = \"\";\n        var E = this.clone();\n        for (E.negative = 0; !E.isZero(); ) {\n          var y = E.modrn(b).toString(a);\n          E = E.idivn(b), E.isZero() ? u = y + u : u = F[f - y.length] + y + u;\n        }\n        for (this.isZero() && (u = \"0\" + u); u.length % o !== 0; )\n          u = \"0\" + u;\n        return this.negative !== 0 && (u = \"-\" + u), u;\n      }\n      i(!1, \"Base should be between 2 and 36\");\n    }, n.prototype.toNumber = function() {\n      var a = this.words[0];\n      return this.length === 2 ? a += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? a += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i(!1, \"Number can only safely store up to 53 bits\"), this.negative !== 0 ? -a : a;\n    }, n.prototype.toJSON = function() {\n      return this.toString(16, 2);\n    }, x && (n.prototype.toBuffer = function(a, o) {\n      return this.toArrayLike(x, a, o);\n    }), n.prototype.toArray = function(a, o) {\n      return this.toArrayLike(Array, a, o);\n    };\n    var O = function(a, o) {\n      return a.allocUnsafe ? a.allocUnsafe(o) : new a(o);\n    };\n    n.prototype.toArrayLike = function(a, o, u) {\n      this._strip();\n      var h = this.byteLength(), v = u || Math.max(1, h);\n      i(h <= v, \"byte array longer than desired length\"), i(v > 0, \"Requested array length <= 0\");\n      var g = O(a, v), l = o === \"le\" ? \"LE\" : \"BE\";\n      return this[\"_toArrayLike\" + l](g, h), g;\n    }, n.prototype._toArrayLikeLE = function(a, o) {\n      for (var u = 0, h = 0, v = 0, g = 0; v < this.length; v++) {\n        var l = this.words[v] << g | h;\n        a[u++] = l & 255, u < a.length && (a[u++] = l >> 8 & 255), u < a.length && (a[u++] = l >> 16 & 255), g === 6 ? (u < a.length && (a[u++] = l >> 24 & 255), h = 0, g = 0) : (h = l >>> 24, g += 2);\n      }\n      if (u < a.length)\n        for (a[u++] = h; u < a.length; )\n          a[u++] = 0;\n    }, n.prototype._toArrayLikeBE = function(a, o) {\n      for (var u = a.length - 1, h = 0, v = 0, g = 0; v < this.length; v++) {\n        var l = this.words[v] << g | h;\n        a[u--] = l & 255, u >= 0 && (a[u--] = l >> 8 & 255), u >= 0 && (a[u--] = l >> 16 & 255), g === 6 ? (u >= 0 && (a[u--] = l >> 24 & 255), h = 0, g = 0) : (h = l >>> 24, g += 2);\n      }\n      if (u >= 0)\n        for (a[u--] = h; u >= 0; )\n          a[u--] = 0;\n    }, Math.clz32 ? n.prototype._countBits = function(a) {\n      return 32 - Math.clz32(a);\n    } : n.prototype._countBits = function(a) {\n      var o = a, u = 0;\n      return o >= 4096 && (u += 13, o >>>= 13), o >= 64 && (u += 7, o >>>= 7), o >= 8 && (u += 4, o >>>= 4), o >= 2 && (u += 2, o >>>= 2), u + o;\n    }, n.prototype._zeroBits = function(a) {\n      if (a === 0)\n        return 26;\n      var o = a, u = 0;\n      return o & 8191 || (u += 13, o >>>= 13), o & 127 || (u += 7, o >>>= 7), o & 15 || (u += 4, o >>>= 4), o & 3 || (u += 2, o >>>= 2), o & 1 || u++, u;\n    }, n.prototype.bitLength = function() {\n      var a = this.words[this.length - 1], o = this._countBits(a);\n      return (this.length - 1) * 26 + o;\n    };\n    function q(s) {\n      for (var a = new Array(s.bitLength()), o = 0; o < a.length; o++) {\n        var u = o / 26 | 0, h = o % 26;\n        a[o] = s.words[u] >>> h & 1;\n      }\n      return a;\n    }\n    n.prototype.zeroBits = function() {\n      if (this.isZero())\n        return 0;\n      for (var a = 0, o = 0; o < this.length; o++) {\n        var u = this._zeroBits(this.words[o]);\n        if (a += u, u !== 26)\n          break;\n      }\n      return a;\n    }, n.prototype.byteLength = function() {\n      return Math.ceil(this.bitLength() / 8);\n    }, n.prototype.toTwos = function(a) {\n      return this.negative !== 0 ? this.abs().inotn(a).iaddn(1) : this.clone();\n    }, n.prototype.fromTwos = function(a) {\n      return this.testn(a - 1) ? this.notn(a).iaddn(1).ineg() : this.clone();\n    }, n.prototype.isNeg = function() {\n      return this.negative !== 0;\n    }, n.prototype.neg = function() {\n      return this.clone().ineg();\n    }, n.prototype.ineg = function() {\n      return this.isZero() || (this.negative ^= 1), this;\n    }, n.prototype.iuor = function(a) {\n      for (; this.length < a.length; )\n        this.words[this.length++] = 0;\n      for (var o = 0; o < a.length; o++)\n        this.words[o] = this.words[o] | a.words[o];\n      return this._strip();\n    }, n.prototype.ior = function(a) {\n      return i((this.negative | a.negative) === 0), this.iuor(a);\n    }, n.prototype.or = function(a) {\n      return this.length > a.length ? this.clone().ior(a) : a.clone().ior(this);\n    }, n.prototype.uor = function(a) {\n      return this.length > a.length ? this.clone().iuor(a) : a.clone().iuor(this);\n    }, n.prototype.iuand = function(a) {\n      var o;\n      this.length > a.length ? o = a : o = this;\n      for (var u = 0; u < o.length; u++)\n        this.words[u] = this.words[u] & a.words[u];\n      return this.length = o.length, this._strip();\n    }, n.prototype.iand = function(a) {\n      return i((this.negative | a.negative) === 0), this.iuand(a);\n    }, n.prototype.and = function(a) {\n      return this.length > a.length ? this.clone().iand(a) : a.clone().iand(this);\n    }, n.prototype.uand = function(a) {\n      return this.length > a.length ? this.clone().iuand(a) : a.clone().iuand(this);\n    }, n.prototype.iuxor = function(a) {\n      var o, u;\n      this.length > a.length ? (o = this, u = a) : (o = a, u = this);\n      for (var h = 0; h < u.length; h++)\n        this.words[h] = o.words[h] ^ u.words[h];\n      if (this !== o)\n        for (; h < o.length; h++)\n          this.words[h] = o.words[h];\n      return this.length = o.length, this._strip();\n    }, n.prototype.ixor = function(a) {\n      return i((this.negative | a.negative) === 0), this.iuxor(a);\n    }, n.prototype.xor = function(a) {\n      return this.length > a.length ? this.clone().ixor(a) : a.clone().ixor(this);\n    }, n.prototype.uxor = function(a) {\n      return this.length > a.length ? this.clone().iuxor(a) : a.clone().iuxor(this);\n    }, n.prototype.inotn = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = Math.ceil(a / 26) | 0, u = a % 26;\n      this._expand(o), u > 0 && o--;\n      for (var h = 0; h < o; h++)\n        this.words[h] = ~this.words[h] & 67108863;\n      return u > 0 && (this.words[h] = ~this.words[h] & 67108863 >> 26 - u), this._strip();\n    }, n.prototype.notn = function(a) {\n      return this.clone().inotn(a);\n    }, n.prototype.setn = function(a, o) {\n      i(typeof a == \"number\" && a >= 0);\n      var u = a / 26 | 0, h = a % 26;\n      return this._expand(u + 1), o ? this.words[u] = this.words[u] | 1 << h : this.words[u] = this.words[u] & ~(1 << h), this._strip();\n    }, n.prototype.iadd = function(a) {\n      var o;\n      if (this.negative !== 0 && a.negative === 0)\n        return this.negative = 0, o = this.isub(a), this.negative ^= 1, this._normSign();\n      if (this.negative === 0 && a.negative !== 0)\n        return a.negative = 0, o = this.isub(a), a.negative = 1, o._normSign();\n      var u, h;\n      this.length > a.length ? (u = this, h = a) : (u = a, h = this);\n      for (var v = 0, g = 0; g < h.length; g++)\n        o = (u.words[g] | 0) + (h.words[g] | 0) + v, this.words[g] = o & 67108863, v = o >>> 26;\n      for (; v !== 0 && g < u.length; g++)\n        o = (u.words[g] | 0) + v, this.words[g] = o & 67108863, v = o >>> 26;\n      if (this.length = u.length, v !== 0)\n        this.words[this.length] = v, this.length++;\n      else if (u !== this)\n        for (; g < u.length; g++)\n          this.words[g] = u.words[g];\n      return this;\n    }, n.prototype.add = function(a) {\n      var o;\n      return a.negative !== 0 && this.negative === 0 ? (a.negative = 0, o = this.sub(a), a.negative ^= 1, o) : a.negative === 0 && this.negative !== 0 ? (this.negative = 0, o = a.sub(this), this.negative = 1, o) : this.length > a.length ? this.clone().iadd(a) : a.clone().iadd(this);\n    }, n.prototype.isub = function(a) {\n      if (a.negative !== 0) {\n        a.negative = 0;\n        var o = this.iadd(a);\n        return a.negative = 1, o._normSign();\n      } else if (this.negative !== 0)\n        return this.negative = 0, this.iadd(a), this.negative = 1, this._normSign();\n      var u = this.cmp(a);\n      if (u === 0)\n        return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n      var h, v;\n      u > 0 ? (h = this, v = a) : (h = a, v = this);\n      for (var g = 0, l = 0; l < v.length; l++)\n        o = (h.words[l] | 0) - (v.words[l] | 0) + g, g = o >> 26, this.words[l] = o & 67108863;\n      for (; g !== 0 && l < h.length; l++)\n        o = (h.words[l] | 0) + g, g = o >> 26, this.words[l] = o & 67108863;\n      if (g === 0 && l < h.length && h !== this)\n        for (; l < h.length; l++)\n          this.words[l] = h.words[l];\n      return this.length = Math.max(this.length, l), h !== this && (this.negative = 1), this._strip();\n    }, n.prototype.sub = function(a) {\n      return this.clone().isub(a);\n    };\n    function R(s, a, o) {\n      o.negative = a.negative ^ s.negative;\n      var u = s.length + a.length | 0;\n      o.length = u, u = u - 1 | 0;\n      var h = s.words[0] | 0, v = a.words[0] | 0, g = h * v, l = g & 67108863, d = g / 67108864 | 0;\n      o.words[0] = l;\n      for (var f = 1; f < u; f++) {\n        for (var b = d >>> 26, E = d & 67108863, y = Math.min(f, a.length - 1), S = Math.max(0, f - s.length + 1); S <= y; S++) {\n          var I = f - S | 0;\n          h = s.words[I] | 0, v = a.words[S] | 0, g = h * v + E, b += g / 67108864 | 0, E = g & 67108863;\n        }\n        o.words[f] = E | 0, d = b | 0;\n      }\n      return d !== 0 ? o.words[f] = d | 0 : o.length--, o._strip();\n    }\n    var U = function(a, o, u) {\n      var h = a.words, v = o.words, g = u.words, l = 0, d, f, b, E = h[0] | 0, y = E & 8191, S = E >>> 13, I = h[1] | 0, $ = I & 8191, K = I >>> 13, ae = h[2] | 0, j = ae & 8191, P = ae >>> 13, ie = h[3] | 0, te = ie & 8191, ce = ie >>> 13, ve = h[4] | 0, le = ve & 8191, he = ve >>> 13, fe = h[5] | 0, ze = fe & 8191, ge = fe >>> 13, Q = h[6] | 0, re = Q & 8191, oe = Q >>> 13, se = h[7] | 0, de = se & 8191, A = se >>> 13, w = h[8] | 0, _ = w & 8191, N = w >>> 13, J = h[9] | 0, X = J & 8191, ee = J >>> 13, xe = v[0] | 0, pe = xe & 8191, ue = xe >>> 13, Ie = v[1] | 0, me = Ie & 8191, we = Ie >>> 13, Ke = v[2] | 0, je = Ke & 8191, _e = Ke >>> 13, He = v[3] | 0, Pe = He & 8191, Me = He >>> 13, Ve = v[4] | 0, Oe = Ve & 8191, Se = Ve >>> 13, We = v[5] | 0, qe = We & 8191, ke = We >>> 13, Ge = v[6] | 0, Ne = Ge & 8191, Ee = Ge >>> 13, Ze = v[7] | 0, Fe = Ze & 8191, Ae = Ze >>> 13, Je = v[8] | 0, Ce = Je & 8191, Be = Je >>> 13, Ye = v[9] | 0, Re = Ye & 8191, Te = Ye >>> 13;\n      u.negative = a.negative ^ o.negative, u.length = 19, d = Math.imul(y, pe), f = Math.imul(y, ue), f = f + Math.imul(S, pe) | 0, b = Math.imul(S, ue);\n      var cr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (cr >>> 26) | 0, cr &= 67108863, d = Math.imul($, pe), f = Math.imul($, ue), f = f + Math.imul(K, pe) | 0, b = Math.imul(K, ue), d = d + Math.imul(y, me) | 0, f = f + Math.imul(y, we) | 0, f = f + Math.imul(S, me) | 0, b = b + Math.imul(S, we) | 0;\n      var dr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (dr >>> 26) | 0, dr &= 67108863, d = Math.imul(j, pe), f = Math.imul(j, ue), f = f + Math.imul(P, pe) | 0, b = Math.imul(P, ue), d = d + Math.imul($, me) | 0, f = f + Math.imul($, we) | 0, f = f + Math.imul(K, me) | 0, b = b + Math.imul(K, we) | 0, d = d + Math.imul(y, je) | 0, f = f + Math.imul(y, _e) | 0, f = f + Math.imul(S, je) | 0, b = b + Math.imul(S, _e) | 0;\n      var sr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (sr >>> 26) | 0, sr &= 67108863, d = Math.imul(te, pe), f = Math.imul(te, ue), f = f + Math.imul(ce, pe) | 0, b = Math.imul(ce, ue), d = d + Math.imul(j, me) | 0, f = f + Math.imul(j, we) | 0, f = f + Math.imul(P, me) | 0, b = b + Math.imul(P, we) | 0, d = d + Math.imul($, je) | 0, f = f + Math.imul($, _e) | 0, f = f + Math.imul(K, je) | 0, b = b + Math.imul(K, _e) | 0, d = d + Math.imul(y, Pe) | 0, f = f + Math.imul(y, Me) | 0, f = f + Math.imul(S, Pe) | 0, b = b + Math.imul(S, Me) | 0;\n      var ur = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (ur >>> 26) | 0, ur &= 67108863, d = Math.imul(le, pe), f = Math.imul(le, ue), f = f + Math.imul(he, pe) | 0, b = Math.imul(he, ue), d = d + Math.imul(te, me) | 0, f = f + Math.imul(te, we) | 0, f = f + Math.imul(ce, me) | 0, b = b + Math.imul(ce, we) | 0, d = d + Math.imul(j, je) | 0, f = f + Math.imul(j, _e) | 0, f = f + Math.imul(P, je) | 0, b = b + Math.imul(P, _e) | 0, d = d + Math.imul($, Pe) | 0, f = f + Math.imul($, Me) | 0, f = f + Math.imul(K, Pe) | 0, b = b + Math.imul(K, Me) | 0, d = d + Math.imul(y, Oe) | 0, f = f + Math.imul(y, Se) | 0, f = f + Math.imul(S, Oe) | 0, b = b + Math.imul(S, Se) | 0;\n      var lr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (lr >>> 26) | 0, lr &= 67108863, d = Math.imul(ze, pe), f = Math.imul(ze, ue), f = f + Math.imul(ge, pe) | 0, b = Math.imul(ge, ue), d = d + Math.imul(le, me) | 0, f = f + Math.imul(le, we) | 0, f = f + Math.imul(he, me) | 0, b = b + Math.imul(he, we) | 0, d = d + Math.imul(te, je) | 0, f = f + Math.imul(te, _e) | 0, f = f + Math.imul(ce, je) | 0, b = b + Math.imul(ce, _e) | 0, d = d + Math.imul(j, Pe) | 0, f = f + Math.imul(j, Me) | 0, f = f + Math.imul(P, Pe) | 0, b = b + Math.imul(P, Me) | 0, d = d + Math.imul($, Oe) | 0, f = f + Math.imul($, Se) | 0, f = f + Math.imul(K, Oe) | 0, b = b + Math.imul(K, Se) | 0, d = d + Math.imul(y, qe) | 0, f = f + Math.imul(y, ke) | 0, f = f + Math.imul(S, qe) | 0, b = b + Math.imul(S, ke) | 0;\n      var Rr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Rr >>> 26) | 0, Rr &= 67108863, d = Math.imul(re, pe), f = Math.imul(re, ue), f = f + Math.imul(oe, pe) | 0, b = Math.imul(oe, ue), d = d + Math.imul(ze, me) | 0, f = f + Math.imul(ze, we) | 0, f = f + Math.imul(ge, me) | 0, b = b + Math.imul(ge, we) | 0, d = d + Math.imul(le, je) | 0, f = f + Math.imul(le, _e) | 0, f = f + Math.imul(he, je) | 0, b = b + Math.imul(he, _e) | 0, d = d + Math.imul(te, Pe) | 0, f = f + Math.imul(te, Me) | 0, f = f + Math.imul(ce, Pe) | 0, b = b + Math.imul(ce, Me) | 0, d = d + Math.imul(j, Oe) | 0, f = f + Math.imul(j, Se) | 0, f = f + Math.imul(P, Oe) | 0, b = b + Math.imul(P, Se) | 0, d = d + Math.imul($, qe) | 0, f = f + Math.imul($, ke) | 0, f = f + Math.imul(K, qe) | 0, b = b + Math.imul(K, ke) | 0, d = d + Math.imul(y, Ne) | 0, f = f + Math.imul(y, Ee) | 0, f = f + Math.imul(S, Ne) | 0, b = b + Math.imul(S, Ee) | 0;\n      var Tr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Tr >>> 26) | 0, Tr &= 67108863, d = Math.imul(de, pe), f = Math.imul(de, ue), f = f + Math.imul(A, pe) | 0, b = Math.imul(A, ue), d = d + Math.imul(re, me) | 0, f = f + Math.imul(re, we) | 0, f = f + Math.imul(oe, me) | 0, b = b + Math.imul(oe, we) | 0, d = d + Math.imul(ze, je) | 0, f = f + Math.imul(ze, _e) | 0, f = f + Math.imul(ge, je) | 0, b = b + Math.imul(ge, _e) | 0, d = d + Math.imul(le, Pe) | 0, f = f + Math.imul(le, Me) | 0, f = f + Math.imul(he, Pe) | 0, b = b + Math.imul(he, Me) | 0, d = d + Math.imul(te, Oe) | 0, f = f + Math.imul(te, Se) | 0, f = f + Math.imul(ce, Oe) | 0, b = b + Math.imul(ce, Se) | 0, d = d + Math.imul(j, qe) | 0, f = f + Math.imul(j, ke) | 0, f = f + Math.imul(P, qe) | 0, b = b + Math.imul(P, ke) | 0, d = d + Math.imul($, Ne) | 0, f = f + Math.imul($, Ee) | 0, f = f + Math.imul(K, Ne) | 0, b = b + Math.imul(K, Ee) | 0, d = d + Math.imul(y, Fe) | 0, f = f + Math.imul(y, Ae) | 0, f = f + Math.imul(S, Fe) | 0, b = b + Math.imul(S, Ae) | 0;\n      var jr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (jr >>> 26) | 0, jr &= 67108863, d = Math.imul(_, pe), f = Math.imul(_, ue), f = f + Math.imul(N, pe) | 0, b = Math.imul(N, ue), d = d + Math.imul(de, me) | 0, f = f + Math.imul(de, we) | 0, f = f + Math.imul(A, me) | 0, b = b + Math.imul(A, we) | 0, d = d + Math.imul(re, je) | 0, f = f + Math.imul(re, _e) | 0, f = f + Math.imul(oe, je) | 0, b = b + Math.imul(oe, _e) | 0, d = d + Math.imul(ze, Pe) | 0, f = f + Math.imul(ze, Me) | 0, f = f + Math.imul(ge, Pe) | 0, b = b + Math.imul(ge, Me) | 0, d = d + Math.imul(le, Oe) | 0, f = f + Math.imul(le, Se) | 0, f = f + Math.imul(he, Oe) | 0, b = b + Math.imul(he, Se) | 0, d = d + Math.imul(te, qe) | 0, f = f + Math.imul(te, ke) | 0, f = f + Math.imul(ce, qe) | 0, b = b + Math.imul(ce, ke) | 0, d = d + Math.imul(j, Ne) | 0, f = f + Math.imul(j, Ee) | 0, f = f + Math.imul(P, Ne) | 0, b = b + Math.imul(P, Ee) | 0, d = d + Math.imul($, Fe) | 0, f = f + Math.imul($, Ae) | 0, f = f + Math.imul(K, Fe) | 0, b = b + Math.imul(K, Ae) | 0, d = d + Math.imul(y, Ce) | 0, f = f + Math.imul(y, Be) | 0, f = f + Math.imul(S, Ce) | 0, b = b + Math.imul(S, Be) | 0;\n      var Pr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Pr >>> 26) | 0, Pr &= 67108863, d = Math.imul(X, pe), f = Math.imul(X, ue), f = f + Math.imul(ee, pe) | 0, b = Math.imul(ee, ue), d = d + Math.imul(_, me) | 0, f = f + Math.imul(_, we) | 0, f = f + Math.imul(N, me) | 0, b = b + Math.imul(N, we) | 0, d = d + Math.imul(de, je) | 0, f = f + Math.imul(de, _e) | 0, f = f + Math.imul(A, je) | 0, b = b + Math.imul(A, _e) | 0, d = d + Math.imul(re, Pe) | 0, f = f + Math.imul(re, Me) | 0, f = f + Math.imul(oe, Pe) | 0, b = b + Math.imul(oe, Me) | 0, d = d + Math.imul(ze, Oe) | 0, f = f + Math.imul(ze, Se) | 0, f = f + Math.imul(ge, Oe) | 0, b = b + Math.imul(ge, Se) | 0, d = d + Math.imul(le, qe) | 0, f = f + Math.imul(le, ke) | 0, f = f + Math.imul(he, qe) | 0, b = b + Math.imul(he, ke) | 0, d = d + Math.imul(te, Ne) | 0, f = f + Math.imul(te, Ee) | 0, f = f + Math.imul(ce, Ne) | 0, b = b + Math.imul(ce, Ee) | 0, d = d + Math.imul(j, Fe) | 0, f = f + Math.imul(j, Ae) | 0, f = f + Math.imul(P, Fe) | 0, b = b + Math.imul(P, Ae) | 0, d = d + Math.imul($, Ce) | 0, f = f + Math.imul($, Be) | 0, f = f + Math.imul(K, Ce) | 0, b = b + Math.imul(K, Be) | 0, d = d + Math.imul(y, Re) | 0, f = f + Math.imul(y, Te) | 0, f = f + Math.imul(S, Re) | 0, b = b + Math.imul(S, Te) | 0;\n      var Or = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Or >>> 26) | 0, Or &= 67108863, d = Math.imul(X, me), f = Math.imul(X, we), f = f + Math.imul(ee, me) | 0, b = Math.imul(ee, we), d = d + Math.imul(_, je) | 0, f = f + Math.imul(_, _e) | 0, f = f + Math.imul(N, je) | 0, b = b + Math.imul(N, _e) | 0, d = d + Math.imul(de, Pe) | 0, f = f + Math.imul(de, Me) | 0, f = f + Math.imul(A, Pe) | 0, b = b + Math.imul(A, Me) | 0, d = d + Math.imul(re, Oe) | 0, f = f + Math.imul(re, Se) | 0, f = f + Math.imul(oe, Oe) | 0, b = b + Math.imul(oe, Se) | 0, d = d + Math.imul(ze, qe) | 0, f = f + Math.imul(ze, ke) | 0, f = f + Math.imul(ge, qe) | 0, b = b + Math.imul(ge, ke) | 0, d = d + Math.imul(le, Ne) | 0, f = f + Math.imul(le, Ee) | 0, f = f + Math.imul(he, Ne) | 0, b = b + Math.imul(he, Ee) | 0, d = d + Math.imul(te, Fe) | 0, f = f + Math.imul(te, Ae) | 0, f = f + Math.imul(ce, Fe) | 0, b = b + Math.imul(ce, Ae) | 0, d = d + Math.imul(j, Ce) | 0, f = f + Math.imul(j, Be) | 0, f = f + Math.imul(P, Ce) | 0, b = b + Math.imul(P, Be) | 0, d = d + Math.imul($, Re) | 0, f = f + Math.imul($, Te) | 0, f = f + Math.imul(K, Re) | 0, b = b + Math.imul(K, Te) | 0;\n      var qr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (qr >>> 26) | 0, qr &= 67108863, d = Math.imul(X, je), f = Math.imul(X, _e), f = f + Math.imul(ee, je) | 0, b = Math.imul(ee, _e), d = d + Math.imul(_, Pe) | 0, f = f + Math.imul(_, Me) | 0, f = f + Math.imul(N, Pe) | 0, b = b + Math.imul(N, Me) | 0, d = d + Math.imul(de, Oe) | 0, f = f + Math.imul(de, Se) | 0, f = f + Math.imul(A, Oe) | 0, b = b + Math.imul(A, Se) | 0, d = d + Math.imul(re, qe) | 0, f = f + Math.imul(re, ke) | 0, f = f + Math.imul(oe, qe) | 0, b = b + Math.imul(oe, ke) | 0, d = d + Math.imul(ze, Ne) | 0, f = f + Math.imul(ze, Ee) | 0, f = f + Math.imul(ge, Ne) | 0, b = b + Math.imul(ge, Ee) | 0, d = d + Math.imul(le, Fe) | 0, f = f + Math.imul(le, Ae) | 0, f = f + Math.imul(he, Fe) | 0, b = b + Math.imul(he, Ae) | 0, d = d + Math.imul(te, Ce) | 0, f = f + Math.imul(te, Be) | 0, f = f + Math.imul(ce, Ce) | 0, b = b + Math.imul(ce, Be) | 0, d = d + Math.imul(j, Re) | 0, f = f + Math.imul(j, Te) | 0, f = f + Math.imul(P, Re) | 0, b = b + Math.imul(P, Te) | 0;\n      var Nr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Nr >>> 26) | 0, Nr &= 67108863, d = Math.imul(X, Pe), f = Math.imul(X, Me), f = f + Math.imul(ee, Pe) | 0, b = Math.imul(ee, Me), d = d + Math.imul(_, Oe) | 0, f = f + Math.imul(_, Se) | 0, f = f + Math.imul(N, Oe) | 0, b = b + Math.imul(N, Se) | 0, d = d + Math.imul(de, qe) | 0, f = f + Math.imul(de, ke) | 0, f = f + Math.imul(A, qe) | 0, b = b + Math.imul(A, ke) | 0, d = d + Math.imul(re, Ne) | 0, f = f + Math.imul(re, Ee) | 0, f = f + Math.imul(oe, Ne) | 0, b = b + Math.imul(oe, Ee) | 0, d = d + Math.imul(ze, Fe) | 0, f = f + Math.imul(ze, Ae) | 0, f = f + Math.imul(ge, Fe) | 0, b = b + Math.imul(ge, Ae) | 0, d = d + Math.imul(le, Ce) | 0, f = f + Math.imul(le, Be) | 0, f = f + Math.imul(he, Ce) | 0, b = b + Math.imul(he, Be) | 0, d = d + Math.imul(te, Re) | 0, f = f + Math.imul(te, Te) | 0, f = f + Math.imul(ce, Re) | 0, b = b + Math.imul(ce, Te) | 0;\n      var Fr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Fr >>> 26) | 0, Fr &= 67108863, d = Math.imul(X, Oe), f = Math.imul(X, Se), f = f + Math.imul(ee, Oe) | 0, b = Math.imul(ee, Se), d = d + Math.imul(_, qe) | 0, f = f + Math.imul(_, ke) | 0, f = f + Math.imul(N, qe) | 0, b = b + Math.imul(N, ke) | 0, d = d + Math.imul(de, Ne) | 0, f = f + Math.imul(de, Ee) | 0, f = f + Math.imul(A, Ne) | 0, b = b + Math.imul(A, Ee) | 0, d = d + Math.imul(re, Fe) | 0, f = f + Math.imul(re, Ae) | 0, f = f + Math.imul(oe, Fe) | 0, b = b + Math.imul(oe, Ae) | 0, d = d + Math.imul(ze, Ce) | 0, f = f + Math.imul(ze, Be) | 0, f = f + Math.imul(ge, Ce) | 0, b = b + Math.imul(ge, Be) | 0, d = d + Math.imul(le, Re) | 0, f = f + Math.imul(le, Te) | 0, f = f + Math.imul(he, Re) | 0, b = b + Math.imul(he, Te) | 0;\n      var Cr = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Cr >>> 26) | 0, Cr &= 67108863, d = Math.imul(X, qe), f = Math.imul(X, ke), f = f + Math.imul(ee, qe) | 0, b = Math.imul(ee, ke), d = d + Math.imul(_, Ne) | 0, f = f + Math.imul(_, Ee) | 0, f = f + Math.imul(N, Ne) | 0, b = b + Math.imul(N, Ee) | 0, d = d + Math.imul(de, Fe) | 0, f = f + Math.imul(de, Ae) | 0, f = f + Math.imul(A, Fe) | 0, b = b + Math.imul(A, Ae) | 0, d = d + Math.imul(re, Ce) | 0, f = f + Math.imul(re, Be) | 0, f = f + Math.imul(oe, Ce) | 0, b = b + Math.imul(oe, Be) | 0, d = d + Math.imul(ze, Re) | 0, f = f + Math.imul(ze, Te) | 0, f = f + Math.imul(ge, Re) | 0, b = b + Math.imul(ge, Te) | 0;\n      var at = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (at >>> 26) | 0, at &= 67108863, d = Math.imul(X, Ne), f = Math.imul(X, Ee), f = f + Math.imul(ee, Ne) | 0, b = Math.imul(ee, Ee), d = d + Math.imul(_, Fe) | 0, f = f + Math.imul(_, Ae) | 0, f = f + Math.imul(N, Fe) | 0, b = b + Math.imul(N, Ae) | 0, d = d + Math.imul(de, Ce) | 0, f = f + Math.imul(de, Be) | 0, f = f + Math.imul(A, Ce) | 0, b = b + Math.imul(A, Be) | 0, d = d + Math.imul(re, Re) | 0, f = f + Math.imul(re, Te) | 0, f = f + Math.imul(oe, Re) | 0, b = b + Math.imul(oe, Te) | 0;\n      var it = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (it >>> 26) | 0, it &= 67108863, d = Math.imul(X, Fe), f = Math.imul(X, Ae), f = f + Math.imul(ee, Fe) | 0, b = Math.imul(ee, Ae), d = d + Math.imul(_, Ce) | 0, f = f + Math.imul(_, Be) | 0, f = f + Math.imul(N, Ce) | 0, b = b + Math.imul(N, Be) | 0, d = d + Math.imul(de, Re) | 0, f = f + Math.imul(de, Te) | 0, f = f + Math.imul(A, Re) | 0, b = b + Math.imul(A, Te) | 0;\n      var nt = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (nt >>> 26) | 0, nt &= 67108863, d = Math.imul(X, Ce), f = Math.imul(X, Be), f = f + Math.imul(ee, Ce) | 0, b = Math.imul(ee, Be), d = d + Math.imul(_, Re) | 0, f = f + Math.imul(_, Te) | 0, f = f + Math.imul(N, Re) | 0, b = b + Math.imul(N, Te) | 0;\n      var Jt = (l + d | 0) + ((f & 8191) << 13) | 0;\n      l = (b + (f >>> 13) | 0) + (Jt >>> 26) | 0, Jt &= 67108863, d = Math.imul(X, Re), f = Math.imul(X, Te), f = f + Math.imul(ee, Re) | 0, b = Math.imul(ee, Te);\n      var Yt = (l + d | 0) + ((f & 8191) << 13) | 0;\n      return l = (b + (f >>> 13) | 0) + (Yt >>> 26) | 0, Yt &= 67108863, g[0] = cr, g[1] = dr, g[2] = sr, g[3] = ur, g[4] = lr, g[5] = Rr, g[6] = Tr, g[7] = jr, g[8] = Pr, g[9] = Or, g[10] = qr, g[11] = Nr, g[12] = Fr, g[13] = Cr, g[14] = at, g[15] = it, g[16] = nt, g[17] = Jt, g[18] = Yt, l !== 0 && (g[19] = l, u.length++), u;\n    };\n    Math.imul || (U = R);\n    function H(s, a, o) {\n      o.negative = a.negative ^ s.negative, o.length = s.length + a.length;\n      for (var u = 0, h = 0, v = 0; v < o.length - 1; v++) {\n        var g = h;\n        h = 0;\n        for (var l = u & 67108863, d = Math.min(v, a.length - 1), f = Math.max(0, v - s.length + 1); f <= d; f++) {\n          var b = v - f, E = s.words[b] | 0, y = a.words[f] | 0, S = E * y, I = S & 67108863;\n          g = g + (S / 67108864 | 0) | 0, I = I + l | 0, l = I & 67108863, g = g + (I >>> 26) | 0, h += g >>> 26, g &= 67108863;\n        }\n        o.words[v] = l, u = g, g = h;\n      }\n      return u !== 0 ? o.words[v] = u : o.length--, o._strip();\n    }\n    function Z(s, a, o) {\n      return H(s, a, o);\n    }\n    n.prototype.mulTo = function(a, o) {\n      var u, h = this.length + a.length;\n      return this.length === 10 && a.length === 10 ? u = U(this, a, o) : h < 63 ? u = R(this, a, o) : h < 1024 ? u = H(this, a, o) : u = Z(this, a, o), u;\n    }, n.prototype.mul = function(a) {\n      var o = new n(null);\n      return o.words = new Array(this.length + a.length), this.mulTo(a, o);\n    }, n.prototype.mulf = function(a) {\n      var o = new n(null);\n      return o.words = new Array(this.length + a.length), Z(this, a, o);\n    }, n.prototype.imul = function(a) {\n      return this.clone().mulTo(a, this);\n    }, n.prototype.imuln = function(a) {\n      var o = a < 0;\n      o && (a = -a), i(typeof a == \"number\"), i(a < 67108864);\n      for (var u = 0, h = 0; h < this.length; h++) {\n        var v = (this.words[h] | 0) * a, g = (v & 67108863) + (u & 67108863);\n        u >>= 26, u += v / 67108864 | 0, u += g >>> 26, this.words[h] = g & 67108863;\n      }\n      return u !== 0 && (this.words[h] = u, this.length++), o ? this.ineg() : this;\n    }, n.prototype.muln = function(a) {\n      return this.clone().imuln(a);\n    }, n.prototype.sqr = function() {\n      return this.mul(this);\n    }, n.prototype.isqr = function() {\n      return this.imul(this.clone());\n    }, n.prototype.pow = function(a) {\n      var o = q(a);\n      if (o.length === 0)\n        return new n(1);\n      for (var u = this, h = 0; h < o.length && o[h] === 0; h++, u = u.sqr())\n        ;\n      if (++h < o.length)\n        for (var v = u.sqr(); h < o.length; h++, v = v.sqr())\n          o[h] !== 0 && (u = u.mul(v));\n      return u;\n    }, n.prototype.iushln = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = a % 26, u = (a - o) / 26, h = 67108863 >>> 26 - o << 26 - o, v;\n      if (o !== 0) {\n        var g = 0;\n        for (v = 0; v < this.length; v++) {\n          var l = this.words[v] & h, d = (this.words[v] | 0) - l << o;\n          this.words[v] = d | g, g = l >>> 26 - o;\n        }\n        g && (this.words[v] = g, this.length++);\n      }\n      if (u !== 0) {\n        for (v = this.length - 1; v >= 0; v--)\n          this.words[v + u] = this.words[v];\n        for (v = 0; v < u; v++)\n          this.words[v] = 0;\n        this.length += u;\n      }\n      return this._strip();\n    }, n.prototype.ishln = function(a) {\n      return i(this.negative === 0), this.iushln(a);\n    }, n.prototype.iushrn = function(a, o, u) {\n      i(typeof a == \"number\" && a >= 0);\n      var h;\n      o ? h = (o - o % 26) / 26 : h = 0;\n      var v = a % 26, g = Math.min((a - v) / 26, this.length), l = 67108863 ^ 67108863 >>> v << v, d = u;\n      if (h -= g, h = Math.max(0, h), d) {\n        for (var f = 0; f < g; f++)\n          d.words[f] = this.words[f];\n        d.length = g;\n      }\n      if (g !== 0)\n        if (this.length > g)\n          for (this.length -= g, f = 0; f < this.length; f++)\n            this.words[f] = this.words[f + g];\n        else\n          this.words[0] = 0, this.length = 1;\n      var b = 0;\n      for (f = this.length - 1; f >= 0 && (b !== 0 || f >= h); f--) {\n        var E = this.words[f] | 0;\n        this.words[f] = b << 26 - v | E >>> v, b = E & l;\n      }\n      return d && b !== 0 && (d.words[d.length++] = b), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();\n    }, n.prototype.ishrn = function(a, o, u) {\n      return i(this.negative === 0), this.iushrn(a, o, u);\n    }, n.prototype.shln = function(a) {\n      return this.clone().ishln(a);\n    }, n.prototype.ushln = function(a) {\n      return this.clone().iushln(a);\n    }, n.prototype.shrn = function(a) {\n      return this.clone().ishrn(a);\n    }, n.prototype.ushrn = function(a) {\n      return this.clone().iushrn(a);\n    }, n.prototype.testn = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = a % 26, u = (a - o) / 26, h = 1 << o;\n      if (this.length <= u)\n        return !1;\n      var v = this.words[u];\n      return !!(v & h);\n    }, n.prototype.imaskn = function(a) {\n      i(typeof a == \"number\" && a >= 0);\n      var o = a % 26, u = (a - o) / 26;\n      if (i(this.negative === 0, \"imaskn works only with positive numbers\"), this.length <= u)\n        return this;\n      if (o !== 0 && u++, this.length = Math.min(u, this.length), o !== 0) {\n        var h = 67108863 ^ 67108863 >>> o << o;\n        this.words[this.length - 1] &= h;\n      }\n      return this._strip();\n    }, n.prototype.maskn = function(a) {\n      return this.clone().imaskn(a);\n    }, n.prototype.iaddn = function(a) {\n      return i(typeof a == \"number\"), i(a < 67108864), a < 0 ? this.isubn(-a) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= a ? (this.words[0] = a - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(a), this.negative = 1, this) : this._iaddn(a);\n    }, n.prototype._iaddn = function(a) {\n      this.words[0] += a;\n      for (var o = 0; o < this.length && this.words[o] >= 67108864; o++)\n        this.words[o] -= 67108864, o === this.length - 1 ? this.words[o + 1] = 1 : this.words[o + 1]++;\n      return this.length = Math.max(this.length, o + 1), this;\n    }, n.prototype.isubn = function(a) {\n      if (i(typeof a == \"number\"), i(a < 67108864), a < 0)\n        return this.iaddn(-a);\n      if (this.negative !== 0)\n        return this.negative = 0, this.iaddn(a), this.negative = 1, this;\n      if (this.words[0] -= a, this.length === 1 && this.words[0] < 0)\n        this.words[0] = -this.words[0], this.negative = 1;\n      else\n        for (var o = 0; o < this.length && this.words[o] < 0; o++)\n          this.words[o] += 67108864, this.words[o + 1] -= 1;\n      return this._strip();\n    }, n.prototype.addn = function(a) {\n      return this.clone().iaddn(a);\n    }, n.prototype.subn = function(a) {\n      return this.clone().isubn(a);\n    }, n.prototype.iabs = function() {\n      return this.negative = 0, this;\n    }, n.prototype.abs = function() {\n      return this.clone().iabs();\n    }, n.prototype._ishlnsubmul = function(a, o, u) {\n      var h = a.length + u, v;\n      this._expand(h);\n      var g, l = 0;\n      for (v = 0; v < a.length; v++) {\n        g = (this.words[v + u] | 0) + l;\n        var d = (a.words[v] | 0) * o;\n        g -= d & 67108863, l = (g >> 26) - (d / 67108864 | 0), this.words[v + u] = g & 67108863;\n      }\n      for (; v < this.length - u; v++)\n        g = (this.words[v + u] | 0) + l, l = g >> 26, this.words[v + u] = g & 67108863;\n      if (l === 0)\n        return this._strip();\n      for (i(l === -1), l = 0, v = 0; v < this.length; v++)\n        g = -(this.words[v] | 0) + l, l = g >> 26, this.words[v] = g & 67108863;\n      return this.negative = 1, this._strip();\n    }, n.prototype._wordDiv = function(a, o) {\n      var u = this.length - a.length, h = this.clone(), v = a, g = v.words[v.length - 1] | 0, l = this._countBits(g);\n      u = 26 - l, u !== 0 && (v = v.ushln(u), h.iushln(u), g = v.words[v.length - 1] | 0);\n      var d = h.length - v.length, f;\n      if (o !== \"mod\") {\n        f = new n(null), f.length = d + 1, f.words = new Array(f.length);\n        for (var b = 0; b < f.length; b++)\n          f.words[b] = 0;\n      }\n      var E = h.clone()._ishlnsubmul(v, 1, d);\n      E.negative === 0 && (h = E, f && (f.words[d] = 1));\n      for (var y = d - 1; y >= 0; y--) {\n        var S = (h.words[v.length + y] | 0) * 67108864 + (h.words[v.length + y - 1] | 0);\n        for (S = Math.min(S / g | 0, 67108863), h._ishlnsubmul(v, S, y); h.negative !== 0; )\n          S--, h.negative = 0, h._ishlnsubmul(v, 1, y), h.isZero() || (h.negative ^= 1);\n        f && (f.words[y] = S);\n      }\n      return f && f._strip(), h._strip(), o !== \"div\" && u !== 0 && h.iushrn(u), {\n        div: f || null,\n        mod: h\n      };\n    }, n.prototype.divmod = function(a, o, u) {\n      if (i(!a.isZero()), this.isZero())\n        return {\n          div: new n(0),\n          mod: new n(0)\n        };\n      var h, v, g;\n      return this.negative !== 0 && a.negative === 0 ? (g = this.neg().divmod(a, o), o !== \"mod\" && (h = g.div.neg()), o !== \"div\" && (v = g.mod.neg(), u && v.negative !== 0 && v.iadd(a)), {\n        div: h,\n        mod: v\n      }) : this.negative === 0 && a.negative !== 0 ? (g = this.divmod(a.neg(), o), o !== \"mod\" && (h = g.div.neg()), {\n        div: h,\n        mod: g.mod\n      }) : this.negative & a.negative ? (g = this.neg().divmod(a.neg(), o), o !== \"div\" && (v = g.mod.neg(), u && v.negative !== 0 && v.isub(a)), {\n        div: g.div,\n        mod: v\n      }) : a.length > this.length || this.cmp(a) < 0 ? {\n        div: new n(0),\n        mod: this\n      } : a.length === 1 ? o === \"div\" ? {\n        div: this.divn(a.words[0]),\n        mod: null\n      } : o === \"mod\" ? {\n        div: null,\n        mod: new n(this.modrn(a.words[0]))\n      } : {\n        div: this.divn(a.words[0]),\n        mod: new n(this.modrn(a.words[0]))\n      } : this._wordDiv(a, o);\n    }, n.prototype.div = function(a) {\n      return this.divmod(a, \"div\", !1).div;\n    }, n.prototype.mod = function(a) {\n      return this.divmod(a, \"mod\", !1).mod;\n    }, n.prototype.umod = function(a) {\n      return this.divmod(a, \"mod\", !0).mod;\n    }, n.prototype.divRound = function(a) {\n      var o = this.divmod(a);\n      if (o.mod.isZero())\n        return o.div;\n      var u = o.div.negative !== 0 ? o.mod.isub(a) : o.mod, h = a.ushrn(1), v = a.andln(1), g = u.cmp(h);\n      return g < 0 || v === 1 && g === 0 ? o.div : o.div.negative !== 0 ? o.div.isubn(1) : o.div.iaddn(1);\n    }, n.prototype.modrn = function(a) {\n      var o = a < 0;\n      o && (a = -a), i(a <= 67108863);\n      for (var u = (1 << 26) % a, h = 0, v = this.length - 1; v >= 0; v--)\n        h = (u * h + (this.words[v] | 0)) % a;\n      return o ? -h : h;\n    }, n.prototype.modn = function(a) {\n      return this.modrn(a);\n    }, n.prototype.idivn = function(a) {\n      var o = a < 0;\n      o && (a = -a), i(a <= 67108863);\n      for (var u = 0, h = this.length - 1; h >= 0; h--) {\n        var v = (this.words[h] | 0) + u * 67108864;\n        this.words[h] = v / a | 0, u = v % a;\n      }\n      return this._strip(), o ? this.ineg() : this;\n    }, n.prototype.divn = function(a) {\n      return this.clone().idivn(a);\n    }, n.prototype.egcd = function(a) {\n      i(a.negative === 0), i(!a.isZero());\n      var o = this, u = a.clone();\n      o.negative !== 0 ? o = o.umod(a) : o = o.clone();\n      for (var h = new n(1), v = new n(0), g = new n(0), l = new n(1), d = 0; o.isEven() && u.isEven(); )\n        o.iushrn(1), u.iushrn(1), ++d;\n      for (var f = u.clone(), b = o.clone(); !o.isZero(); ) {\n        for (var E = 0, y = 1; !(o.words[0] & y) && E < 26; ++E, y <<= 1)\n          ;\n        if (E > 0)\n          for (o.iushrn(E); E-- > 0; )\n            (h.isOdd() || v.isOdd()) && (h.iadd(f), v.isub(b)), h.iushrn(1), v.iushrn(1);\n        for (var S = 0, I = 1; !(u.words[0] & I) && S < 26; ++S, I <<= 1)\n          ;\n        if (S > 0)\n          for (u.iushrn(S); S-- > 0; )\n            (g.isOdd() || l.isOdd()) && (g.iadd(f), l.isub(b)), g.iushrn(1), l.iushrn(1);\n        o.cmp(u) >= 0 ? (o.isub(u), h.isub(g), v.isub(l)) : (u.isub(o), g.isub(h), l.isub(v));\n      }\n      return {\n        a: g,\n        b: l,\n        gcd: u.iushln(d)\n      };\n    }, n.prototype._invmp = function(a) {\n      i(a.negative === 0), i(!a.isZero());\n      var o = this, u = a.clone();\n      o.negative !== 0 ? o = o.umod(a) : o = o.clone();\n      for (var h = new n(1), v = new n(0), g = u.clone(); o.cmpn(1) > 0 && u.cmpn(1) > 0; ) {\n        for (var l = 0, d = 1; !(o.words[0] & d) && l < 26; ++l, d <<= 1)\n          ;\n        if (l > 0)\n          for (o.iushrn(l); l-- > 0; )\n            h.isOdd() && h.iadd(g), h.iushrn(1);\n        for (var f = 0, b = 1; !(u.words[0] & b) && f < 26; ++f, b <<= 1)\n          ;\n        if (f > 0)\n          for (u.iushrn(f); f-- > 0; )\n            v.isOdd() && v.iadd(g), v.iushrn(1);\n        o.cmp(u) >= 0 ? (o.isub(u), h.isub(v)) : (u.isub(o), v.isub(h));\n      }\n      var E;\n      return o.cmpn(1) === 0 ? E = h : E = v, E.cmpn(0) < 0 && E.iadd(a), E;\n    }, n.prototype.gcd = function(a) {\n      if (this.isZero())\n        return a.abs();\n      if (a.isZero())\n        return this.abs();\n      var o = this.clone(), u = a.clone();\n      o.negative = 0, u.negative = 0;\n      for (var h = 0; o.isEven() && u.isEven(); h++)\n        o.iushrn(1), u.iushrn(1);\n      do {\n        for (; o.isEven(); )\n          o.iushrn(1);\n        for (; u.isEven(); )\n          u.iushrn(1);\n        var v = o.cmp(u);\n        if (v < 0) {\n          var g = o;\n          o = u, u = g;\n        } else if (v === 0 || u.cmpn(1) === 0)\n          break;\n        o.isub(u);\n      } while (!0);\n      return u.iushln(h);\n    }, n.prototype.invm = function(a) {\n      return this.egcd(a).a.umod(a);\n    }, n.prototype.isEven = function() {\n      return (this.words[0] & 1) === 0;\n    }, n.prototype.isOdd = function() {\n      return (this.words[0] & 1) === 1;\n    }, n.prototype.andln = function(a) {\n      return this.words[0] & a;\n    }, n.prototype.bincn = function(a) {\n      i(typeof a == \"number\");\n      var o = a % 26, u = (a - o) / 26, h = 1 << o;\n      if (this.length <= u)\n        return this._expand(u + 1), this.words[u] |= h, this;\n      for (var v = h, g = u; v !== 0 && g < this.length; g++) {\n        var l = this.words[g] | 0;\n        l += v, v = l >>> 26, l &= 67108863, this.words[g] = l;\n      }\n      return v !== 0 && (this.words[g] = v, this.length++), this;\n    }, n.prototype.isZero = function() {\n      return this.length === 1 && this.words[0] === 0;\n    }, n.prototype.cmpn = function(a) {\n      var o = a < 0;\n      if (this.negative !== 0 && !o)\n        return -1;\n      if (this.negative === 0 && o)\n        return 1;\n      this._strip();\n      var u;\n      if (this.length > 1)\n        u = 1;\n      else {\n        o && (a = -a), i(a <= 67108863, \"Number is too big\");\n        var h = this.words[0] | 0;\n        u = h === a ? 0 : h < a ? -1 : 1;\n      }\n      return this.negative !== 0 ? -u | 0 : u;\n    }, n.prototype.cmp = function(a) {\n      if (this.negative !== 0 && a.negative === 0)\n        return -1;\n      if (this.negative === 0 && a.negative !== 0)\n        return 1;\n      var o = this.ucmp(a);\n      return this.negative !== 0 ? -o | 0 : o;\n    }, n.prototype.ucmp = function(a) {\n      if (this.length > a.length)\n        return 1;\n      if (this.length < a.length)\n        return -1;\n      for (var o = 0, u = this.length - 1; u >= 0; u--) {\n        var h = this.words[u] | 0, v = a.words[u] | 0;\n        if (h !== v) {\n          h < v ? o = -1 : h > v && (o = 1);\n          break;\n        }\n      }\n      return o;\n    }, n.prototype.gtn = function(a) {\n      return this.cmpn(a) === 1;\n    }, n.prototype.gt = function(a) {\n      return this.cmp(a) === 1;\n    }, n.prototype.gten = function(a) {\n      return this.cmpn(a) >= 0;\n    }, n.prototype.gte = function(a) {\n      return this.cmp(a) >= 0;\n    }, n.prototype.ltn = function(a) {\n      return this.cmpn(a) === -1;\n    }, n.prototype.lt = function(a) {\n      return this.cmp(a) === -1;\n    }, n.prototype.lten = function(a) {\n      return this.cmpn(a) <= 0;\n    }, n.prototype.lte = function(a) {\n      return this.cmp(a) <= 0;\n    }, n.prototype.eqn = function(a) {\n      return this.cmpn(a) === 0;\n    }, n.prototype.eq = function(a) {\n      return this.cmp(a) === 0;\n    }, n.red = function(a) {\n      return new M(a);\n    }, n.prototype.toRed = function(a) {\n      return i(!this.red, \"Already a number in reduction context\"), i(this.negative === 0, \"red works only with positives\"), a.convertTo(this)._forceRed(a);\n    }, n.prototype.fromRed = function() {\n      return i(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n    }, n.prototype._forceRed = function(a) {\n      return this.red = a, this;\n    }, n.prototype.forceRed = function(a) {\n      return i(!this.red, \"Already a number in reduction context\"), this._forceRed(a);\n    }, n.prototype.redAdd = function(a) {\n      return i(this.red, \"redAdd works only with red numbers\"), this.red.add(this, a);\n    }, n.prototype.redIAdd = function(a) {\n      return i(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, a);\n    }, n.prototype.redSub = function(a) {\n      return i(this.red, \"redSub works only with red numbers\"), this.red.sub(this, a);\n    }, n.prototype.redISub = function(a) {\n      return i(this.red, \"redISub works only with red numbers\"), this.red.isub(this, a);\n    }, n.prototype.redShl = function(a) {\n      return i(this.red, \"redShl works only with red numbers\"), this.red.shl(this, a);\n    }, n.prototype.redMul = function(a) {\n      return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, a), this.red.mul(this, a);\n    }, n.prototype.redIMul = function(a) {\n      return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, a), this.red.imul(this, a);\n    }, n.prototype.redSqr = function() {\n      return i(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n    }, n.prototype.redISqr = function() {\n      return i(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n    }, n.prototype.redSqrt = function() {\n      return i(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n    }, n.prototype.redInvm = function() {\n      return i(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n    }, n.prototype.redNeg = function() {\n      return i(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n    }, n.prototype.redPow = function(a) {\n      return i(this.red && !a.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, a);\n    };\n    var W = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    };\n    function Y(s, a) {\n      this.name = s, this.p = new n(a, 16), this.n = this.p.bitLength(), this.k = new n(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n    }\n    Y.prototype._tmp = function() {\n      var a = new n(null);\n      return a.words = new Array(Math.ceil(this.n / 13)), a;\n    }, Y.prototype.ireduce = function(a) {\n      var o = a, u;\n      do\n        this.split(o, this.tmp), o = this.imulK(o), o = o.iadd(this.tmp), u = o.bitLength();\n      while (u > this.n);\n      var h = u < this.n ? -1 : o.ucmp(this.p);\n      return h === 0 ? (o.words[0] = 0, o.length = 1) : h > 0 ? o.isub(this.p) : o.strip !== void 0 ? o.strip() : o._strip(), o;\n    }, Y.prototype.split = function(a, o) {\n      a.iushrn(this.n, 0, o);\n    }, Y.prototype.imulK = function(a) {\n      return a.imul(this.k);\n    };\n    function ne() {\n      Y.call(\n        this,\n        \"k256\",\n        \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\"\n      );\n    }\n    c(ne, Y), ne.prototype.split = function(a, o) {\n      for (var u = 4194303, h = Math.min(a.length, 9), v = 0; v < h; v++)\n        o.words[v] = a.words[v];\n      if (o.length = h, a.length <= 9) {\n        a.words[0] = 0, a.length = 1;\n        return;\n      }\n      var g = a.words[9];\n      for (o.words[o.length++] = g & u, v = 10; v < a.length; v++) {\n        var l = a.words[v] | 0;\n        a.words[v - 10] = (l & u) << 4 | g >>> 22, g = l;\n      }\n      g >>>= 22, a.words[v - 10] = g, g === 0 && a.length > 10 ? a.length -= 10 : a.length -= 9;\n    }, ne.prototype.imulK = function(a) {\n      a.words[a.length] = 0, a.words[a.length + 1] = 0, a.length += 2;\n      for (var o = 0, u = 0; u < a.length; u++) {\n        var h = a.words[u] | 0;\n        o += h * 977, a.words[u] = o & 67108863, o = h * 64 + (o / 67108864 | 0);\n      }\n      return a.words[a.length - 1] === 0 && (a.length--, a.words[a.length - 1] === 0 && a.length--), a;\n    };\n    function D() {\n      Y.call(\n        this,\n        \"p224\",\n        \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\"\n      );\n    }\n    c(D, Y);\n    function V() {\n      Y.call(\n        this,\n        \"p192\",\n        \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\"\n      );\n    }\n    c(V, Y);\n    function G() {\n      Y.call(\n        this,\n        \"25519\",\n        \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\"\n      );\n    }\n    c(G, Y), G.prototype.imulK = function(a) {\n      for (var o = 0, u = 0; u < a.length; u++) {\n        var h = (a.words[u] | 0) * 19 + o, v = h & 67108863;\n        h >>>= 26, a.words[u] = v, o = h;\n      }\n      return o !== 0 && (a.words[a.length++] = o), a;\n    }, n._prime = function(a) {\n      if (W[a])\n        return W[a];\n      var o;\n      if (a === \"k256\")\n        o = new ne();\n      else if (a === \"p224\")\n        o = new D();\n      else if (a === \"p192\")\n        o = new V();\n      else if (a === \"p25519\")\n        o = new G();\n      else\n        throw new Error(\"Unknown prime \" + a);\n      return W[a] = o, o;\n    };\n    function M(s) {\n      if (typeof s == \"string\") {\n        var a = n._prime(s);\n        this.m = a.p, this.prime = a;\n      } else\n        i(s.gtn(1), \"modulus must be greater than 1\"), this.m = s, this.prime = null;\n    }\n    M.prototype._verify1 = function(a) {\n      i(a.negative === 0, \"red works only with positives\"), i(a.red, \"red works only with red numbers\");\n    }, M.prototype._verify2 = function(a, o) {\n      i((a.negative | o.negative) === 0, \"red works only with positives\"), i(\n        a.red && a.red === o.red,\n        \"red works only with red numbers\"\n      );\n    }, M.prototype.imod = function(a) {\n      return this.prime ? this.prime.ireduce(a)._forceRed(this) : (z(a, a.umod(this.m)._forceRed(this)), a);\n    }, M.prototype.neg = function(a) {\n      return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);\n    }, M.prototype.add = function(a, o) {\n      this._verify2(a, o);\n      var u = a.add(o);\n      return u.cmp(this.m) >= 0 && u.isub(this.m), u._forceRed(this);\n    }, M.prototype.iadd = function(a, o) {\n      this._verify2(a, o);\n      var u = a.iadd(o);\n      return u.cmp(this.m) >= 0 && u.isub(this.m), u;\n    }, M.prototype.sub = function(a, o) {\n      this._verify2(a, o);\n      var u = a.sub(o);\n      return u.cmpn(0) < 0 && u.iadd(this.m), u._forceRed(this);\n    }, M.prototype.isub = function(a, o) {\n      this._verify2(a, o);\n      var u = a.isub(o);\n      return u.cmpn(0) < 0 && u.iadd(this.m), u;\n    }, M.prototype.shl = function(a, o) {\n      return this._verify1(a), this.imod(a.ushln(o));\n    }, M.prototype.imul = function(a, o) {\n      return this._verify2(a, o), this.imod(a.imul(o));\n    }, M.prototype.mul = function(a, o) {\n      return this._verify2(a, o), this.imod(a.mul(o));\n    }, M.prototype.isqr = function(a) {\n      return this.imul(a, a.clone());\n    }, M.prototype.sqr = function(a) {\n      return this.mul(a, a);\n    }, M.prototype.sqrt = function(a) {\n      if (a.isZero())\n        return a.clone();\n      var o = this.m.andln(3);\n      if (i(o % 2 === 1), o === 3) {\n        var u = this.m.add(new n(1)).iushrn(2);\n        return this.pow(a, u);\n      }\n      for (var h = this.m.subn(1), v = 0; !h.isZero() && h.andln(1) === 0; )\n        v++, h.iushrn(1);\n      i(!h.isZero());\n      var g = new n(1).toRed(this), l = g.redNeg(), d = this.m.subn(1).iushrn(1), f = this.m.bitLength();\n      for (f = new n(2 * f * f).toRed(this); this.pow(f, d).cmp(l) !== 0; )\n        f.redIAdd(l);\n      for (var b = this.pow(f, h), E = this.pow(a, h.addn(1).iushrn(1)), y = this.pow(a, h), S = v; y.cmp(g) !== 0; ) {\n        for (var I = y, $ = 0; I.cmp(g) !== 0; $++)\n          I = I.redSqr();\n        i($ < S);\n        var K = this.pow(b, new n(1).iushln(S - $ - 1));\n        E = E.redMul(K), b = K.redSqr(), y = y.redMul(b), S = $;\n      }\n      return E;\n    }, M.prototype.invm = function(a) {\n      var o = a._invmp(this.m);\n      return o.negative !== 0 ? (o.negative = 0, this.imod(o).redNeg()) : this.imod(o);\n    }, M.prototype.pow = function(a, o) {\n      if (o.isZero())\n        return new n(1).toRed(this);\n      if (o.cmpn(1) === 0)\n        return a.clone();\n      var u = 4, h = new Array(1 << u);\n      h[0] = new n(1).toRed(this), h[1] = a;\n      for (var v = 2; v < h.length; v++)\n        h[v] = this.mul(h[v - 1], a);\n      var g = h[0], l = 0, d = 0, f = o.bitLength() % 26;\n      for (f === 0 && (f = 26), v = o.length - 1; v >= 0; v--) {\n        for (var b = o.words[v], E = f - 1; E >= 0; E--) {\n          var y = b >> E & 1;\n          if (g !== h[0] && (g = this.sqr(g)), y === 0 && l === 0) {\n            d = 0;\n            continue;\n          }\n          l <<= 1, l |= y, d++, !(d !== u && (v !== 0 || E !== 0)) && (g = this.mul(g, h[l]), d = 0, l = 0);\n        }\n        f = 26;\n      }\n      return g;\n    }, M.prototype.convertTo = function(a) {\n      var o = a.umod(this.m);\n      return o === a ? o.clone() : o;\n    }, M.prototype.convertFrom = function(a) {\n      var o = a.clone();\n      return o.red = null, o;\n    }, n.mont = function(a) {\n      return new p(a);\n    };\n    function p(s) {\n      M.call(this, s), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new n(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n    }\n    c(p, M), p.prototype.convertTo = function(a) {\n      return this.imod(a.ushln(this.shift));\n    }, p.prototype.convertFrom = function(a) {\n      var o = this.imod(a.mul(this.rinv));\n      return o.red = null, o;\n    }, p.prototype.imul = function(a, o) {\n      if (a.isZero() || o.isZero())\n        return a.words[0] = 0, a.length = 1, a;\n      var u = a.imul(o), h = u.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), v = u.isub(h).iushrn(this.shift), g = v;\n      return v.cmp(this.m) >= 0 ? g = v.isub(this.m) : v.cmpn(0) < 0 && (g = v.iadd(this.m)), g._forceRed(this);\n    }, p.prototype.mul = function(a, o) {\n      if (a.isZero() || o.isZero())\n        return new n(0)._forceRed(this);\n      var u = a.mul(o), h = u.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), v = u.isub(h).iushrn(this.shift), g = v;\n      return v.cmp(this.m) >= 0 ? g = v.isub(this.m) : v.cmpn(0) < 0 && (g = v.iadd(this.m)), g._forceRed(this);\n    }, p.prototype.invm = function(a) {\n      var o = this.imod(a._invmp(this.m).mul(this.r2));\n      return o._forceRed(this);\n    };\n  })(e, be);\n})($0);\nvar t2 = $0.exports, a2 = be && be.__importDefault || function(e) {\n  return e && e.__esModule ? e : { default: e };\n};\nObject.defineProperty(Ut, \"__esModule\", { value: !0 });\nUt.getLength = Ut.decode = Ut.encode = void 0;\nvar i2 = a2(t2);\nfunction us(e) {\n  if (Array.isArray(e)) {\n    for (var r = [], t = 0; t < e.length; t++)\n      r.push(us(e[t]));\n    var i = Buffer.concat(r);\n    return Buffer.concat([bc(i.length, 192), i]);\n  } else {\n    var c = D0(e);\n    return c.length === 1 && c[0] < 128 ? c : Buffer.concat([bc(c.length, 128), c]);\n  }\n}\nUt.encode = us;\nfunction t0(e, r) {\n  if (e[0] === \"0\" && e[1] === \"0\")\n    throw new Error(\"invalid RLP: extra zeros\");\n  return parseInt(e, r);\n}\nfunction bc(e, r) {\n  if (e < 56)\n    return Buffer.from([e + r]);\n  var t = i0(e), i = t.length / 2, c = i0(r + 55 + i);\n  return Buffer.from(c + t, \"hex\");\n}\nfunction n2(e, r) {\n  if (r === void 0 && (r = !1), !e || e.length === 0)\n    return Buffer.from([]);\n  var t = D0(e), i = a0(t);\n  if (r)\n    return i;\n  if (i.remainder.length !== 0)\n    throw new Error(\"invalid remainder\");\n  return i.data;\n}\nUt.decode = n2;\nfunction f2(e) {\n  if (!e || e.length === 0)\n    return Buffer.from([]);\n  var r = D0(e), t = r[0];\n  if (t <= 127)\n    return r.length;\n  if (t <= 183)\n    return t - 127;\n  if (t <= 191)\n    return t - 182;\n  if (t <= 247)\n    return t - 191;\n  var i = t - 246, c = t0(r.slice(1, i).toString(\"hex\"), 16);\n  return i + c;\n}\nUt.getLength = f2;\nfunction a0(e) {\n  var r, t, i, c, n, x = [], m = e[0];\n  if (m <= 127)\n    return {\n      data: e.slice(0, 1),\n      remainder: e.slice(1)\n    };\n  if (m <= 183) {\n    if (r = m - 127, m === 128 ? i = Buffer.from([]) : i = e.slice(1, r), r === 2 && i[0] < 128)\n      throw new Error(\"invalid rlp encoding: byte must be less 0x80\");\n    return {\n      data: i,\n      remainder: e.slice(r)\n    };\n  } else if (m <= 191) {\n    if (t = m - 182, e.length - 1 < t)\n      throw new Error(\"invalid RLP: not enough bytes for string length\");\n    if (r = t0(e.slice(1, t).toString(\"hex\"), 16), r <= 55)\n      throw new Error(\"invalid RLP: expected string length to be greater than 55\");\n    if (i = e.slice(t, r + t), i.length < r)\n      throw new Error(\"invalid RLP: not enough bytes for string\");\n    return {\n      data: i,\n      remainder: e.slice(r + t)\n    };\n  } else if (m <= 247) {\n    for (r = m - 191, c = e.slice(1, r); c.length; )\n      n = a0(c), x.push(n.data), c = n.remainder;\n    return {\n      data: x,\n      remainder: e.slice(r)\n    };\n  } else {\n    t = m - 246, r = t0(e.slice(1, t).toString(\"hex\"), 16);\n    var k = t + r;\n    if (k > e.length)\n      throw new Error(\"invalid rlp: total length is larger than the data\");\n    if (c = e.slice(t, k), c.length === 0)\n      throw new Error(\"invalid rlp, List has a invalid length\");\n    for (; c.length; )\n      n = a0(c), x.push(n.data), c = n.remainder;\n    return {\n      data: x,\n      remainder: e.slice(k)\n    };\n  }\n}\nfunction ls(e) {\n  return e.slice(0, 2) === \"0x\";\n}\nfunction o2(e) {\n  return typeof e != \"string\" ? e : ls(e) ? e.slice(2) : e;\n}\nfunction i0(e) {\n  if (e < 0)\n    throw new Error(\"Invalid integer as argument, must be unsigned!\");\n  var r = e.toString(16);\n  return r.length % 2 ? \"0\" + r : r;\n}\nfunction c2(e) {\n  return e.length % 2 ? \"0\" + e : e;\n}\nfunction d2(e) {\n  var r = i0(e);\n  return Buffer.from(r, \"hex\");\n}\nfunction D0(e) {\n  if (!Buffer.isBuffer(e)) {\n    if (typeof e == \"string\")\n      return ls(e) ? Buffer.from(c2(o2(e)), \"hex\") : Buffer.from(e);\n    if (typeof e == \"number\" || typeof e == \"bigint\")\n      return e ? d2(e) : Buffer.from([]);\n    if (e == null)\n      return Buffer.from([]);\n    if (e instanceof Uint8Array)\n      return Buffer.from(e);\n    if (i2.default.isBN(e))\n      return Buffer.from(e.toArray());\n    throw new Error(\"invalid type\");\n  }\n  return e;\n}\nvar s2 = be && be.__createBinding || (Object.create ? function(e, r, t, i) {\n  i === void 0 && (i = t), Object.defineProperty(e, i, { enumerable: !0, get: function() {\n    return r[t];\n  } });\n} : function(e, r, t, i) {\n  i === void 0 && (i = t), e[i] = r[t];\n}), u2 = be && be.__setModuleDefault || (Object.create ? function(e, r) {\n  Object.defineProperty(e, \"default\", { enumerable: !0, value: r });\n} : function(e, r) {\n  e.default = r;\n}), l2 = be && be.__importStar || function(e) {\n  if (e && e.__esModule)\n    return e;\n  var r = {};\n  if (e != null)\n    for (var t in e)\n      t !== \"default\" && Object.prototype.hasOwnProperty.call(e, t) && s2(r, e, t);\n  return u2(r, e), r;\n}, b2 = be && be.__importDefault || function(e) {\n  return e && e.__esModule ? e : { default: e };\n};\nObject.defineProperty($r, \"__esModule\", { value: !0 });\n$r.rlp = $r.BN = void 0;\nvar h2 = b2(r2);\n$r.BN = h2.default;\nvar p2 = l2(Ut);\n$r.rlp = p2;\n(function(e) {\n  Object.defineProperty(e, \"__esModule\", { value: !0 }), e.KECCAK256_RLP = e.KECCAK256_RLP_S = e.KECCAK256_RLP_ARRAY = e.KECCAK256_RLP_ARRAY_S = e.KECCAK256_NULL = e.KECCAK256_NULL_S = e.TWO_POW256 = e.MAX_INTEGER = e.MAX_UINT64 = void 0;\n  var r = Ht, t = $r;\n  e.MAX_UINT64 = new t.BN(\"ffffffffffffffff\", 16), e.MAX_INTEGER = new t.BN(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16), e.TWO_POW256 = new t.BN(\"10000000000000000000000000000000000000000000000000000000000000000\", 16), e.KECCAK256_NULL_S = \"c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\", e.KECCAK256_NULL = r.Buffer.from(e.KECCAK256_NULL_S, \"hex\"), e.KECCAK256_RLP_ARRAY_S = \"1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\", e.KECCAK256_RLP_ARRAY = r.Buffer.from(e.KECCAK256_RLP_ARRAY_S, \"hex\"), e.KECCAK256_RLP_S = \"56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\", e.KECCAK256_RLP = r.Buffer.from(e.KECCAK256_RLP_S, \"hex\");\n})(L0);\nvar K0 = {}, H0 = {};\nconst er = {\n  IMPOSSIBLE_CASE: \"Impossible case. Please create issue.\",\n  TWEAK_ADD: \"The tweak was out of range or the resulted private key is invalid\",\n  TWEAK_MUL: \"The tweak was out of range or equal to zero\",\n  CONTEXT_RANDOMIZE_UNKNOW: \"Unknow error on context randomization\",\n  SECKEY_INVALID: \"Private Key is invalid\",\n  PUBKEY_PARSE: \"Public Key could not be parsed\",\n  PUBKEY_SERIALIZE: \"Public Key serialization error\",\n  PUBKEY_COMBINE: \"The sum of the public keys is not valid\",\n  SIG_PARSE: \"Signature could not be parsed\",\n  SIGN: \"The nonce generation function failed, or the private key was invalid\",\n  RECOVER: \"Public key could not be recover\",\n  ECDH: \"Scalar was invalid (zero or overflow)\"\n};\nfunction Yr(e, r) {\n  if (!e)\n    throw new Error(r);\n}\nfunction Qe(e, r, t) {\n  if (Yr(r instanceof Uint8Array, `Expected ${e} to be an Uint8Array`), t !== void 0)\n    if (Array.isArray(t)) {\n      const i = t.join(\", \"), c = `Expected ${e} to be an Uint8Array with length [${i}]`;\n      Yr(t.includes(r.length), c);\n    } else {\n      const i = `Expected ${e} to be an Uint8Array with length ${t}`;\n      Yr(r.length === t, i);\n    }\n}\nfunction Qt(e) {\n  Yr(ma(e) === \"Boolean\", \"Expected compressed to be a Boolean\");\n}\nfunction ft(e = (t) => new Uint8Array(t), r) {\n  return typeof e == \"function\" && (e = e(r)), Qe(\"output\", e, r), e;\n}\nfunction ma(e) {\n  return Object.prototype.toString.call(e).slice(8, -1);\n}\nvar v2 = (e) => ({\n  contextRandomize(r) {\n    switch (Yr(\n      r === null || r instanceof Uint8Array,\n      \"Expected seed to be an Uint8Array or null\"\n    ), r !== null && Qe(\"seed\", r, 32), e.contextRandomize(r)) {\n      case 1:\n        throw new Error(er.CONTEXT_RANDOMIZE_UNKNOW);\n    }\n  },\n  privateKeyVerify(r) {\n    return Qe(\"private key\", r, 32), e.privateKeyVerify(r) === 0;\n  },\n  privateKeyNegate(r) {\n    switch (Qe(\"private key\", r, 32), e.privateKeyNegate(r)) {\n      case 0:\n        return r;\n      case 1:\n        throw new Error(er.IMPOSSIBLE_CASE);\n    }\n  },\n  privateKeyTweakAdd(r, t) {\n    switch (Qe(\"private key\", r, 32), Qe(\"tweak\", t, 32), e.privateKeyTweakAdd(r, t)) {\n      case 0:\n        return r;\n      case 1:\n        throw new Error(er.TWEAK_ADD);\n    }\n  },\n  privateKeyTweakMul(r, t) {\n    switch (Qe(\"private key\", r, 32), Qe(\"tweak\", t, 32), e.privateKeyTweakMul(r, t)) {\n      case 0:\n        return r;\n      case 1:\n        throw new Error(er.TWEAK_MUL);\n    }\n  },\n  publicKeyVerify(r) {\n    return Qe(\"public key\", r, [33, 65]), e.publicKeyVerify(r) === 0;\n  },\n  publicKeyCreate(r, t = !0, i) {\n    switch (Qe(\"private key\", r, 32), Qt(t), i = ft(i, t ? 33 : 65), e.publicKeyCreate(i, r)) {\n      case 0:\n        return i;\n      case 1:\n        throw new Error(er.SECKEY_INVALID);\n      case 2:\n        throw new Error(er.PUBKEY_SERIALIZE);\n    }\n  },\n  publicKeyConvert(r, t = !0, i) {\n    switch (Qe(\"public key\", r, [33, 65]), Qt(t), i = ft(i, t ? 33 : 65), e.publicKeyConvert(i, r)) {\n      case 0:\n        return i;\n      case 1:\n        throw new Error(er.PUBKEY_PARSE);\n      case 2:\n        throw new Error(er.PUBKEY_SERIALIZE);\n    }\n  },\n  publicKeyNegate(r, t = !0, i) {\n    switch (Qe(\"public key\", r, [33, 65]), Qt(t), i = ft(i, t ? 33 : 65), e.publicKeyNegate(i, r)) {\n      case 0:\n        return i;\n      case 1:\n        throw new Error(er.PUBKEY_PARSE);\n      case 2:\n        throw new Error(er.IMPOSSIBLE_CASE);\n      case 3:\n        throw new Error(er.PUBKEY_SERIALIZE);\n    }\n  },\n  publicKeyCombine(r, t = !0, i) {\n    Yr(Array.isArray(r), \"Expected public keys to be an Array\"), Yr(r.length > 0, \"Expected public keys array will have more than zero items\");\n    for (const c of r)\n      Qe(\"public key\", c, [33, 65]);\n    switch (Qt(t), i = ft(i, t ? 33 : 65), e.publicKeyCombine(i, r)) {\n      case 0:\n        return i;\n      case 1:\n        throw new Error(er.PUBKEY_PARSE);\n      case 2:\n        throw new Error(er.PUBKEY_COMBINE);\n      case 3:\n        throw new Error(er.PUBKEY_SERIALIZE);\n    }\n  },\n  publicKeyTweakAdd(r, t, i = !0, c) {\n    switch (Qe(\"public key\", r, [33, 65]), Qe(\"tweak\", t, 32), Qt(i), c = ft(c, i ? 33 : 65), e.publicKeyTweakAdd(c, r, t)) {\n      case 0:\n        return c;\n      case 1:\n        throw new Error(er.PUBKEY_PARSE);\n      case 2:\n        throw new Error(er.TWEAK_ADD);\n    }\n  },\n  publicKeyTweakMul(r, t, i = !0, c) {\n    switch (Qe(\"public key\", r, [33, 65]), Qe(\"tweak\", t, 32), Qt(i), c = ft(c, i ? 33 : 65), e.publicKeyTweakMul(c, r, t)) {\n      case 0:\n        return c;\n      case 1:\n        throw new Error(er.PUBKEY_PARSE);\n      case 2:\n        throw new Error(er.TWEAK_MUL);\n    }\n  },\n  signatureNormalize(r) {\n    switch (Qe(\"signature\", r, 64), e.signatureNormalize(r)) {\n      case 0:\n        return r;\n      case 1:\n        throw new Error(er.SIG_PARSE);\n    }\n  },\n  signatureExport(r, t) {\n    Qe(\"signature\", r, 64), t = ft(t, 72);\n    const i = { output: t, outputlen: 72 };\n    switch (e.signatureExport(i, r)) {\n      case 0:\n        return t.slice(0, i.outputlen);\n      case 1:\n        throw new Error(er.SIG_PARSE);\n      case 2:\n        throw new Error(er.IMPOSSIBLE_CASE);\n    }\n  },\n  signatureImport(r, t) {\n    switch (Qe(\"signature\", r), t = ft(t, 64), e.signatureImport(t, r)) {\n      case 0:\n        return t;\n      case 1:\n        throw new Error(er.SIG_PARSE);\n      case 2:\n        throw new Error(er.IMPOSSIBLE_CASE);\n    }\n  },\n  ecdsaSign(r, t, i = {}, c) {\n    Qe(\"message\", r, 32), Qe(\"private key\", t, 32), Yr(ma(i) === \"Object\", \"Expected options to be an Object\"), i.data !== void 0 && Qe(\"options.data\", i.data), i.noncefn !== void 0 && Yr(ma(i.noncefn) === \"Function\", \"Expected options.noncefn to be a Function\"), c = ft(c, 64);\n    const n = { signature: c, recid: null };\n    switch (e.ecdsaSign(n, r, t, i.data, i.noncefn)) {\n      case 0:\n        return n;\n      case 1:\n        throw new Error(er.SIGN);\n      case 2:\n        throw new Error(er.IMPOSSIBLE_CASE);\n    }\n  },\n  ecdsaVerify(r, t, i) {\n    switch (Qe(\"signature\", r, 64), Qe(\"message\", t, 32), Qe(\"public key\", i, [33, 65]), e.ecdsaVerify(r, t, i)) {\n      case 0:\n        return !0;\n      case 3:\n        return !1;\n      case 1:\n        throw new Error(er.SIG_PARSE);\n      case 2:\n        throw new Error(er.PUBKEY_PARSE);\n    }\n  },\n  ecdsaRecover(r, t, i, c = !0, n) {\n    switch (Qe(\"signature\", r, 64), Yr(\n      ma(t) === \"Number\" && t >= 0 && t <= 3,\n      \"Expected recovery id to be a Number within interval [0, 3]\"\n    ), Qe(\"message\", i, 32), Qt(c), n = ft(n, c ? 33 : 65), e.ecdsaRecover(n, r, t, i)) {\n      case 0:\n        return n;\n      case 1:\n        throw new Error(er.SIG_PARSE);\n      case 2:\n        throw new Error(er.RECOVER);\n      case 3:\n        throw new Error(er.IMPOSSIBLE_CASE);\n    }\n  },\n  ecdh(r, t, i = {}, c) {\n    switch (Qe(\"public key\", r, [33, 65]), Qe(\"private key\", t, 32), Yr(ma(i) === \"Object\", \"Expected options to be an Object\"), i.data !== void 0 && Qe(\"options.data\", i.data), i.hashfn !== void 0 ? (Yr(ma(i.hashfn) === \"Function\", \"Expected options.hashfn to be a Function\"), i.xbuf !== void 0 && Qe(\"options.xbuf\", i.xbuf, 32), i.ybuf !== void 0 && Qe(\"options.ybuf\", i.ybuf, 32), Qe(\"output\", c)) : c = ft(c, 32), e.ecdh(c, r, t, i.data, i.hashfn, i.xbuf, i.ybuf)) {\n      case 0:\n        return c;\n      case 1:\n        throw new Error(er.PUBKEY_PARSE);\n      case 2:\n        throw new Error(er.ECDH);\n    }\n  }\n}), Ni = {};\nconst x2 = \"elliptic\", m2 = \"6.5.4\", g2 = \"EC cryptography\", y2 = \"lib/elliptic.js\", w2 = [\n  \"lib\"\n], _2 = {\n  lint: \"eslint lib test\",\n  \"lint:fix\": \"npm run lint -- --fix\",\n  unit: \"istanbul test _mocha --reporter=spec test/index.js\",\n  test: \"npm run lint && npm run unit\",\n  version: \"grunt dist && git add dist/\"\n}, M2 = {\n  type: \"git\",\n  url: \"git@github.com:indutny/elliptic\"\n}, S2 = [\n  \"EC\",\n  \"Elliptic\",\n  \"curve\",\n  \"Cryptography\"\n], k2 = \"Fedor Indutny <fedor@indutny.com>\", E2 = \"MIT\", A2 = {\n  url: \"https://github.com/indutny/elliptic/issues\"\n}, B2 = \"https://github.com/indutny/elliptic\", z2 = {\n  brfs: \"^2.0.2\",\n  coveralls: \"^3.1.0\",\n  eslint: \"^7.6.0\",\n  grunt: \"^1.2.1\",\n  \"grunt-browserify\": \"^5.3.0\",\n  \"grunt-cli\": \"^1.3.2\",\n  \"grunt-contrib-connect\": \"^3.0.0\",\n  \"grunt-contrib-copy\": \"^1.0.0\",\n  \"grunt-contrib-uglify\": \"^5.0.0\",\n  \"grunt-mocha-istanbul\": \"^5.0.2\",\n  \"grunt-saucelabs\": \"^9.0.1\",\n  istanbul: \"^0.4.5\",\n  mocha: \"^8.0.1\"\n}, I2 = {\n  \"bn.js\": \"^4.11.9\",\n  brorand: \"^1.1.0\",\n  \"hash.js\": \"^1.0.0\",\n  \"hmac-drbg\": \"^1.0.1\",\n  inherits: \"^2.0.4\",\n  \"minimalistic-assert\": \"^1.0.1\",\n  \"minimalistic-crypto-utils\": \"^1.0.1\"\n}, R2 = {\n  name: x2,\n  version: m2,\n  description: g2,\n  main: y2,\n  files: w2,\n  scripts: _2,\n  repository: M2,\n  keywords: S2,\n  author: k2,\n  license: E2,\n  bugs: A2,\n  homepage: B2,\n  devDependencies: z2,\n  dependencies: I2\n};\nvar Gr = {}, ha = bs;\nfunction bs(e, r) {\n  if (!e)\n    throw new Error(r || \"Assertion failed\");\n}\nbs.equal = function(r, t, i) {\n  if (r != t)\n    throw new Error(i || \"Assertion failed: \" + r + \" != \" + t);\n};\nvar V0 = {};\n(function(e) {\n  var r = e;\n  function t(n, x) {\n    if (Array.isArray(n))\n      return n.slice();\n    if (!n)\n      return [];\n    var m = [];\n    if (typeof n != \"string\") {\n      for (var k = 0; k < n.length; k++)\n        m[k] = n[k] | 0;\n      return m;\n    }\n    if (x === \"hex\") {\n      n = n.replace(/[^a-z0-9]+/ig, \"\"), n.length % 2 !== 0 && (n = \"0\" + n);\n      for (var k = 0; k < n.length; k += 2)\n        m.push(parseInt(n[k] + n[k + 1], 16));\n    } else\n      for (var k = 0; k < n.length; k++) {\n        var B = n.charCodeAt(k), z = B >> 8, C = B & 255;\n        z ? m.push(z, C) : m.push(C);\n      }\n    return m;\n  }\n  r.toArray = t;\n  function i(n) {\n    return n.length === 1 ? \"0\" + n : n;\n  }\n  r.zero2 = i;\n  function c(n) {\n    for (var x = \"\", m = 0; m < n.length; m++)\n      x += i(n[m].toString(16));\n    return x;\n  }\n  r.toHex = c, r.encode = function(x, m) {\n    return m === \"hex\" ? c(x) : x;\n  };\n})(V0);\n(function(e) {\n  var r = e, t = St, i = ha, c = V0;\n  r.assert = i, r.toArray = c.toArray, r.zero2 = c.zero2, r.toHex = c.toHex, r.encode = c.encode;\n  function n(z, C, F) {\n    var T = new Array(Math.max(z.bitLength(), F) + 1);\n    T.fill(0);\n    for (var L = 1 << C + 1, O = z.clone(), q = 0; q < T.length; q++) {\n      var R, U = O.andln(L - 1);\n      O.isOdd() ? (U > (L >> 1) - 1 ? R = (L >> 1) - U : R = U, O.isubn(R)) : R = 0, T[q] = R, O.iushrn(1);\n    }\n    return T;\n  }\n  r.getNAF = n;\n  function x(z, C) {\n    var F = [\n      [],\n      []\n    ];\n    z = z.clone(), C = C.clone();\n    for (var T = 0, L = 0, O; z.cmpn(-T) > 0 || C.cmpn(-L) > 0; ) {\n      var q = z.andln(3) + T & 3, R = C.andln(3) + L & 3;\n      q === 3 && (q = -1), R === 3 && (R = -1);\n      var U;\n      q & 1 ? (O = z.andln(7) + T & 7, (O === 3 || O === 5) && R === 2 ? U = -q : U = q) : U = 0, F[0].push(U);\n      var H;\n      R & 1 ? (O = C.andln(7) + L & 7, (O === 3 || O === 5) && q === 2 ? H = -R : H = R) : H = 0, F[1].push(H), 2 * T === U + 1 && (T = 1 - T), 2 * L === H + 1 && (L = 1 - L), z.iushrn(1), C.iushrn(1);\n    }\n    return F;\n  }\n  r.getJSF = x;\n  function m(z, C, F) {\n    var T = \"_\" + C;\n    z.prototype[C] = function() {\n      return this[T] !== void 0 ? this[T] : this[T] = F.call(this);\n    };\n  }\n  r.cachedProperty = m;\n  function k(z) {\n    return typeof z == \"string\" ? r.toArray(z, \"hex\") : z;\n  }\n  r.parseBytes = k;\n  function B(z) {\n    return new t(z, \"hex\", \"le\");\n  }\n  r.intFromLE = B;\n})(Gr);\nvar W0 = { exports: {} }, zf;\nW0.exports = function(r) {\n  return zf || (zf = new Ft(null)), zf.generate(r);\n};\nfunction Ft(e) {\n  this.rand = e;\n}\nW0.exports.Rand = Ft;\nFt.prototype.generate = function(r) {\n  return this._rand(r);\n};\nFt.prototype._rand = function(r) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(r);\n  for (var t = new Uint8Array(r), i = 0; i < t.length; i++)\n    t[i] = this.rand.getByte();\n  return t;\n};\nif (typeof self == \"object\")\n  self.crypto && self.crypto.getRandomValues ? Ft.prototype._rand = function(r) {\n    var t = new Uint8Array(r);\n    return self.crypto.getRandomValues(t), t;\n  } : self.msCrypto && self.msCrypto.getRandomValues ? Ft.prototype._rand = function(r) {\n    var t = new Uint8Array(r);\n    return self.msCrypto.getRandomValues(t), t;\n  } : typeof window == \"object\" && (Ft.prototype._rand = function() {\n    throw new Error(\"Not implemented yet\");\n  });\nelse\n  try {\n    var hc = dt;\n    if (typeof hc.randomBytes != \"function\")\n      throw new Error(\"Not supported\");\n    Ft.prototype._rand = function(r) {\n      return hc.randomBytes(r);\n    };\n  } catch {\n  }\nvar hs = W0.exports, G0 = {}, ea = St, ui = Gr, Fi = ui.getNAF, T2 = ui.getJSF, Ci = ui.assert;\nfunction Wt(e, r) {\n  this.type = e, this.p = new ea(r.p, 16), this.red = r.prime ? ea.red(r.prime) : ea.mont(this.p), this.zero = new ea(0).toRed(this.red), this.one = new ea(1).toRed(this.red), this.two = new ea(2).toRed(this.red), this.n = r.n && new ea(r.n, 16), this.g = r.g && this.pointFromJSON(r.g, r.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;\n  var t = this.n && this.p.div(this.n);\n  !t || t.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));\n}\nvar bn = Wt;\nWt.prototype.point = function() {\n  throw new Error(\"Not implemented\");\n};\nWt.prototype.validate = function() {\n  throw new Error(\"Not implemented\");\n};\nWt.prototype._fixedNafMul = function(r, t) {\n  Ci(r.precomputed);\n  var i = r._getDoubles(), c = Fi(t, 1, this._bitLength), n = (1 << i.step + 1) - (i.step % 2 === 0 ? 2 : 1);\n  n /= 3;\n  var x = [], m, k;\n  for (m = 0; m < c.length; m += i.step) {\n    k = 0;\n    for (var B = m + i.step - 1; B >= m; B--)\n      k = (k << 1) + c[B];\n    x.push(k);\n  }\n  for (var z = this.jpoint(null, null, null), C = this.jpoint(null, null, null), F = n; F > 0; F--) {\n    for (m = 0; m < x.length; m++)\n      k = x[m], k === F ? C = C.mixedAdd(i.points[m]) : k === -F && (C = C.mixedAdd(i.points[m].neg()));\n    z = z.add(C);\n  }\n  return z.toP();\n};\nWt.prototype._wnafMul = function(r, t) {\n  var i = 4, c = r._getNAFPoints(i);\n  i = c.wnd;\n  for (var n = c.points, x = Fi(t, i, this._bitLength), m = this.jpoint(null, null, null), k = x.length - 1; k >= 0; k--) {\n    for (var B = 0; k >= 0 && x[k] === 0; k--)\n      B++;\n    if (k >= 0 && B++, m = m.dblp(B), k < 0)\n      break;\n    var z = x[k];\n    Ci(z !== 0), r.type === \"affine\" ? z > 0 ? m = m.mixedAdd(n[z - 1 >> 1]) : m = m.mixedAdd(n[-z - 1 >> 1].neg()) : z > 0 ? m = m.add(n[z - 1 >> 1]) : m = m.add(n[-z - 1 >> 1].neg());\n  }\n  return r.type === \"affine\" ? m.toP() : m;\n};\nWt.prototype._wnafMulAdd = function(r, t, i, c, n) {\n  var x = this._wnafT1, m = this._wnafT2, k = this._wnafT3, B = 0, z, C, F;\n  for (z = 0; z < c; z++) {\n    F = t[z];\n    var T = F._getNAFPoints(r);\n    x[z] = T.wnd, m[z] = T.points;\n  }\n  for (z = c - 1; z >= 1; z -= 2) {\n    var L = z - 1, O = z;\n    if (x[L] !== 1 || x[O] !== 1) {\n      k[L] = Fi(i[L], x[L], this._bitLength), k[O] = Fi(i[O], x[O], this._bitLength), B = Math.max(k[L].length, B), B = Math.max(k[O].length, B);\n      continue;\n    }\n    var q = [\n      t[L],\n      /* 1 */\n      null,\n      /* 3 */\n      null,\n      /* 5 */\n      t[O]\n      /* 7 */\n    ];\n    t[L].y.cmp(t[O].y) === 0 ? (q[1] = t[L].add(t[O]), q[2] = t[L].toJ().mixedAdd(t[O].neg())) : t[L].y.cmp(t[O].y.redNeg()) === 0 ? (q[1] = t[L].toJ().mixedAdd(t[O]), q[2] = t[L].add(t[O].neg())) : (q[1] = t[L].toJ().mixedAdd(t[O]), q[2] = t[L].toJ().mixedAdd(t[O].neg()));\n    var R = [\n      -3,\n      /* -1 -1 */\n      -1,\n      /* -1 0 */\n      -5,\n      /* -1 1 */\n      -7,\n      /* 0 -1 */\n      0,\n      /* 0 0 */\n      7,\n      /* 0 1 */\n      5,\n      /* 1 -1 */\n      1,\n      /* 1 0 */\n      3\n      /* 1 1 */\n    ], U = T2(i[L], i[O]);\n    for (B = Math.max(U[0].length, B), k[L] = new Array(B), k[O] = new Array(B), C = 0; C < B; C++) {\n      var H = U[0][C] | 0, Z = U[1][C] | 0;\n      k[L][C] = R[(H + 1) * 3 + (Z + 1)], k[O][C] = 0, m[L] = q;\n    }\n  }\n  var W = this.jpoint(null, null, null), Y = this._wnafT4;\n  for (z = B; z >= 0; z--) {\n    for (var ne = 0; z >= 0; ) {\n      var D = !0;\n      for (C = 0; C < c; C++)\n        Y[C] = k[C][z] | 0, Y[C] !== 0 && (D = !1);\n      if (!D)\n        break;\n      ne++, z--;\n    }\n    if (z >= 0 && ne++, W = W.dblp(ne), z < 0)\n      break;\n    for (C = 0; C < c; C++) {\n      var V = Y[C];\n      V !== 0 && (V > 0 ? F = m[C][V - 1 >> 1] : V < 0 && (F = m[C][-V - 1 >> 1].neg()), F.type === \"affine\" ? W = W.mixedAdd(F) : W = W.add(F));\n    }\n  }\n  for (z = 0; z < c; z++)\n    m[z] = null;\n  return n ? W : W.toP();\n};\nfunction rt(e, r) {\n  this.curve = e, this.type = r, this.precomputed = null;\n}\nWt.BasePoint = rt;\nrt.prototype.eq = function() {\n  throw new Error(\"Not implemented\");\n};\nrt.prototype.validate = function() {\n  return this.curve.validate(this);\n};\nWt.prototype.decodePoint = function(r, t) {\n  r = ui.toArray(r, t);\n  var i = this.p.byteLength();\n  if ((r[0] === 4 || r[0] === 6 || r[0] === 7) && r.length - 1 === 2 * i) {\n    r[0] === 6 ? Ci(r[r.length - 1] % 2 === 0) : r[0] === 7 && Ci(r[r.length - 1] % 2 === 1);\n    var c = this.point(\n      r.slice(1, 1 + i),\n      r.slice(1 + i, 1 + 2 * i)\n    );\n    return c;\n  } else if ((r[0] === 2 || r[0] === 3) && r.length - 1 === i)\n    return this.pointFromX(r.slice(1, 1 + i), r[0] === 3);\n  throw new Error(\"Unknown point format\");\n};\nrt.prototype.encodeCompressed = function(r) {\n  return this.encode(r, !0);\n};\nrt.prototype._encode = function(r) {\n  var t = this.curve.p.byteLength(), i = this.getX().toArray(\"be\", t);\n  return r ? [this.getY().isEven() ? 2 : 3].concat(i) : [4].concat(i, this.getY().toArray(\"be\", t));\n};\nrt.prototype.encode = function(r, t) {\n  return ui.encode(this._encode(t), r);\n};\nrt.prototype.precompute = function(r) {\n  if (this.precomputed)\n    return this;\n  var t = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, r), t.beta = this._getBeta(), this.precomputed = t, this;\n};\nrt.prototype._hasDoubles = function(r) {\n  if (!this.precomputed)\n    return !1;\n  var t = this.precomputed.doubles;\n  return t ? t.points.length >= Math.ceil((r.bitLength() + 1) / t.step) : !1;\n};\nrt.prototype._getDoubles = function(r, t) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n  for (var i = [this], c = this, n = 0; n < t; n += r) {\n    for (var x = 0; x < r; x++)\n      c = c.dbl();\n    i.push(c);\n  }\n  return {\n    step: r,\n    points: i\n  };\n};\nrt.prototype._getNAFPoints = function(r) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n  for (var t = [this], i = (1 << r) - 1, c = i === 1 ? null : this.dbl(), n = 1; n < i; n++)\n    t[n] = t[n - 1].add(c);\n  return {\n    wnd: r,\n    points: t\n  };\n};\nrt.prototype._getBeta = function() {\n  return null;\n};\nrt.prototype.dblp = function(r) {\n  for (var t = this, i = 0; i < r; i++)\n    t = t.dbl();\n  return t;\n};\nvar j2 = Gr, fr = St, Z0 = nr, Ra = bn, P2 = j2.assert;\nfunction tt(e) {\n  Ra.call(this, \"short\", e), this.a = new fr(e.a, 16).toRed(this.red), this.b = new fr(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);\n}\nZ0(tt, Ra);\nvar O2 = tt;\ntt.prototype._getEndomorphism = function(r) {\n  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {\n    var t, i;\n    if (r.beta)\n      t = new fr(r.beta, 16).toRed(this.red);\n    else {\n      var c = this._getEndoRoots(this.p);\n      t = c[0].cmp(c[1]) < 0 ? c[0] : c[1], t = t.toRed(this.red);\n    }\n    if (r.lambda)\n      i = new fr(r.lambda, 16);\n    else {\n      var n = this._getEndoRoots(this.n);\n      this.g.mul(n[0]).x.cmp(this.g.x.redMul(t)) === 0 ? i = n[0] : (i = n[1], P2(this.g.mul(i).x.cmp(this.g.x.redMul(t)) === 0));\n    }\n    var x;\n    return r.basis ? x = r.basis.map(function(m) {\n      return {\n        a: new fr(m.a, 16),\n        b: new fr(m.b, 16)\n      };\n    }) : x = this._getEndoBasis(i), {\n      beta: t,\n      lambda: i,\n      basis: x\n    };\n  }\n};\ntt.prototype._getEndoRoots = function(r) {\n  var t = r === this.p ? this.red : fr.mont(r), i = new fr(2).toRed(t).redInvm(), c = i.redNeg(), n = new fr(3).toRed(t).redNeg().redSqrt().redMul(i), x = c.redAdd(n).fromRed(), m = c.redSub(n).fromRed();\n  return [x, m];\n};\ntt.prototype._getEndoBasis = function(r) {\n  for (var t = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i = r, c = this.n.clone(), n = new fr(1), x = new fr(0), m = new fr(0), k = new fr(1), B, z, C, F, T, L, O, q = 0, R, U; i.cmpn(0) !== 0; ) {\n    var H = c.div(i);\n    R = c.sub(H.mul(i)), U = m.sub(H.mul(n));\n    var Z = k.sub(H.mul(x));\n    if (!C && R.cmp(t) < 0)\n      B = O.neg(), z = n, C = R.neg(), F = U;\n    else if (C && ++q === 2)\n      break;\n    O = R, c = i, i = R, m = n, n = U, k = x, x = Z;\n  }\n  T = R.neg(), L = U;\n  var W = C.sqr().add(F.sqr()), Y = T.sqr().add(L.sqr());\n  return Y.cmp(W) >= 0 && (T = B, L = z), C.negative && (C = C.neg(), F = F.neg()), T.negative && (T = T.neg(), L = L.neg()), [\n    { a: C, b: F },\n    { a: T, b: L }\n  ];\n};\ntt.prototype._endoSplit = function(r) {\n  var t = this.endo.basis, i = t[0], c = t[1], n = c.b.mul(r).divRound(this.n), x = i.b.neg().mul(r).divRound(this.n), m = n.mul(i.a), k = x.mul(c.a), B = n.mul(i.b), z = x.mul(c.b), C = r.sub(m).sub(k), F = B.add(z).neg();\n  return { k1: C, k2: F };\n};\ntt.prototype.pointFromX = function(r, t) {\n  r = new fr(r, 16), r.red || (r = r.toRed(this.red));\n  var i = r.redSqr().redMul(r).redIAdd(r.redMul(this.a)).redIAdd(this.b), c = i.redSqrt();\n  if (c.redSqr().redSub(i).cmp(this.zero) !== 0)\n    throw new Error(\"invalid point\");\n  var n = c.fromRed().isOdd();\n  return (t && !n || !t && n) && (c = c.redNeg()), this.point(r, c);\n};\ntt.prototype.validate = function(r) {\n  if (r.inf)\n    return !0;\n  var t = r.x, i = r.y, c = this.a.redMul(t), n = t.redSqr().redMul(t).redIAdd(c).redIAdd(this.b);\n  return i.redSqr().redISub(n).cmpn(0) === 0;\n};\ntt.prototype._endoWnafMulAdd = function(r, t, i) {\n  for (var c = this._endoWnafT1, n = this._endoWnafT2, x = 0; x < r.length; x++) {\n    var m = this._endoSplit(t[x]), k = r[x], B = k._getBeta();\n    m.k1.negative && (m.k1.ineg(), k = k.neg(!0)), m.k2.negative && (m.k2.ineg(), B = B.neg(!0)), c[x * 2] = k, c[x * 2 + 1] = B, n[x * 2] = m.k1, n[x * 2 + 1] = m.k2;\n  }\n  for (var z = this._wnafMulAdd(1, c, n, x * 2, i), C = 0; C < x * 2; C++)\n    c[C] = null, n[C] = null;\n  return z;\n};\nfunction xr(e, r, t, i) {\n  Ra.BasePoint.call(this, e, \"affine\"), r === null && t === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new fr(r, 16), this.y = new fr(t, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);\n}\nZ0(xr, Ra.BasePoint);\ntt.prototype.point = function(r, t, i) {\n  return new xr(this, r, t, i);\n};\ntt.prototype.pointFromJSON = function(r, t) {\n  return xr.fromJSON(this, r, t);\n};\nxr.prototype._getBeta = function() {\n  if (this.curve.endo) {\n    var r = this.precomputed;\n    if (r && r.beta)\n      return r.beta;\n    var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n    if (r) {\n      var i = this.curve, c = function(n) {\n        return i.point(n.x.redMul(i.endo.beta), n.y);\n      };\n      r.beta = t, t.precomputed = {\n        beta: null,\n        naf: r.naf && {\n          wnd: r.naf.wnd,\n          points: r.naf.points.map(c)\n        },\n        doubles: r.doubles && {\n          step: r.doubles.step,\n          points: r.doubles.points.map(c)\n        }\n      };\n    }\n    return t;\n  }\n};\nxr.prototype.toJSON = function() {\n  return this.precomputed ? [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }] : [this.x, this.y];\n};\nxr.fromJSON = function(r, t, i) {\n  typeof t == \"string\" && (t = JSON.parse(t));\n  var c = r.point(t[0], t[1], i);\n  if (!t[2])\n    return c;\n  function n(m) {\n    return r.point(m[0], m[1], i);\n  }\n  var x = t[2];\n  return c.precomputed = {\n    beta: null,\n    doubles: x.doubles && {\n      step: x.doubles.step,\n      points: [c].concat(x.doubles.points.map(n))\n    },\n    naf: x.naf && {\n      wnd: x.naf.wnd,\n      points: [c].concat(x.naf.points.map(n))\n    }\n  }, c;\n};\nxr.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n};\nxr.prototype.isInfinity = function() {\n  return this.inf;\n};\nxr.prototype.add = function(r) {\n  if (this.inf)\n    return r;\n  if (r.inf)\n    return this;\n  if (this.eq(r))\n    return this.dbl();\n  if (this.neg().eq(r))\n    return this.curve.point(null, null);\n  if (this.x.cmp(r.x) === 0)\n    return this.curve.point(null, null);\n  var t = this.y.redSub(r.y);\n  t.cmpn(0) !== 0 && (t = t.redMul(this.x.redSub(r.x).redInvm()));\n  var i = t.redSqr().redISub(this.x).redISub(r.x), c = t.redMul(this.x.redSub(i)).redISub(this.y);\n  return this.curve.point(i, c);\n};\nxr.prototype.dbl = function() {\n  if (this.inf)\n    return this;\n  var r = this.y.redAdd(this.y);\n  if (r.cmpn(0) === 0)\n    return this.curve.point(null, null);\n  var t = this.curve.a, i = this.x.redSqr(), c = r.redInvm(), n = i.redAdd(i).redIAdd(i).redIAdd(t).redMul(c), x = n.redSqr().redISub(this.x.redAdd(this.x)), m = n.redMul(this.x.redSub(x)).redISub(this.y);\n  return this.curve.point(x, m);\n};\nxr.prototype.getX = function() {\n  return this.x.fromRed();\n};\nxr.prototype.getY = function() {\n  return this.y.fromRed();\n};\nxr.prototype.mul = function(r) {\n  return r = new fr(r, 16), this.isInfinity() ? this : this._hasDoubles(r) ? this.curve._fixedNafMul(this, r) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [r]) : this.curve._wnafMul(this, r);\n};\nxr.prototype.mulAdd = function(r, t, i) {\n  var c = [this, t], n = [r, i];\n  return this.curve.endo ? this.curve._endoWnafMulAdd(c, n) : this.curve._wnafMulAdd(1, c, n, 2);\n};\nxr.prototype.jmulAdd = function(r, t, i) {\n  var c = [this, t], n = [r, i];\n  return this.curve.endo ? this.curve._endoWnafMulAdd(c, n, !0) : this.curve._wnafMulAdd(1, c, n, 2, !0);\n};\nxr.prototype.eq = function(r) {\n  return this === r || this.inf === r.inf && (this.inf || this.x.cmp(r.x) === 0 && this.y.cmp(r.y) === 0);\n};\nxr.prototype.neg = function(r) {\n  if (this.inf)\n    return this;\n  var t = this.curve.point(this.x, this.y.redNeg());\n  if (r && this.precomputed) {\n    var i = this.precomputed, c = function(n) {\n      return n.neg();\n    };\n    t.precomputed = {\n      naf: i.naf && {\n        wnd: i.naf.wnd,\n        points: i.naf.points.map(c)\n      },\n      doubles: i.doubles && {\n        step: i.doubles.step,\n        points: i.doubles.points.map(c)\n      }\n    };\n  }\n  return t;\n};\nxr.prototype.toJ = function() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n  var r = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return r;\n};\nfunction gr(e, r, t, i) {\n  Ra.BasePoint.call(this, e, \"jacobian\"), r === null && t === null && i === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new fr(0)) : (this.x = new fr(r, 16), this.y = new fr(t, 16), this.z = new fr(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;\n}\nZ0(gr, Ra.BasePoint);\ntt.prototype.jpoint = function(r, t, i) {\n  return new gr(this, r, t, i);\n};\ngr.prototype.toP = function() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n  var r = this.z.redInvm(), t = r.redSqr(), i = this.x.redMul(t), c = this.y.redMul(t).redMul(r);\n  return this.curve.point(i, c);\n};\ngr.prototype.neg = function() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\ngr.prototype.add = function(r) {\n  if (this.isInfinity())\n    return r;\n  if (r.isInfinity())\n    return this;\n  var t = r.z.redSqr(), i = this.z.redSqr(), c = this.x.redMul(t), n = r.x.redMul(i), x = this.y.redMul(t.redMul(r.z)), m = r.y.redMul(i.redMul(this.z)), k = c.redSub(n), B = x.redSub(m);\n  if (k.cmpn(0) === 0)\n    return B.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n  var z = k.redSqr(), C = z.redMul(k), F = c.redMul(z), T = B.redSqr().redIAdd(C).redISub(F).redISub(F), L = B.redMul(F.redISub(T)).redISub(x.redMul(C)), O = this.z.redMul(r.z).redMul(k);\n  return this.curve.jpoint(T, L, O);\n};\ngr.prototype.mixedAdd = function(r) {\n  if (this.isInfinity())\n    return r.toJ();\n  if (r.isInfinity())\n    return this;\n  var t = this.z.redSqr(), i = this.x, c = r.x.redMul(t), n = this.y, x = r.y.redMul(t).redMul(this.z), m = i.redSub(c), k = n.redSub(x);\n  if (m.cmpn(0) === 0)\n    return k.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n  var B = m.redSqr(), z = B.redMul(m), C = i.redMul(B), F = k.redSqr().redIAdd(z).redISub(C).redISub(C), T = k.redMul(C.redISub(F)).redISub(n.redMul(z)), L = this.z.redMul(m);\n  return this.curve.jpoint(F, T, L);\n};\ngr.prototype.dblp = function(r) {\n  if (r === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!r)\n    return this.dbl();\n  var t;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var i = this;\n    for (t = 0; t < r; t++)\n      i = i.dbl();\n    return i;\n  }\n  var c = this.curve.a, n = this.curve.tinv, x = this.x, m = this.y, k = this.z, B = k.redSqr().redSqr(), z = m.redAdd(m);\n  for (t = 0; t < r; t++) {\n    var C = x.redSqr(), F = z.redSqr(), T = F.redSqr(), L = C.redAdd(C).redIAdd(C).redIAdd(c.redMul(B)), O = x.redMul(F), q = L.redSqr().redISub(O.redAdd(O)), R = O.redISub(q), U = L.redMul(R);\n    U = U.redIAdd(U).redISub(T);\n    var H = z.redMul(k);\n    t + 1 < r && (B = B.redMul(T)), x = q, k = H, z = U;\n  }\n  return this.curve.jpoint(x, z.redMul(n), k);\n};\ngr.prototype.dbl = function() {\n  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();\n};\ngr.prototype._zeroDbl = function() {\n  var r, t, i;\n  if (this.zOne) {\n    var c = this.x.redSqr(), n = this.y.redSqr(), x = n.redSqr(), m = this.x.redAdd(n).redSqr().redISub(c).redISub(x);\n    m = m.redIAdd(m);\n    var k = c.redAdd(c).redIAdd(c), B = k.redSqr().redISub(m).redISub(m), z = x.redIAdd(x);\n    z = z.redIAdd(z), z = z.redIAdd(z), r = B, t = k.redMul(m.redISub(B)).redISub(z), i = this.y.redAdd(this.y);\n  } else {\n    var C = this.x.redSqr(), F = this.y.redSqr(), T = F.redSqr(), L = this.x.redAdd(F).redSqr().redISub(C).redISub(T);\n    L = L.redIAdd(L);\n    var O = C.redAdd(C).redIAdd(C), q = O.redSqr(), R = T.redIAdd(T);\n    R = R.redIAdd(R), R = R.redIAdd(R), r = q.redISub(L).redISub(L), t = O.redMul(L.redISub(r)).redISub(R), i = this.y.redMul(this.z), i = i.redIAdd(i);\n  }\n  return this.curve.jpoint(r, t, i);\n};\ngr.prototype._threeDbl = function() {\n  var r, t, i;\n  if (this.zOne) {\n    var c = this.x.redSqr(), n = this.y.redSqr(), x = n.redSqr(), m = this.x.redAdd(n).redSqr().redISub(c).redISub(x);\n    m = m.redIAdd(m);\n    var k = c.redAdd(c).redIAdd(c).redIAdd(this.curve.a), B = k.redSqr().redISub(m).redISub(m);\n    r = B;\n    var z = x.redIAdd(x);\n    z = z.redIAdd(z), z = z.redIAdd(z), t = k.redMul(m.redISub(B)).redISub(z), i = this.y.redAdd(this.y);\n  } else {\n    var C = this.z.redSqr(), F = this.y.redSqr(), T = this.x.redMul(F), L = this.x.redSub(C).redMul(this.x.redAdd(C));\n    L = L.redAdd(L).redIAdd(L);\n    var O = T.redIAdd(T);\n    O = O.redIAdd(O);\n    var q = O.redAdd(O);\n    r = L.redSqr().redISub(q), i = this.y.redAdd(this.z).redSqr().redISub(F).redISub(C);\n    var R = F.redSqr();\n    R = R.redIAdd(R), R = R.redIAdd(R), R = R.redIAdd(R), t = L.redMul(O.redISub(r)).redISub(R);\n  }\n  return this.curve.jpoint(r, t, i);\n};\ngr.prototype._dbl = function() {\n  var r = this.curve.a, t = this.x, i = this.y, c = this.z, n = c.redSqr().redSqr(), x = t.redSqr(), m = i.redSqr(), k = x.redAdd(x).redIAdd(x).redIAdd(r.redMul(n)), B = t.redAdd(t);\n  B = B.redIAdd(B);\n  var z = B.redMul(m), C = k.redSqr().redISub(z.redAdd(z)), F = z.redISub(C), T = m.redSqr();\n  T = T.redIAdd(T), T = T.redIAdd(T), T = T.redIAdd(T);\n  var L = k.redMul(F).redISub(T), O = i.redAdd(i).redMul(c);\n  return this.curve.jpoint(C, L, O);\n};\ngr.prototype.trpl = function() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n  var r = this.x.redSqr(), t = this.y.redSqr(), i = this.z.redSqr(), c = t.redSqr(), n = r.redAdd(r).redIAdd(r), x = n.redSqr(), m = this.x.redAdd(t).redSqr().redISub(r).redISub(c);\n  m = m.redIAdd(m), m = m.redAdd(m).redIAdd(m), m = m.redISub(x);\n  var k = m.redSqr(), B = c.redIAdd(c);\n  B = B.redIAdd(B), B = B.redIAdd(B), B = B.redIAdd(B);\n  var z = n.redIAdd(m).redSqr().redISub(x).redISub(k).redISub(B), C = t.redMul(z);\n  C = C.redIAdd(C), C = C.redIAdd(C);\n  var F = this.x.redMul(k).redISub(C);\n  F = F.redIAdd(F), F = F.redIAdd(F);\n  var T = this.y.redMul(z.redMul(B.redISub(z)).redISub(m.redMul(k)));\n  T = T.redIAdd(T), T = T.redIAdd(T), T = T.redIAdd(T);\n  var L = this.z.redAdd(m).redSqr().redISub(i).redISub(k);\n  return this.curve.jpoint(F, T, L);\n};\ngr.prototype.mul = function(r, t) {\n  return r = new fr(r, t), this.curve._wnafMul(this, r);\n};\ngr.prototype.eq = function(r) {\n  if (r.type === \"affine\")\n    return this.eq(r.toJ());\n  if (this === r)\n    return !0;\n  var t = this.z.redSqr(), i = r.z.redSqr();\n  if (this.x.redMul(i).redISub(r.x.redMul(t)).cmpn(0) !== 0)\n    return !1;\n  var c = t.redMul(this.z), n = i.redMul(r.z);\n  return this.y.redMul(n).redISub(r.y.redMul(c)).cmpn(0) === 0;\n};\ngr.prototype.eqXToP = function(r) {\n  var t = this.z.redSqr(), i = r.toRed(this.curve.red).redMul(t);\n  if (this.x.cmp(i) === 0)\n    return !0;\n  for (var c = r.clone(), n = this.curve.redN.redMul(t); ; ) {\n    if (c.iadd(this.curve.n), c.cmp(this.curve.p) >= 0)\n      return !1;\n    if (i.redIAdd(n), this.x.cmp(i) === 0)\n      return !0;\n  }\n};\ngr.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC JPoint Infinity>\" : \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n};\ngr.prototype.isInfinity = function() {\n  return this.z.cmpn(0) === 0;\n};\nvar ya = St, ps = nr, hn = bn, q2 = Gr;\nfunction Ta(e) {\n  hn.call(this, \"mont\", e), this.a = new ya(e.a, 16).toRed(this.red), this.b = new ya(e.b, 16).toRed(this.red), this.i4 = new ya(4).toRed(this.red).redInvm(), this.two = new ya(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\nps(Ta, hn);\nvar N2 = Ta;\nTa.prototype.validate = function(r) {\n  var t = r.normalize().x, i = t.redSqr(), c = i.redMul(t).redAdd(i.redMul(this.a)).redAdd(t), n = c.redSqrt();\n  return n.redSqr().cmp(c) === 0;\n};\nfunction vr(e, r, t) {\n  hn.BasePoint.call(this, e, \"projective\"), r === null && t === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new ya(r, 16), this.z = new ya(t, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));\n}\nps(vr, hn.BasePoint);\nTa.prototype.decodePoint = function(r, t) {\n  return this.point(q2.toArray(r, t), 1);\n};\nTa.prototype.point = function(r, t) {\n  return new vr(this, r, t);\n};\nTa.prototype.pointFromJSON = function(r) {\n  return vr.fromJSON(this, r);\n};\nvr.prototype.precompute = function() {\n};\nvr.prototype._encode = function() {\n  return this.getX().toArray(\"be\", this.curve.p.byteLength());\n};\nvr.fromJSON = function(r, t) {\n  return new vr(r, t[0], t[1] || r.one);\n};\nvr.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" z: \" + this.z.fromRed().toString(16, 2) + \">\";\n};\nvr.prototype.isInfinity = function() {\n  return this.z.cmpn(0) === 0;\n};\nvr.prototype.dbl = function() {\n  var r = this.x.redAdd(this.z), t = r.redSqr(), i = this.x.redSub(this.z), c = i.redSqr(), n = t.redSub(c), x = t.redMul(c), m = n.redMul(c.redAdd(this.curve.a24.redMul(n)));\n  return this.curve.point(x, m);\n};\nvr.prototype.add = function() {\n  throw new Error(\"Not supported on Montgomery curve\");\n};\nvr.prototype.diffAdd = function(r, t) {\n  var i = this.x.redAdd(this.z), c = this.x.redSub(this.z), n = r.x.redAdd(r.z), x = r.x.redSub(r.z), m = x.redMul(i), k = n.redMul(c), B = t.z.redMul(m.redAdd(k).redSqr()), z = t.x.redMul(m.redISub(k).redSqr());\n  return this.curve.point(B, z);\n};\nvr.prototype.mul = function(r) {\n  for (var t = r.clone(), i = this, c = this.curve.point(null, null), n = this, x = []; t.cmpn(0) !== 0; t.iushrn(1))\n    x.push(t.andln(1));\n  for (var m = x.length - 1; m >= 0; m--)\n    x[m] === 0 ? (i = i.diffAdd(c, n), c = c.dbl()) : (c = i.diffAdd(c, n), i = i.dbl());\n  return c;\n};\nvr.prototype.mulAdd = function() {\n  throw new Error(\"Not supported on Montgomery curve\");\n};\nvr.prototype.jumlAdd = function() {\n  throw new Error(\"Not supported on Montgomery curve\");\n};\nvr.prototype.eq = function(r) {\n  return this.getX().cmp(r.getX()) === 0;\n};\nvr.prototype.normalize = function() {\n  return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;\n};\nvr.prototype.getX = function() {\n  return this.normalize(), this.x.fromRed();\n};\nvar F2 = Gr, Rt = St, vs = nr, pn = bn, C2 = F2.assert;\nfunction At(e) {\n  this.twisted = (e.a | 0) !== 1, this.mOneA = this.twisted && (e.a | 0) === -1, this.extended = this.mOneA, pn.call(this, \"edwards\", e), this.a = new Rt(e.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new Rt(e.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new Rt(e.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), C2(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (e.c | 0) === 1;\n}\nvs(At, pn);\nvar L2 = At;\nAt.prototype._mulA = function(r) {\n  return this.mOneA ? r.redNeg() : this.a.redMul(r);\n};\nAt.prototype._mulC = function(r) {\n  return this.oneC ? r : this.c.redMul(r);\n};\nAt.prototype.jpoint = function(r, t, i, c) {\n  return this.point(r, t, i, c);\n};\nAt.prototype.pointFromX = function(r, t) {\n  r = new Rt(r, 16), r.red || (r = r.toRed(this.red));\n  var i = r.redSqr(), c = this.c2.redSub(this.a.redMul(i)), n = this.one.redSub(this.c2.redMul(this.d).redMul(i)), x = c.redMul(n.redInvm()), m = x.redSqrt();\n  if (m.redSqr().redSub(x).cmp(this.zero) !== 0)\n    throw new Error(\"invalid point\");\n  var k = m.fromRed().isOdd();\n  return (t && !k || !t && k) && (m = m.redNeg()), this.point(r, m);\n};\nAt.prototype.pointFromY = function(r, t) {\n  r = new Rt(r, 16), r.red || (r = r.toRed(this.red));\n  var i = r.redSqr(), c = i.redSub(this.c2), n = i.redMul(this.d).redMul(this.c2).redSub(this.a), x = c.redMul(n.redInvm());\n  if (x.cmp(this.zero) === 0) {\n    if (t)\n      throw new Error(\"invalid point\");\n    return this.point(this.zero, r);\n  }\n  var m = x.redSqrt();\n  if (m.redSqr().redSub(x).cmp(this.zero) !== 0)\n    throw new Error(\"invalid point\");\n  return m.fromRed().isOdd() !== t && (m = m.redNeg()), this.point(m, r);\n};\nAt.prototype.validate = function(r) {\n  if (r.isInfinity())\n    return !0;\n  r.normalize();\n  var t = r.x.redSqr(), i = r.y.redSqr(), c = t.redMul(this.a).redAdd(i), n = this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(i)));\n  return c.cmp(n) === 0;\n};\nfunction ar(e, r, t, i, c) {\n  pn.BasePoint.call(this, e, \"projective\"), r === null && t === null && i === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new Rt(r, 16), this.y = new Rt(t, 16), this.z = i ? new Rt(i, 16) : this.curve.one, this.t = c && new Rt(c, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));\n}\nvs(ar, pn.BasePoint);\nAt.prototype.pointFromJSON = function(r) {\n  return ar.fromJSON(this, r);\n};\nAt.prototype.point = function(r, t, i, c) {\n  return new ar(this, r, t, i, c);\n};\nar.fromJSON = function(r, t) {\n  return new ar(r, t[0], t[1], t[2]);\n};\nar.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \" z: \" + this.z.fromRed().toString(16, 2) + \">\";\n};\nar.prototype.isInfinity = function() {\n  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);\n};\nar.prototype._extDbl = function() {\n  var r = this.x.redSqr(), t = this.y.redSqr(), i = this.z.redSqr();\n  i = i.redIAdd(i);\n  var c = this.curve._mulA(r), n = this.x.redAdd(this.y).redSqr().redISub(r).redISub(t), x = c.redAdd(t), m = x.redSub(i), k = c.redSub(t), B = n.redMul(m), z = x.redMul(k), C = n.redMul(k), F = m.redMul(x);\n  return this.curve.point(B, z, F, C);\n};\nar.prototype._projDbl = function() {\n  var r = this.x.redAdd(this.y).redSqr(), t = this.x.redSqr(), i = this.y.redSqr(), c, n, x, m, k, B;\n  if (this.curve.twisted) {\n    m = this.curve._mulA(t);\n    var z = m.redAdd(i);\n    this.zOne ? (c = r.redSub(t).redSub(i).redMul(z.redSub(this.curve.two)), n = z.redMul(m.redSub(i)), x = z.redSqr().redSub(z).redSub(z)) : (k = this.z.redSqr(), B = z.redSub(k).redISub(k), c = r.redSub(t).redISub(i).redMul(B), n = z.redMul(m.redSub(i)), x = z.redMul(B));\n  } else\n    m = t.redAdd(i), k = this.curve._mulC(this.z).redSqr(), B = m.redSub(k).redSub(k), c = this.curve._mulC(r.redISub(m)).redMul(B), n = this.curve._mulC(m).redMul(t.redISub(i)), x = m.redMul(B);\n  return this.curve.point(c, n, x);\n};\nar.prototype.dbl = function() {\n  return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();\n};\nar.prototype._extAdd = function(r) {\n  var t = this.y.redSub(this.x).redMul(r.y.redSub(r.x)), i = this.y.redAdd(this.x).redMul(r.y.redAdd(r.x)), c = this.t.redMul(this.curve.dd).redMul(r.t), n = this.z.redMul(r.z.redAdd(r.z)), x = i.redSub(t), m = n.redSub(c), k = n.redAdd(c), B = i.redAdd(t), z = x.redMul(m), C = k.redMul(B), F = x.redMul(B), T = m.redMul(k);\n  return this.curve.point(z, C, T, F);\n};\nar.prototype._projAdd = function(r) {\n  var t = this.z.redMul(r.z), i = t.redSqr(), c = this.x.redMul(r.x), n = this.y.redMul(r.y), x = this.curve.d.redMul(c).redMul(n), m = i.redSub(x), k = i.redAdd(x), B = this.x.redAdd(this.y).redMul(r.x.redAdd(r.y)).redISub(c).redISub(n), z = t.redMul(m).redMul(B), C, F;\n  return this.curve.twisted ? (C = t.redMul(k).redMul(n.redSub(this.curve._mulA(c))), F = m.redMul(k)) : (C = t.redMul(k).redMul(n.redSub(c)), F = this.curve._mulC(m).redMul(k)), this.curve.point(z, C, F);\n};\nar.prototype.add = function(r) {\n  return this.isInfinity() ? r : r.isInfinity() ? this : this.curve.extended ? this._extAdd(r) : this._projAdd(r);\n};\nar.prototype.mul = function(r) {\n  return this._hasDoubles(r) ? this.curve._fixedNafMul(this, r) : this.curve._wnafMul(this, r);\n};\nar.prototype.mulAdd = function(r, t, i) {\n  return this.curve._wnafMulAdd(1, [this, t], [r, i], 2, !1);\n};\nar.prototype.jmulAdd = function(r, t, i) {\n  return this.curve._wnafMulAdd(1, [this, t], [r, i], 2, !0);\n};\nar.prototype.normalize = function() {\n  if (this.zOne)\n    return this;\n  var r = this.z.redInvm();\n  return this.x = this.x.redMul(r), this.y = this.y.redMul(r), this.t && (this.t = this.t.redMul(r)), this.z = this.curve.one, this.zOne = !0, this;\n};\nar.prototype.neg = function() {\n  return this.curve.point(\n    this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg()\n  );\n};\nar.prototype.getX = function() {\n  return this.normalize(), this.x.fromRed();\n};\nar.prototype.getY = function() {\n  return this.normalize(), this.y.fromRed();\n};\nar.prototype.eq = function(r) {\n  return this === r || this.getX().cmp(r.getX()) === 0 && this.getY().cmp(r.getY()) === 0;\n};\nar.prototype.eqXToP = function(r) {\n  var t = r.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(t) === 0)\n    return !0;\n  for (var i = r.clone(), c = this.curve.redN.redMul(this.z); ; ) {\n    if (i.iadd(this.curve.n), i.cmp(this.curve.p) >= 0)\n      return !1;\n    if (t.redIAdd(c), this.x.cmp(t) === 0)\n      return !0;\n  }\n};\nar.prototype.toP = ar.prototype.normalize;\nar.prototype.mixedAdd = ar.prototype.add;\n(function(e) {\n  var r = e;\n  r.base = bn, r.short = O2, r.mont = N2, r.edwards = L2;\n})(G0);\nvar vn = {}, li = {}, De = {}, U2 = ha, $2 = nr;\nDe.inherits = $2;\nfunction D2(e, r) {\n  return (e.charCodeAt(r) & 64512) !== 55296 || r < 0 || r + 1 >= e.length ? !1 : (e.charCodeAt(r + 1) & 64512) === 56320;\n}\nfunction K2(e, r) {\n  if (Array.isArray(e))\n    return e.slice();\n  if (!e)\n    return [];\n  var t = [];\n  if (typeof e == \"string\")\n    if (r) {\n      if (r === \"hex\")\n        for (e = e.replace(/[^a-z0-9]+/ig, \"\"), e.length % 2 !== 0 && (e = \"0\" + e), c = 0; c < e.length; c += 2)\n          t.push(parseInt(e[c] + e[c + 1], 16));\n    } else\n      for (var i = 0, c = 0; c < e.length; c++) {\n        var n = e.charCodeAt(c);\n        n < 128 ? t[i++] = n : n < 2048 ? (t[i++] = n >> 6 | 192, t[i++] = n & 63 | 128) : D2(e, c) ? (n = 65536 + ((n & 1023) << 10) + (e.charCodeAt(++c) & 1023), t[i++] = n >> 18 | 240, t[i++] = n >> 12 & 63 | 128, t[i++] = n >> 6 & 63 | 128, t[i++] = n & 63 | 128) : (t[i++] = n >> 12 | 224, t[i++] = n >> 6 & 63 | 128, t[i++] = n & 63 | 128);\n      }\n  else\n    for (c = 0; c < e.length; c++)\n      t[c] = e[c] | 0;\n  return t;\n}\nDe.toArray = K2;\nfunction H2(e) {\n  for (var r = \"\", t = 0; t < e.length; t++)\n    r += ms(e[t].toString(16));\n  return r;\n}\nDe.toHex = H2;\nfunction xs(e) {\n  var r = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;\n  return r >>> 0;\n}\nDe.htonl = xs;\nfunction V2(e, r) {\n  for (var t = \"\", i = 0; i < e.length; i++) {\n    var c = e[i];\n    r === \"little\" && (c = xs(c)), t += gs(c.toString(16));\n  }\n  return t;\n}\nDe.toHex32 = V2;\nfunction ms(e) {\n  return e.length === 1 ? \"0\" + e : e;\n}\nDe.zero2 = ms;\nfunction gs(e) {\n  return e.length === 7 ? \"0\" + e : e.length === 6 ? \"00\" + e : e.length === 5 ? \"000\" + e : e.length === 4 ? \"0000\" + e : e.length === 3 ? \"00000\" + e : e.length === 2 ? \"000000\" + e : e.length === 1 ? \"0000000\" + e : e;\n}\nDe.zero8 = gs;\nfunction W2(e, r, t, i) {\n  var c = t - r;\n  U2(c % 4 === 0);\n  for (var n = new Array(c / 4), x = 0, m = r; x < n.length; x++, m += 4) {\n    var k;\n    i === \"big\" ? k = e[m] << 24 | e[m + 1] << 16 | e[m + 2] << 8 | e[m + 3] : k = e[m + 3] << 24 | e[m + 2] << 16 | e[m + 1] << 8 | e[m], n[x] = k >>> 0;\n  }\n  return n;\n}\nDe.join32 = W2;\nfunction G2(e, r) {\n  for (var t = new Array(e.length * 4), i = 0, c = 0; i < e.length; i++, c += 4) {\n    var n = e[i];\n    r === \"big\" ? (t[c] = n >>> 24, t[c + 1] = n >>> 16 & 255, t[c + 2] = n >>> 8 & 255, t[c + 3] = n & 255) : (t[c + 3] = n >>> 24, t[c + 2] = n >>> 16 & 255, t[c + 1] = n >>> 8 & 255, t[c] = n & 255);\n  }\n  return t;\n}\nDe.split32 = G2;\nfunction Z2(e, r) {\n  return e >>> r | e << 32 - r;\n}\nDe.rotr32 = Z2;\nfunction J2(e, r) {\n  return e << r | e >>> 32 - r;\n}\nDe.rotl32 = J2;\nfunction Y2(e, r) {\n  return e + r >>> 0;\n}\nDe.sum32 = Y2;\nfunction X2(e, r, t) {\n  return e + r + t >>> 0;\n}\nDe.sum32_3 = X2;\nfunction Q2(e, r, t, i) {\n  return e + r + t + i >>> 0;\n}\nDe.sum32_4 = Q2;\nfunction e3(e, r, t, i, c) {\n  return e + r + t + i + c >>> 0;\n}\nDe.sum32_5 = e3;\nfunction r3(e, r, t, i) {\n  var c = e[r], n = e[r + 1], x = i + n >>> 0, m = (x < i ? 1 : 0) + t + c;\n  e[r] = m >>> 0, e[r + 1] = x;\n}\nDe.sum64 = r3;\nfunction t3(e, r, t, i) {\n  var c = r + i >>> 0, n = (c < r ? 1 : 0) + e + t;\n  return n >>> 0;\n}\nDe.sum64_hi = t3;\nfunction a3(e, r, t, i) {\n  var c = r + i;\n  return c >>> 0;\n}\nDe.sum64_lo = a3;\nfunction i3(e, r, t, i, c, n, x, m) {\n  var k = 0, B = r;\n  B = B + i >>> 0, k += B < r ? 1 : 0, B = B + n >>> 0, k += B < n ? 1 : 0, B = B + m >>> 0, k += B < m ? 1 : 0;\n  var z = e + t + c + x + k;\n  return z >>> 0;\n}\nDe.sum64_4_hi = i3;\nfunction n3(e, r, t, i, c, n, x, m) {\n  var k = r + i + n + m;\n  return k >>> 0;\n}\nDe.sum64_4_lo = n3;\nfunction f3(e, r, t, i, c, n, x, m, k, B) {\n  var z = 0, C = r;\n  C = C + i >>> 0, z += C < r ? 1 : 0, C = C + n >>> 0, z += C < n ? 1 : 0, C = C + m >>> 0, z += C < m ? 1 : 0, C = C + B >>> 0, z += C < B ? 1 : 0;\n  var F = e + t + c + x + k + z;\n  return F >>> 0;\n}\nDe.sum64_5_hi = f3;\nfunction o3(e, r, t, i, c, n, x, m, k, B) {\n  var z = r + i + n + m + B;\n  return z >>> 0;\n}\nDe.sum64_5_lo = o3;\nfunction c3(e, r, t) {\n  var i = r << 32 - t | e >>> t;\n  return i >>> 0;\n}\nDe.rotr64_hi = c3;\nfunction d3(e, r, t) {\n  var i = e << 32 - t | r >>> t;\n  return i >>> 0;\n}\nDe.rotr64_lo = d3;\nfunction s3(e, r, t) {\n  return e >>> t;\n}\nDe.shr64_hi = s3;\nfunction u3(e, r, t) {\n  var i = e << 32 - t | r >>> t;\n  return i >>> 0;\n}\nDe.shr64_lo = u3;\nvar ja = {}, pc = De, l3 = ha;\nfunction xn() {\n  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = \"big\", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;\n}\nja.BlockHash = xn;\nxn.prototype.update = function(r, t) {\n  if (r = pc.toArray(r, t), this.pending ? this.pending = this.pending.concat(r) : this.pending = r, this.pendingTotal += r.length, this.pending.length >= this._delta8) {\n    r = this.pending;\n    var i = r.length % this._delta8;\n    this.pending = r.slice(r.length - i, r.length), this.pending.length === 0 && (this.pending = null), r = pc.join32(r, 0, r.length - i, this.endian);\n    for (var c = 0; c < r.length; c += this._delta32)\n      this._update(r, c, c + this._delta32);\n  }\n  return this;\n};\nxn.prototype.digest = function(r) {\n  return this.update(this._pad()), l3(this.pending === null), this._digest(r);\n};\nxn.prototype._pad = function() {\n  var r = this.pendingTotal, t = this._delta8, i = t - (r + this.padLength) % t, c = new Array(i + this.padLength);\n  c[0] = 128;\n  for (var n = 1; n < i; n++)\n    c[n] = 0;\n  if (r <<= 3, this.endian === \"big\") {\n    for (var x = 8; x < this.padLength; x++)\n      c[n++] = 0;\n    c[n++] = 0, c[n++] = 0, c[n++] = 0, c[n++] = 0, c[n++] = r >>> 24 & 255, c[n++] = r >>> 16 & 255, c[n++] = r >>> 8 & 255, c[n++] = r & 255;\n  } else\n    for (c[n++] = r & 255, c[n++] = r >>> 8 & 255, c[n++] = r >>> 16 & 255, c[n++] = r >>> 24 & 255, c[n++] = 0, c[n++] = 0, c[n++] = 0, c[n++] = 0, x = 8; x < this.padLength; x++)\n      c[n++] = 0;\n  return c;\n};\nvar Pa = {}, Bt = {}, b3 = De, ht = b3.rotr32;\nfunction h3(e, r, t, i) {\n  if (e === 0)\n    return ys(r, t, i);\n  if (e === 1 || e === 3)\n    return _s(r, t, i);\n  if (e === 2)\n    return ws(r, t, i);\n}\nBt.ft_1 = h3;\nfunction ys(e, r, t) {\n  return e & r ^ ~e & t;\n}\nBt.ch32 = ys;\nfunction ws(e, r, t) {\n  return e & r ^ e & t ^ r & t;\n}\nBt.maj32 = ws;\nfunction _s(e, r, t) {\n  return e ^ r ^ t;\n}\nBt.p32 = _s;\nfunction p3(e) {\n  return ht(e, 2) ^ ht(e, 13) ^ ht(e, 22);\n}\nBt.s0_256 = p3;\nfunction v3(e) {\n  return ht(e, 6) ^ ht(e, 11) ^ ht(e, 25);\n}\nBt.s1_256 = v3;\nfunction x3(e) {\n  return ht(e, 7) ^ ht(e, 18) ^ e >>> 3;\n}\nBt.g0_256 = x3;\nfunction m3(e) {\n  return ht(e, 17) ^ ht(e, 19) ^ e >>> 10;\n}\nBt.g1_256 = m3;\nvar ka = De, g3 = ja, y3 = Bt, If = ka.rotl32, Ha = ka.sum32, w3 = ka.sum32_5, _3 = y3.ft_1, Ms = g3.BlockHash, M3 = [\n  1518500249,\n  1859775393,\n  2400959708,\n  3395469782\n];\nfunction yt() {\n  if (!(this instanceof yt))\n    return new yt();\n  Ms.call(this), this.h = [\n    1732584193,\n    4023233417,\n    2562383102,\n    271733878,\n    3285377520\n  ], this.W = new Array(80);\n}\nka.inherits(yt, Ms);\nvar S3 = yt;\nyt.blockSize = 512;\nyt.outSize = 160;\nyt.hmacStrength = 80;\nyt.padLength = 64;\nyt.prototype._update = function(r, t) {\n  for (var i = this.W, c = 0; c < 16; c++)\n    i[c] = r[t + c];\n  for (; c < i.length; c++)\n    i[c] = If(i[c - 3] ^ i[c - 8] ^ i[c - 14] ^ i[c - 16], 1);\n  var n = this.h[0], x = this.h[1], m = this.h[2], k = this.h[3], B = this.h[4];\n  for (c = 0; c < i.length; c++) {\n    var z = ~~(c / 20), C = w3(If(n, 5), _3(z, x, m, k), B, i[c], M3[z]);\n    B = k, k = m, m = If(x, 30), x = n, n = C;\n  }\n  this.h[0] = Ha(this.h[0], n), this.h[1] = Ha(this.h[1], x), this.h[2] = Ha(this.h[2], m), this.h[3] = Ha(this.h[3], k), this.h[4] = Ha(this.h[4], B);\n};\nyt.prototype._digest = function(r) {\n  return r === \"hex\" ? ka.toHex32(this.h, \"big\") : ka.split32(this.h, \"big\");\n};\nvar Ea = De, k3 = ja, Oa = Bt, E3 = ha, ot = Ea.sum32, A3 = Ea.sum32_4, B3 = Ea.sum32_5, z3 = Oa.ch32, I3 = Oa.maj32, R3 = Oa.s0_256, T3 = Oa.s1_256, j3 = Oa.g0_256, P3 = Oa.g1_256, Ss = k3.BlockHash, O3 = [\n  1116352408,\n  1899447441,\n  3049323471,\n  3921009573,\n  961987163,\n  1508970993,\n  2453635748,\n  2870763221,\n  3624381080,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  2162078206,\n  2614888103,\n  3248222580,\n  3835390401,\n  4022224774,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  2554220882,\n  2821834349,\n  2952996808,\n  3210313671,\n  3336571891,\n  3584528711,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  2177026350,\n  2456956037,\n  2730485921,\n  2820302411,\n  3259730800,\n  3345764771,\n  3516065817,\n  3600352804,\n  4094571909,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  2227730452,\n  2361852424,\n  2428436474,\n  2756734187,\n  3204031479,\n  3329325298\n];\nfunction wt() {\n  if (!(this instanceof wt))\n    return new wt();\n  Ss.call(this), this.h = [\n    1779033703,\n    3144134277,\n    1013904242,\n    2773480762,\n    1359893119,\n    2600822924,\n    528734635,\n    1541459225\n  ], this.k = O3, this.W = new Array(64);\n}\nEa.inherits(wt, Ss);\nvar J0 = wt;\nwt.blockSize = 512;\nwt.outSize = 256;\nwt.hmacStrength = 192;\nwt.padLength = 64;\nwt.prototype._update = function(r, t) {\n  for (var i = this.W, c = 0; c < 16; c++)\n    i[c] = r[t + c];\n  for (; c < i.length; c++)\n    i[c] = A3(P3(i[c - 2]), i[c - 7], j3(i[c - 15]), i[c - 16]);\n  var n = this.h[0], x = this.h[1], m = this.h[2], k = this.h[3], B = this.h[4], z = this.h[5], C = this.h[6], F = this.h[7];\n  for (E3(this.k.length === i.length), c = 0; c < i.length; c++) {\n    var T = B3(F, T3(B), z3(B, z, C), this.k[c], i[c]), L = ot(R3(n), I3(n, x, m));\n    F = C, C = z, z = B, B = ot(k, T), k = m, m = x, x = n, n = ot(T, L);\n  }\n  this.h[0] = ot(this.h[0], n), this.h[1] = ot(this.h[1], x), this.h[2] = ot(this.h[2], m), this.h[3] = ot(this.h[3], k), this.h[4] = ot(this.h[4], B), this.h[5] = ot(this.h[5], z), this.h[6] = ot(this.h[6], C), this.h[7] = ot(this.h[7], F);\n};\nwt.prototype._digest = function(r) {\n  return r === \"hex\" ? Ea.toHex32(this.h, \"big\") : Ea.split32(this.h, \"big\");\n};\nvar n0 = De, ks = J0;\nfunction Pt() {\n  if (!(this instanceof Pt))\n    return new Pt();\n  ks.call(this), this.h = [\n    3238371032,\n    914150663,\n    812702999,\n    4144912697,\n    4290775857,\n    1750603025,\n    1694076839,\n    3204075428\n  ];\n}\nn0.inherits(Pt, ks);\nvar q3 = Pt;\nPt.blockSize = 512;\nPt.outSize = 224;\nPt.hmacStrength = 192;\nPt.padLength = 64;\nPt.prototype._digest = function(r) {\n  return r === \"hex\" ? n0.toHex32(this.h.slice(0, 7), \"big\") : n0.split32(this.h.slice(0, 7), \"big\");\n};\nvar Dr = De, N3 = ja, F3 = ha, pt = Dr.rotr64_hi, vt = Dr.rotr64_lo, Es = Dr.shr64_hi, As = Dr.shr64_lo, qt = Dr.sum64, Rf = Dr.sum64_hi, Tf = Dr.sum64_lo, C3 = Dr.sum64_4_hi, L3 = Dr.sum64_4_lo, U3 = Dr.sum64_5_hi, $3 = Dr.sum64_5_lo, Bs = N3.BlockHash, D3 = [\n  1116352408,\n  3609767458,\n  1899447441,\n  602891725,\n  3049323471,\n  3964484399,\n  3921009573,\n  2173295548,\n  961987163,\n  4081628472,\n  1508970993,\n  3053834265,\n  2453635748,\n  2937671579,\n  2870763221,\n  3664609560,\n  3624381080,\n  2734883394,\n  310598401,\n  1164996542,\n  607225278,\n  1323610764,\n  1426881987,\n  3590304994,\n  1925078388,\n  4068182383,\n  2162078206,\n  991336113,\n  2614888103,\n  633803317,\n  3248222580,\n  3479774868,\n  3835390401,\n  2666613458,\n  4022224774,\n  944711139,\n  264347078,\n  2341262773,\n  604807628,\n  2007800933,\n  770255983,\n  1495990901,\n  1249150122,\n  1856431235,\n  1555081692,\n  3175218132,\n  1996064986,\n  2198950837,\n  2554220882,\n  3999719339,\n  2821834349,\n  766784016,\n  2952996808,\n  2566594879,\n  3210313671,\n  3203337956,\n  3336571891,\n  1034457026,\n  3584528711,\n  2466948901,\n  113926993,\n  3758326383,\n  338241895,\n  168717936,\n  666307205,\n  1188179964,\n  773529912,\n  1546045734,\n  1294757372,\n  1522805485,\n  1396182291,\n  2643833823,\n  1695183700,\n  2343527390,\n  1986661051,\n  1014477480,\n  2177026350,\n  1206759142,\n  2456956037,\n  344077627,\n  2730485921,\n  1290863460,\n  2820302411,\n  3158454273,\n  3259730800,\n  3505952657,\n  3345764771,\n  106217008,\n  3516065817,\n  3606008344,\n  3600352804,\n  1432725776,\n  4094571909,\n  1467031594,\n  275423344,\n  851169720,\n  430227734,\n  3100823752,\n  506948616,\n  1363258195,\n  659060556,\n  3750685593,\n  883997877,\n  3785050280,\n  958139571,\n  3318307427,\n  1322822218,\n  3812723403,\n  1537002063,\n  2003034995,\n  1747873779,\n  3602036899,\n  1955562222,\n  1575990012,\n  2024104815,\n  1125592928,\n  2227730452,\n  2716904306,\n  2361852424,\n  442776044,\n  2428436474,\n  593698344,\n  2756734187,\n  3733110249,\n  3204031479,\n  2999351573,\n  3329325298,\n  3815920427,\n  3391569614,\n  3928383900,\n  3515267271,\n  566280711,\n  3940187606,\n  3454069534,\n  4118630271,\n  4000239992,\n  116418474,\n  1914138554,\n  174292421,\n  2731055270,\n  289380356,\n  3203993006,\n  460393269,\n  320620315,\n  685471733,\n  587496836,\n  852142971,\n  1086792851,\n  1017036298,\n  365543100,\n  1126000580,\n  2618297676,\n  1288033470,\n  3409855158,\n  1501505948,\n  4234509866,\n  1607167915,\n  987167468,\n  1816402316,\n  1246189591\n];\nfunction st() {\n  if (!(this instanceof st))\n    return new st();\n  Bs.call(this), this.h = [\n    1779033703,\n    4089235720,\n    3144134277,\n    2227873595,\n    1013904242,\n    4271175723,\n    2773480762,\n    1595750129,\n    1359893119,\n    2917565137,\n    2600822924,\n    725511199,\n    528734635,\n    4215389547,\n    1541459225,\n    327033209\n  ], this.k = D3, this.W = new Array(160);\n}\nDr.inherits(st, Bs);\nvar zs = st;\nst.blockSize = 1024;\nst.outSize = 512;\nst.hmacStrength = 192;\nst.padLength = 128;\nst.prototype._prepareBlock = function(r, t) {\n  for (var i = this.W, c = 0; c < 32; c++)\n    i[c] = r[t + c];\n  for (; c < i.length; c += 2) {\n    var n = e6(i[c - 4], i[c - 3]), x = r6(i[c - 4], i[c - 3]), m = i[c - 14], k = i[c - 13], B = X3(i[c - 30], i[c - 29]), z = Q3(i[c - 30], i[c - 29]), C = i[c - 32], F = i[c - 31];\n    i[c] = C3(\n      n,\n      x,\n      m,\n      k,\n      B,\n      z,\n      C,\n      F\n    ), i[c + 1] = L3(\n      n,\n      x,\n      m,\n      k,\n      B,\n      z,\n      C,\n      F\n    );\n  }\n};\nst.prototype._update = function(r, t) {\n  this._prepareBlock(r, t);\n  var i = this.W, c = this.h[0], n = this.h[1], x = this.h[2], m = this.h[3], k = this.h[4], B = this.h[5], z = this.h[6], C = this.h[7], F = this.h[8], T = this.h[9], L = this.h[10], O = this.h[11], q = this.h[12], R = this.h[13], U = this.h[14], H = this.h[15];\n  F3(this.k.length === i.length);\n  for (var Z = 0; Z < i.length; Z += 2) {\n    var W = U, Y = H, ne = J3(F, T), D = Y3(F, T), V = K3(F, T, L, O, q), G = H3(F, T, L, O, q, R), M = this.k[Z], p = this.k[Z + 1], s = i[Z], a = i[Z + 1], o = U3(\n      W,\n      Y,\n      ne,\n      D,\n      V,\n      G,\n      M,\n      p,\n      s,\n      a\n    ), u = $3(\n      W,\n      Y,\n      ne,\n      D,\n      V,\n      G,\n      M,\n      p,\n      s,\n      a\n    );\n    W = G3(c, n), Y = Z3(c, n), ne = V3(c, n, x, m, k), D = W3(c, n, x, m, k, B);\n    var h = Rf(W, Y, ne, D), v = Tf(W, Y, ne, D);\n    U = q, H = R, q = L, R = O, L = F, O = T, F = Rf(z, C, o, u), T = Tf(C, C, o, u), z = k, C = B, k = x, B = m, x = c, m = n, c = Rf(o, u, h, v), n = Tf(o, u, h, v);\n  }\n  qt(this.h, 0, c, n), qt(this.h, 2, x, m), qt(this.h, 4, k, B), qt(this.h, 6, z, C), qt(this.h, 8, F, T), qt(this.h, 10, L, O), qt(this.h, 12, q, R), qt(this.h, 14, U, H);\n};\nst.prototype._digest = function(r) {\n  return r === \"hex\" ? Dr.toHex32(this.h, \"big\") : Dr.split32(this.h, \"big\");\n};\nfunction K3(e, r, t, i, c) {\n  var n = e & t ^ ~e & c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction H3(e, r, t, i, c, n) {\n  var x = r & i ^ ~r & n;\n  return x < 0 && (x += 4294967296), x;\n}\nfunction V3(e, r, t, i, c) {\n  var n = e & t ^ e & c ^ t & c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction W3(e, r, t, i, c, n) {\n  var x = r & i ^ r & n ^ i & n;\n  return x < 0 && (x += 4294967296), x;\n}\nfunction G3(e, r) {\n  var t = pt(e, r, 28), i = pt(r, e, 2), c = pt(r, e, 7), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction Z3(e, r) {\n  var t = vt(e, r, 28), i = vt(r, e, 2), c = vt(r, e, 7), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction J3(e, r) {\n  var t = pt(e, r, 14), i = pt(e, r, 18), c = pt(r, e, 9), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction Y3(e, r) {\n  var t = vt(e, r, 14), i = vt(e, r, 18), c = vt(r, e, 9), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction X3(e, r) {\n  var t = pt(e, r, 1), i = pt(e, r, 8), c = Es(e, r, 7), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction Q3(e, r) {\n  var t = vt(e, r, 1), i = vt(e, r, 8), c = As(e, r, 7), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction e6(e, r) {\n  var t = pt(e, r, 19), i = pt(r, e, 29), c = Es(e, r, 6), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nfunction r6(e, r) {\n  var t = vt(e, r, 19), i = vt(r, e, 29), c = As(e, r, 6), n = t ^ i ^ c;\n  return n < 0 && (n += 4294967296), n;\n}\nvar f0 = De, Is = zs;\nfunction Ot() {\n  if (!(this instanceof Ot))\n    return new Ot();\n  Is.call(this), this.h = [\n    3418070365,\n    3238371032,\n    1654270250,\n    914150663,\n    2438529370,\n    812702999,\n    355462360,\n    4144912697,\n    1731405415,\n    4290775857,\n    2394180231,\n    1750603025,\n    3675008525,\n    1694076839,\n    1203062813,\n    3204075428\n  ];\n}\nf0.inherits(Ot, Is);\nvar t6 = Ot;\nOt.blockSize = 1024;\nOt.outSize = 384;\nOt.hmacStrength = 192;\nOt.padLength = 128;\nOt.prototype._digest = function(r) {\n  return r === \"hex\" ? f0.toHex32(this.h.slice(0, 12), \"big\") : f0.split32(this.h.slice(0, 12), \"big\");\n};\nPa.sha1 = S3;\nPa.sha224 = q3;\nPa.sha256 = J0;\nPa.sha384 = t6;\nPa.sha512 = zs;\nvar Y0 = {}, ua = De, a6 = ja, xi = ua.rotl32, vc = ua.sum32, Va = ua.sum32_3, xc = ua.sum32_4, Rs = a6.BlockHash;\nfunction _t() {\n  if (!(this instanceof _t))\n    return new _t();\n  Rs.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = \"little\";\n}\nua.inherits(_t, Rs);\nY0.ripemd160 = _t;\n_t.blockSize = 512;\n_t.outSize = 160;\n_t.hmacStrength = 192;\n_t.padLength = 64;\n_t.prototype._update = function(r, t) {\n  for (var i = this.h[0], c = this.h[1], n = this.h[2], x = this.h[3], m = this.h[4], k = i, B = c, z = n, C = x, F = m, T = 0; T < 80; T++) {\n    var L = vc(\n      xi(\n        xc(i, mc(T, c, n, x), r[f6[T] + t], i6(T)),\n        c6[T]\n      ),\n      m\n    );\n    i = m, m = x, x = xi(n, 10), n = c, c = L, L = vc(\n      xi(\n        xc(k, mc(79 - T, B, z, C), r[o6[T] + t], n6(T)),\n        d6[T]\n      ),\n      F\n    ), k = F, F = C, C = xi(z, 10), z = B, B = L;\n  }\n  L = Va(this.h[1], n, C), this.h[1] = Va(this.h[2], x, F), this.h[2] = Va(this.h[3], m, k), this.h[3] = Va(this.h[4], i, B), this.h[4] = Va(this.h[0], c, z), this.h[0] = L;\n};\n_t.prototype._digest = function(r) {\n  return r === \"hex\" ? ua.toHex32(this.h, \"little\") : ua.split32(this.h, \"little\");\n};\nfunction mc(e, r, t, i) {\n  return e <= 15 ? r ^ t ^ i : e <= 31 ? r & t | ~r & i : e <= 47 ? (r | ~t) ^ i : e <= 63 ? r & i | t & ~i : r ^ (t | ~i);\n}\nfunction i6(e) {\n  return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;\n}\nfunction n6(e) {\n  return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;\n}\nvar f6 = [\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  7,\n  4,\n  13,\n  1,\n  10,\n  6,\n  15,\n  3,\n  12,\n  0,\n  9,\n  5,\n  2,\n  14,\n  11,\n  8,\n  3,\n  10,\n  14,\n  4,\n  9,\n  15,\n  8,\n  1,\n  2,\n  7,\n  0,\n  6,\n  13,\n  11,\n  5,\n  12,\n  1,\n  9,\n  11,\n  10,\n  0,\n  8,\n  12,\n  4,\n  13,\n  3,\n  7,\n  15,\n  14,\n  5,\n  6,\n  2,\n  4,\n  0,\n  5,\n  9,\n  7,\n  12,\n  2,\n  10,\n  14,\n  1,\n  3,\n  8,\n  11,\n  6,\n  15,\n  13\n], o6 = [\n  5,\n  14,\n  7,\n  0,\n  9,\n  2,\n  11,\n  4,\n  13,\n  6,\n  15,\n  8,\n  1,\n  10,\n  3,\n  12,\n  6,\n  11,\n  3,\n  7,\n  0,\n  13,\n  5,\n  10,\n  14,\n  15,\n  8,\n  12,\n  4,\n  9,\n  1,\n  2,\n  15,\n  5,\n  1,\n  3,\n  7,\n  14,\n  6,\n  9,\n  11,\n  8,\n  12,\n  2,\n  10,\n  0,\n  4,\n  13,\n  8,\n  6,\n  4,\n  1,\n  3,\n  11,\n  15,\n  0,\n  5,\n  12,\n  2,\n  13,\n  9,\n  7,\n  10,\n  14,\n  12,\n  15,\n  10,\n  4,\n  1,\n  5,\n  8,\n  7,\n  6,\n  2,\n  13,\n  14,\n  0,\n  3,\n  9,\n  11\n], c6 = [\n  11,\n  14,\n  15,\n  12,\n  5,\n  8,\n  7,\n  9,\n  11,\n  13,\n  14,\n  15,\n  6,\n  7,\n  9,\n  8,\n  7,\n  6,\n  8,\n  13,\n  11,\n  9,\n  7,\n  15,\n  7,\n  12,\n  15,\n  9,\n  11,\n  7,\n  13,\n  12,\n  11,\n  13,\n  6,\n  7,\n  14,\n  9,\n  13,\n  15,\n  14,\n  8,\n  13,\n  6,\n  5,\n  12,\n  7,\n  5,\n  11,\n  12,\n  14,\n  15,\n  14,\n  15,\n  9,\n  8,\n  9,\n  14,\n  5,\n  6,\n  8,\n  6,\n  5,\n  12,\n  9,\n  15,\n  5,\n  11,\n  6,\n  8,\n  13,\n  12,\n  5,\n  12,\n  13,\n  14,\n  11,\n  8,\n  5,\n  6\n], d6 = [\n  8,\n  9,\n  9,\n  11,\n  13,\n  15,\n  15,\n  5,\n  7,\n  7,\n  8,\n  11,\n  14,\n  14,\n  12,\n  6,\n  9,\n  13,\n  15,\n  7,\n  12,\n  8,\n  9,\n  11,\n  7,\n  7,\n  12,\n  7,\n  6,\n  15,\n  13,\n  11,\n  9,\n  7,\n  15,\n  11,\n  8,\n  6,\n  6,\n  14,\n  12,\n  13,\n  5,\n  14,\n  13,\n  13,\n  7,\n  5,\n  15,\n  5,\n  8,\n  11,\n  14,\n  14,\n  6,\n  14,\n  6,\n  9,\n  12,\n  9,\n  12,\n  5,\n  15,\n  8,\n  8,\n  5,\n  12,\n  9,\n  12,\n  5,\n  14,\n  6,\n  8,\n  13,\n  6,\n  5,\n  15,\n  13,\n  11,\n  11\n], s6 = De, u6 = ha;\nfunction Aa(e, r, t) {\n  if (!(this instanceof Aa))\n    return new Aa(e, r, t);\n  this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(s6.toArray(r, t));\n}\nvar l6 = Aa;\nAa.prototype._init = function(r) {\n  r.length > this.blockSize && (r = new this.Hash().update(r).digest()), u6(r.length <= this.blockSize);\n  for (var t = r.length; t < this.blockSize; t++)\n    r.push(0);\n  for (t = 0; t < r.length; t++)\n    r[t] ^= 54;\n  for (this.inner = new this.Hash().update(r), t = 0; t < r.length; t++)\n    r[t] ^= 106;\n  this.outer = new this.Hash().update(r);\n};\nAa.prototype.update = function(r, t) {\n  return this.inner.update(r, t), this;\n};\nAa.prototype.digest = function(r) {\n  return this.outer.update(this.inner.digest()), this.outer.digest(r);\n};\n(function(e) {\n  var r = e;\n  r.utils = De, r.common = ja, r.sha = Pa, r.ripemd = Y0, r.hmac = l6, r.sha1 = r.sha.sha1, r.sha256 = r.sha.sha256, r.sha224 = r.sha.sha224, r.sha384 = r.sha.sha384, r.sha512 = r.sha.sha512, r.ripemd160 = r.ripemd.ripemd160;\n})(li);\nconst Li = /* @__PURE__ */ Ki(li);\nvar jf, gc;\nfunction b6() {\n  return gc || (gc = 1, jf = {\n    doubles: {\n      step: 4,\n      points: [\n        [\n          \"e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a\",\n          \"f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821\"\n        ],\n        [\n          \"8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508\",\n          \"11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf\"\n        ],\n        [\n          \"175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739\",\n          \"d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695\"\n        ],\n        [\n          \"363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640\",\n          \"4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9\"\n        ],\n        [\n          \"8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c\",\n          \"4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36\"\n        ],\n        [\n          \"723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda\",\n          \"96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f\"\n        ],\n        [\n          \"eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa\",\n          \"5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999\"\n        ],\n        [\n          \"100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0\",\n          \"cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09\"\n        ],\n        [\n          \"e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d\",\n          \"9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d\"\n        ],\n        [\n          \"feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d\",\n          \"e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088\"\n        ],\n        [\n          \"da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1\",\n          \"9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d\"\n        ],\n        [\n          \"53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0\",\n          \"5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8\"\n        ],\n        [\n          \"8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047\",\n          \"10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a\"\n        ],\n        [\n          \"385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862\",\n          \"283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453\"\n        ],\n        [\n          \"6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7\",\n          \"7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160\"\n        ],\n        [\n          \"3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd\",\n          \"56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0\"\n        ],\n        [\n          \"85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83\",\n          \"7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6\"\n        ],\n        [\n          \"948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a\",\n          \"53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589\"\n        ],\n        [\n          \"6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8\",\n          \"bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17\"\n        ],\n        [\n          \"e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d\",\n          \"4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda\"\n        ],\n        [\n          \"e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725\",\n          \"7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd\"\n        ],\n        [\n          \"213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754\",\n          \"4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2\"\n        ],\n        [\n          \"4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c\",\n          \"17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6\"\n        ],\n        [\n          \"fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6\",\n          \"6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f\"\n        ],\n        [\n          \"76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39\",\n          \"c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01\"\n        ],\n        [\n          \"c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891\",\n          \"893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3\"\n        ],\n        [\n          \"d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b\",\n          \"febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f\"\n        ],\n        [\n          \"b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03\",\n          \"2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7\"\n        ],\n        [\n          \"e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d\",\n          \"eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78\"\n        ],\n        [\n          \"a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070\",\n          \"7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1\"\n        ],\n        [\n          \"90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4\",\n          \"e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150\"\n        ],\n        [\n          \"8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da\",\n          \"662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82\"\n        ],\n        [\n          \"e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11\",\n          \"1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc\"\n        ],\n        [\n          \"8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e\",\n          \"efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b\"\n        ],\n        [\n          \"e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41\",\n          \"2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51\"\n        ],\n        [\n          \"b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef\",\n          \"67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45\"\n        ],\n        [\n          \"d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8\",\n          \"db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120\"\n        ],\n        [\n          \"324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d\",\n          \"648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84\"\n        ],\n        [\n          \"4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96\",\n          \"35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d\"\n        ],\n        [\n          \"9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd\",\n          \"ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d\"\n        ],\n        [\n          \"6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5\",\n          \"9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8\"\n        ],\n        [\n          \"a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266\",\n          \"40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8\"\n        ],\n        [\n          \"7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71\",\n          \"34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac\"\n        ],\n        [\n          \"928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac\",\n          \"c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f\"\n        ],\n        [\n          \"85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751\",\n          \"1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962\"\n        ],\n        [\n          \"ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e\",\n          \"493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907\"\n        ],\n        [\n          \"827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241\",\n          \"c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec\"\n        ],\n        [\n          \"eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3\",\n          \"be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d\"\n        ],\n        [\n          \"e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f\",\n          \"4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414\"\n        ],\n        [\n          \"1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19\",\n          \"aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd\"\n        ],\n        [\n          \"146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be\",\n          \"b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0\"\n        ],\n        [\n          \"fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9\",\n          \"6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811\"\n        ],\n        [\n          \"da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2\",\n          \"8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1\"\n        ],\n        [\n          \"a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13\",\n          \"7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c\"\n        ],\n        [\n          \"174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c\",\n          \"ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73\"\n        ],\n        [\n          \"959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba\",\n          \"2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd\"\n        ],\n        [\n          \"d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151\",\n          \"e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405\"\n        ],\n        [\n          \"64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073\",\n          \"d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589\"\n        ],\n        [\n          \"8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458\",\n          \"38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e\"\n        ],\n        [\n          \"13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b\",\n          \"69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27\"\n        ],\n        [\n          \"bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366\",\n          \"d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1\"\n        ],\n        [\n          \"8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa\",\n          \"40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482\"\n        ],\n        [\n          \"8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0\",\n          \"620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945\"\n        ],\n        [\n          \"dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787\",\n          \"7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573\"\n        ],\n        [\n          \"f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e\",\n          \"ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82\"\n        ]\n      ]\n    },\n    naf: {\n      wnd: 7,\n      points: [\n        [\n          \"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\",\n          \"388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672\"\n        ],\n        [\n          \"2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4\",\n          \"d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6\"\n        ],\n        [\n          \"5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc\",\n          \"6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da\"\n        ],\n        [\n          \"acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe\",\n          \"cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37\"\n        ],\n        [\n          \"774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb\",\n          \"d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b\"\n        ],\n        [\n          \"f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8\",\n          \"ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81\"\n        ],\n        [\n          \"d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e\",\n          \"581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58\"\n        ],\n        [\n          \"defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34\",\n          \"4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77\"\n        ],\n        [\n          \"2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c\",\n          \"85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a\"\n        ],\n        [\n          \"352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5\",\n          \"321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c\"\n        ],\n        [\n          \"2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f\",\n          \"2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67\"\n        ],\n        [\n          \"9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714\",\n          \"73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402\"\n        ],\n        [\n          \"daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729\",\n          \"a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55\"\n        ],\n        [\n          \"c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db\",\n          \"2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482\"\n        ],\n        [\n          \"6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4\",\n          \"e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82\"\n        ],\n        [\n          \"1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5\",\n          \"b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396\"\n        ],\n        [\n          \"605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479\",\n          \"2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49\"\n        ],\n        [\n          \"62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d\",\n          \"80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf\"\n        ],\n        [\n          \"80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f\",\n          \"1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a\"\n        ],\n        [\n          \"7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb\",\n          \"d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7\"\n        ],\n        [\n          \"d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9\",\n          \"eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933\"\n        ],\n        [\n          \"49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963\",\n          \"758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a\"\n        ],\n        [\n          \"77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74\",\n          \"958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6\"\n        ],\n        [\n          \"f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530\",\n          \"e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37\"\n        ],\n        [\n          \"463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b\",\n          \"5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e\"\n        ],\n        [\n          \"f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247\",\n          \"cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6\"\n        ],\n        [\n          \"caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1\",\n          \"cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476\"\n        ],\n        [\n          \"2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120\",\n          \"4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40\"\n        ],\n        [\n          \"7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435\",\n          \"91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61\"\n        ],\n        [\n          \"754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18\",\n          \"673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683\"\n        ],\n        [\n          \"e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8\",\n          \"59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5\"\n        ],\n        [\n          \"186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb\",\n          \"3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b\"\n        ],\n        [\n          \"df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f\",\n          \"55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417\"\n        ],\n        [\n          \"5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143\",\n          \"efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868\"\n        ],\n        [\n          \"290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba\",\n          \"e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a\"\n        ],\n        [\n          \"af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45\",\n          \"f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6\"\n        ],\n        [\n          \"766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a\",\n          \"744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996\"\n        ],\n        [\n          \"59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e\",\n          \"c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e\"\n        ],\n        [\n          \"f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8\",\n          \"e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d\"\n        ],\n        [\n          \"7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c\",\n          \"30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2\"\n        ],\n        [\n          \"948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519\",\n          \"e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e\"\n        ],\n        [\n          \"7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab\",\n          \"100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437\"\n        ],\n        [\n          \"3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca\",\n          \"ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311\"\n        ],\n        [\n          \"d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf\",\n          \"8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4\"\n        ],\n        [\n          \"1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610\",\n          \"68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575\"\n        ],\n        [\n          \"733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4\",\n          \"f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d\"\n        ],\n        [\n          \"15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c\",\n          \"d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d\"\n        ],\n        [\n          \"a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940\",\n          \"edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629\"\n        ],\n        [\n          \"e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980\",\n          \"a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06\"\n        ],\n        [\n          \"311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3\",\n          \"66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374\"\n        ],\n        [\n          \"34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf\",\n          \"9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee\"\n        ],\n        [\n          \"f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63\",\n          \"4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1\"\n        ],\n        [\n          \"d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448\",\n          \"fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b\"\n        ],\n        [\n          \"32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf\",\n          \"5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661\"\n        ],\n        [\n          \"7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5\",\n          \"8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6\"\n        ],\n        [\n          \"ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6\",\n          \"8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e\"\n        ],\n        [\n          \"16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5\",\n          \"5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d\"\n        ],\n        [\n          \"eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99\",\n          \"f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc\"\n        ],\n        [\n          \"78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51\",\n          \"f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4\"\n        ],\n        [\n          \"494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5\",\n          \"42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c\"\n        ],\n        [\n          \"a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5\",\n          \"204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b\"\n        ],\n        [\n          \"c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997\",\n          \"4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913\"\n        ],\n        [\n          \"841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881\",\n          \"73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154\"\n        ],\n        [\n          \"5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5\",\n          \"39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865\"\n        ],\n        [\n          \"36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66\",\n          \"d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc\"\n        ],\n        [\n          \"336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726\",\n          \"ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224\"\n        ],\n        [\n          \"8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede\",\n          \"6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e\"\n        ],\n        [\n          \"1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94\",\n          \"60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6\"\n        ],\n        [\n          \"85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31\",\n          \"3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511\"\n        ],\n        [\n          \"29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51\",\n          \"b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b\"\n        ],\n        [\n          \"a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252\",\n          \"ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2\"\n        ],\n        [\n          \"4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5\",\n          \"cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c\"\n        ],\n        [\n          \"d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b\",\n          \"6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3\"\n        ],\n        [\n          \"ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4\",\n          \"322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d\"\n        ],\n        [\n          \"af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f\",\n          \"6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700\"\n        ],\n        [\n          \"e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889\",\n          \"2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4\"\n        ],\n        [\n          \"591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246\",\n          \"b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196\"\n        ],\n        [\n          \"11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984\",\n          \"998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4\"\n        ],\n        [\n          \"3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a\",\n          \"b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257\"\n        ],\n        [\n          \"cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030\",\n          \"bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13\"\n        ],\n        [\n          \"c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197\",\n          \"6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096\"\n        ],\n        [\n          \"c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593\",\n          \"c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38\"\n        ],\n        [\n          \"a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef\",\n          \"21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f\"\n        ],\n        [\n          \"347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38\",\n          \"60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448\"\n        ],\n        [\n          \"da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a\",\n          \"49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a\"\n        ],\n        [\n          \"c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111\",\n          \"5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4\"\n        ],\n        [\n          \"4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502\",\n          \"7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437\"\n        ],\n        [\n          \"3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea\",\n          \"be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7\"\n        ],\n        [\n          \"cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26\",\n          \"8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d\"\n        ],\n        [\n          \"b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986\",\n          \"39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a\"\n        ],\n        [\n          \"d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e\",\n          \"62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54\"\n        ],\n        [\n          \"48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4\",\n          \"25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77\"\n        ],\n        [\n          \"dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda\",\n          \"ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517\"\n        ],\n        [\n          \"6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859\",\n          \"cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10\"\n        ],\n        [\n          \"e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f\",\n          \"f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125\"\n        ],\n        [\n          \"eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c\",\n          \"6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e\"\n        ],\n        [\n          \"13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942\",\n          \"fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1\"\n        ],\n        [\n          \"ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a\",\n          \"1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2\"\n        ],\n        [\n          \"b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80\",\n          \"5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423\"\n        ],\n        [\n          \"ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d\",\n          \"438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8\"\n        ],\n        [\n          \"8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1\",\n          \"cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758\"\n        ],\n        [\n          \"52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63\",\n          \"c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375\"\n        ],\n        [\n          \"e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352\",\n          \"6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d\"\n        ],\n        [\n          \"7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193\",\n          \"ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec\"\n        ],\n        [\n          \"5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00\",\n          \"9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0\"\n        ],\n        [\n          \"32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58\",\n          \"ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c\"\n        ],\n        [\n          \"e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7\",\n          \"d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4\"\n        ],\n        [\n          \"8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8\",\n          \"c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f\"\n        ],\n        [\n          \"4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e\",\n          \"67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649\"\n        ],\n        [\n          \"3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d\",\n          \"cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826\"\n        ],\n        [\n          \"674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b\",\n          \"299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5\"\n        ],\n        [\n          \"d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f\",\n          \"f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87\"\n        ],\n        [\n          \"30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6\",\n          \"462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b\"\n        ],\n        [\n          \"be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297\",\n          \"62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc\"\n        ],\n        [\n          \"93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a\",\n          \"7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c\"\n        ],\n        [\n          \"b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c\",\n          \"ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f\"\n        ],\n        [\n          \"d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52\",\n          \"4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a\"\n        ],\n        [\n          \"d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb\",\n          \"bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46\"\n        ],\n        [\n          \"463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065\",\n          \"bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f\"\n        ],\n        [\n          \"7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917\",\n          \"603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03\"\n        ],\n        [\n          \"74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9\",\n          \"cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08\"\n        ],\n        [\n          \"30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3\",\n          \"553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8\"\n        ],\n        [\n          \"9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57\",\n          \"712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373\"\n        ],\n        [\n          \"176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66\",\n          \"ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3\"\n        ],\n        [\n          \"75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8\",\n          \"9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8\"\n        ],\n        [\n          \"809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721\",\n          \"9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1\"\n        ],\n        [\n          \"1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180\",\n          \"4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9\"\n        ]\n      ]\n    }\n  }), jf;\n}\n(function(e) {\n  var r = e, t = li, i = G0, c = Gr, n = c.assert;\n  function x(B) {\n    B.type === \"short\" ? this.curve = new i.short(B) : B.type === \"edwards\" ? this.curve = new i.edwards(B) : this.curve = new i.mont(B), this.g = this.curve.g, this.n = this.curve.n, this.hash = B.hash, n(this.g.validate(), \"Invalid curve\"), n(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n  }\n  r.PresetCurve = x;\n  function m(B, z) {\n    Object.defineProperty(r, B, {\n      configurable: !0,\n      enumerable: !0,\n      get: function() {\n        var C = new x(z);\n        return Object.defineProperty(r, B, {\n          configurable: !0,\n          enumerable: !0,\n          value: C\n        }), C;\n      }\n    });\n  }\n  m(\"p192\", {\n    type: \"short\",\n    prime: \"p192\",\n    p: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",\n    a: \"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",\n    b: \"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",\n    n: \"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",\n    hash: t.sha256,\n    gRed: !1,\n    g: [\n      \"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\n      \"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"\n    ]\n  }), m(\"p224\", {\n    type: \"short\",\n    prime: \"p224\",\n    p: \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",\n    a: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",\n    b: \"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",\n    n: \"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",\n    hash: t.sha256,\n    gRed: !1,\n    g: [\n      \"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\n      \"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"\n    ]\n  }), m(\"p256\", {\n    type: \"short\",\n    prime: null,\n    p: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",\n    a: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",\n    b: \"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",\n    n: \"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",\n    hash: t.sha256,\n    gRed: !1,\n    g: [\n      \"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\n      \"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"\n    ]\n  }), m(\"p384\", {\n    type: \"short\",\n    prime: null,\n    p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",\n    a: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",\n    b: \"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",\n    n: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",\n    hash: t.sha384,\n    gRed: !1,\n    g: [\n      \"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\n      \"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"\n    ]\n  }), m(\"p521\", {\n    type: \"short\",\n    prime: null,\n    p: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",\n    a: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",\n    b: \"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",\n    n: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",\n    hash: t.sha512,\n    gRed: !1,\n    g: [\n      \"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\n      \"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"\n    ]\n  }), m(\"curve25519\", {\n    type: \"mont\",\n    prime: \"p25519\",\n    p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n    a: \"76d06\",\n    b: \"1\",\n    n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n    hash: t.sha256,\n    gRed: !1,\n    g: [\n      \"9\"\n    ]\n  }), m(\"ed25519\", {\n    type: \"edwards\",\n    prime: \"p25519\",\n    p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n    a: \"-1\",\n    c: \"1\",\n    // -121665 * (121666^(-1)) (mod P)\n    d: \"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",\n    n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n    hash: t.sha256,\n    gRed: !1,\n    g: [\n      \"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\n      // 4/5\n      \"6666666666666666666666666666666666666666666666666666666666666658\"\n    ]\n  });\n  var k;\n  try {\n    k = b6();\n  } catch {\n    k = void 0;\n  }\n  m(\"secp256k1\", {\n    type: \"short\",\n    prime: \"k256\",\n    p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n    a: \"0\",\n    b: \"7\",\n    n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n    h: \"1\",\n    hash: t.sha256,\n    // Precomputed endomorphism\n    beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n    lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n    basis: [\n      {\n        a: \"3086d221a7d46bcde86c90e49284eb15\",\n        b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n      },\n      {\n        a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n        b: \"3086d221a7d46bcde86c90e49284eb15\"\n      }\n    ],\n    gRed: !1,\n    g: [\n      \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n      \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",\n      k\n    ]\n  });\n})(vn);\nvar h6 = li, fa = V0, Ts = ha;\nfunction Dt(e) {\n  if (!(this instanceof Dt))\n    return new Dt(e);\n  this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;\n  var r = fa.toArray(e.entropy, e.entropyEnc || \"hex\"), t = fa.toArray(e.nonce, e.nonceEnc || \"hex\"), i = fa.toArray(e.pers, e.persEnc || \"hex\");\n  Ts(\n    r.length >= this.minEntropy / 8,\n    \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"\n  ), this._init(r, t, i);\n}\nvar p6 = Dt;\nDt.prototype._init = function(r, t, i) {\n  var c = r.concat(t).concat(i);\n  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);\n  for (var n = 0; n < this.V.length; n++)\n    this.K[n] = 0, this.V[n] = 1;\n  this._update(c), this._reseed = 1, this.reseedInterval = 281474976710656;\n};\nDt.prototype._hmac = function() {\n  return new h6.hmac(this.hash, this.K);\n};\nDt.prototype._update = function(r) {\n  var t = this._hmac().update(this.V).update([0]);\n  r && (t = t.update(r)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), r && (this.K = this._hmac().update(this.V).update([1]).update(r).digest(), this.V = this._hmac().update(this.V).digest());\n};\nDt.prototype.reseed = function(r, t, i, c) {\n  typeof t != \"string\" && (c = i, i = t, t = null), r = fa.toArray(r, t), i = fa.toArray(i, c), Ts(\n    r.length >= this.minEntropy / 8,\n    \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"\n  ), this._update(r.concat(i || [])), this._reseed = 1;\n};\nDt.prototype.generate = function(r, t, i, c) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error(\"Reseed is required\");\n  typeof t != \"string\" && (c = i, i = t, t = null), i && (i = fa.toArray(i, c || \"hex\"), this._update(i));\n  for (var n = []; n.length < r; )\n    this.V = this._hmac().update(this.V).digest(), n = n.concat(this.V);\n  var x = n.slice(0, r);\n  return this._update(i), this._reseed++, fa.encode(x, t);\n};\nvar v6 = St, x6 = Gr, o0 = x6.assert;\nfunction Ir(e, r) {\n  this.ec = e, this.priv = null, this.pub = null, r.priv && this._importPrivate(r.priv, r.privEnc), r.pub && this._importPublic(r.pub, r.pubEnc);\n}\nvar m6 = Ir;\nIr.fromPublic = function(r, t, i) {\n  return t instanceof Ir ? t : new Ir(r, {\n    pub: t,\n    pubEnc: i\n  });\n};\nIr.fromPrivate = function(r, t, i) {\n  return t instanceof Ir ? t : new Ir(r, {\n    priv: t,\n    privEnc: i\n  });\n};\nIr.prototype.validate = function() {\n  var r = this.getPublic();\n  return r.isInfinity() ? { result: !1, reason: \"Invalid public key\" } : r.validate() ? r.mul(this.ec.curve.n).isInfinity() ? { result: !0, reason: null } : { result: !1, reason: \"Public key * N != O\" } : { result: !1, reason: \"Public key is not a point\" };\n};\nIr.prototype.getPublic = function(r, t) {\n  return typeof r == \"string\" && (t = r, r = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t ? this.pub.encode(t, r) : this.pub;\n};\nIr.prototype.getPrivate = function(r) {\n  return r === \"hex\" ? this.priv.toString(16, 2) : this.priv;\n};\nIr.prototype._importPrivate = function(r, t) {\n  this.priv = new v6(r, t || 16), this.priv = this.priv.umod(this.ec.curve.n);\n};\nIr.prototype._importPublic = function(r, t) {\n  if (r.x || r.y) {\n    this.ec.curve.type === \"mont\" ? o0(r.x, \"Need x coordinate\") : (this.ec.curve.type === \"short\" || this.ec.curve.type === \"edwards\") && o0(r.x && r.y, \"Need both x and y coordinate\"), this.pub = this.ec.curve.point(r.x, r.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(r, t);\n};\nIr.prototype.derive = function(r) {\n  return r.validate() || o0(r.validate(), \"public point not validated\"), r.mul(this.priv).getX();\n};\nIr.prototype.sign = function(r, t, i) {\n  return this.ec.sign(r, this, t, i);\n};\nIr.prototype.verify = function(r, t) {\n  return this.ec.verify(r, t, this);\n};\nIr.prototype.inspect = function() {\n  return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n};\nvar Ui = St, X0 = Gr, g6 = X0.assert;\nfunction mn(e, r) {\n  if (e instanceof mn)\n    return e;\n  this._importDER(e, r) || (g6(e.r && e.s, \"Signature without r or s\"), this.r = new Ui(e.r, 16), this.s = new Ui(e.s, 16), e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);\n}\nvar y6 = mn;\nfunction w6() {\n  this.place = 0;\n}\nfunction Pf(e, r) {\n  var t = e[r.place++];\n  if (!(t & 128))\n    return t;\n  var i = t & 15;\n  if (i === 0 || i > 4)\n    return !1;\n  for (var c = 0, n = 0, x = r.place; n < i; n++, x++)\n    c <<= 8, c |= e[x], c >>>= 0;\n  return c <= 127 ? !1 : (r.place = x, c);\n}\nfunction yc(e) {\n  for (var r = 0, t = e.length - 1; !e[r] && !(e[r + 1] & 128) && r < t; )\n    r++;\n  return r === 0 ? e : e.slice(r);\n}\nmn.prototype._importDER = function(r, t) {\n  r = X0.toArray(r, t);\n  var i = new w6();\n  if (r[i.place++] !== 48)\n    return !1;\n  var c = Pf(r, i);\n  if (c === !1 || c + i.place !== r.length || r[i.place++] !== 2)\n    return !1;\n  var n = Pf(r, i);\n  if (n === !1)\n    return !1;\n  var x = r.slice(i.place, n + i.place);\n  if (i.place += n, r[i.place++] !== 2)\n    return !1;\n  var m = Pf(r, i);\n  if (m === !1 || r.length !== m + i.place)\n    return !1;\n  var k = r.slice(i.place, m + i.place);\n  if (x[0] === 0)\n    if (x[1] & 128)\n      x = x.slice(1);\n    else\n      return !1;\n  if (k[0] === 0)\n    if (k[1] & 128)\n      k = k.slice(1);\n    else\n      return !1;\n  return this.r = new Ui(x), this.s = new Ui(k), this.recoveryParam = null, !0;\n};\nfunction Of(e, r) {\n  if (r < 128) {\n    e.push(r);\n    return;\n  }\n  var t = 1 + (Math.log(r) / Math.LN2 >>> 3);\n  for (e.push(t | 128); --t; )\n    e.push(r >>> (t << 3) & 255);\n  e.push(r);\n}\nmn.prototype.toDER = function(r) {\n  var t = this.r.toArray(), i = this.s.toArray();\n  for (t[0] & 128 && (t = [0].concat(t)), i[0] & 128 && (i = [0].concat(i)), t = yc(t), i = yc(i); !i[0] && !(i[1] & 128); )\n    i = i.slice(1);\n  var c = [2];\n  Of(c, t.length), c = c.concat(t), c.push(2), Of(c, i.length);\n  var n = c.concat(i), x = [48];\n  return Of(x, n.length), x = x.concat(n), X0.encode(x, r);\n};\nvar oa = St, js = p6, _6 = Gr, qf = vn, M6 = hs, Ps = _6.assert, Q0 = m6, gn = y6;\nfunction Qr(e) {\n  if (!(this instanceof Qr))\n    return new Qr(e);\n  typeof e == \"string\" && (Ps(\n    Object.prototype.hasOwnProperty.call(qf, e),\n    \"Unknown curve \" + e\n  ), e = qf[e]), e instanceof qf.PresetCurve && (e = { curve: e }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;\n}\nvar S6 = Qr;\nQr.prototype.keyPair = function(r) {\n  return new Q0(this, r);\n};\nQr.prototype.keyFromPrivate = function(r, t) {\n  return Q0.fromPrivate(this, r, t);\n};\nQr.prototype.keyFromPublic = function(r, t) {\n  return Q0.fromPublic(this, r, t);\n};\nQr.prototype.genKeyPair = function(r) {\n  r || (r = {});\n  for (var t = new js({\n    hash: this.hash,\n    pers: r.pers,\n    persEnc: r.persEnc || \"utf8\",\n    entropy: r.entropy || M6(this.hash.hmacStrength),\n    entropyEnc: r.entropy && r.entropyEnc || \"utf8\",\n    nonce: this.n.toArray()\n  }), i = this.n.byteLength(), c = this.n.sub(new oa(2)); ; ) {\n    var n = new oa(t.generate(i));\n    if (!(n.cmp(c) > 0))\n      return n.iaddn(1), this.keyFromPrivate(n);\n  }\n};\nQr.prototype._truncateToN = function(r, t) {\n  var i = r.byteLength() * 8 - this.n.bitLength();\n  return i > 0 && (r = r.ushrn(i)), !t && r.cmp(this.n) >= 0 ? r.sub(this.n) : r;\n};\nQr.prototype.sign = function(r, t, i, c) {\n  typeof i == \"object\" && (c = i, i = null), c || (c = {}), t = this.keyFromPrivate(t, i), r = this._truncateToN(new oa(r, 16));\n  for (var n = this.n.byteLength(), x = t.getPrivate().toArray(\"be\", n), m = r.toArray(\"be\", n), k = new js({\n    hash: this.hash,\n    entropy: x,\n    nonce: m,\n    pers: c.pers,\n    persEnc: c.persEnc || \"utf8\"\n  }), B = this.n.sub(new oa(1)), z = 0; ; z++) {\n    var C = c.k ? c.k(z) : new oa(k.generate(this.n.byteLength()));\n    if (C = this._truncateToN(C, !0), !(C.cmpn(1) <= 0 || C.cmp(B) >= 0)) {\n      var F = this.g.mul(C);\n      if (!F.isInfinity()) {\n        var T = F.getX(), L = T.umod(this.n);\n        if (L.cmpn(0) !== 0) {\n          var O = C.invm(this.n).mul(L.mul(t.getPrivate()).iadd(r));\n          if (O = O.umod(this.n), O.cmpn(0) !== 0) {\n            var q = (F.getY().isOdd() ? 1 : 0) | (T.cmp(L) !== 0 ? 2 : 0);\n            return c.canonical && O.cmp(this.nh) > 0 && (O = this.n.sub(O), q ^= 1), new gn({ r: L, s: O, recoveryParam: q });\n          }\n        }\n      }\n    }\n  }\n};\nQr.prototype.verify = function(r, t, i, c) {\n  r = this._truncateToN(new oa(r, 16)), i = this.keyFromPublic(i, c), t = new gn(t, \"hex\");\n  var n = t.r, x = t.s;\n  if (n.cmpn(1) < 0 || n.cmp(this.n) >= 0 || x.cmpn(1) < 0 || x.cmp(this.n) >= 0)\n    return !1;\n  var m = x.invm(this.n), k = m.mul(r).umod(this.n), B = m.mul(n).umod(this.n), z;\n  return this.curve._maxwellTrick ? (z = this.g.jmulAdd(k, i.getPublic(), B), z.isInfinity() ? !1 : z.eqXToP(n)) : (z = this.g.mulAdd(k, i.getPublic(), B), z.isInfinity() ? !1 : z.getX().umod(this.n).cmp(n) === 0);\n};\nQr.prototype.recoverPubKey = function(e, r, t, i) {\n  Ps((3 & t) === t, \"The recovery param is more than two bits\"), r = new gn(r, i);\n  var c = this.n, n = new oa(e), x = r.r, m = r.s, k = t & 1, B = t >> 1;\n  if (x.cmp(this.curve.p.umod(this.curve.n)) >= 0 && B)\n    throw new Error(\"Unable to find sencond key candinate\");\n  B ? x = this.curve.pointFromX(x.add(this.curve.n), k) : x = this.curve.pointFromX(x, k);\n  var z = r.r.invm(c), C = c.sub(n).mul(z).umod(c), F = m.mul(z).umod(c);\n  return this.g.mulAdd(C, x, F);\n};\nQr.prototype.getKeyRecoveryParam = function(e, r, t, i) {\n  if (r = new gn(r, i), r.recoveryParam !== null)\n    return r.recoveryParam;\n  for (var c = 0; c < 4; c++) {\n    var n;\n    try {\n      n = this.recoverPubKey(e, r, c);\n    } catch {\n      continue;\n    }\n    if (n.eq(t))\n      return c;\n  }\n  throw new Error(\"Unable to find valid recovery factor\");\n};\nvar bi = Gr, Os = bi.assert, wc = bi.parseBytes, qa = bi.cachedProperty;\nfunction pr(e, r) {\n  this.eddsa = e, this._secret = wc(r.secret), e.isPoint(r.pub) ? this._pub = r.pub : this._pubBytes = wc(r.pub);\n}\npr.fromPublic = function(r, t) {\n  return t instanceof pr ? t : new pr(r, { pub: t });\n};\npr.fromSecret = function(r, t) {\n  return t instanceof pr ? t : new pr(r, { secret: t });\n};\npr.prototype.secret = function() {\n  return this._secret;\n};\nqa(pr, \"pubBytes\", function() {\n  return this.eddsa.encodePoint(this.pub());\n});\nqa(pr, \"pub\", function() {\n  return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());\n});\nqa(pr, \"privBytes\", function() {\n  var r = this.eddsa, t = this.hash(), i = r.encodingLength - 1, c = t.slice(0, r.encodingLength);\n  return c[0] &= 248, c[i] &= 127, c[i] |= 64, c;\n});\nqa(pr, \"priv\", function() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\nqa(pr, \"hash\", function() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\nqa(pr, \"messagePrefix\", function() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\npr.prototype.sign = function(r) {\n  return Os(this._secret, \"KeyPair can only verify\"), this.eddsa.sign(r, this);\n};\npr.prototype.verify = function(r, t) {\n  return this.eddsa.verify(r, t, this);\n};\npr.prototype.getSecret = function(r) {\n  return Os(this._secret, \"KeyPair is public only\"), bi.encode(this.secret(), r);\n};\npr.prototype.getPublic = function(r) {\n  return bi.encode(this.pubBytes(), r);\n};\nvar k6 = pr, E6 = St, yn = Gr, A6 = yn.assert, wn = yn.cachedProperty, B6 = yn.parseBytes;\nfunction pa(e, r) {\n  this.eddsa = e, typeof r != \"object\" && (r = B6(r)), Array.isArray(r) && (r = {\n    R: r.slice(0, e.encodingLength),\n    S: r.slice(e.encodingLength)\n  }), A6(r.R && r.S, \"Signature without R or S\"), e.isPoint(r.R) && (this._R = r.R), r.S instanceof E6 && (this._S = r.S), this._Rencoded = Array.isArray(r.R) ? r.R : r.Rencoded, this._Sencoded = Array.isArray(r.S) ? r.S : r.Sencoded;\n}\nwn(pa, \"S\", function() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\nwn(pa, \"R\", function() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\nwn(pa, \"Rencoded\", function() {\n  return this.eddsa.encodePoint(this.R());\n});\nwn(pa, \"Sencoded\", function() {\n  return this.eddsa.encodeInt(this.S());\n});\npa.prototype.toBytes = function() {\n  return this.Rencoded().concat(this.Sencoded());\n};\npa.prototype.toHex = function() {\n  return yn.encode(this.toBytes(), \"hex\").toUpperCase();\n};\nvar z6 = pa, I6 = li, R6 = vn, Ba = Gr, T6 = Ba.assert, qs = Ba.parseBytes, Ns = k6, _c = z6;\nfunction Kr(e) {\n  if (T6(e === \"ed25519\", \"only tested with ed25519 so far\"), !(this instanceof Kr))\n    return new Kr(e);\n  e = R6[e].curve, this.curve = e, this.g = e.g, this.g.precompute(e.n.bitLength() + 1), this.pointClass = e.point().constructor, this.encodingLength = Math.ceil(e.n.bitLength() / 8), this.hash = I6.sha512;\n}\nvar j6 = Kr;\nKr.prototype.sign = function(r, t) {\n  r = qs(r);\n  var i = this.keyFromSecret(t), c = this.hashInt(i.messagePrefix(), r), n = this.g.mul(c), x = this.encodePoint(n), m = this.hashInt(x, i.pubBytes(), r).mul(i.priv()), k = c.add(m).umod(this.curve.n);\n  return this.makeSignature({ R: n, S: k, Rencoded: x });\n};\nKr.prototype.verify = function(r, t, i) {\n  r = qs(r), t = this.makeSignature(t);\n  var c = this.keyFromPublic(i), n = this.hashInt(t.Rencoded(), c.pubBytes(), r), x = this.g.mul(t.S()), m = t.R().add(c.pub().mul(n));\n  return m.eq(x);\n};\nKr.prototype.hashInt = function() {\n  for (var r = this.hash(), t = 0; t < arguments.length; t++)\n    r.update(arguments[t]);\n  return Ba.intFromLE(r.digest()).umod(this.curve.n);\n};\nKr.prototype.keyFromPublic = function(r) {\n  return Ns.fromPublic(this, r);\n};\nKr.prototype.keyFromSecret = function(r) {\n  return Ns.fromSecret(this, r);\n};\nKr.prototype.makeSignature = function(r) {\n  return r instanceof _c ? r : new _c(this, r);\n};\nKr.prototype.encodePoint = function(r) {\n  var t = r.getY().toArray(\"le\", this.encodingLength);\n  return t[this.encodingLength - 1] |= r.getX().isOdd() ? 128 : 0, t;\n};\nKr.prototype.decodePoint = function(r) {\n  r = Ba.parseBytes(r);\n  var t = r.length - 1, i = r.slice(0, t).concat(r[t] & -129), c = (r[t] & 128) !== 0, n = Ba.intFromLE(i);\n  return this.curve.pointFromY(n, c);\n};\nKr.prototype.encodeInt = function(r) {\n  return r.toArray(\"le\", this.encodingLength);\n};\nKr.prototype.decodeInt = function(r) {\n  return Ba.intFromLE(r);\n};\nKr.prototype.isPoint = function(r) {\n  return r instanceof this.pointClass;\n};\n(function(e) {\n  var r = e;\n  r.version = R2.version, r.utils = Gr, r.rand = hs, r.curve = G0, r.curves = vn, r.ec = S6, r.eddsa = j6;\n})(Ni);\nconst P6 = Ni.ec, lt = new P6(\"secp256k1\"), Xe = lt.curve, rr = Xe.n.constructor;\nfunction O6(e, r) {\n  let t = new rr(r);\n  if (t.cmp(Xe.p) >= 0)\n    return null;\n  t = t.toRed(Xe.red);\n  let i = t.redSqr().redIMul(t).redIAdd(Xe.b).redSqrt();\n  return e === 3 !== i.isOdd() && (i = i.redNeg()), lt.keyPair({ pub: { x: t, y: i } });\n}\nfunction q6(e, r, t) {\n  let i = new rr(r), c = new rr(t);\n  if (i.cmp(Xe.p) >= 0 || c.cmp(Xe.p) >= 0 || (i = i.toRed(Xe.red), c = c.toRed(Xe.red), (e === 6 || e === 7) && c.isOdd() !== (e === 7)))\n    return null;\n  const n = i.redSqr().redIMul(i);\n  return c.redSqr().redISub(n.redIAdd(Xe.b)).isZero() ? lt.keyPair({ pub: { x: i, y: c } }) : null;\n}\nfunction Nt(e) {\n  const r = e[0];\n  switch (r) {\n    case 2:\n    case 3:\n      return e.length !== 33 ? null : O6(r, e.subarray(1, 33));\n    case 4:\n    case 6:\n    case 7:\n      return e.length !== 65 ? null : q6(r, e.subarray(1, 33), e.subarray(33, 65));\n    default:\n      return null;\n  }\n}\nfunction ra(e, r) {\n  const t = r.encode(null, e.length === 33);\n  for (let i = 0; i < e.length; ++i)\n    e[i] = t[i];\n}\nvar N6 = {\n  contextRandomize() {\n    return 0;\n  },\n  privateKeyVerify(e) {\n    const r = new rr(e);\n    return r.cmp(Xe.n) < 0 && !r.isZero() ? 0 : 1;\n  },\n  privateKeyNegate(e) {\n    const r = new rr(e), t = Xe.n.sub(r).umod(Xe.n).toArrayLike(Uint8Array, \"be\", 32);\n    return e.set(t), 0;\n  },\n  privateKeyTweakAdd(e, r) {\n    const t = new rr(r);\n    if (t.cmp(Xe.n) >= 0 || (t.iadd(new rr(e)), t.cmp(Xe.n) >= 0 && t.isub(Xe.n), t.isZero()))\n      return 1;\n    const i = t.toArrayLike(Uint8Array, \"be\", 32);\n    return e.set(i), 0;\n  },\n  privateKeyTweakMul(e, r) {\n    let t = new rr(r);\n    if (t.cmp(Xe.n) >= 0 || t.isZero())\n      return 1;\n    t.imul(new rr(e)), t.cmp(Xe.n) >= 0 && (t = t.umod(Xe.n));\n    const i = t.toArrayLike(Uint8Array, \"be\", 32);\n    return e.set(i), 0;\n  },\n  publicKeyVerify(e) {\n    return Nt(e) === null ? 1 : 0;\n  },\n  publicKeyCreate(e, r) {\n    const t = new rr(r);\n    if (t.cmp(Xe.n) >= 0 || t.isZero())\n      return 1;\n    const i = lt.keyFromPrivate(r).getPublic();\n    return ra(e, i), 0;\n  },\n  publicKeyConvert(e, r) {\n    const t = Nt(r);\n    if (t === null)\n      return 1;\n    const i = t.getPublic();\n    return ra(e, i), 0;\n  },\n  publicKeyNegate(e, r) {\n    const t = Nt(r);\n    if (t === null)\n      return 1;\n    const i = t.getPublic();\n    return i.y = i.y.redNeg(), ra(e, i), 0;\n  },\n  publicKeyCombine(e, r) {\n    const t = new Array(r.length);\n    for (let c = 0; c < r.length; ++c)\n      if (t[c] = Nt(r[c]), t[c] === null)\n        return 1;\n    let i = t[0].getPublic();\n    for (let c = 1; c < t.length; ++c)\n      i = i.add(t[c].pub);\n    return i.isInfinity() ? 2 : (ra(e, i), 0);\n  },\n  publicKeyTweakAdd(e, r, t) {\n    const i = Nt(r);\n    if (i === null)\n      return 1;\n    if (t = new rr(t), t.cmp(Xe.n) >= 0)\n      return 2;\n    const c = i.getPublic().add(Xe.g.mul(t));\n    return c.isInfinity() ? 2 : (ra(e, c), 0);\n  },\n  publicKeyTweakMul(e, r, t) {\n    const i = Nt(r);\n    if (i === null)\n      return 1;\n    if (t = new rr(t), t.cmp(Xe.n) >= 0 || t.isZero())\n      return 2;\n    const c = i.getPublic().mul(t);\n    return ra(e, c), 0;\n  },\n  signatureNormalize(e) {\n    const r = new rr(e.subarray(0, 32)), t = new rr(e.subarray(32, 64));\n    return r.cmp(Xe.n) >= 0 || t.cmp(Xe.n) >= 0 ? 1 : (t.cmp(lt.nh) === 1 && e.set(Xe.n.sub(t).toArrayLike(Uint8Array, \"be\", 32), 32), 0);\n  },\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport(e, r) {\n    const t = r.subarray(0, 32), i = r.subarray(32, 64);\n    if (new rr(t).cmp(Xe.n) >= 0 || new rr(i).cmp(Xe.n) >= 0)\n      return 1;\n    const { output: c } = e;\n    let n = c.subarray(4, 4 + 33);\n    n[0] = 0, n.set(t, 1);\n    let x = 33, m = 0;\n    for (; x > 1 && n[m] === 0 && !(n[m + 1] & 128); --x, ++m)\n      ;\n    if (n = n.subarray(m), n[0] & 128 || x > 1 && n[0] === 0 && !(n[1] & 128))\n      return 1;\n    let k = c.subarray(6 + 33, 6 + 33 + 33);\n    k[0] = 0, k.set(i, 1);\n    let B = 33, z = 0;\n    for (; B > 1 && k[z] === 0 && !(k[z + 1] & 128); --B, ++z)\n      ;\n    return k = k.subarray(z), k[0] & 128 || B > 1 && k[0] === 0 && !(k[1] & 128) ? 1 : (e.outputlen = 6 + x + B, c[0] = 48, c[1] = e.outputlen - 2, c[2] = 2, c[3] = n.length, c.set(n, 4), c[4 + x] = 2, c[5 + x] = k.length, c.set(k, 6 + x), 0);\n  },\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport(e, r) {\n    if (r.length < 8 || r.length > 72 || r[0] !== 48 || r[1] !== r.length - 2 || r[2] !== 2)\n      return 1;\n    const t = r[3];\n    if (t === 0 || 5 + t >= r.length || r[4 + t] !== 2)\n      return 1;\n    const i = r[5 + t];\n    if (i === 0 || 6 + t + i !== r.length || r[4] & 128 || t > 1 && r[4] === 0 && !(r[5] & 128) || r[t + 6] & 128 || i > 1 && r[t + 6] === 0 && !(r[t + 7] & 128))\n      return 1;\n    let c = r.subarray(4, 4 + t);\n    if (c.length === 33 && c[0] === 0 && (c = c.subarray(1)), c.length > 32)\n      return 1;\n    let n = r.subarray(6 + t);\n    if (n.length === 33 && n[0] === 0 && (n = n.slice(1)), n.length > 32)\n      throw new Error(\"S length is too long\");\n    let x = new rr(c);\n    x.cmp(Xe.n) >= 0 && (x = new rr(0));\n    let m = new rr(r.subarray(6 + t));\n    return m.cmp(Xe.n) >= 0 && (m = new rr(0)), e.set(x.toArrayLike(Uint8Array, \"be\", 32), 0), e.set(m.toArrayLike(Uint8Array, \"be\", 32), 32), 0;\n  },\n  ecdsaSign(e, r, t, i, c) {\n    if (c) {\n      const m = c;\n      c = (k) => {\n        const B = m(r, t, null, i, k);\n        if (!(B instanceof Uint8Array && B.length === 32))\n          throw new Error(\"This is the way\");\n        return new rr(B);\n      };\n    }\n    const n = new rr(t);\n    if (n.cmp(Xe.n) >= 0 || n.isZero())\n      return 1;\n    let x;\n    try {\n      x = lt.sign(r, t, { canonical: !0, k: c, pers: i });\n    } catch {\n      return 1;\n    }\n    return e.signature.set(x.r.toArrayLike(Uint8Array, \"be\", 32), 0), e.signature.set(x.s.toArrayLike(Uint8Array, \"be\", 32), 32), e.recid = x.recoveryParam, 0;\n  },\n  ecdsaVerify(e, r, t) {\n    const i = { r: e.subarray(0, 32), s: e.subarray(32, 64) }, c = new rr(i.r), n = new rr(i.s);\n    if (c.cmp(Xe.n) >= 0 || n.cmp(Xe.n) >= 0)\n      return 1;\n    if (n.cmp(lt.nh) === 1 || c.isZero() || n.isZero())\n      return 3;\n    const x = Nt(t);\n    if (x === null)\n      return 2;\n    const m = x.getPublic();\n    return lt.verify(r, i, m) ? 0 : 3;\n  },\n  ecdsaRecover(e, r, t, i) {\n    const c = { r: r.slice(0, 32), s: r.slice(32, 64) }, n = new rr(c.r), x = new rr(c.s);\n    if (n.cmp(Xe.n) >= 0 || x.cmp(Xe.n) >= 0)\n      return 1;\n    if (n.isZero() || x.isZero())\n      return 2;\n    let m;\n    try {\n      m = lt.recoverPubKey(i, c, t);\n    } catch {\n      return 2;\n    }\n    return ra(e, m), 0;\n  },\n  ecdh(e, r, t, i, c, n, x) {\n    const m = Nt(r);\n    if (m === null)\n      return 1;\n    const k = new rr(t);\n    if (k.cmp(Xe.n) >= 0 || k.isZero())\n      return 2;\n    const B = m.getPublic().mul(k);\n    if (c === void 0) {\n      const z = B.encode(null, !0), C = lt.hash().update(z).digest();\n      for (let F = 0; F < 32; ++F)\n        e[F] = C[F];\n    } else {\n      n || (n = new Uint8Array(32));\n      const z = B.getX().toArray(\"be\", 32);\n      for (let L = 0; L < 32; ++L)\n        n[L] = z[L];\n      x || (x = new Uint8Array(32));\n      const C = B.getY().toArray(\"be\", 32);\n      for (let L = 0; L < 32; ++L)\n        x[L] = C[L];\n      const F = c(n, x, i);\n      if (!(F instanceof Uint8Array && F.length === e.length))\n        return 2;\n      e.set(F);\n    }\n    return 0;\n  }\n}, c0 = v2(N6), _n = {};\nObject.defineProperty(_n, \"__esModule\", { value: !0 });\nvar Fs = ln;\nfunction F6(e) {\n  return new Promise(function(r, t) {\n    Fs(e, function(i, c) {\n      if (i) {\n        t(i);\n        return;\n      }\n      r(c);\n    });\n  });\n}\n_n.getRandomBytes = F6;\nfunction C6(e) {\n  return Fs(e);\n}\n_n.getRandomBytesSync = C6;\n(function(e) {\n  var r = be && be.__awaiter || function(B, z, C, F) {\n    function T(L) {\n      return L instanceof C ? L : new C(function(O) {\n        O(L);\n      });\n    }\n    return new (C || (C = Promise))(function(L, O) {\n      function q(H) {\n        try {\n          U(F.next(H));\n        } catch (Z) {\n          O(Z);\n        }\n      }\n      function R(H) {\n        try {\n          U(F.throw(H));\n        } catch (Z) {\n          O(Z);\n        }\n      }\n      function U(H) {\n        H.done ? L(H.value) : T(H.value).then(q, R);\n      }\n      U((F = F.apply(B, z || [])).next());\n    });\n  }, t = be && be.__generator || function(B, z) {\n    var C = { label: 0, sent: function() {\n      if (L[0] & 1)\n        throw L[1];\n      return L[1];\n    }, trys: [], ops: [] }, F, T, L, O;\n    return O = { next: q(0), throw: q(1), return: q(2) }, typeof Symbol == \"function\" && (O[Symbol.iterator] = function() {\n      return this;\n    }), O;\n    function q(U) {\n      return function(H) {\n        return R([U, H]);\n      };\n    }\n    function R(U) {\n      if (F)\n        throw new TypeError(\"Generator is already executing.\");\n      for (; C; )\n        try {\n          if (F = 1, T && (L = U[0] & 2 ? T.return : U[0] ? T.throw || ((L = T.return) && L.call(T), 0) : T.next) && !(L = L.call(T, U[1])).done)\n            return L;\n          switch (T = 0, L && (U = [U[0] & 2, L.value]), U[0]) {\n            case 0:\n            case 1:\n              L = U;\n              break;\n            case 4:\n              return C.label++, { value: U[1], done: !1 };\n            case 5:\n              C.label++, T = U[1], U = [0];\n              continue;\n            case 7:\n              U = C.ops.pop(), C.trys.pop();\n              continue;\n            default:\n              if (L = C.trys, !(L = L.length > 0 && L[L.length - 1]) && (U[0] === 6 || U[0] === 2)) {\n                C = 0;\n                continue;\n              }\n              if (U[0] === 3 && (!L || U[1] > L[0] && U[1] < L[3])) {\n                C.label = U[1];\n                break;\n              }\n              if (U[0] === 6 && C.label < L[1]) {\n                C.label = L[1], L = U;\n                break;\n              }\n              if (L && C.label < L[2]) {\n                C.label = L[2], C.ops.push(U);\n                break;\n              }\n              L[2] && C.ops.pop(), C.trys.pop();\n              continue;\n          }\n          U = z.call(B, C);\n        } catch (H) {\n          U = [6, H], T = 0;\n        } finally {\n          F = L = 0;\n        }\n      if (U[0] & 5)\n        throw U[1];\n      return { value: U[0] ? U[1] : void 0, done: !0 };\n    }\n  };\n  function i(B) {\n    for (var z in B)\n      e.hasOwnProperty(z) || (e[z] = B[z]);\n  }\n  Object.defineProperty(e, \"__esModule\", { value: !0 });\n  var c = c0, n = _n, x = 32;\n  function m() {\n    return r(this, void 0, void 0, function() {\n      var B;\n      return t(this, function(z) {\n        switch (z.label) {\n          case 0:\n            return [4, n.getRandomBytes(x)];\n          case 1:\n            return B = z.sent(), c.privateKeyVerify(B) ? [2, B] : [3, 0];\n          case 2:\n            return [\n              2\n              /*return*/\n            ];\n        }\n      });\n    });\n  }\n  e.createPrivateKey = m;\n  function k() {\n    for (; ; ) {\n      var B = n.getRandomBytesSync(x);\n      if (c.privateKeyVerify(B))\n        return B;\n    }\n  }\n  e.createPrivateKeySync = k, i(c0);\n})(H0);\nvar tr = {};\nObject.defineProperty(tr, \"__esModule\", { value: !0 });\ntr.isHexString = tr.getKeys = tr.fromAscii = tr.fromUtf8 = tr.toAscii = tr.arrayContainsArray = tr.getBinarySize = tr.padToEven = tr.stripHexPrefix = tr.isHexPrefixed = void 0;\nfunction Cs(e) {\n  if (typeof e != \"string\")\n    throw new Error(\"[isHexPrefixed] input must be type 'string', received type \".concat(typeof e));\n  return e[0] === \"0\" && e[1] === \"x\";\n}\ntr.isHexPrefixed = Cs;\nvar L6 = function(e) {\n  if (typeof e != \"string\")\n    throw new Error(\"[stripHexPrefix] input must be type 'string', received \".concat(typeof e));\n  return Cs(e) ? e.slice(2) : e;\n};\ntr.stripHexPrefix = L6;\nfunction Ls(e) {\n  var r = e;\n  if (typeof r != \"string\")\n    throw new Error(\"[padToEven] value must be type 'string', received \".concat(typeof r));\n  return r.length % 2 && (r = \"0\".concat(r)), r;\n}\ntr.padToEven = Ls;\nfunction U6(e) {\n  if (typeof e != \"string\")\n    throw new Error(\"[getBinarySize] method requires input type 'string', recieved \".concat(typeof e));\n  return Buffer.byteLength(e, \"utf8\");\n}\ntr.getBinarySize = U6;\nfunction $6(e, r, t) {\n  if (Array.isArray(e) !== !0)\n    throw new Error(\"[arrayContainsArray] method requires input 'superset' to be an array, got type '\".concat(typeof e, \"'\"));\n  if (Array.isArray(r) !== !0)\n    throw new Error(\"[arrayContainsArray] method requires input 'subset' to be an array, got type '\".concat(typeof r, \"'\"));\n  return r[t ? \"some\" : \"every\"](function(i) {\n    return e.indexOf(i) >= 0;\n  });\n}\ntr.arrayContainsArray = $6;\nfunction D6(e) {\n  var r = \"\", t = 0, i = e.length;\n  for (e.substring(0, 2) === \"0x\" && (t = 2); t < i; t += 2) {\n    var c = parseInt(e.substr(t, 2), 16);\n    r += String.fromCharCode(c);\n  }\n  return r;\n}\ntr.toAscii = D6;\nfunction K6(e) {\n  var r = Buffer.from(e, \"utf8\");\n  return \"0x\".concat(Ls(r.toString(\"hex\")).replace(/^0+|0+$/g, \"\"));\n}\ntr.fromUtf8 = K6;\nfunction H6(e) {\n  for (var r = \"\", t = 0; t < e.length; t++) {\n    var i = e.charCodeAt(t), c = i.toString(16);\n    r += c.length < 2 ? \"0\".concat(c) : c;\n  }\n  return \"0x\".concat(r);\n}\ntr.fromAscii = H6;\nfunction V6(e, r, t) {\n  if (!Array.isArray(e))\n    throw new Error(\"[getKeys] method expects input 'params' to be an array, got \".concat(typeof e));\n  if (typeof r != \"string\")\n    throw new Error(\"[getKeys] method expects input 'key' to be type 'string', got \".concat(typeof e));\n  for (var i = [], c = 0; c < e.length; c++) {\n    var n = e[c][r];\n    if (t && !n)\n      n = \"\";\n    else if (typeof n != \"string\")\n      throw new Error(\"invalid abi - expected type 'string', received \".concat(typeof n));\n    i.push(n);\n  }\n  return i;\n}\ntr.getKeys = V6;\nfunction W6(e, r) {\n  return !(typeof e != \"string\" || !e.match(/^0x[0-9A-Fa-f]*$/) || r && e.length !== 2 + 2 * r);\n}\ntr.isHexString = W6;\nvar Gt = {}, Hr = {};\nObject.defineProperty(Hr, \"__esModule\", { value: !0 });\nHr.assertIsString = Hr.assertIsArray = Hr.assertIsBuffer = Hr.assertIsHexString = void 0;\nvar G6 = tr, Z6 = function(e) {\n  if (!(0, G6.isHexString)(e)) {\n    var r = \"This method only supports 0x-prefixed hex strings but input was: \".concat(e);\n    throw new Error(r);\n  }\n};\nHr.assertIsHexString = Z6;\nvar J6 = function(e) {\n  if (!Buffer.isBuffer(e)) {\n    var r = \"This method only supports Buffer but input was: \".concat(e);\n    throw new Error(r);\n  }\n};\nHr.assertIsBuffer = J6;\nvar Y6 = function(e) {\n  if (!Array.isArray(e)) {\n    var r = \"This method only supports number arrays but input was: \".concat(e);\n    throw new Error(r);\n  }\n};\nHr.assertIsArray = Y6;\nvar X6 = function(e) {\n  if (typeof e != \"string\") {\n    var r = \"This method only supports strings but input was: \".concat(e);\n    throw new Error(r);\n  }\n};\nHr.assertIsString = X6;\n(function(e) {\n  var r = be && be.__values || function(M) {\n    var p = typeof Symbol == \"function\" && Symbol.iterator, s = p && M[p], a = 0;\n    if (s)\n      return s.call(M);\n    if (M && typeof M.length == \"number\")\n      return {\n        next: function() {\n          return M && a >= M.length && (M = void 0), { value: M && M[a++], done: !M };\n        }\n      };\n    throw new TypeError(p ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  }, t = be && be.__read || function(M, p) {\n    var s = typeof Symbol == \"function\" && M[Symbol.iterator];\n    if (!s)\n      return M;\n    var a = s.call(M), o, u = [], h;\n    try {\n      for (; (p === void 0 || p-- > 0) && !(o = a.next()).done; )\n        u.push(o.value);\n    } catch (v) {\n      h = { error: v };\n    } finally {\n      try {\n        o && !o.done && (s = a.return) && s.call(a);\n      } finally {\n        if (h)\n          throw h.error;\n      }\n    }\n    return u;\n  };\n  Object.defineProperty(e, \"__esModule\", { value: !0 }), e.bufArrToArr = e.arrToBufArr = e.validateNoLeadingZeroes = e.baToJSON = e.toUtf8 = e.addHexPrefix = e.toUnsigned = e.fromSigned = e.bufferToHex = e.bufferToInt = e.toBuffer = e.unpadHexString = e.unpadArray = e.unpadBuffer = e.setLengthRight = e.setLengthLeft = e.zeros = e.intToBuffer = e.intToHex = void 0;\n  var i = $r, c = tr, n = Hr, x = function(M) {\n    if (!Number.isSafeInteger(M) || M < 0)\n      throw new Error(\"Received an invalid integer type: \".concat(M));\n    return \"0x\".concat(M.toString(16));\n  };\n  e.intToHex = x;\n  var m = function(M) {\n    var p = (0, e.intToHex)(M);\n    return Buffer.from((0, c.padToEven)(p.slice(2)), \"hex\");\n  };\n  e.intToBuffer = m;\n  var k = function(M) {\n    return Buffer.allocUnsafe(M).fill(0);\n  };\n  e.zeros = k;\n  var B = function(M, p, s) {\n    var a = (0, e.zeros)(p);\n    return s ? M.length < p ? (M.copy(a), a) : M.slice(0, p) : M.length < p ? (M.copy(a, p - M.length), a) : M.slice(-p);\n  }, z = function(M, p) {\n    return (0, n.assertIsBuffer)(M), B(M, p, !1);\n  };\n  e.setLengthLeft = z;\n  var C = function(M, p) {\n    return (0, n.assertIsBuffer)(M), B(M, p, !0);\n  };\n  e.setLengthRight = C;\n  var F = function(M) {\n    for (var p = M[0]; M.length > 0 && p.toString() === \"0\"; )\n      M = M.slice(1), p = M[0];\n    return M;\n  }, T = function(M) {\n    return (0, n.assertIsBuffer)(M), F(M);\n  };\n  e.unpadBuffer = T;\n  var L = function(M) {\n    return (0, n.assertIsArray)(M), F(M);\n  };\n  e.unpadArray = L;\n  var O = function(M) {\n    return (0, n.assertIsHexString)(M), M = (0, c.stripHexPrefix)(M), F(M);\n  };\n  e.unpadHexString = O;\n  var q = function(M) {\n    if (M == null)\n      return Buffer.allocUnsafe(0);\n    if (Buffer.isBuffer(M) || Array.isArray(M) || M instanceof Uint8Array)\n      return Buffer.from(M);\n    if (typeof M == \"string\") {\n      if (!(0, c.isHexString)(M))\n        throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \".concat(M));\n      return Buffer.from((0, c.padToEven)((0, c.stripHexPrefix)(M)), \"hex\");\n    }\n    if (typeof M == \"number\")\n      return (0, e.intToBuffer)(M);\n    if (i.BN.isBN(M)) {\n      if (M.isNeg())\n        throw new Error(\"Cannot convert negative BN to buffer. Given: \".concat(M));\n      return M.toArrayLike(Buffer);\n    }\n    if (M.toArray)\n      return Buffer.from(M.toArray());\n    if (M.toBuffer)\n      return Buffer.from(M.toBuffer());\n    throw new Error(\"invalid type\");\n  };\n  e.toBuffer = q;\n  var R = function(M) {\n    return new i.BN((0, e.toBuffer)(M)).toNumber();\n  };\n  e.bufferToInt = R;\n  var U = function(M) {\n    return M = (0, e.toBuffer)(M), \"0x\" + M.toString(\"hex\");\n  };\n  e.bufferToHex = U;\n  var H = function(M) {\n    return new i.BN(M).fromTwos(256);\n  };\n  e.fromSigned = H;\n  var Z = function(M) {\n    return Buffer.from(M.toTwos(256).toArray());\n  };\n  e.toUnsigned = Z;\n  var W = function(M) {\n    return typeof M != \"string\" || (0, c.isHexPrefixed)(M) ? M : \"0x\" + M;\n  };\n  e.addHexPrefix = W;\n  var Y = function(M) {\n    var p = /^(00)+|(00)+$/g;\n    if (M = (0, c.stripHexPrefix)(M), M.length % 2 !== 0)\n      throw new Error(\"Invalid non-even hex string input for toUtf8() provided\");\n    var s = Buffer.from(M.replace(p, \"\"), \"hex\");\n    return s.toString(\"utf8\");\n  };\n  e.toUtf8 = Y;\n  var ne = function(M) {\n    if (Buffer.isBuffer(M))\n      return \"0x\".concat(M.toString(\"hex\"));\n    if (M instanceof Array) {\n      for (var p = [], s = 0; s < M.length; s++)\n        p.push((0, e.baToJSON)(M[s]));\n      return p;\n    }\n  };\n  e.baToJSON = ne;\n  var D = function(M) {\n    var p, s;\n    try {\n      for (var a = r(Object.entries(M)), o = a.next(); !o.done; o = a.next()) {\n        var u = t(o.value, 2), h = u[0], v = u[1];\n        if (v !== void 0 && v.length > 0 && v[0] === 0)\n          throw new Error(\"\".concat(h, \" cannot have leading zeroes, received: \").concat(v.toString(\"hex\")));\n      }\n    } catch (g) {\n      p = { error: g };\n    } finally {\n      try {\n        o && !o.done && (s = a.return) && s.call(a);\n      } finally {\n        if (p)\n          throw p.error;\n      }\n    }\n  };\n  e.validateNoLeadingZeroes = D;\n  function V(M) {\n    return Array.isArray(M) ? M.map(function(p) {\n      return V(p);\n    }) : Buffer.from(M);\n  }\n  e.arrToBufArr = V;\n  function G(M) {\n    return Array.isArray(M) ? M.map(function(p) {\n      return G(p);\n    }) : Uint8Array.from(M ?? []);\n  }\n  e.bufArrToArr = G;\n})(Gt);\nvar Mn = {}, Na = {}, hi = {};\nObject.defineProperty(hi, \"__esModule\", { value: !0 });\nfunction Q6(e) {\n  return function(r) {\n    var t = e();\n    return t.update(r), Buffer.from(t.digest());\n  };\n}\nhi.createHashFunction = Q6;\nconst { Transform: e4 } = T0;\nvar r4 = (e) => class Us extends e4 {\n  constructor(t, i, c, n, x) {\n    super(x), this._rate = t, this._capacity = i, this._delimitedSuffix = c, this._hashBitLength = n, this._options = x, this._state = new e(), this._state.initialize(t, i), this._finalized = !1;\n  }\n  _transform(t, i, c) {\n    let n = null;\n    try {\n      this.update(t, i);\n    } catch (x) {\n      n = x;\n    }\n    c(n);\n  }\n  _flush(t) {\n    let i = null;\n    try {\n      this.push(this.digest());\n    } catch (c) {\n      i = c;\n    }\n    t(i);\n  }\n  update(t, i) {\n    if (!Buffer.isBuffer(t) && typeof t != \"string\")\n      throw new TypeError(\"Data must be a string or a buffer\");\n    if (this._finalized)\n      throw new Error(\"Digest already called\");\n    return Buffer.isBuffer(t) || (t = Buffer.from(t, i)), this._state.absorb(t), this;\n  }\n  digest(t) {\n    if (this._finalized)\n      throw new Error(\"Digest already called\");\n    this._finalized = !0, this._delimitedSuffix && this._state.absorbLastFewBits(this._delimitedSuffix);\n    let i = this._state.squeeze(this._hashBitLength / 8);\n    return t !== void 0 && (i = i.toString(t)), this._resetState(), i;\n  }\n  // remove result from memory\n  _resetState() {\n    return this._state.initialize(this._rate, this._capacity), this;\n  }\n  // because sometimes we need hash right now and little later\n  _clone() {\n    const t = new Us(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);\n    return this._state.copy(t._state), t._finalized = this._finalized, t;\n  }\n};\nconst { Transform: t4 } = T0;\nvar a4 = (e) => class $s extends t4 {\n  constructor(t, i, c, n) {\n    super(n), this._rate = t, this._capacity = i, this._delimitedSuffix = c, this._options = n, this._state = new e(), this._state.initialize(t, i), this._finalized = !1;\n  }\n  _transform(t, i, c) {\n    let n = null;\n    try {\n      this.update(t, i);\n    } catch (x) {\n      n = x;\n    }\n    c(n);\n  }\n  _flush() {\n  }\n  _read(t) {\n    this.push(this.squeeze(t));\n  }\n  update(t, i) {\n    if (!Buffer.isBuffer(t) && typeof t != \"string\")\n      throw new TypeError(\"Data must be a string or a buffer\");\n    if (this._finalized)\n      throw new Error(\"Squeeze already called\");\n    return Buffer.isBuffer(t) || (t = Buffer.from(t, i)), this._state.absorb(t), this;\n  }\n  squeeze(t, i) {\n    this._finalized || (this._finalized = !0, this._state.absorbLastFewBits(this._delimitedSuffix));\n    let c = this._state.squeeze(t);\n    return i !== void 0 && (c = c.toString(i)), c;\n  }\n  _resetState() {\n    return this._state.initialize(this._rate, this._capacity), this;\n  }\n  _clone() {\n    const t = new $s(this._rate, this._capacity, this._delimitedSuffix, this._options);\n    return this._state.copy(t._state), t._finalized = this._finalized, t;\n  }\n};\nconst i4 = r4, n4 = a4;\nvar f4 = function(e) {\n  const r = i4(e), t = n4(e);\n  return function(i, c) {\n    switch (typeof i == \"string\" ? i.toLowerCase() : i) {\n      case \"keccak224\":\n        return new r(1152, 448, null, 224, c);\n      case \"keccak256\":\n        return new r(1088, 512, null, 256, c);\n      case \"keccak384\":\n        return new r(832, 768, null, 384, c);\n      case \"keccak512\":\n        return new r(576, 1024, null, 512, c);\n      case \"sha3-224\":\n        return new r(1152, 448, 6, 224, c);\n      case \"sha3-256\":\n        return new r(1088, 512, 6, 256, c);\n      case \"sha3-384\":\n        return new r(832, 768, 6, 384, c);\n      case \"sha3-512\":\n        return new r(576, 1024, 6, 512, c);\n      case \"shake128\":\n        return new t(1344, 256, 31, c);\n      case \"shake256\":\n        return new t(1088, 512, 31, c);\n      default:\n        throw new Error(\"Invald algorithm: \" + i);\n    }\n  };\n}, Ds = {};\nconst Mc = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\nDs.p1600 = function(e) {\n  for (let r = 0; r < 24; ++r) {\n    const t = e[0] ^ e[10] ^ e[20] ^ e[30] ^ e[40], i = e[1] ^ e[11] ^ e[21] ^ e[31] ^ e[41], c = e[2] ^ e[12] ^ e[22] ^ e[32] ^ e[42], n = e[3] ^ e[13] ^ e[23] ^ e[33] ^ e[43], x = e[4] ^ e[14] ^ e[24] ^ e[34] ^ e[44], m = e[5] ^ e[15] ^ e[25] ^ e[35] ^ e[45], k = e[6] ^ e[16] ^ e[26] ^ e[36] ^ e[46], B = e[7] ^ e[17] ^ e[27] ^ e[37] ^ e[47], z = e[8] ^ e[18] ^ e[28] ^ e[38] ^ e[48], C = e[9] ^ e[19] ^ e[29] ^ e[39] ^ e[49];\n    let F = z ^ (c << 1 | n >>> 31), T = C ^ (n << 1 | c >>> 31);\n    const L = e[0] ^ F, O = e[1] ^ T, q = e[10] ^ F, R = e[11] ^ T, U = e[20] ^ F, H = e[21] ^ T, Z = e[30] ^ F, W = e[31] ^ T, Y = e[40] ^ F, ne = e[41] ^ T;\n    F = t ^ (x << 1 | m >>> 31), T = i ^ (m << 1 | x >>> 31);\n    const D = e[2] ^ F, V = e[3] ^ T, G = e[12] ^ F, M = e[13] ^ T, p = e[22] ^ F, s = e[23] ^ T, a = e[32] ^ F, o = e[33] ^ T, u = e[42] ^ F, h = e[43] ^ T;\n    F = c ^ (k << 1 | B >>> 31), T = n ^ (B << 1 | k >>> 31);\n    const v = e[4] ^ F, g = e[5] ^ T, l = e[14] ^ F, d = e[15] ^ T, f = e[24] ^ F, b = e[25] ^ T, E = e[34] ^ F, y = e[35] ^ T, S = e[44] ^ F, I = e[45] ^ T;\n    F = x ^ (z << 1 | C >>> 31), T = m ^ (C << 1 | z >>> 31);\n    const $ = e[6] ^ F, K = e[7] ^ T, ae = e[16] ^ F, j = e[17] ^ T, P = e[26] ^ F, ie = e[27] ^ T, te = e[36] ^ F, ce = e[37] ^ T, ve = e[46] ^ F, le = e[47] ^ T;\n    F = k ^ (t << 1 | i >>> 31), T = B ^ (i << 1 | t >>> 31);\n    const he = e[8] ^ F, fe = e[9] ^ T, ze = e[18] ^ F, ge = e[19] ^ T, Q = e[28] ^ F, re = e[29] ^ T, oe = e[38] ^ F, se = e[39] ^ T, de = e[48] ^ F, A = e[49] ^ T, w = L, _ = O, N = R << 4 | q >>> 28, J = q << 4 | R >>> 28, X = U << 3 | H >>> 29, ee = H << 3 | U >>> 29, xe = W << 9 | Z >>> 23, pe = Z << 9 | W >>> 23, ue = Y << 18 | ne >>> 14, Ie = ne << 18 | Y >>> 14, me = D << 1 | V >>> 31, we = V << 1 | D >>> 31, Ke = M << 12 | G >>> 20, je = G << 12 | M >>> 20, _e = p << 10 | s >>> 22, He = s << 10 | p >>> 22, Pe = o << 13 | a >>> 19, Me = a << 13 | o >>> 19, Ve = u << 2 | h >>> 30, Oe = h << 2 | u >>> 30, Se = g << 30 | v >>> 2, We = v << 30 | g >>> 2, qe = l << 6 | d >>> 26, ke = d << 6 | l >>> 26, Ge = b << 11 | f >>> 21, Ne = f << 11 | b >>> 21, Ee = E << 15 | y >>> 17, Ze = y << 15 | E >>> 17, Fe = I << 29 | S >>> 3, Ae = S << 29 | I >>> 3, Je = $ << 28 | K >>> 4, Ce = K << 28 | $ >>> 4, Be = j << 23 | ae >>> 9, Ye = ae << 23 | j >>> 9, Re = P << 25 | ie >>> 7, Te = ie << 25 | P >>> 7, cr = te << 21 | ce >>> 11, dr = ce << 21 | te >>> 11, sr = le << 24 | ve >>> 8, ur = ve << 24 | le >>> 8, lr = he << 27 | fe >>> 5, Rr = fe << 27 | he >>> 5, Tr = ze << 20 | ge >>> 12, jr = ge << 20 | ze >>> 12, Pr = re << 7 | Q >>> 25, Or = Q << 7 | re >>> 25, qr = oe << 8 | se >>> 24, Nr = se << 8 | oe >>> 24, Fr = de << 14 | A >>> 18, Cr = A << 14 | de >>> 18;\n    e[0] = w ^ ~Ke & Ge, e[1] = _ ^ ~je & Ne, e[10] = Je ^ ~Tr & X, e[11] = Ce ^ ~jr & ee, e[20] = me ^ ~qe & Re, e[21] = we ^ ~ke & Te, e[30] = lr ^ ~N & _e, e[31] = Rr ^ ~J & He, e[40] = Se ^ ~Be & Pr, e[41] = We ^ ~Ye & Or, e[2] = Ke ^ ~Ge & cr, e[3] = je ^ ~Ne & dr, e[12] = Tr ^ ~X & Pe, e[13] = jr ^ ~ee & Me, e[22] = qe ^ ~Re & qr, e[23] = ke ^ ~Te & Nr, e[32] = N ^ ~_e & Ee, e[33] = J ^ ~He & Ze, e[42] = Be ^ ~Pr & xe, e[43] = Ye ^ ~Or & pe, e[4] = Ge ^ ~cr & Fr, e[5] = Ne ^ ~dr & Cr, e[14] = X ^ ~Pe & Fe, e[15] = ee ^ ~Me & Ae, e[24] = Re ^ ~qr & ue, e[25] = Te ^ ~Nr & Ie, e[34] = _e ^ ~Ee & sr, e[35] = He ^ ~Ze & ur, e[44] = Pr ^ ~xe & Ve, e[45] = Or ^ ~pe & Oe, e[6] = cr ^ ~Fr & w, e[7] = dr ^ ~Cr & _, e[16] = Pe ^ ~Fe & Je, e[17] = Me ^ ~Ae & Ce, e[26] = qr ^ ~ue & me, e[27] = Nr ^ ~Ie & we, e[36] = Ee ^ ~sr & lr, e[37] = Ze ^ ~ur & Rr, e[46] = xe ^ ~Ve & Se, e[47] = pe ^ ~Oe & We, e[8] = Fr ^ ~w & Ke, e[9] = Cr ^ ~_ & je, e[18] = Fe ^ ~Je & Tr, e[19] = Ae ^ ~Ce & jr, e[28] = ue ^ ~me & qe, e[29] = Ie ^ ~we & ke, e[38] = sr ^ ~lr & N, e[39] = ur ^ ~Rr & J, e[48] = Ve ^ ~Se & Be, e[49] = Oe ^ ~We & Ye, e[0] ^= Mc[r * 2], e[1] ^= Mc[r * 2 + 1];\n  }\n};\nconst $i = Ds;\nfunction Fa() {\n  this.state = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  ], this.blockSize = null, this.count = 0, this.squeezing = !1;\n}\nFa.prototype.initialize = function(e, r) {\n  for (let t = 0; t < 50; ++t)\n    this.state[t] = 0;\n  this.blockSize = e / 8, this.count = 0, this.squeezing = !1;\n};\nFa.prototype.absorb = function(e) {\n  for (let r = 0; r < e.length; ++r)\n    this.state[~~(this.count / 4)] ^= e[r] << 8 * (this.count % 4), this.count += 1, this.count === this.blockSize && ($i.p1600(this.state), this.count = 0);\n};\nFa.prototype.absorbLastFewBits = function(e) {\n  this.state[~~(this.count / 4)] ^= e << 8 * (this.count % 4), e & 128 && this.count === this.blockSize - 1 && $i.p1600(this.state), this.state[~~((this.blockSize - 1) / 4)] ^= 128 << 8 * ((this.blockSize - 1) % 4), $i.p1600(this.state), this.count = 0, this.squeezing = !0;\n};\nFa.prototype.squeeze = function(e) {\n  this.squeezing || this.absorbLastFewBits(1);\n  const r = Buffer.alloc(e);\n  for (let t = 0; t < e; ++t)\n    r[t] = this.state[~~(this.count / 4)] >>> 8 * (this.count % 4) & 255, this.count += 1, this.count === this.blockSize && ($i.p1600(this.state), this.count = 0);\n  return r;\n};\nFa.prototype.copy = function(e) {\n  for (let r = 0; r < 50; ++r)\n    e.state[r] = this.state[r];\n  e.blockSize = this.blockSize, e.count = this.count, e.squeezing = this.squeezing;\n};\nvar o4 = Fa, c4 = f4(o4);\nObject.defineProperty(Na, \"__esModule\", { value: !0 });\nvar Sn = hi, kn = c4;\nNa.keccak224 = Sn.createHashFunction(function() {\n  return kn(\"keccak224\");\n});\nNa.keccak256 = Sn.createHashFunction(function() {\n  return kn(\"keccak256\");\n});\nNa.keccak384 = Sn.createHashFunction(function() {\n  return kn(\"keccak384\");\n});\nNa.keccak512 = Sn.createHashFunction(function() {\n  return kn(\"keccak512\");\n});\n(function(e) {\n  Object.defineProperty(e, \"__esModule\", { value: !0 }), e.rlphash = e.ripemd160FromArray = e.ripemd160FromString = e.ripemd160 = e.sha256FromArray = e.sha256FromString = e.sha256 = e.keccakFromArray = e.keccakFromHexString = e.keccakFromString = e.keccak256 = e.keccak = void 0;\n  var r = Na, t = N0, i = $r, c = Gt, n = Hr, x = function(Z, W) {\n    switch (W === void 0 && (W = 256), (0, n.assertIsBuffer)(Z), W) {\n      case 224:\n        return (0, r.keccak224)(Z);\n      case 256:\n        return (0, r.keccak256)(Z);\n      case 384:\n        return (0, r.keccak384)(Z);\n      case 512:\n        return (0, r.keccak512)(Z);\n      default:\n        throw new Error(\"Invald algorithm: keccak\".concat(W));\n    }\n  };\n  e.keccak = x;\n  var m = function(Z) {\n    return (0, e.keccak)(Z);\n  };\n  e.keccak256 = m;\n  var k = function(Z, W) {\n    W === void 0 && (W = 256), (0, n.assertIsString)(Z);\n    var Y = Buffer.from(Z, \"utf8\");\n    return (0, e.keccak)(Y, W);\n  };\n  e.keccakFromString = k;\n  var B = function(Z, W) {\n    return W === void 0 && (W = 256), (0, n.assertIsHexString)(Z), (0, e.keccak)((0, c.toBuffer)(Z), W);\n  };\n  e.keccakFromHexString = B;\n  var z = function(Z, W) {\n    return W === void 0 && (W = 256), (0, n.assertIsArray)(Z), (0, e.keccak)((0, c.toBuffer)(Z), W);\n  };\n  e.keccakFromArray = z;\n  var C = function(Z) {\n    return Z = (0, c.toBuffer)(Z), t(\"sha256\").update(Z).digest();\n  }, F = function(Z) {\n    return (0, n.assertIsBuffer)(Z), C(Z);\n  };\n  e.sha256 = F;\n  var T = function(Z) {\n    return (0, n.assertIsString)(Z), C(Z);\n  };\n  e.sha256FromString = T;\n  var L = function(Z) {\n    return (0, n.assertIsArray)(Z), C(Z);\n  };\n  e.sha256FromArray = L;\n  var O = function(Z, W) {\n    Z = (0, c.toBuffer)(Z);\n    var Y = t(\"rmd160\").update(Z).digest();\n    return W === !0 ? (0, c.setLengthLeft)(Y, 32) : Y;\n  }, q = function(Z, W) {\n    return (0, n.assertIsBuffer)(Z), O(Z, W);\n  };\n  e.ripemd160 = q;\n  var R = function(Z, W) {\n    return (0, n.assertIsString)(Z), O(Z, W);\n  };\n  e.ripemd160FromString = R;\n  var U = function(Z, W) {\n    return (0, n.assertIsArray)(Z), O(Z, W);\n  };\n  e.ripemd160FromArray = U;\n  var H = function(Z) {\n    return (0, e.keccak)(i.rlp.encode(Z));\n  };\n  e.rlphash = H;\n})(Mn);\nvar En = {};\n(function(e) {\n  Object.defineProperty(e, \"__esModule\", { value: !0 }), e.toType = e.TypeOutput = e.bnToRlp = e.bnToUnpaddedBuffer = e.bnToHex = void 0;\n  var r = $r, t = tr, i = Gt;\n  function c(B) {\n    return \"0x\".concat(B.toString(16));\n  }\n  e.bnToHex = c;\n  function n(B) {\n    return (0, i.unpadBuffer)(B.toArrayLike(Buffer));\n  }\n  e.bnToUnpaddedBuffer = n;\n  function x(B) {\n    return n(B);\n  }\n  e.bnToRlp = x;\n  var m;\n  (function(B) {\n    B[B.Number = 0] = \"Number\", B[B.BN = 1] = \"BN\", B[B.Buffer = 2] = \"Buffer\", B[B.PrefixedHexString = 3] = \"PrefixedHexString\";\n  })(m = e.TypeOutput || (e.TypeOutput = {}));\n  function k(B, z) {\n    if (B === null)\n      return null;\n    if (B !== void 0) {\n      if (typeof B == \"string\" && !(0, t.isHexString)(B))\n        throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(B));\n      if (typeof B == \"number\" && !Number.isSafeInteger(B))\n        throw new Error(\"The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)\");\n      var C = (0, i.toBuffer)(B);\n      if (z === m.Buffer)\n        return C;\n      if (z === m.BN)\n        return new r.BN(C);\n      if (z === m.Number) {\n        var F = new r.BN(C), T = new r.BN(Number.MAX_SAFE_INTEGER.toString());\n        if (F.gt(T))\n          throw new Error(\"The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)\");\n        return F.toNumber();\n      } else\n        return \"0x\".concat(C.toString(\"hex\"));\n    }\n  }\n  e.toType = k;\n})(En);\n(function(e) {\n  var r = be && be.__read || function(G, M) {\n    var p = typeof Symbol == \"function\" && G[Symbol.iterator];\n    if (!p)\n      return G;\n    var s = p.call(G), a, o = [], u;\n    try {\n      for (; (M === void 0 || M-- > 0) && !(a = s.next()).done; )\n        o.push(a.value);\n    } catch (h) {\n      u = { error: h };\n    } finally {\n      try {\n        a && !a.done && (p = s.return) && p.call(s);\n      } finally {\n        if (u)\n          throw u.error;\n      }\n    }\n    return o;\n  }, t = be && be.__importDefault || function(G) {\n    return G && G.__esModule ? G : { default: G };\n  };\n  Object.defineProperty(e, \"__esModule\", { value: !0 }), e.isZeroAddress = e.zeroAddress = e.importPublic = e.privateToAddress = e.privateToPublic = e.publicToAddress = e.pubToAddress = e.isValidPublic = e.isValidPrivate = e.generateAddress2 = e.generateAddress = e.isValidChecksumAddress = e.toChecksumAddress = e.isValidAddress = e.Account = void 0;\n  var i = t(da()), c = $r, n = H0, x = tr, m = L0, k = Gt, B = Mn, z = Hr, C = En, F = (\n    /** @class */\n    function() {\n      function G(M, p, s, a) {\n        M === void 0 && (M = new c.BN(0)), p === void 0 && (p = new c.BN(0)), s === void 0 && (s = m.KECCAK256_RLP), a === void 0 && (a = m.KECCAK256_NULL), this.nonce = M, this.balance = p, this.stateRoot = s, this.codeHash = a, this._validate();\n      }\n      return G.fromAccountData = function(M) {\n        var p = M.nonce, s = M.balance, a = M.stateRoot, o = M.codeHash;\n        return new G(p ? new c.BN((0, k.toBuffer)(p)) : void 0, s ? new c.BN((0, k.toBuffer)(s)) : void 0, a ? (0, k.toBuffer)(a) : void 0, o ? (0, k.toBuffer)(o) : void 0);\n      }, G.fromRlpSerializedAccount = function(M) {\n        var p = c.rlp.decode(M);\n        if (!Array.isArray(p))\n          throw new Error(\"Invalid serialized account input. Must be array\");\n        return this.fromValuesArray(p);\n      }, G.fromValuesArray = function(M) {\n        var p = r(M, 4), s = p[0], a = p[1], o = p[2], u = p[3];\n        return new G(new c.BN(s), new c.BN(a), o, u);\n      }, G.prototype._validate = function() {\n        if (this.nonce.lt(new c.BN(0)))\n          throw new Error(\"nonce must be greater than zero\");\n        if (this.balance.lt(new c.BN(0)))\n          throw new Error(\"balance must be greater than zero\");\n        if (this.stateRoot.length !== 32)\n          throw new Error(\"stateRoot must have a length of 32\");\n        if (this.codeHash.length !== 32)\n          throw new Error(\"codeHash must have a length of 32\");\n      }, G.prototype.raw = function() {\n        return [\n          (0, C.bnToUnpaddedBuffer)(this.nonce),\n          (0, C.bnToUnpaddedBuffer)(this.balance),\n          this.stateRoot,\n          this.codeHash\n        ];\n      }, G.prototype.serialize = function() {\n        return c.rlp.encode(this.raw());\n      }, G.prototype.isContract = function() {\n        return !this.codeHash.equals(m.KECCAK256_NULL);\n      }, G.prototype.isEmpty = function() {\n        return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(m.KECCAK256_NULL);\n      }, G;\n    }()\n  );\n  e.Account = F;\n  var T = function(G) {\n    try {\n      (0, z.assertIsString)(G);\n    } catch {\n      return !1;\n    }\n    return /^0x[0-9a-fA-F]{40}$/.test(G);\n  };\n  e.isValidAddress = T;\n  var L = function(G, M) {\n    (0, z.assertIsHexString)(G);\n    var p = (0, x.stripHexPrefix)(G).toLowerCase(), s = \"\";\n    if (M) {\n      var a = (0, C.toType)(M, C.TypeOutput.BN);\n      s = a.toString() + \"0x\";\n    }\n    for (var o = (0, B.keccakFromString)(s + p).toString(\"hex\"), u = \"0x\", h = 0; h < p.length; h++)\n      parseInt(o[h], 16) >= 8 ? u += p[h].toUpperCase() : u += p[h];\n    return u;\n  };\n  e.toChecksumAddress = L;\n  var O = function(G, M) {\n    return (0, e.isValidAddress)(G) && (0, e.toChecksumAddress)(G, M) === G;\n  };\n  e.isValidChecksumAddress = O;\n  var q = function(G, M) {\n    (0, z.assertIsBuffer)(G), (0, z.assertIsBuffer)(M);\n    var p = new c.BN(M);\n    return p.isZero() ? (0, B.rlphash)([G, null]).slice(-20) : (0, B.rlphash)([G, Buffer.from(p.toArray())]).slice(-20);\n  };\n  e.generateAddress = q;\n  var R = function(G, M, p) {\n    (0, z.assertIsBuffer)(G), (0, z.assertIsBuffer)(M), (0, z.assertIsBuffer)(p), (0, i.default)(G.length === 20), (0, i.default)(M.length === 32);\n    var s = (0, B.keccak256)(Buffer.concat([Buffer.from(\"ff\", \"hex\"), G, M, (0, B.keccak256)(p)]));\n    return s.slice(-20);\n  };\n  e.generateAddress2 = R;\n  var U = function(G) {\n    return (0, n.privateKeyVerify)(G);\n  };\n  e.isValidPrivate = U;\n  var H = function(G, M) {\n    return M === void 0 && (M = !1), (0, z.assertIsBuffer)(G), G.length === 64 ? (0, n.publicKeyVerify)(Buffer.concat([Buffer.from([4]), G])) : M ? (0, n.publicKeyVerify)(G) : !1;\n  };\n  e.isValidPublic = H;\n  var Z = function(G, M) {\n    return M === void 0 && (M = !1), (0, z.assertIsBuffer)(G), M && G.length !== 64 && (G = Buffer.from((0, n.publicKeyConvert)(G, !1).slice(1))), (0, i.default)(G.length === 64), (0, B.keccak)(G).slice(-20);\n  };\n  e.pubToAddress = Z, e.publicToAddress = e.pubToAddress;\n  var W = function(G) {\n    return (0, z.assertIsBuffer)(G), Buffer.from((0, n.publicKeyCreate)(G, !1)).slice(1);\n  };\n  e.privateToPublic = W;\n  var Y = function(G) {\n    return (0, e.publicToAddress)((0, e.privateToPublic)(G));\n  };\n  e.privateToAddress = Y;\n  var ne = function(G) {\n    return (0, z.assertIsBuffer)(G), G.length !== 64 && (G = Buffer.from((0, n.publicKeyConvert)(G, !1).slice(1))), G;\n  };\n  e.importPublic = ne;\n  var D = function() {\n    var G = 20, M = (0, k.zeros)(G);\n    return (0, k.bufferToHex)(M);\n  };\n  e.zeroAddress = D;\n  var V = function(G) {\n    try {\n      (0, z.assertIsString)(G);\n    } catch {\n      return !1;\n    }\n    var M = (0, e.zeroAddress)();\n    return M === G;\n  };\n  e.isZeroAddress = V;\n})(K0);\nvar An = {}, d4 = be && be.__importDefault || function(e) {\n  return e && e.__esModule ? e : { default: e };\n};\nObject.defineProperty(An, \"__esModule\", { value: !0 });\nAn.Address = void 0;\nvar ta = d4(da()), mi = $r, Sc = Gt, Wa = K0, s4 = (\n  /** @class */\n  function() {\n    function e(r) {\n      (0, ta.default)(r.length === 20, \"Invalid address length\"), this.buf = r;\n    }\n    return e.zero = function() {\n      return new e((0, Sc.zeros)(20));\n    }, e.fromString = function(r) {\n      return (0, ta.default)((0, Wa.isValidAddress)(r), \"Invalid address\"), new e((0, Sc.toBuffer)(r));\n    }, e.fromPublicKey = function(r) {\n      (0, ta.default)(Buffer.isBuffer(r), \"Public key should be Buffer\");\n      var t = (0, Wa.pubToAddress)(r);\n      return new e(t);\n    }, e.fromPrivateKey = function(r) {\n      (0, ta.default)(Buffer.isBuffer(r), \"Private key should be Buffer\");\n      var t = (0, Wa.privateToAddress)(r);\n      return new e(t);\n    }, e.generate = function(r, t) {\n      return (0, ta.default)(mi.BN.isBN(t)), new e((0, Wa.generateAddress)(r.buf, t.toArrayLike(Buffer)));\n    }, e.generate2 = function(r, t, i) {\n      return (0, ta.default)(Buffer.isBuffer(t)), (0, ta.default)(Buffer.isBuffer(i)), new e((0, Wa.generateAddress2)(r.buf, t, i));\n    }, e.prototype.equals = function(r) {\n      return this.buf.equals(r.buf);\n    }, e.prototype.isZero = function() {\n      return this.equals(e.zero());\n    }, e.prototype.isPrecompileOrSystemAddress = function() {\n      var r = new mi.BN(this.buf), t = new mi.BN(0), i = new mi.BN(\"ffff\", \"hex\");\n      return r.gte(t) && r.lte(i);\n    }, e.prototype.toString = function() {\n      return \"0x\" + this.buf.toString(\"hex\");\n    }, e.prototype.toBuffer = function() {\n      return Buffer.from(this.buf);\n    }, e;\n  }()\n);\nAn.Address = s4;\nvar Br = {};\nObject.defineProperty(Br, \"__esModule\", { value: !0 });\nBr.hashPersonalMessage = Br.isValidSignature = Br.fromRpcSig = Br.toCompactSig = Br.toRpcSig = Br.ecrecover = Br.ecsign = void 0;\nvar d0 = H0, Ga = $r, Xr = Gt, u4 = Mn, l4 = Hr, Ct = En;\nfunction b4(e, r, t) {\n  var i = (0, d0.ecdsaSign)(e, r), c = i.signature, n = i.recid, x = Buffer.from(c.slice(0, 32)), m = Buffer.from(c.slice(32, 64));\n  if (!t || typeof t == \"number\") {\n    if (t && !Number.isSafeInteger(t))\n      throw new Error(\"The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)\");\n    var k = t ? n + (t * 2 + 35) : n + 27;\n    return { r: x, s: m, v: k };\n  }\n  var B = (0, Ct.toType)(t, Ct.TypeOutput.BN), z = B.muln(2).addn(35).addn(n).toArrayLike(Buffer);\n  return { r: x, s: m, v: z };\n}\nBr.ecsign = b4;\nfunction Bn(e, r) {\n  var t = (0, Ct.toType)(e, Ct.TypeOutput.BN);\n  if (!r)\n    return t.subn(27);\n  var i = (0, Ct.toType)(r, Ct.TypeOutput.BN);\n  return t.sub(i.muln(2).addn(35));\n}\nfunction zn(e) {\n  var r = new Ga.BN(e);\n  return r.eqn(0) || r.eqn(1);\n}\nvar h4 = function(e, r, t, i, c) {\n  var n = Buffer.concat([(0, Xr.setLengthLeft)(t, 32), (0, Xr.setLengthLeft)(i, 32)], 64), x = Bn(r, c);\n  if (!zn(x))\n    throw new Error(\"Invalid signature v value\");\n  var m = (0, d0.ecdsaRecover)(n, x.toNumber(), e);\n  return Buffer.from((0, d0.publicKeyConvert)(m, !1).slice(1));\n};\nBr.ecrecover = h4;\nvar p4 = function(e, r, t, i) {\n  var c = Bn(e, i);\n  if (!zn(c))\n    throw new Error(\"Invalid signature v value\");\n  return (0, Xr.bufferToHex)(Buffer.concat([(0, Xr.setLengthLeft)(r, 32), (0, Xr.setLengthLeft)(t, 32), (0, Xr.toBuffer)(e)]));\n};\nBr.toRpcSig = p4;\nvar v4 = function(e, r, t, i) {\n  var c = Bn(e, i);\n  if (!zn(c))\n    throw new Error(\"Invalid signature v value\");\n  var n = (0, Ct.toType)(e, Ct.TypeOutput.Number), x = t;\n  return (n > 28 && n % 2 === 1 || n === 1 || n === 28) && (x = Buffer.from(t), x[0] |= 128), (0, Xr.bufferToHex)(Buffer.concat([(0, Xr.setLengthLeft)(r, 32), (0, Xr.setLengthLeft)(x, 32)]));\n};\nBr.toCompactSig = v4;\nvar x4 = function(e) {\n  var r = (0, Xr.toBuffer)(e), t, i, c;\n  if (r.length >= 65)\n    t = r.slice(0, 32), i = r.slice(32, 64), c = (0, Xr.bufferToInt)(r.slice(64));\n  else if (r.length === 64)\n    t = r.slice(0, 32), i = r.slice(32, 64), c = (0, Xr.bufferToInt)(r.slice(32, 33)) >> 7, i[0] &= 127;\n  else\n    throw new Error(\"Invalid signature length\");\n  return c < 27 && (c += 27), {\n    v: c,\n    r: t,\n    s: i\n  };\n};\nBr.fromRpcSig = x4;\nvar m4 = function(e, r, t, i, c) {\n  i === void 0 && (i = !0);\n  var n = new Ga.BN(\"7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\", 16), x = new Ga.BN(\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\", 16);\n  if (r.length !== 32 || t.length !== 32 || !zn(Bn(e, c)))\n    return !1;\n  var m = new Ga.BN(r), k = new Ga.BN(t);\n  return !(m.isZero() || m.gt(x) || k.isZero() || k.gt(x) || i && k.cmp(n) === 1);\n};\nBr.isValidSignature = m4;\nvar g4 = function(e) {\n  (0, l4.assertIsBuffer)(e);\n  var r = Buffer.from(`\u0019Ethereum Signed Message:\n`.concat(e.length), \"utf-8\");\n  return (0, u4.keccak)(Buffer.concat([r, e]));\n};\nBr.hashPersonalMessage = g4;\nvar In = {}, y4 = be && be.__importDefault || function(e) {\n  return e && e.__esModule ? e : { default: e };\n};\nObject.defineProperty(In, \"__esModule\", { value: !0 });\nIn.defineProperties = void 0;\nvar kc = y4(da()), w4 = tr, Ec = $r, gi = Gt, _4 = function(e, r, t) {\n  if (e.raw = [], e._fields = [], e.toJSON = function(c) {\n    if (c === void 0 && (c = !1), c) {\n      var n = {};\n      return e._fields.forEach(function(x) {\n        n[x] = \"0x\".concat(e[x].toString(\"hex\"));\n      }), n;\n    }\n    return (0, gi.baToJSON)(e.raw);\n  }, e.serialize = function() {\n    return Ec.rlp.encode(e.raw);\n  }, r.forEach(function(c, n) {\n    e._fields.push(c.name);\n    function x() {\n      return e.raw[n];\n    }\n    function m(k) {\n      k = (0, gi.toBuffer)(k), k.toString(\"hex\") === \"00\" && !c.allowZero && (k = Buffer.allocUnsafe(0)), c.allowLess && c.length ? (k = (0, gi.unpadBuffer)(k), (0, kc.default)(c.length >= k.length, \"The field \".concat(c.name, \" must not have more \").concat(c.length, \" bytes\"))) : !(c.allowZero && k.length === 0) && c.length && (0, kc.default)(c.length === k.length, \"The field \".concat(c.name, \" must have byte length of \").concat(c.length)), e.raw[n] = k;\n    }\n    Object.defineProperty(e, c.name, {\n      enumerable: !0,\n      configurable: !0,\n      get: x,\n      set: m\n    }), c.default && (e[c.name] = c.default), c.alias && Object.defineProperty(e, c.alias, {\n      enumerable: !1,\n      configurable: !0,\n      set: m,\n      get: x\n    });\n  }), t)\n    if (typeof t == \"string\" && (t = Buffer.from((0, w4.stripHexPrefix)(t), \"hex\")), Buffer.isBuffer(t) && (t = Ec.rlp.decode(t)), Array.isArray(t)) {\n      if (t.length > e._fields.length)\n        throw new Error(\"wrong number of fields in data\");\n      t.forEach(function(c, n) {\n        e[e._fields[n]] = (0, gi.toBuffer)(c);\n      });\n    } else if (typeof t == \"object\") {\n      var i = Object.keys(t);\n      r.forEach(function(c) {\n        i.indexOf(c.name) !== -1 && (e[c.name] = t[c.name]), i.indexOf(c.alias) !== -1 && (e[c.alias] = t[c.alias]);\n      });\n    } else\n      throw new Error(\"invalid data\");\n};\nIn.defineProperties = _4;\n(function(e) {\n  var r = be && be.__createBinding || (Object.create ? function(c, n, x, m) {\n    m === void 0 && (m = x), Object.defineProperty(c, m, { enumerable: !0, get: function() {\n      return n[x];\n    } });\n  } : function(c, n, x, m) {\n    m === void 0 && (m = x), c[m] = n[x];\n  }), t = be && be.__exportStar || function(c, n) {\n    for (var x in c)\n      x !== \"default\" && !Object.prototype.hasOwnProperty.call(n, x) && r(n, c, x);\n  };\n  Object.defineProperty(e, \"__esModule\", { value: !0 }), e.isHexString = e.getKeys = e.fromAscii = e.fromUtf8 = e.toAscii = e.arrayContainsArray = e.getBinarySize = e.padToEven = e.stripHexPrefix = e.isHexPrefixed = void 0, t(L0, e), t(K0, e), t(An, e), t(Mn, e), t(Br, e), t(Gt, e), t(In, e), t($r, e), t(En, e);\n  var i = tr;\n  Object.defineProperty(e, \"isHexPrefixed\", { enumerable: !0, get: function() {\n    return i.isHexPrefixed;\n  } }), Object.defineProperty(e, \"stripHexPrefix\", { enumerable: !0, get: function() {\n    return i.stripHexPrefix;\n  } }), Object.defineProperty(e, \"padToEven\", { enumerable: !0, get: function() {\n    return i.padToEven;\n  } }), Object.defineProperty(e, \"getBinarySize\", { enumerable: !0, get: function() {\n    return i.getBinarySize;\n  } }), Object.defineProperty(e, \"arrayContainsArray\", { enumerable: !0, get: function() {\n    return i.arrayContainsArray;\n  } }), Object.defineProperty(e, \"toAscii\", { enumerable: !0, get: function() {\n    return i.toAscii;\n  } }), Object.defineProperty(e, \"fromUtf8\", { enumerable: !0, get: function() {\n    return i.fromUtf8;\n  } }), Object.defineProperty(e, \"fromAscii\", { enumerable: !0, get: function() {\n    return i.fromAscii;\n  } }), Object.defineProperty(e, \"getKeys\", { enumerable: !0, get: function() {\n    return i.getKeys;\n  } }), Object.defineProperty(e, \"isHexString\", { enumerable: !0, get: function() {\n    return i.isHexString;\n  } });\n})(C0);\nvar Ks = { exports: {} };\n(function(e, r) {\n  (function(t) {\n    function c(O) {\n      const q = new Uint32Array([\n        1116352408,\n        1899447441,\n        3049323471,\n        3921009573,\n        961987163,\n        1508970993,\n        2453635748,\n        2870763221,\n        3624381080,\n        310598401,\n        607225278,\n        1426881987,\n        1925078388,\n        2162078206,\n        2614888103,\n        3248222580,\n        3835390401,\n        4022224774,\n        264347078,\n        604807628,\n        770255983,\n        1249150122,\n        1555081692,\n        1996064986,\n        2554220882,\n        2821834349,\n        2952996808,\n        3210313671,\n        3336571891,\n        3584528711,\n        113926993,\n        338241895,\n        666307205,\n        773529912,\n        1294757372,\n        1396182291,\n        1695183700,\n        1986661051,\n        2177026350,\n        2456956037,\n        2730485921,\n        2820302411,\n        3259730800,\n        3345764771,\n        3516065817,\n        3600352804,\n        4094571909,\n        275423344,\n        430227734,\n        506948616,\n        659060556,\n        883997877,\n        958139571,\n        1322822218,\n        1537002063,\n        1747873779,\n        1955562222,\n        2024104815,\n        2227730452,\n        2361852424,\n        2428436474,\n        2756734187,\n        3204031479,\n        3329325298\n      ]);\n      let R = 1779033703, U = 3144134277, H = 1013904242, Z = 2773480762, W = 1359893119, Y = 2600822924, ne = 528734635, D = 1541459225;\n      const V = new Uint32Array(64);\n      function G(h) {\n        let v = 0, g = h.length;\n        for (; g >= 64; ) {\n          let l = R, d = U, f = H, b = Z, E = W, y = Y, S = ne, I = D, $, K, ae, j, P;\n          for (K = 0; K < 16; K++)\n            ae = v + K * 4, V[K] = (h[ae] & 255) << 24 | (h[ae + 1] & 255) << 16 | (h[ae + 2] & 255) << 8 | h[ae + 3] & 255;\n          for (K = 16; K < 64; K++)\n            $ = V[K - 2], j = ($ >>> 17 | $ << 32 - 17) ^ ($ >>> 19 | $ << 32 - 19) ^ $ >>> 10, $ = V[K - 15], P = ($ >>> 7 | $ << 32 - 7) ^ ($ >>> 18 | $ << 32 - 18) ^ $ >>> 3, V[K] = (j + V[K - 7] | 0) + (P + V[K - 16] | 0) | 0;\n          for (K = 0; K < 64; K++)\n            j = (((E >>> 6 | E << 32 - 6) ^ (E >>> 11 | E << 32 - 11) ^ (E >>> 25 | E << 32 - 25)) + (E & y ^ ~E & S) | 0) + (I + (q[K] + V[K] | 0) | 0) | 0, P = ((l >>> 2 | l << 32 - 2) ^ (l >>> 13 | l << 32 - 13) ^ (l >>> 22 | l << 32 - 22)) + (l & d ^ l & f ^ d & f) | 0, I = S, S = y, y = E, E = b + j | 0, b = f, f = d, d = l, l = j + P | 0;\n          R = R + l | 0, U = U + d | 0, H = H + f | 0, Z = Z + b | 0, W = W + E | 0, Y = Y + y | 0, ne = ne + S | 0, D = D + I | 0, v += 64, g -= 64;\n        }\n      }\n      G(O);\n      let M, p = O.length % 64, s = O.length / 536870912 | 0, a = O.length << 3, o = p < 56 ? 56 : 120, u = O.slice(O.length - p, O.length);\n      for (u.push(128), M = p + 1; M < o; M++)\n        u.push(0);\n      return u.push(s >>> 24 & 255), u.push(s >>> 16 & 255), u.push(s >>> 8 & 255), u.push(s >>> 0 & 255), u.push(a >>> 24 & 255), u.push(a >>> 16 & 255), u.push(a >>> 8 & 255), u.push(a >>> 0 & 255), G(u), [\n        R >>> 24 & 255,\n        R >>> 16 & 255,\n        R >>> 8 & 255,\n        R >>> 0 & 255,\n        U >>> 24 & 255,\n        U >>> 16 & 255,\n        U >>> 8 & 255,\n        U >>> 0 & 255,\n        H >>> 24 & 255,\n        H >>> 16 & 255,\n        H >>> 8 & 255,\n        H >>> 0 & 255,\n        Z >>> 24 & 255,\n        Z >>> 16 & 255,\n        Z >>> 8 & 255,\n        Z >>> 0 & 255,\n        W >>> 24 & 255,\n        W >>> 16 & 255,\n        W >>> 8 & 255,\n        W >>> 0 & 255,\n        Y >>> 24 & 255,\n        Y >>> 16 & 255,\n        Y >>> 8 & 255,\n        Y >>> 0 & 255,\n        ne >>> 24 & 255,\n        ne >>> 16 & 255,\n        ne >>> 8 & 255,\n        ne >>> 0 & 255,\n        D >>> 24 & 255,\n        D >>> 16 & 255,\n        D >>> 8 & 255,\n        D >>> 0 & 255\n      ];\n    }\n    function n(O, q, R) {\n      O = O.length <= 64 ? O : c(O);\n      const U = 64 + q.length + 4, H = new Array(U), Z = new Array(64);\n      let W, Y = [];\n      for (W = 0; W < 64; W++)\n        H[W] = 54;\n      for (W = 0; W < O.length; W++)\n        H[W] ^= O[W];\n      for (W = 0; W < q.length; W++)\n        H[64 + W] = q[W];\n      for (W = U - 4; W < U; W++)\n        H[W] = 0;\n      for (W = 0; W < 64; W++)\n        Z[W] = 92;\n      for (W = 0; W < O.length; W++)\n        Z[W] ^= O[W];\n      function ne() {\n        for (let D = U - 1; D >= U - 4; D--) {\n          if (H[D]++, H[D] <= 255)\n            return;\n          H[D] = 0;\n        }\n      }\n      for (; R >= 32; )\n        ne(), Y = Y.concat(c(Z.concat(c(H)))), R -= 32;\n      return R > 0 && (ne(), Y = Y.concat(c(Z.concat(c(H))).slice(0, R))), Y;\n    }\n    function x(O, q, R, U, H) {\n      let Z;\n      for (z(O, (2 * R - 1) * 16, H, 0, 16), Z = 0; Z < 2 * R; Z++)\n        B(O, Z * 16, H, 16), k(H, U), z(H, 0, O, q + Z * 16, 16);\n      for (Z = 0; Z < R; Z++)\n        z(O, q + Z * 2 * 16, O, Z * 16, 16);\n      for (Z = 0; Z < R; Z++)\n        z(O, q + (Z * 2 + 1) * 16, O, (Z + R) * 16, 16);\n    }\n    function m(O, q) {\n      return O << q | O >>> 32 - q;\n    }\n    function k(O, q) {\n      z(O, 0, q, 0, 16);\n      for (let R = 8; R > 0; R -= 2)\n        q[4] ^= m(q[0] + q[12], 7), q[8] ^= m(q[4] + q[0], 9), q[12] ^= m(q[8] + q[4], 13), q[0] ^= m(q[12] + q[8], 18), q[9] ^= m(q[5] + q[1], 7), q[13] ^= m(q[9] + q[5], 9), q[1] ^= m(q[13] + q[9], 13), q[5] ^= m(q[1] + q[13], 18), q[14] ^= m(q[10] + q[6], 7), q[2] ^= m(q[14] + q[10], 9), q[6] ^= m(q[2] + q[14], 13), q[10] ^= m(q[6] + q[2], 18), q[3] ^= m(q[15] + q[11], 7), q[7] ^= m(q[3] + q[15], 9), q[11] ^= m(q[7] + q[3], 13), q[15] ^= m(q[11] + q[7], 18), q[1] ^= m(q[0] + q[3], 7), q[2] ^= m(q[1] + q[0], 9), q[3] ^= m(q[2] + q[1], 13), q[0] ^= m(q[3] + q[2], 18), q[6] ^= m(q[5] + q[4], 7), q[7] ^= m(q[6] + q[5], 9), q[4] ^= m(q[7] + q[6], 13), q[5] ^= m(q[4] + q[7], 18), q[11] ^= m(q[10] + q[9], 7), q[8] ^= m(q[11] + q[10], 9), q[9] ^= m(q[8] + q[11], 13), q[10] ^= m(q[9] + q[8], 18), q[12] ^= m(q[15] + q[14], 7), q[13] ^= m(q[12] + q[15], 9), q[14] ^= m(q[13] + q[12], 13), q[15] ^= m(q[14] + q[13], 18);\n      for (let R = 0; R < 16; ++R)\n        O[R] += q[R];\n    }\n    function B(O, q, R, U) {\n      for (let H = 0; H < U; H++)\n        R[H] ^= O[q + H];\n    }\n    function z(O, q, R, U, H) {\n      for (; H--; )\n        R[U++] = O[q++];\n    }\n    function C(O) {\n      if (!O || typeof O.length != \"number\")\n        return !1;\n      for (let q = 0; q < O.length; q++) {\n        const R = O[q];\n        if (typeof R != \"number\" || R % 1 || R < 0 || R >= 256)\n          return !1;\n      }\n      return !0;\n    }\n    function F(O, q) {\n      if (typeof O != \"number\" || O % 1)\n        throw new Error(\"invalid \" + q);\n      return O;\n    }\n    function T(O, q, R, U, H, Z, W) {\n      if (R = F(R, \"N\"), U = F(U, \"r\"), H = F(H, \"p\"), Z = F(Z, \"dkLen\"), R === 0 || R & R - 1)\n        throw new Error(\"N must be power of 2\");\n      if (R > 2147483647 / 128 / U)\n        throw new Error(\"N too large\");\n      if (U > 2147483647 / 128 / H)\n        throw new Error(\"r too large\");\n      if (!C(O))\n        throw new Error(\"password must be an array or buffer\");\n      if (O = Array.prototype.slice.call(O), !C(q))\n        throw new Error(\"salt must be an array or buffer\");\n      q = Array.prototype.slice.call(q);\n      let Y = n(O, q, H * 128 * U);\n      const ne = new Uint32Array(H * 32 * U);\n      for (let E = 0; E < ne.length; E++) {\n        const y = E * 4;\n        ne[E] = (Y[y + 3] & 255) << 24 | (Y[y + 2] & 255) << 16 | (Y[y + 1] & 255) << 8 | (Y[y + 0] & 255) << 0;\n      }\n      const D = new Uint32Array(64 * U), V = new Uint32Array(32 * U * R), G = 32 * U, M = new Uint32Array(16), p = new Uint32Array(16), s = H * R * 2;\n      let a = 0, o = null, u = !1, h = 0, v = 0, g, l;\n      const d = W ? parseInt(1e3 / U) : 4294967295, f = typeof setImmediate < \"u\" ? setImmediate : setTimeout, b = function() {\n        if (u)\n          return W(new Error(\"cancelled\"), a / s);\n        let E;\n        switch (h) {\n          case 0:\n            l = v * 32 * U, z(ne, l, D, 0, G), h = 1, g = 0;\n          case 1:\n            E = R - g, E > d && (E = d);\n            for (let S = 0; S < E; S++)\n              z(D, 0, V, (g + S) * G, G), x(D, G, U, M, p);\n            if (g += E, a += E, W) {\n              const S = parseInt(1e3 * a / s);\n              if (S !== o) {\n                if (u = W(null, a / s), u)\n                  break;\n                o = S;\n              }\n            }\n            if (g < R)\n              break;\n            g = 0, h = 2;\n          case 2:\n            E = R - g, E > d && (E = d);\n            for (let S = 0; S < E; S++) {\n              const I = (2 * U - 1) * 16, $ = D[I] & R - 1;\n              B(V, $ * G, D, G), x(D, G, U, M, p);\n            }\n            if (g += E, a += E, W) {\n              const S = parseInt(1e3 * a / s);\n              if (S !== o) {\n                if (u = W(null, a / s), u)\n                  break;\n                o = S;\n              }\n            }\n            if (g < R)\n              break;\n            if (z(D, 0, ne, l, G), v++, v < H) {\n              h = 0;\n              break;\n            }\n            Y = [];\n            for (let S = 0; S < ne.length; S++)\n              Y.push(ne[S] >> 0 & 255), Y.push(ne[S] >> 8 & 255), Y.push(ne[S] >> 16 & 255), Y.push(ne[S] >> 24 & 255);\n            const y = n(O, Y, Z);\n            return W && W(null, 1, y), y;\n        }\n        W && f(b);\n      };\n      if (!W)\n        for (; ; ) {\n          const E = b();\n          if (E != null)\n            return E;\n        }\n      b();\n    }\n    const L = {\n      scrypt: function(O, q, R, U, H, Z, W) {\n        return new Promise(function(Y, ne) {\n          let D = 0;\n          W && W(0), T(O, q, R, U, H, Z, function(V, G, M) {\n            if (V)\n              ne(V);\n            else if (M)\n              W && D !== 1 && W(1), Y(new Uint8Array(M));\n            else if (W && G !== D)\n              return D = G, W(G);\n          });\n        });\n      },\n      syncScrypt: function(O, q, R, U, H, Z) {\n        return new Uint8Array(T(O, q, R, U, H, Z));\n      }\n    };\n    e.exports = L;\n  })();\n})(Ks);\nvar Hs = Ks.exports, yi = {}, eo = {}, wi = br.Buffer;\nfunction M4(e) {\n  if (e.length >= 255)\n    throw new TypeError(\"Alphabet too long\");\n  for (var r = new Uint8Array(256), t = 0; t < r.length; t++)\n    r[t] = 255;\n  for (var i = 0; i < e.length; i++) {\n    var c = e.charAt(i), n = c.charCodeAt(0);\n    if (r[n] !== 255)\n      throw new TypeError(c + \" is ambiguous\");\n    r[n] = i;\n  }\n  var x = e.length, m = e.charAt(0), k = Math.log(x) / Math.log(256), B = Math.log(256) / Math.log(x);\n  function z(T) {\n    if ((Array.isArray(T) || T instanceof Uint8Array) && (T = wi.from(T)), !wi.isBuffer(T))\n      throw new TypeError(\"Expected Buffer\");\n    if (T.length === 0)\n      return \"\";\n    for (var L = 0, O = 0, q = 0, R = T.length; q !== R && T[q] === 0; )\n      q++, L++;\n    for (var U = (R - q) * B + 1 >>> 0, H = new Uint8Array(U); q !== R; ) {\n      for (var Z = T[q], W = 0, Y = U - 1; (Z !== 0 || W < O) && Y !== -1; Y--, W++)\n        Z += 256 * H[Y] >>> 0, H[Y] = Z % x >>> 0, Z = Z / x >>> 0;\n      if (Z !== 0)\n        throw new Error(\"Non-zero carry\");\n      O = W, q++;\n    }\n    for (var ne = U - O; ne !== U && H[ne] === 0; )\n      ne++;\n    for (var D = m.repeat(L); ne < U; ++ne)\n      D += e.charAt(H[ne]);\n    return D;\n  }\n  function C(T) {\n    if (typeof T != \"string\")\n      throw new TypeError(\"Expected String\");\n    if (T.length === 0)\n      return wi.alloc(0);\n    for (var L = 0, O = 0, q = 0; T[L] === m; )\n      O++, L++;\n    for (var R = (T.length - L) * k + 1 >>> 0, U = new Uint8Array(R); T[L]; ) {\n      var H = r[T.charCodeAt(L)];\n      if (H === 255)\n        return;\n      for (var Z = 0, W = R - 1; (H !== 0 || Z < q) && W !== -1; W--, Z++)\n        H += x * U[W] >>> 0, U[W] = H % 256 >>> 0, H = H / 256 >>> 0;\n      if (H !== 0)\n        throw new Error(\"Non-zero carry\");\n      q = Z, L++;\n    }\n    for (var Y = R - q; Y !== R && U[Y] === 0; )\n      Y++;\n    var ne = wi.allocUnsafe(O + (R - Y));\n    ne.fill(0, 0, O);\n    for (var D = O; Y !== R; )\n      ne[D++] = U[Y++];\n    return ne;\n  }\n  function F(T) {\n    var L = C(T);\n    if (L)\n      return L;\n    throw new Error(\"Non-base\" + x + \" character\");\n  }\n  return {\n    encode: z,\n    decodeUnsafe: C,\n    decode: F\n  };\n}\nvar S4 = M4, k4 = S4, E4 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\", A4 = k4(E4), Nf = A4, B4 = br.Buffer, z4 = function(e) {\n  function r(n) {\n    var x = e(n);\n    return Nf.encode(B4.concat([\n      n,\n      x\n    ], n.length + 4));\n  }\n  function t(n) {\n    var x = n.slice(0, -4), m = n.slice(-4), k = e(x);\n    if (!(m[0] ^ k[0] | m[1] ^ k[1] | m[2] ^ k[2] | m[3] ^ k[3]))\n      return x;\n  }\n  function i(n) {\n    var x = Nf.decodeUnsafe(n);\n    if (x)\n      return t(x);\n  }\n  function c(n) {\n    var x = Nf.decode(n), m = t(x);\n    if (!m)\n      throw new Error(\"Invalid checksum\");\n    return m;\n  }\n  return {\n    encode: r,\n    decode: c,\n    decodeUnsafe: i\n  };\n}, Ac = N0, I4 = z4;\nfunction R4(e) {\n  var r = Ac(\"sha256\").update(e).digest();\n  return Ac(\"sha256\").update(r).digest();\n}\nvar Vs = I4(R4), pi = {}, ro = {};\nObject.defineProperty(ro, \"__esModule\", { value: !0 });\nvar T4 = Y0.ripemd160, j4 = hi;\nro.ripemd160 = j4.createHashFunction(function() {\n  return new T4();\n});\nvar to = {};\nObject.defineProperty(to, \"__esModule\", { value: !0 });\nvar P4 = J0, O4 = hi;\nto.sha256 = O4.createHashFunction(function() {\n  return new P4();\n});\nvar q4 = nr, ia = br.Buffer, Ws = q0, N4 = ia.alloc(128), xa = 64;\nfunction Rn(e, r) {\n  Ws.call(this, \"digest\"), typeof r == \"string\" && (r = ia.from(r)), this._alg = e, this._key = r, r.length > xa ? r = e(r) : r.length < xa && (r = ia.concat([r, N4], xa));\n  for (var t = this._ipad = ia.allocUnsafe(xa), i = this._opad = ia.allocUnsafe(xa), c = 0; c < xa; c++)\n    t[c] = r[c] ^ 54, i[c] = r[c] ^ 92;\n  this._hash = [t];\n}\nq4(Rn, Ws);\nRn.prototype._update = function(e) {\n  this._hash.push(e);\n};\nRn.prototype._final = function() {\n  var e = this._alg(ia.concat(this._hash));\n  return this._alg(ia.concat([this._opad, e]));\n};\nvar F4 = Rn, C4 = nr, L4 = F4, Gs = q0, Za = br.Buffer, U4 = Jd, s0 = j0, u0 = P0, $4 = Za.alloc(128);\nfunction ri(e, r) {\n  Gs.call(this, \"digest\"), typeof r == \"string\" && (r = Za.from(r));\n  var t = e === \"sha512\" || e === \"sha384\" ? 128 : 64;\n  if (this._alg = e, this._key = r, r.length > t) {\n    var i = e === \"rmd160\" ? new s0() : u0(e);\n    r = i.update(r).digest();\n  } else\n    r.length < t && (r = Za.concat([r, $4], t));\n  for (var c = this._ipad = Za.allocUnsafe(t), n = this._opad = Za.allocUnsafe(t), x = 0; x < t; x++)\n    c[x] = r[x] ^ 54, n[x] = r[x] ^ 92;\n  this._hash = e === \"rmd160\" ? new s0() : u0(e), this._hash.update(c);\n}\nC4(ri, Gs);\nri.prototype._update = function(e) {\n  this._hash.update(e);\n};\nri.prototype._final = function() {\n  var e = this._hash.digest(), r = this._alg === \"rmd160\" ? new s0() : u0(this._alg);\n  return r.update(this._opad).update(e).digest();\n};\nvar D4 = function(r, t) {\n  return r = r.toLowerCase(), r === \"rmd160\" || r === \"ripemd160\" ? new ri(\"rmd160\", t) : r === \"md5\" ? new L4(U4, t) : new ri(r, t);\n};\nObject.defineProperty(pi, \"__esModule\", { value: !0 });\nvar K4 = ro, H4 = to;\npi.createHmac = D4;\npi.randomBytes = ln;\nvar Bc = (\n  /** @class */\n  function() {\n    function e(r) {\n      this.hashFunction = r, this.buffers = [];\n    }\n    return e.prototype.update = function(r) {\n      if (!Buffer.isBuffer(r))\n        throw new Error(\"hdkey-crypto shim is outdated\");\n      return this.buffers.push(r), this;\n    }, e.prototype.digest = function(r) {\n      if (r)\n        throw new Error(\"hdkey-crypto shim is outdated\");\n      return this.hashFunction(Buffer.concat(this.buffers));\n    }, e;\n  }()\n);\npi.createHash = function(e) {\n  if (e === \"ripemd160\")\n    return new Bc(K4.ripemd160);\n  if (e === \"sha256\")\n    return new Bc(H4.sha256);\n  throw new Error(\"hdkey-crypto shim is outdated\");\n};\nvar Zs = {}, zt = {}, V4 = be && be.__importStar || function(e) {\n  if (e && e.__esModule)\n    return e;\n  var r = {};\n  if (e != null)\n    for (var t in e)\n      Object.hasOwnProperty.call(e, t) && (r[t] = e[t]);\n  return r.default = e, r;\n};\nObject.defineProperty(zt, \"__esModule\", { value: !0 });\nvar Zt = V4(c0);\nfunction W4(e) {\n  return Zt.privateKeyVerify(e);\n}\nzt.privateKeyVerify = W4;\nfunction G4(e, r) {\n  return r === void 0 && (r = !0), Buffer.from(Zt.publicKeyCreate(e, r));\n}\nzt.publicKeyCreate = G4;\nfunction Z4(e) {\n  return Zt.publicKeyVerify(e);\n}\nzt.publicKeyVerify = Z4;\nfunction J4(e, r) {\n  return r === void 0 && (r = !0), Buffer.from(Zt.publicKeyConvert(e, r));\n}\nzt.publicKeyConvert = J4;\nfunction Y4(e, r) {\n  return Buffer.from(Zt.privateKeyTweakAdd(Buffer.from(e), r));\n}\nzt.privateKeyTweakAdd = Y4;\nfunction X4(e, r, t) {\n  return t === void 0 && (t = !0), Buffer.from(Zt.publicKeyTweakAdd(Buffer.from(e), r, t));\n}\nzt.publicKeyTweakAdd = X4;\nfunction Q4(e, r) {\n  var t = Zt.ecdsaSign(e, r);\n  return { signature: Buffer.from(t.signature), recovery: t.recid };\n}\nzt.sign = Q4;\nfunction e8(e, r, t) {\n  return Zt.ecdsaVerify(r, e, t);\n}\nzt.verify = e8;\n(function(e) {\n  function r(t) {\n    for (var i in t)\n      e.hasOwnProperty(i) || (e[i] = t[i]);\n  }\n  Object.defineProperty(e, \"__esModule\", { value: !0 }), r(zt);\n})(Zs);\nfunction ao(e) {\n  return e && typeof e == \"object\" && \"default\" in e ? e.default : e;\n}\nvar xt = ao(da()), r8 = ao(br), io = ao(Vs), ti = pi, Kt = Zs, It = r8.Buffer, t8 = It.from(\"Bitcoin seed\", \"utf8\"), Di = 2147483648, a8 = 78, Js = { private: 76066276, public: 76067358 };\nfunction or(e) {\n  this.versions = e || Js, this.depth = 0, this.index = 0, this._privateKey = null, this._publicKey = null, this.chainCode = null, this._fingerprint = 0, this.parentFingerprint = 0;\n}\nObject.defineProperty(or.prototype, \"fingerprint\", { get: function() {\n  return this._fingerprint;\n} });\nObject.defineProperty(or.prototype, \"identifier\", { get: function() {\n  return this._identifier;\n} });\nObject.defineProperty(or.prototype, \"pubKeyHash\", { get: function() {\n  return this.identifier;\n} });\nObject.defineProperty(or.prototype, \"privateKey\", {\n  get: function() {\n    return this._privateKey;\n  },\n  set: function(e) {\n    xt.equal(e.length, 32, \"Private key must be 32 bytes.\"), xt(Kt.privateKeyVerify(e) === !0, \"Invalid private key\"), this._privateKey = e, this._publicKey = Kt.publicKeyCreate(e, !0), this._identifier = Xs(this.publicKey), this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0);\n  }\n});\nObject.defineProperty(or.prototype, \"publicKey\", {\n  get: function() {\n    return this._publicKey;\n  },\n  set: function(e) {\n    xt(e.length === 33 || e.length === 65, \"Public key must be 33 or 65 bytes.\"), xt(Kt.publicKeyVerify(e) === !0, \"Invalid public key\"), this._publicKey = Kt.publicKeyConvert(e, !0), this._identifier = Xs(this.publicKey), this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0), this._privateKey = null;\n  }\n});\nObject.defineProperty(or.prototype, \"privateExtendedKey\", {\n  get: function() {\n    return this._privateKey ? io.encode(Ys(this, this.versions.private, It.concat([It.alloc(1, 0), this.privateKey]))) : null;\n  }\n});\nObject.defineProperty(or.prototype, \"publicExtendedKey\", {\n  get: function() {\n    return io.encode(Ys(this, this.versions.public, this.publicKey));\n  }\n});\nor.prototype.derive = function(e) {\n  if (e === \"m\" || e === \"M\" || e === \"m'\" || e === \"M'\")\n    return this;\n  var r = e.split(\"/\"), t = this;\n  return r.forEach(function(i, c) {\n    if (c === 0) {\n      xt(/^[mM]{1}/.test(i), 'Path must start with \"m\" or \"M\"');\n      return;\n    }\n    var n = i.length > 1 && i[i.length - 1] === \"'\", x = parseInt(i, 10);\n    xt(x < Di, \"Invalid index\"), n && (x += Di), t = t.deriveChild(x);\n  }), t;\n};\nor.prototype.deriveChild = function(e) {\n  var r = e >= Di, t = It.allocUnsafe(4);\n  t.writeUInt32BE(e, 0);\n  var i;\n  if (r) {\n    xt(this.privateKey, \"Could not derive hardened child key\");\n    var c = this.privateKey, n = It.alloc(1, 0);\n    c = It.concat([n, c]), i = It.concat([c, t]);\n  } else\n    i = It.concat([this.publicKey, t]);\n  var x = ti.createHmac(\"sha512\", this.chainCode).update(i).digest(), m = x.slice(0, 32), k = x.slice(32), B = new or(this.versions);\n  if (this.privateKey)\n    try {\n      B.privateKey = Kt.privateKeyTweakAdd(this.privateKey, m);\n    } catch {\n      return this.deriveChild(e + 1);\n    }\n  else\n    try {\n      B.publicKey = Kt.publicKeyTweakAdd(this.publicKey, m, !0);\n    } catch {\n      return this.deriveChild(e + 1);\n    }\n  return B.chainCode = k, B.depth = this.depth + 1, B.parentFingerprint = this.fingerprint, B.index = e, B;\n};\nor.prototype.sign = function(e) {\n  return Kt.sign(e, this.privateKey).signature;\n};\nor.prototype.verify = function(e, r) {\n  return Kt.verify(e, r, this.publicKey);\n};\nor.prototype.wipePrivateData = function() {\n  return this._privateKey && ti.randomBytes(this._privateKey.length).copy(this._privateKey), this._privateKey = null, this;\n};\nor.prototype.toJSON = function() {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  };\n};\nor.fromMasterSeed = function(e, r) {\n  var t = ti.createHmac(\"sha512\", t8).update(e).digest(), i = t.slice(0, 32), c = t.slice(32), n = new or(r);\n  return n.chainCode = c, n.privateKey = i, n;\n};\nor.fromExtendedKey = function(e, r) {\n  r = r || Js;\n  var t = new or(r), i = io.decode(e), c = i.readUInt32BE(0);\n  xt(c === r.private || c === r.public, \"Version mismatch: does not match private or public\"), t.depth = i.readUInt8(4), t.parentFingerprint = i.readUInt32BE(5), t.index = i.readUInt32BE(9), t.chainCode = i.slice(13, 45);\n  var n = i.slice(45);\n  return n.readUInt8(0) === 0 ? (xt(c === r.private, \"Version mismatch: version does not match private\"), t.privateKey = n.slice(1)) : (xt(c === r.public, \"Version mismatch: version does not match public\"), t.publicKey = n), t;\n};\nor.fromJSON = function(e) {\n  return or.fromExtendedKey(e.xpriv);\n};\nfunction Ys(e, r, t) {\n  var i = It.allocUnsafe(a8);\n  i.writeUInt32BE(r, 0), i.writeUInt8(e.depth, 4);\n  var c = e.depth ? e.parentFingerprint : 0;\n  return i.writeUInt32BE(c, 5), i.writeUInt32BE(e.index, 9), e.chainCode.copy(i, 13), t.copy(i, 45), i;\n}\nfunction Xs(e) {\n  var r = ti.createHash(\"sha256\").update(e).digest();\n  return ti.createHash(\"ripemd160\").update(r).digest();\n}\nor.HARDENED_OFFSET = Di;\nvar i8 = or, n8 = i8;\nObject.defineProperty(eo, \"__esModule\", { value: !0 });\nvar f8 = n8;\neo.HDKey = f8;\nvar zc;\nfunction o8() {\n  if (zc)\n    return yi;\n  zc = 1;\n  var e = be && be.__importDefault || function(c) {\n    return c && c.__esModule ? c : { default: c };\n  };\n  Object.defineProperty(yi, \"__esModule\", { value: !0 });\n  var r = e(no()), t = eo, i = (\n    /** @class */\n    function() {\n      function c(n) {\n        this._hdkey = n;\n      }\n      return c.fromMasterSeed = function(n) {\n        return new c(t.HDKey.fromMasterSeed(n));\n      }, c.fromExtendedKey = function(n) {\n        return new c(t.HDKey.fromExtendedKey(n));\n      }, c.prototype.privateExtendedKey = function() {\n        if (!this._hdkey.privateExtendedKey)\n          throw new Error(\"This is a public key only wallet\");\n        return this._hdkey.privateExtendedKey;\n      }, c.prototype.publicExtendedKey = function() {\n        return this._hdkey.publicExtendedKey;\n      }, c.prototype.derivePath = function(n) {\n        return new c(this._hdkey.derive(n));\n      }, c.prototype.deriveChild = function(n) {\n        return new c(this._hdkey.deriveChild(n));\n      }, c.prototype.getWallet = function() {\n        return this._hdkey._privateKey ? r.default.fromPrivateKey(this._hdkey._privateKey) : r.default.fromPublicKey(this._hdkey._publicKey, !0);\n      }, c;\n    }()\n  );\n  return yi.default = i, yi;\n}\nvar Zr = {}, Qs = {};\n/*! https://mths.be/utf8js v3.0.0 by @mathias */\n(function(e) {\n  (function(r) {\n    var t = String.fromCharCode;\n    function i(O) {\n      for (var q = [], R = 0, U = O.length, H, Z; R < U; )\n        H = O.charCodeAt(R++), H >= 55296 && H <= 56319 && R < U ? (Z = O.charCodeAt(R++), (Z & 64512) == 56320 ? q.push(((H & 1023) << 10) + (Z & 1023) + 65536) : (q.push(H), R--)) : q.push(H);\n      return q;\n    }\n    function c(O) {\n      for (var q = O.length, R = -1, U, H = \"\"; ++R < q; )\n        U = O[R], U > 65535 && (U -= 65536, H += t(U >>> 10 & 1023 | 55296), U = 56320 | U & 1023), H += t(U);\n      return H;\n    }\n    function n(O) {\n      if (O >= 55296 && O <= 57343)\n        throw Error(\n          \"Lone surrogate U+\" + O.toString(16).toUpperCase() + \" is not a scalar value\"\n        );\n    }\n    function x(O, q) {\n      return t(O >> q & 63 | 128);\n    }\n    function m(O) {\n      if (!(O & 4294967168))\n        return t(O);\n      var q = \"\";\n      return O & 4294965248 ? O & 4294901760 ? O & 4292870144 || (q = t(O >> 18 & 7 | 240), q += x(O, 12), q += x(O, 6)) : (n(O), q = t(O >> 12 & 15 | 224), q += x(O, 6)) : q = t(O >> 6 & 31 | 192), q += t(O & 63 | 128), q;\n    }\n    function k(O) {\n      for (var q = i(O), R = q.length, U = -1, H, Z = \"\"; ++U < R; )\n        H = q[U], Z += m(H);\n      return Z;\n    }\n    function B() {\n      if (T >= F)\n        throw Error(\"Invalid byte index\");\n      var O = C[T] & 255;\n      if (T++, (O & 192) == 128)\n        return O & 63;\n      throw Error(\"Invalid continuation byte\");\n    }\n    function z() {\n      var O, q, R, U, H;\n      if (T > F)\n        throw Error(\"Invalid byte index\");\n      if (T == F)\n        return !1;\n      if (O = C[T] & 255, T++, !(O & 128))\n        return O;\n      if ((O & 224) == 192) {\n        if (q = B(), H = (O & 31) << 6 | q, H >= 128)\n          return H;\n        throw Error(\"Invalid continuation byte\");\n      }\n      if ((O & 240) == 224) {\n        if (q = B(), R = B(), H = (O & 15) << 12 | q << 6 | R, H >= 2048)\n          return n(H), H;\n        throw Error(\"Invalid continuation byte\");\n      }\n      if ((O & 248) == 240 && (q = B(), R = B(), U = B(), H = (O & 7) << 18 | q << 12 | R << 6 | U, H >= 65536 && H <= 1114111))\n        return H;\n      throw Error(\"Invalid UTF-8 detected\");\n    }\n    var C, F, T;\n    function L(O) {\n      C = i(O), F = C.length, T = 0;\n      for (var q = [], R; (R = z()) !== !1; )\n        q.push(R);\n      return c(q);\n    }\n    r.version = \"3.0.0\", r.encode = k, r.decode = L;\n  })(e);\n})(Qs);\nvar eu = { exports: {} };\n/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(e, r) {\n  (function(t) {\n    function i(d) {\n      return parseInt(d) === d;\n    }\n    function c(d) {\n      if (!i(d.length))\n        return !1;\n      for (var f = 0; f < d.length; f++)\n        if (!i(d[f]) || d[f] < 0 || d[f] > 255)\n          return !1;\n      return !0;\n    }\n    function n(d, f) {\n      if (d.buffer && d.name === \"Uint8Array\")\n        return f && (d.slice ? d = d.slice() : d = Array.prototype.slice.call(d)), d;\n      if (Array.isArray(d)) {\n        if (!c(d))\n          throw new Error(\"Array contains invalid value: \" + d);\n        return new Uint8Array(d);\n      }\n      if (i(d.length) && c(d))\n        return new Uint8Array(d);\n      throw new Error(\"unsupported array-like object\");\n    }\n    function x(d) {\n      return new Uint8Array(d);\n    }\n    function m(d, f, b, E, y) {\n      (E != null || y != null) && (d.slice ? d = d.slice(E, y) : d = Array.prototype.slice.call(d, E, y)), f.set(d, b);\n    }\n    var k = function() {\n      function d(b) {\n        var E = [], y = 0;\n        for (b = encodeURI(b); y < b.length; ) {\n          var S = b.charCodeAt(y++);\n          S === 37 ? (E.push(parseInt(b.substr(y, 2), 16)), y += 2) : E.push(S);\n        }\n        return n(E);\n      }\n      function f(b) {\n        for (var E = [], y = 0; y < b.length; ) {\n          var S = b[y];\n          S < 128 ? (E.push(String.fromCharCode(S)), y++) : S > 191 && S < 224 ? (E.push(String.fromCharCode((S & 31) << 6 | b[y + 1] & 63)), y += 2) : (E.push(String.fromCharCode((S & 15) << 12 | (b[y + 1] & 63) << 6 | b[y + 2] & 63)), y += 3);\n        }\n        return E.join(\"\");\n      }\n      return {\n        toBytes: d,\n        fromBytes: f\n      };\n    }(), B = function() {\n      function d(E) {\n        for (var y = [], S = 0; S < E.length; S += 2)\n          y.push(parseInt(E.substr(S, 2), 16));\n        return y;\n      }\n      var f = \"0123456789abcdef\";\n      function b(E) {\n        for (var y = [], S = 0; S < E.length; S++) {\n          var I = E[S];\n          y.push(f[(I & 240) >> 4] + f[I & 15]);\n        }\n        return y.join(\"\");\n      }\n      return {\n        toBytes: d,\n        fromBytes: b\n      };\n    }(), z = { 16: 10, 24: 12, 32: 14 }, C = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], F = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], T = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125], L = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], O = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], q = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], R = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], U = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890], H = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935], Z = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600], W = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480], Y = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], ne = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], D = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], V = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];\n    function G(d) {\n      for (var f = [], b = 0; b < d.length; b += 4)\n        f.push(\n          d[b] << 24 | d[b + 1] << 16 | d[b + 2] << 8 | d[b + 3]\n        );\n      return f;\n    }\n    var M = function(d) {\n      if (!(this instanceof M))\n        throw Error(\"AES must be instanitated with `new`\");\n      Object.defineProperty(this, \"key\", {\n        value: n(d, !0)\n      }), this._prepare();\n    };\n    M.prototype._prepare = function() {\n      var d = z[this.key.length];\n      if (d == null)\n        throw new Error(\"invalid key size (must be 16, 24 or 32 bytes)\");\n      this._Ke = [], this._Kd = [];\n      for (var f = 0; f <= d; f++)\n        this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);\n      for (var b = (d + 1) * 4, E = this.key.length / 4, y = G(this.key), S, f = 0; f < E; f++)\n        S = f >> 2, this._Ke[S][f % 4] = y[f], this._Kd[d - S][f % 4] = y[f];\n      for (var I = 0, $ = E, K; $ < b; ) {\n        if (K = y[E - 1], y[0] ^= F[K >> 16 & 255] << 24 ^ F[K >> 8 & 255] << 16 ^ F[K & 255] << 8 ^ F[K >> 24 & 255] ^ C[I] << 24, I += 1, E != 8)\n          for (var f = 1; f < E; f++)\n            y[f] ^= y[f - 1];\n        else {\n          for (var f = 1; f < E / 2; f++)\n            y[f] ^= y[f - 1];\n          K = y[E / 2 - 1], y[E / 2] ^= F[K & 255] ^ F[K >> 8 & 255] << 8 ^ F[K >> 16 & 255] << 16 ^ F[K >> 24 & 255] << 24;\n          for (var f = E / 2 + 1; f < E; f++)\n            y[f] ^= y[f - 1];\n        }\n        for (var f = 0, ae, j; f < E && $ < b; )\n          ae = $ >> 2, j = $ % 4, this._Ke[ae][j] = y[f], this._Kd[d - ae][j] = y[f++], $++;\n      }\n      for (var ae = 1; ae < d; ae++)\n        for (var j = 0; j < 4; j++)\n          K = this._Kd[ae][j], this._Kd[ae][j] = Y[K >> 24 & 255] ^ ne[K >> 16 & 255] ^ D[K >> 8 & 255] ^ V[K & 255];\n    }, M.prototype.encrypt = function(d) {\n      if (d.length != 16)\n        throw new Error(\"invalid plaintext size (must be 16 bytes)\");\n      for (var f = this._Ke.length - 1, b = [0, 0, 0, 0], E = G(d), y = 0; y < 4; y++)\n        E[y] ^= this._Ke[0][y];\n      for (var S = 1; S < f; S++) {\n        for (var y = 0; y < 4; y++)\n          b[y] = L[E[y] >> 24 & 255] ^ O[E[(y + 1) % 4] >> 16 & 255] ^ q[E[(y + 2) % 4] >> 8 & 255] ^ R[E[(y + 3) % 4] & 255] ^ this._Ke[S][y];\n        E = b.slice();\n      }\n      for (var I = x(16), $, y = 0; y < 4; y++)\n        $ = this._Ke[f][y], I[4 * y] = (F[E[y] >> 24 & 255] ^ $ >> 24) & 255, I[4 * y + 1] = (F[E[(y + 1) % 4] >> 16 & 255] ^ $ >> 16) & 255, I[4 * y + 2] = (F[E[(y + 2) % 4] >> 8 & 255] ^ $ >> 8) & 255, I[4 * y + 3] = (F[E[(y + 3) % 4] & 255] ^ $) & 255;\n      return I;\n    }, M.prototype.decrypt = function(d) {\n      if (d.length != 16)\n        throw new Error(\"invalid ciphertext size (must be 16 bytes)\");\n      for (var f = this._Kd.length - 1, b = [0, 0, 0, 0], E = G(d), y = 0; y < 4; y++)\n        E[y] ^= this._Kd[0][y];\n      for (var S = 1; S < f; S++) {\n        for (var y = 0; y < 4; y++)\n          b[y] = U[E[y] >> 24 & 255] ^ H[E[(y + 3) % 4] >> 16 & 255] ^ Z[E[(y + 2) % 4] >> 8 & 255] ^ W[E[(y + 1) % 4] & 255] ^ this._Kd[S][y];\n        E = b.slice();\n      }\n      for (var I = x(16), $, y = 0; y < 4; y++)\n        $ = this._Kd[f][y], I[4 * y] = (T[E[y] >> 24 & 255] ^ $ >> 24) & 255, I[4 * y + 1] = (T[E[(y + 3) % 4] >> 16 & 255] ^ $ >> 16) & 255, I[4 * y + 2] = (T[E[(y + 2) % 4] >> 8 & 255] ^ $ >> 8) & 255, I[4 * y + 3] = (T[E[(y + 1) % 4] & 255] ^ $) & 255;\n      return I;\n    };\n    var p = function(d) {\n      if (!(this instanceof p))\n        throw Error(\"AES must be instanitated with `new`\");\n      this.description = \"Electronic Code Block\", this.name = \"ecb\", this._aes = new M(d);\n    };\n    p.prototype.encrypt = function(d) {\n      if (d = n(d), d.length % 16 !== 0)\n        throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");\n      for (var f = x(d.length), b = x(16), E = 0; E < d.length; E += 16)\n        m(d, b, 0, E, E + 16), b = this._aes.encrypt(b), m(b, f, E);\n      return f;\n    }, p.prototype.decrypt = function(d) {\n      if (d = n(d), d.length % 16 !== 0)\n        throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n      for (var f = x(d.length), b = x(16), E = 0; E < d.length; E += 16)\n        m(d, b, 0, E, E + 16), b = this._aes.decrypt(b), m(b, f, E);\n      return f;\n    };\n    var s = function(d, f) {\n      if (!(this instanceof s))\n        throw Error(\"AES must be instanitated with `new`\");\n      if (this.description = \"Cipher Block Chaining\", this.name = \"cbc\", !f)\n        f = x(16);\n      else if (f.length != 16)\n        throw new Error(\"invalid initialation vector size (must be 16 bytes)\");\n      this._lastCipherblock = n(f, !0), this._aes = new M(d);\n    };\n    s.prototype.encrypt = function(d) {\n      if (d = n(d), d.length % 16 !== 0)\n        throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");\n      for (var f = x(d.length), b = x(16), E = 0; E < d.length; E += 16) {\n        m(d, b, 0, E, E + 16);\n        for (var y = 0; y < 16; y++)\n          b[y] ^= this._lastCipherblock[y];\n        this._lastCipherblock = this._aes.encrypt(b), m(this._lastCipherblock, f, E);\n      }\n      return f;\n    }, s.prototype.decrypt = function(d) {\n      if (d = n(d), d.length % 16 !== 0)\n        throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n      for (var f = x(d.length), b = x(16), E = 0; E < d.length; E += 16) {\n        m(d, b, 0, E, E + 16), b = this._aes.decrypt(b);\n        for (var y = 0; y < 16; y++)\n          f[E + y] = b[y] ^ this._lastCipherblock[y];\n        m(d, this._lastCipherblock, 0, E, E + 16);\n      }\n      return f;\n    };\n    var a = function(d, f, b) {\n      if (!(this instanceof a))\n        throw Error(\"AES must be instanitated with `new`\");\n      if (this.description = \"Cipher Feedback\", this.name = \"cfb\", !f)\n        f = x(16);\n      else if (f.length != 16)\n        throw new Error(\"invalid initialation vector size (must be 16 size)\");\n      b || (b = 1), this.segmentSize = b, this._shiftRegister = n(f, !0), this._aes = new M(d);\n    };\n    a.prototype.encrypt = function(d) {\n      if (d.length % this.segmentSize != 0)\n        throw new Error(\"invalid plaintext size (must be segmentSize bytes)\");\n      for (var f = n(d, !0), b, E = 0; E < f.length; E += this.segmentSize) {\n        b = this._aes.encrypt(this._shiftRegister);\n        for (var y = 0; y < this.segmentSize; y++)\n          f[E + y] ^= b[y];\n        m(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), m(f, this._shiftRegister, 16 - this.segmentSize, E, E + this.segmentSize);\n      }\n      return f;\n    }, a.prototype.decrypt = function(d) {\n      if (d.length % this.segmentSize != 0)\n        throw new Error(\"invalid ciphertext size (must be segmentSize bytes)\");\n      for (var f = n(d, !0), b, E = 0; E < f.length; E += this.segmentSize) {\n        b = this._aes.encrypt(this._shiftRegister);\n        for (var y = 0; y < this.segmentSize; y++)\n          f[E + y] ^= b[y];\n        m(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), m(d, this._shiftRegister, 16 - this.segmentSize, E, E + this.segmentSize);\n      }\n      return f;\n    };\n    var o = function(d, f) {\n      if (!(this instanceof o))\n        throw Error(\"AES must be instanitated with `new`\");\n      if (this.description = \"Output Feedback\", this.name = \"ofb\", !f)\n        f = x(16);\n      else if (f.length != 16)\n        throw new Error(\"invalid initialation vector size (must be 16 bytes)\");\n      this._lastPrecipher = n(f, !0), this._lastPrecipherIndex = 16, this._aes = new M(d);\n    };\n    o.prototype.encrypt = function(d) {\n      for (var f = n(d, !0), b = 0; b < f.length; b++)\n        this._lastPrecipherIndex === 16 && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), f[b] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n      return f;\n    }, o.prototype.decrypt = o.prototype.encrypt;\n    var u = function(d) {\n      if (!(this instanceof u))\n        throw Error(\"Counter must be instanitated with `new`\");\n      d !== 0 && !d && (d = 1), typeof d == \"number\" ? (this._counter = x(16), this.setValue(d)) : this.setBytes(d);\n    };\n    u.prototype.setValue = function(d) {\n      if (typeof d != \"number\" || parseInt(d) != d)\n        throw new Error(\"invalid counter value (must be an integer)\");\n      if (d > Number.MAX_SAFE_INTEGER)\n        throw new Error(\"integer value out of safe range\");\n      for (var f = 15; f >= 0; --f)\n        this._counter[f] = d % 256, d = parseInt(d / 256);\n    }, u.prototype.setBytes = function(d) {\n      if (d = n(d, !0), d.length != 16)\n        throw new Error(\"invalid counter bytes size (must be 16 bytes)\");\n      this._counter = d;\n    }, u.prototype.increment = function() {\n      for (var d = 15; d >= 0; d--)\n        if (this._counter[d] === 255)\n          this._counter[d] = 0;\n        else {\n          this._counter[d]++;\n          break;\n        }\n    };\n    var h = function(d, f) {\n      if (!(this instanceof h))\n        throw Error(\"AES must be instanitated with `new`\");\n      this.description = \"Counter\", this.name = \"ctr\", f instanceof u || (f = new u(f)), this._counter = f, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new M(d);\n    };\n    h.prototype.encrypt = function(d) {\n      for (var f = n(d, !0), b = 0; b < f.length; b++)\n        this._remainingCounterIndex === 16 && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), f[b] ^= this._remainingCounter[this._remainingCounterIndex++];\n      return f;\n    }, h.prototype.decrypt = h.prototype.encrypt;\n    function v(d) {\n      d = n(d, !0);\n      var f = 16 - d.length % 16, b = x(d.length + f);\n      m(d, b);\n      for (var E = d.length; E < b.length; E++)\n        b[E] = f;\n      return b;\n    }\n    function g(d) {\n      if (d = n(d, !0), d.length < 16)\n        throw new Error(\"PKCS#7 invalid length\");\n      var f = d[d.length - 1];\n      if (f > 16)\n        throw new Error(\"PKCS#7 padding byte out of range\");\n      for (var b = d.length - f, E = 0; E < f; E++)\n        if (d[b + E] !== f)\n          throw new Error(\"PKCS#7 invalid padding byte\");\n      var y = x(b);\n      return m(d, y, 0, 0, b), y;\n    }\n    var l = {\n      AES: M,\n      Counter: u,\n      ModeOfOperation: {\n        ecb: p,\n        cbc: s,\n        cfb: a,\n        ofb: o,\n        ctr: h\n      },\n      utils: {\n        hex: B,\n        utf8: k\n      },\n      padding: {\n        pkcs7: {\n          pad: v,\n          strip: g\n        }\n      },\n      _arrayTest: {\n        coerceArray: n,\n        createArray: x,\n        copyArray: m\n      }\n    };\n    e.exports = l;\n  })();\n})(eu);\nvar c8 = eu.exports, Ic;\nfunction d8() {\n  if (Ic)\n    return Zr;\n  Ic = 1;\n  var e = be && be.__createBinding || (Object.create ? function(Y, ne, D, V) {\n    V === void 0 && (V = D), Object.defineProperty(Y, V, { enumerable: !0, get: function() {\n      return ne[D];\n    } });\n  } : function(Y, ne, D, V) {\n    V === void 0 && (V = D), Y[V] = ne[D];\n  }), r = be && be.__setModuleDefault || (Object.create ? function(Y, ne) {\n    Object.defineProperty(Y, \"default\", { enumerable: !0, value: ne });\n  } : function(Y, ne) {\n    Y.default = ne;\n  }), t = be && be.__importStar || function(Y) {\n    if (Y && Y.__esModule)\n      return Y;\n    var ne = {};\n    if (Y != null)\n      for (var D in Y)\n        D !== \"default\" && Object.prototype.hasOwnProperty.call(Y, D) && e(ne, Y, D);\n    return r(ne, Y), ne;\n  }, i = be && be.__awaiter || function(Y, ne, D, V) {\n    function G(M) {\n      return M instanceof D ? M : new D(function(p) {\n        p(M);\n      });\n    }\n    return new (D || (D = Promise))(function(M, p) {\n      function s(u) {\n        try {\n          o(V.next(u));\n        } catch (h) {\n          p(h);\n        }\n      }\n      function a(u) {\n        try {\n          o(V.throw(u));\n        } catch (h) {\n          p(h);\n        }\n      }\n      function o(u) {\n        u.done ? M(u.value) : G(u.value).then(s, a);\n      }\n      o((V = V.apply(Y, ne || [])).next());\n    });\n  }, c = be && be.__generator || function(Y, ne) {\n    var D = { label: 0, sent: function() {\n      if (M[0] & 1)\n        throw M[1];\n      return M[1];\n    }, trys: [], ops: [] }, V, G, M, p;\n    return p = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol == \"function\" && (p[Symbol.iterator] = function() {\n      return this;\n    }), p;\n    function s(o) {\n      return function(u) {\n        return a([o, u]);\n      };\n    }\n    function a(o) {\n      if (V)\n        throw new TypeError(\"Generator is already executing.\");\n      for (; D; )\n        try {\n          if (V = 1, G && (M = o[0] & 2 ? G.return : o[0] ? G.throw || ((M = G.return) && M.call(G), 0) : G.next) && !(M = M.call(G, o[1])).done)\n            return M;\n          switch (G = 0, M && (o = [o[0] & 2, M.value]), o[0]) {\n            case 0:\n            case 1:\n              M = o;\n              break;\n            case 4:\n              return D.label++, { value: o[1], done: !1 };\n            case 5:\n              D.label++, G = o[1], o = [0];\n              continue;\n            case 7:\n              o = D.ops.pop(), D.trys.pop();\n              continue;\n            default:\n              if (M = D.trys, !(M = M.length > 0 && M[M.length - 1]) && (o[0] === 6 || o[0] === 2)) {\n                D = 0;\n                continue;\n              }\n              if (o[0] === 3 && (!M || o[1] > M[0] && o[1] < M[3])) {\n                D.label = o[1];\n                break;\n              }\n              if (o[0] === 6 && D.label < M[1]) {\n                D.label = M[1], M = o;\n                break;\n              }\n              if (M && D.label < M[2]) {\n                D.label = M[2], D.ops.push(o);\n                break;\n              }\n              M[2] && D.ops.pop(), D.trys.pop();\n              continue;\n          }\n          o = ne.call(Y, D);\n        } catch (u) {\n          o = [6, u], G = 0;\n        } finally {\n          V = M = 0;\n        }\n      if (o[0] & 5)\n        throw o[1];\n      return { value: o[0] ? o[1] : void 0, done: !0 };\n    }\n  }, n = be && be.__importDefault || function(Y) {\n    return Y && Y.__esModule ? Y : { default: Y };\n  };\n  Object.defineProperty(Zr, \"__esModule\", { value: !0 }), Zr.fromQuorumWallet = Zr.fromKryptoKit = Zr.fromEtherCamp = Zr.fromEtherWallet = void 0;\n  var x = t(dt), m = C0, k = Hs, B = n(no()), z = Qs, C = c8;\n  function F(Y, ne) {\n    return Buffer.concat([Y.update(ne), Y.final()]);\n  }\n  var T = {\n    count: 1,\n    keysize: 16,\n    ivsize: 16,\n    digest: \"md5\"\n  };\n  function L(Y) {\n    return Y ? {\n      count: Y.count || T.count,\n      keysize: Y.keysize || T.keysize,\n      ivsize: Y.ivsize || T.ivsize,\n      digest: Y.digest || T.digest\n    } : T;\n  }\n  function O(Y, ne, D) {\n    var V = L(D);\n    function G(a) {\n      var o = x.createHash(V.digest);\n      o.update(a), o.update(Y), o.update(ne), a = o.digest();\n      for (var u = 1, h = V.count; u < h; u++)\n        o = x.createHash(V.digest), o.update(a), a = o.digest();\n      return a;\n    }\n    for (var M = [], p = 0; Buffer.concat(M).length < V.keysize + V.ivsize; )\n      M[p] = G(p === 0 ? Buffer.alloc(0) : M[p - 1]), p++;\n    var s = Buffer.concat(M);\n    return {\n      key: s.slice(0, V.keysize),\n      iv: s.slice(V.keysize, V.keysize + V.ivsize)\n    };\n  }\n  function q(Y) {\n    var ne = Buffer.from(Y, \"base64\");\n    return ne.slice(0, 8).toString() === \"Salted__\" ? {\n      salt: ne.slice(8, 16),\n      ciphertext: ne.slice(16)\n    } : { ciphertext: ne };\n  }\n  function R(Y, ne) {\n    var D = typeof Y == \"object\" ? Y : JSON.parse(Y), V;\n    if (D.locked) {\n      if (typeof ne != \"string\")\n        throw new Error(\"Password required\");\n      if (ne.length < 7)\n        throw new Error(\"Password must be at least 7 characters\");\n      var G = D.encrypted ? D.private.slice(0, 128) : D.private, M = q(G);\n      if (!M.salt)\n        throw new Error(\"Unsupported EtherWallet key format\");\n      var p = O(Buffer.from(ne), M.salt, { keysize: 32, ivsize: 16 }), s = x.createDecipheriv(\"aes-256-cbc\", p.key, p.iv);\n      V = F(s, Buffer.from(M.ciphertext)), V = Buffer.from(z.decode(V.toString()), \"hex\");\n    } else {\n      if (D.private.length !== 64)\n        throw new Error(\"Invalid private key length\");\n      V = Buffer.from(D.private, \"hex\");\n    }\n    var a = new B.default(V);\n    if (a.getAddressString() !== D.address)\n      throw new Error(\"Invalid private key or address\");\n    return a;\n  }\n  Zr.fromEtherWallet = R;\n  function U(Y) {\n    return new B.default((0, m.keccak256)(Buffer.from(Y)));\n  }\n  Zr.fromEtherCamp = U;\n  function H(Y, ne) {\n    return i(this, void 0, void 0, function() {\n      function D(u) {\n        function h(d) {\n          try {\n            return decodeURIComponent(d);\n          } catch {\n            return String.fromCharCode(65533);\n          }\n        }\n        for (var v = \"\", g = \"\", l = 0; l < u.length; l++)\n          u[l] <= 127 ? (v += h(g) + String.fromCharCode(u[l]), g = \"\") : g += \"%\" + u[l].toString(16);\n        return Buffer.from(v + h(g));\n      }\n      var V, G, M, p, s, a, o;\n      return c(this, function(u) {\n        switch (u.label) {\n          case 0:\n            return Y[0] === \"#\" && (Y = Y.slice(1)), V = Y[0], Y = Y.slice(1), V !== \"d\" ? [3, 1] : (G = (0, m.sha256)((0, m.toBuffer)(Y)), [3, 4]);\n          case 1:\n            if (V !== \"q\")\n              return [3, 3];\n            if (typeof ne != \"string\")\n              throw new Error(\"Password required\");\n            return M = (0, m.sha256)(Buffer.from(Y.slice(0, 30))), p = Y.slice(30, 46), s = D(M), [\n              4,\n              (0, k.scrypt)(Buffer.from(ne, \"utf8\"), s, 16384, 8, 1, 32)\n              /* FIXME: try to use `crypto` instead of `aesjs`\n              \n                  // NOTE: ECB doesn't use the IV, so it can be anything\n                  var decipher = crypto.createDecipheriv(\"aes-256-ecb\", aesKey, Buffer.from(0))\n              \n                  // FIXME: this is a clear abuse, but seems to match how ECB in aesjs works\n                  privKey = Buffer.concat([\n                    decipher.update(encryptedSeed).slice(0, 16),\n                    decipher.update(encryptedSeed).slice(0, 16),\n                  ])\n                  */\n            ];\n          case 2:\n            if (a = u.sent(), o = new C.ModeOfOperation.ecb(a), G = Buffer.concat([\n              Buffer.from(o.decrypt(M.slice(0, 16))),\n              Buffer.from(o.decrypt(M.slice(16, 32)))\n            ]), p.length > 0 && p !== (0, m.sha256)((0, m.sha256)(G)).slice(0, 8).toString(\"hex\"))\n              throw new Error(\"Failed to decrypt input - possibly invalid passphrase\");\n            return [3, 4];\n          case 3:\n            throw new Error(\"Unsupported or invalid entropy type\");\n          case 4:\n            return [2, new B.default(G)];\n        }\n      });\n    });\n  }\n  Zr.fromKryptoKit = H;\n  function Z(Y, ne) {\n    if (Y.length < 10)\n      throw new Error(\"Passphrase must be at least 10 characters\");\n    if (ne.length < 10)\n      throw new Error(\"User id must be at least 10 characters\");\n    var D = Y + ne, V = x.pbkdf2Sync(D, D, 2e3, 32, \"sha256\");\n    return new B.default(V);\n  }\n  Zr.fromQuorumWallet = Z;\n  var W = {\n    fromEtherWallet: R,\n    fromEtherCamp: U,\n    fromKryptoKit: H,\n    fromQuorumWallet: Z\n  };\n  return Zr.default = W, Zr;\n}\nvar _i, s8 = new Uint8Array(16);\nfunction ru() {\n  if (!_i && (_i = typeof crypto < \"u\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto < \"u\" && typeof msCrypto.getRandomValues == \"function\" && msCrypto.getRandomValues.bind(msCrypto), !_i))\n    throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n  return _i(s8);\n}\nconst u8 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nfunction Tn(e) {\n  return typeof e == \"string\" && u8.test(e);\n}\nvar mr = [];\nfor (var Ff = 0; Ff < 256; ++Ff)\n  mr.push((Ff + 256).toString(16).substr(1));\nfunction jn(e) {\n  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, t = (mr[e[r + 0]] + mr[e[r + 1]] + mr[e[r + 2]] + mr[e[r + 3]] + \"-\" + mr[e[r + 4]] + mr[e[r + 5]] + \"-\" + mr[e[r + 6]] + mr[e[r + 7]] + \"-\" + mr[e[r + 8]] + mr[e[r + 9]] + \"-\" + mr[e[r + 10]] + mr[e[r + 11]] + mr[e[r + 12]] + mr[e[r + 13]] + mr[e[r + 14]] + mr[e[r + 15]]).toLowerCase();\n  if (!Tn(t))\n    throw TypeError(\"Stringified UUID is invalid\");\n  return t;\n}\nvar Rc, Cf, Lf = 0, Uf = 0;\nfunction l8(e, r, t) {\n  var i = r && t || 0, c = r || new Array(16);\n  e = e || {};\n  var n = e.node || Rc, x = e.clockseq !== void 0 ? e.clockseq : Cf;\n  if (n == null || x == null) {\n    var m = e.random || (e.rng || ru)();\n    n == null && (n = Rc = [m[0] | 1, m[1], m[2], m[3], m[4], m[5]]), x == null && (x = Cf = (m[6] << 8 | m[7]) & 16383);\n  }\n  var k = e.msecs !== void 0 ? e.msecs : Date.now(), B = e.nsecs !== void 0 ? e.nsecs : Uf + 1, z = k - Lf + (B - Uf) / 1e4;\n  if (z < 0 && e.clockseq === void 0 && (x = x + 1 & 16383), (z < 0 || k > Lf) && e.nsecs === void 0 && (B = 0), B >= 1e4)\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  Lf = k, Uf = B, Cf = x, k += 122192928e5;\n  var C = ((k & 268435455) * 1e4 + B) % 4294967296;\n  c[i++] = C >>> 24 & 255, c[i++] = C >>> 16 & 255, c[i++] = C >>> 8 & 255, c[i++] = C & 255;\n  var F = k / 4294967296 * 1e4 & 268435455;\n  c[i++] = F >>> 8 & 255, c[i++] = F & 255, c[i++] = F >>> 24 & 15 | 16, c[i++] = F >>> 16 & 255, c[i++] = x >>> 8 | 128, c[i++] = x & 255;\n  for (var T = 0; T < 6; ++T)\n    c[i + T] = n[T];\n  return r || jn(c);\n}\nfunction tu(e) {\n  if (!Tn(e))\n    throw TypeError(\"Invalid UUID\");\n  var r, t = new Uint8Array(16);\n  return t[0] = (r = parseInt(e.slice(0, 8), 16)) >>> 24, t[1] = r >>> 16 & 255, t[2] = r >>> 8 & 255, t[3] = r & 255, t[4] = (r = parseInt(e.slice(9, 13), 16)) >>> 8, t[5] = r & 255, t[6] = (r = parseInt(e.slice(14, 18), 16)) >>> 8, t[7] = r & 255, t[8] = (r = parseInt(e.slice(19, 23), 16)) >>> 8, t[9] = r & 255, t[10] = (r = parseInt(e.slice(24, 36), 16)) / 1099511627776 & 255, t[11] = r / 4294967296 & 255, t[12] = r >>> 24 & 255, t[13] = r >>> 16 & 255, t[14] = r >>> 8 & 255, t[15] = r & 255, t;\n}\nfunction b8(e) {\n  e = unescape(encodeURIComponent(e));\n  for (var r = [], t = 0; t < e.length; ++t)\n    r.push(e.charCodeAt(t));\n  return r;\n}\nvar h8 = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", p8 = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\";\nfunction au(e, r, t) {\n  function i(c, n, x, m) {\n    if (typeof c == \"string\" && (c = b8(c)), typeof n == \"string\" && (n = tu(n)), n.length !== 16)\n      throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n    var k = new Uint8Array(16 + c.length);\n    if (k.set(n), k.set(c, n.length), k = t(k), k[6] = k[6] & 15 | r, k[8] = k[8] & 63 | 128, x) {\n      m = m || 0;\n      for (var B = 0; B < 16; ++B)\n        x[m + B] = k[B];\n      return x;\n    }\n    return jn(k);\n  }\n  try {\n    i.name = e;\n  } catch {\n  }\n  return i.DNS = h8, i.URL = p8, i;\n}\nfunction v8(e) {\n  if (typeof e == \"string\") {\n    var r = unescape(encodeURIComponent(e));\n    e = new Uint8Array(r.length);\n    for (var t = 0; t < r.length; ++t)\n      e[t] = r.charCodeAt(t);\n  }\n  return x8(m8(g8(e), e.length * 8));\n}\nfunction x8(e) {\n  for (var r = [], t = e.length * 32, i = \"0123456789abcdef\", c = 0; c < t; c += 8) {\n    var n = e[c >> 5] >>> c % 32 & 255, x = parseInt(i.charAt(n >>> 4 & 15) + i.charAt(n & 15), 16);\n    r.push(x);\n  }\n  return r;\n}\nfunction iu(e) {\n  return (e + 64 >>> 9 << 4) + 14 + 1;\n}\nfunction m8(e, r) {\n  e[r >> 5] |= 128 << r % 32, e[iu(r) - 1] = r;\n  for (var t = 1732584193, i = -271733879, c = -1732584194, n = 271733878, x = 0; x < e.length; x += 16) {\n    var m = t, k = i, B = c, z = n;\n    t = Sr(t, i, c, n, e[x], 7, -680876936), n = Sr(n, t, i, c, e[x + 1], 12, -389564586), c = Sr(c, n, t, i, e[x + 2], 17, 606105819), i = Sr(i, c, n, t, e[x + 3], 22, -1044525330), t = Sr(t, i, c, n, e[x + 4], 7, -176418897), n = Sr(n, t, i, c, e[x + 5], 12, 1200080426), c = Sr(c, n, t, i, e[x + 6], 17, -1473231341), i = Sr(i, c, n, t, e[x + 7], 22, -45705983), t = Sr(t, i, c, n, e[x + 8], 7, 1770035416), n = Sr(n, t, i, c, e[x + 9], 12, -1958414417), c = Sr(c, n, t, i, e[x + 10], 17, -42063), i = Sr(i, c, n, t, e[x + 11], 22, -1990404162), t = Sr(t, i, c, n, e[x + 12], 7, 1804603682), n = Sr(n, t, i, c, e[x + 13], 12, -40341101), c = Sr(c, n, t, i, e[x + 14], 17, -1502002290), i = Sr(i, c, n, t, e[x + 15], 22, 1236535329), t = kr(t, i, c, n, e[x + 1], 5, -165796510), n = kr(n, t, i, c, e[x + 6], 9, -1069501632), c = kr(c, n, t, i, e[x + 11], 14, 643717713), i = kr(i, c, n, t, e[x], 20, -373897302), t = kr(t, i, c, n, e[x + 5], 5, -701558691), n = kr(n, t, i, c, e[x + 10], 9, 38016083), c = kr(c, n, t, i, e[x + 15], 14, -660478335), i = kr(i, c, n, t, e[x + 4], 20, -405537848), t = kr(t, i, c, n, e[x + 9], 5, 568446438), n = kr(n, t, i, c, e[x + 14], 9, -1019803690), c = kr(c, n, t, i, e[x + 3], 14, -187363961), i = kr(i, c, n, t, e[x + 8], 20, 1163531501), t = kr(t, i, c, n, e[x + 13], 5, -1444681467), n = kr(n, t, i, c, e[x + 2], 9, -51403784), c = kr(c, n, t, i, e[x + 7], 14, 1735328473), i = kr(i, c, n, t, e[x + 12], 20, -1926607734), t = Er(t, i, c, n, e[x + 5], 4, -378558), n = Er(n, t, i, c, e[x + 8], 11, -2022574463), c = Er(c, n, t, i, e[x + 11], 16, 1839030562), i = Er(i, c, n, t, e[x + 14], 23, -35309556), t = Er(t, i, c, n, e[x + 1], 4, -1530992060), n = Er(n, t, i, c, e[x + 4], 11, 1272893353), c = Er(c, n, t, i, e[x + 7], 16, -155497632), i = Er(i, c, n, t, e[x + 10], 23, -1094730640), t = Er(t, i, c, n, e[x + 13], 4, 681279174), n = Er(n, t, i, c, e[x], 11, -358537222), c = Er(c, n, t, i, e[x + 3], 16, -722521979), i = Er(i, c, n, t, e[x + 6], 23, 76029189), t = Er(t, i, c, n, e[x + 9], 4, -640364487), n = Er(n, t, i, c, e[x + 12], 11, -421815835), c = Er(c, n, t, i, e[x + 15], 16, 530742520), i = Er(i, c, n, t, e[x + 2], 23, -995338651), t = Ar(t, i, c, n, e[x], 6, -198630844), n = Ar(n, t, i, c, e[x + 7], 10, 1126891415), c = Ar(c, n, t, i, e[x + 14], 15, -1416354905), i = Ar(i, c, n, t, e[x + 5], 21, -57434055), t = Ar(t, i, c, n, e[x + 12], 6, 1700485571), n = Ar(n, t, i, c, e[x + 3], 10, -1894986606), c = Ar(c, n, t, i, e[x + 10], 15, -1051523), i = Ar(i, c, n, t, e[x + 1], 21, -2054922799), t = Ar(t, i, c, n, e[x + 8], 6, 1873313359), n = Ar(n, t, i, c, e[x + 15], 10, -30611744), c = Ar(c, n, t, i, e[x + 6], 15, -1560198380), i = Ar(i, c, n, t, e[x + 13], 21, 1309151649), t = Ar(t, i, c, n, e[x + 4], 6, -145523070), n = Ar(n, t, i, c, e[x + 11], 10, -1120210379), c = Ar(c, n, t, i, e[x + 2], 15, 718787259), i = Ar(i, c, n, t, e[x + 9], 21, -343485551), t = Lt(t, m), i = Lt(i, k), c = Lt(c, B), n = Lt(n, z);\n  }\n  return [t, i, c, n];\n}\nfunction g8(e) {\n  if (e.length === 0)\n    return [];\n  for (var r = e.length * 8, t = new Uint32Array(iu(r)), i = 0; i < r; i += 8)\n    t[i >> 5] |= (e[i / 8] & 255) << i % 32;\n  return t;\n}\nfunction Lt(e, r) {\n  var t = (e & 65535) + (r & 65535), i = (e >> 16) + (r >> 16) + (t >> 16);\n  return i << 16 | t & 65535;\n}\nfunction y8(e, r) {\n  return e << r | e >>> 32 - r;\n}\nfunction Pn(e, r, t, i, c, n) {\n  return Lt(y8(Lt(Lt(r, e), Lt(i, n)), c), t);\n}\nfunction Sr(e, r, t, i, c, n, x) {\n  return Pn(r & t | ~r & i, e, r, c, n, x);\n}\nfunction kr(e, r, t, i, c, n, x) {\n  return Pn(r & i | t & ~i, e, r, c, n, x);\n}\nfunction Er(e, r, t, i, c, n, x) {\n  return Pn(r ^ t ^ i, e, r, c, n, x);\n}\nfunction Ar(e, r, t, i, c, n, x) {\n  return Pn(t ^ (r | ~i), e, r, c, n, x);\n}\nvar w8 = au(\"v3\", 48, v8);\nconst _8 = w8;\nfunction M8(e, r, t) {\n  e = e || {};\n  var i = e.random || (e.rng || ru)();\n  if (i[6] = i[6] & 15 | 64, i[8] = i[8] & 63 | 128, r) {\n    t = t || 0;\n    for (var c = 0; c < 16; ++c)\n      r[t + c] = i[c];\n    return r;\n  }\n  return jn(i);\n}\nfunction S8(e, r, t, i) {\n  switch (e) {\n    case 0:\n      return r & t ^ ~r & i;\n    case 1:\n      return r ^ t ^ i;\n    case 2:\n      return r & t ^ r & i ^ t & i;\n    case 3:\n      return r ^ t ^ i;\n  }\n}\nfunction $f(e, r) {\n  return e << r | e >>> 32 - r;\n}\nfunction k8(e) {\n  var r = [1518500249, 1859775393, 2400959708, 3395469782], t = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  if (typeof e == \"string\") {\n    var i = unescape(encodeURIComponent(e));\n    e = [];\n    for (var c = 0; c < i.length; ++c)\n      e.push(i.charCodeAt(c));\n  } else\n    Array.isArray(e) || (e = Array.prototype.slice.call(e));\n  e.push(128);\n  for (var n = e.length / 4 + 2, x = Math.ceil(n / 16), m = new Array(x), k = 0; k < x; ++k) {\n    for (var B = new Uint32Array(16), z = 0; z < 16; ++z)\n      B[z] = e[k * 64 + z * 4] << 24 | e[k * 64 + z * 4 + 1] << 16 | e[k * 64 + z * 4 + 2] << 8 | e[k * 64 + z * 4 + 3];\n    m[k] = B;\n  }\n  m[x - 1][14] = (e.length - 1) * 8 / Math.pow(2, 32), m[x - 1][14] = Math.floor(m[x - 1][14]), m[x - 1][15] = (e.length - 1) * 8 & 4294967295;\n  for (var C = 0; C < x; ++C) {\n    for (var F = new Uint32Array(80), T = 0; T < 16; ++T)\n      F[T] = m[C][T];\n    for (var L = 16; L < 80; ++L)\n      F[L] = $f(F[L - 3] ^ F[L - 8] ^ F[L - 14] ^ F[L - 16], 1);\n    for (var O = t[0], q = t[1], R = t[2], U = t[3], H = t[4], Z = 0; Z < 80; ++Z) {\n      var W = Math.floor(Z / 20), Y = $f(O, 5) + S8(W, q, R, U) + H + r[W] + F[Z] >>> 0;\n      H = U, U = R, R = $f(q, 30) >>> 0, q = O, O = Y;\n    }\n    t[0] = t[0] + O >>> 0, t[1] = t[1] + q >>> 0, t[2] = t[2] + R >>> 0, t[3] = t[3] + U >>> 0, t[4] = t[4] + H >>> 0;\n  }\n  return [t[0] >> 24 & 255, t[0] >> 16 & 255, t[0] >> 8 & 255, t[0] & 255, t[1] >> 24 & 255, t[1] >> 16 & 255, t[1] >> 8 & 255, t[1] & 255, t[2] >> 24 & 255, t[2] >> 16 & 255, t[2] >> 8 & 255, t[2] & 255, t[3] >> 24 & 255, t[3] >> 16 & 255, t[3] >> 8 & 255, t[3] & 255, t[4] >> 24 & 255, t[4] >> 16 & 255, t[4] >> 8 & 255, t[4] & 255];\n}\nvar E8 = au(\"v5\", 80, k8);\nconst A8 = E8, B8 = \"00000000-0000-0000-0000-000000000000\";\nfunction z8(e) {\n  if (!Tn(e))\n    throw TypeError(\"Invalid UUID\");\n  return parseInt(e.substr(14, 1), 16);\n}\nconst I8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  NIL: B8,\n  parse: tu,\n  stringify: jn,\n  v1: l8,\n  v3: _8,\n  v4: M8,\n  v5: A8,\n  validate: Tn,\n  version: z8\n}, Symbol.toStringTag, { value: \"Module\" })), R8 = /* @__PURE__ */ Pc(I8);\nvar Tc;\nfunction no() {\n  return Tc || (Tc = 1, function(e) {\n    var r = be && be.__assign || function() {\n      return r = Object.assign || function(D) {\n        for (var V, G = 1, M = arguments.length; G < M; G++) {\n          V = arguments[G];\n          for (var p in V)\n            Object.prototype.hasOwnProperty.call(V, p) && (D[p] = V[p]);\n        }\n        return D;\n      }, r.apply(this, arguments);\n    }, t = be && be.__createBinding || (Object.create ? function(D, V, G, M) {\n      M === void 0 && (M = G), Object.defineProperty(D, M, { enumerable: !0, get: function() {\n        return V[G];\n      } });\n    } : function(D, V, G, M) {\n      M === void 0 && (M = G), D[M] = V[G];\n    }), i = be && be.__setModuleDefault || (Object.create ? function(D, V) {\n      Object.defineProperty(D, \"default\", { enumerable: !0, value: V });\n    } : function(D, V) {\n      D.default = V;\n    }), c = be && be.__importStar || function(D) {\n      if (D && D.__esModule)\n        return D;\n      var V = {};\n      if (D != null)\n        for (var G in D)\n          G !== \"default\" && Object.prototype.hasOwnProperty.call(D, G) && t(V, D, G);\n      return i(V, D), V;\n    }, n = be && be.__awaiter || function(D, V, G, M) {\n      function p(s) {\n        return s instanceof G ? s : new G(function(a) {\n          a(s);\n        });\n      }\n      return new (G || (G = Promise))(function(s, a) {\n        function o(v) {\n          try {\n            h(M.next(v));\n          } catch (g) {\n            a(g);\n          }\n        }\n        function u(v) {\n          try {\n            h(M.throw(v));\n          } catch (g) {\n            a(g);\n          }\n        }\n        function h(v) {\n          v.done ? s(v.value) : p(v.value).then(o, u);\n        }\n        h((M = M.apply(D, V || [])).next());\n      });\n    }, x = be && be.__generator || function(D, V) {\n      var G = { label: 0, sent: function() {\n        if (s[0] & 1)\n          throw s[1];\n        return s[1];\n      }, trys: [], ops: [] }, M, p, s, a;\n      return a = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == \"function\" && (a[Symbol.iterator] = function() {\n        return this;\n      }), a;\n      function o(h) {\n        return function(v) {\n          return u([h, v]);\n        };\n      }\n      function u(h) {\n        if (M)\n          throw new TypeError(\"Generator is already executing.\");\n        for (; G; )\n          try {\n            if (M = 1, p && (s = h[0] & 2 ? p.return : h[0] ? p.throw || ((s = p.return) && s.call(p), 0) : p.next) && !(s = s.call(p, h[1])).done)\n              return s;\n            switch (p = 0, s && (h = [h[0] & 2, s.value]), h[0]) {\n              case 0:\n              case 1:\n                s = h;\n                break;\n              case 4:\n                return G.label++, { value: h[1], done: !1 };\n              case 5:\n                G.label++, p = h[1], h = [0];\n                continue;\n              case 7:\n                h = G.ops.pop(), G.trys.pop();\n                continue;\n              default:\n                if (s = G.trys, !(s = s.length > 0 && s[s.length - 1]) && (h[0] === 6 || h[0] === 2)) {\n                  G = 0;\n                  continue;\n                }\n                if (h[0] === 3 && (!s || h[1] > s[0] && h[1] < s[3])) {\n                  G.label = h[1];\n                  break;\n                }\n                if (h[0] === 6 && G.label < s[1]) {\n                  G.label = s[1], s = h;\n                  break;\n                }\n                if (s && G.label < s[2]) {\n                  G.label = s[2], G.ops.push(h);\n                  break;\n                }\n                s[2] && G.ops.pop(), G.trys.pop();\n                continue;\n            }\n            h = V.call(D, G);\n          } catch (v) {\n            h = [6, v], p = 0;\n          } finally {\n            M = s = 0;\n          }\n        if (h[0] & 5)\n          throw h[1];\n        return { value: h[0] ? h[1] : void 0, done: !0 };\n      }\n    }, m = be && be.__importDefault || function(D) {\n      return D && D.__esModule ? D : { default: D };\n    };\n    Object.defineProperty(e, \"__esModule\", { value: !0 }), e.thirdparty = e.hdkey = void 0;\n    var k = c(dt), B = C0, z = Hs, C = o8();\n    Object.defineProperty(e, \"hdkey\", { enumerable: !0, get: function() {\n      return m(C).default;\n    } });\n    var F = d8();\n    Object.defineProperty(e, \"thirdparty\", { enumerable: !0, get: function() {\n      return m(F).default;\n    } });\n    var T = Vs, L = ln, O = R8.v4;\n    function q(D, V, G) {\n      if (V.toLowerCase().startsWith(\"0x\") && (V = V.slice(2)), !V && !G)\n        return V;\n      if (G % 2)\n        throw new Error(\"Invalid length argument, must be an even number\");\n      if (typeof G == \"number\" && V.length !== G)\n        throw new Error(\"Invalid \" + D + \", string must be \" + G + \" hex characters\");\n      if (!/^([0-9a-f]{2})+$/i.test(V)) {\n        var M = typeof G == \"number\" ? G : \"empty or a non-zero even number of\";\n        throw new Error(\"Invalid \" + D + \", string must be \" + M + \" hex characters\");\n      }\n      return V;\n    }\n    function R(D, V, G) {\n      if (!Buffer.isBuffer(V)) {\n        var M = typeof G == \"number\" ? \"\" + G * 2 : \"empty or a non-zero even number of\", p = typeof G == \"number\" ? \" (\" + G + \" bytes)\" : \"\";\n        throw new Error(\"Invalid \" + D + \", must be a string (\" + M + \" hex characters) or buffer\" + p);\n      }\n      if (typeof G == \"number\" && V.length !== G)\n        throw new Error(\"Invalid \" + D + \", buffer must be \" + G + \" bytes\");\n      return V;\n    }\n    function U(D) {\n      var V = {\n        cipher: \"aes-128-ctr\",\n        kdf: \"scrypt\",\n        salt: L(32),\n        iv: L(16),\n        uuid: L(16),\n        dklen: 32,\n        c: 262144,\n        n: 262144,\n        r: 8,\n        p: 1\n      };\n      return D ? (typeof D.salt == \"string\" && (D.salt = Buffer.from(q(\"salt\", D.salt), \"hex\")), typeof D.iv == \"string\" && (D.iv = Buffer.from(q(\"iv\", D.iv, 32), \"hex\")), typeof D.uuid == \"string\" && (D.uuid = Buffer.from(q(\"uuid\", D.uuid, 32), \"hex\")), D.salt && R(\"salt\", D.salt), D.iv && R(\"iv\", D.iv, 16), D.uuid && R(\"uuid\", D.uuid, 16), r(r({}, V), D)) : V;\n    }\n    function H(D) {\n      return {\n        dklen: D.dklen,\n        salt: D.salt,\n        c: D.c,\n        prf: \"hmac-sha256\"\n      };\n    }\n    function Z(D) {\n      return {\n        dklen: D.dklen,\n        salt: D.salt,\n        n: D.n,\n        r: D.r,\n        p: D.p\n      };\n    }\n    var W = (\n      /** @class */\n      function() {\n        function D(V, G) {\n          if (G === void 0 && (G = void 0), this.privateKey = V, this.publicKey = G, V && G)\n            throw new Error(\"Cannot supply both a private and a public key to the constructor\");\n          if (V && !(0, B.isValidPrivate)(V))\n            throw new Error(\"Private key does not satisfy the curve requirements (ie. it is invalid)\");\n          if (G && !(0, B.isValidPublic)(G))\n            throw new Error(\"Invalid public key\");\n        }\n        return D.generate = function(V) {\n          if (V === void 0 && (V = !1), V)\n            for (var G = new B.BN(\"088f924eeceeda7fe92e1f5b0fffffffffffffff\", 16); ; ) {\n              var M = L(32);\n              if (new B.BN((0, B.privateToAddress)(M)).lte(G))\n                return new D(M);\n            }\n          else\n            return new D(L(32));\n        }, D.generateVanityAddress = function(V) {\n          for (V instanceof RegExp || (V = new RegExp(V)); ; ) {\n            var G = L(32), M = (0, B.privateToAddress)(G);\n            if (V.test(M.toString(\"hex\")))\n              return new D(G);\n          }\n        }, D.fromPublicKey = function(V, G) {\n          return G === void 0 && (G = !1), G && (V = (0, B.importPublic)(V)), new D(void 0, V);\n        }, D.fromExtendedPublicKey = function(V) {\n          if (V.slice(0, 4) !== \"xpub\")\n            throw new Error(\"Not an extended public key\");\n          var G = T.decode(V).slice(45);\n          return D.fromPublicKey(G, !0);\n        }, D.fromPrivateKey = function(V) {\n          return new D(V);\n        }, D.fromExtendedPrivateKey = function(V) {\n          if (V.slice(0, 4) !== \"xprv\")\n            throw new Error(\"Not an extended private key\");\n          var G = T.decode(V);\n          if (G[45] !== 0)\n            throw new Error(\"Invalid extended private key\");\n          return D.fromPrivateKey(G.slice(46));\n        }, D.fromV1 = function(V, G) {\n          return n(this, void 0, void 0, function() {\n            var M, p, s, a, o, u, h;\n            return x(this, function(v) {\n              switch (v.label) {\n                case 0:\n                  if (M = typeof V == \"object\" ? V : JSON.parse(V), M.Version !== \"1\")\n                    throw new Error(\"Not a V1 Wallet\");\n                  if (M.Crypto.KeyHeader.Kdf !== \"scrypt\")\n                    throw new Error(\"Unsupported key derivation scheme\");\n                  return p = M.Crypto.KeyHeader.KdfParams, [4, (0, z.scrypt)(Buffer.from(G), Buffer.from(M.Crypto.Salt, \"hex\"), p.N, p.R, p.P, p.DkLen)];\n                case 1:\n                  if (s = v.sent(), a = Buffer.from(M.Crypto.CipherText, \"hex\"), o = (0, B.keccak256)(Buffer.concat([s.slice(16, 32), a])), o.toString(\"hex\") !== M.Crypto.MAC)\n                    throw new Error(\"Key derivation failed - possibly wrong passphrase\");\n                  return u = k.createDecipheriv(\"aes-128-cbc\", (0, B.keccak256)(s.slice(0, 16)).slice(0, 16), Buffer.from(M.Crypto.IV, \"hex\")), h = Y(u, a), [2, new D(h)];\n              }\n            });\n          });\n        }, D.fromV3 = function(V, G, M) {\n          return M === void 0 && (M = !1), n(this, void 0, void 0, function() {\n            var p, s, a, o, u, h, v;\n            return x(this, function(g) {\n              switch (g.label) {\n                case 0:\n                  if (p = typeof V == \"object\" ? V : JSON.parse(M ? V.toLowerCase() : V), p.version !== 3)\n                    throw new Error(\"Not a V3 wallet\");\n                  return p.crypto.kdf !== \"scrypt\" ? [3, 2] : (a = p.crypto.kdfparams, [4, (0, z.scrypt)(Buffer.from(G), Buffer.from(a.salt, \"hex\"), a.n, a.r, a.p, a.dklen)]);\n                case 1:\n                  return s = g.sent(), [3, 3];\n                case 2:\n                  if (p.crypto.kdf === \"pbkdf2\") {\n                    if (a = p.crypto.kdfparams, a.prf !== \"hmac-sha256\")\n                      throw new Error(\"Unsupported parameters to PBKDF2\");\n                    s = k.pbkdf2Sync(Buffer.from(G), Buffer.from(a.salt, \"hex\"), a.c, a.dklen, \"sha256\");\n                  } else\n                    throw new Error(\"Unsupported key derivation scheme\");\n                  g.label = 3;\n                case 3:\n                  if (o = Buffer.from(p.crypto.ciphertext, \"hex\"), u = (0, B.keccak256)(Buffer.concat([Buffer.from(s.slice(16, 32)), o])), u.toString(\"hex\") !== p.crypto.mac)\n                    throw new Error(\"Key derivation failed - possibly wrong passphrase\");\n                  return h = k.createDecipheriv(p.crypto.cipher, s.slice(0, 16), Buffer.from(p.crypto.cipherparams.iv, \"hex\")), v = Y(h, o), [2, new D(v)];\n              }\n            });\n          });\n        }, D.fromEthSale = function(V, G) {\n          var M = typeof V == \"object\" ? V : JSON.parse(V), p = Buffer.from(M.encseed, \"hex\"), s = k.pbkdf2Sync(G, G, 2e3, 32, \"sha256\").slice(0, 16), a = k.createDecipheriv(\"aes-128-cbc\", s, p.slice(0, 16)), o = Y(a, p.slice(16)), u = new D((0, B.keccak256)(o));\n          if (u.getAddress().toString(\"hex\") !== M.ethaddr)\n            throw new Error(\"Decoded key mismatch - possibly wrong passphrase\");\n          return u;\n        }, Object.defineProperty(D.prototype, \"pubKey\", {\n          // private getters\n          /**\n           * Returns the wallet's public key.\n           */\n          get: function() {\n            return ne(this.publicKey) || (this.publicKey = (0, B.privateToPublic)(this.privateKey)), this.publicKey;\n          },\n          enumerable: !1,\n          configurable: !0\n        }), Object.defineProperty(D.prototype, \"privKey\", {\n          /**\n           * Returns the wallet's private key.\n           */\n          get: function() {\n            if (!ne(this.privateKey))\n              throw new Error(\"This is a public key only wallet\");\n            return this.privateKey;\n          },\n          enumerable: !1,\n          configurable: !0\n        }), D.prototype.getPrivateKey = function() {\n          return this.privKey;\n        }, D.prototype.getPrivateKeyString = function() {\n          return (0, B.bufferToHex)(this.privKey);\n        }, D.prototype.getPublicKey = function() {\n          return this.pubKey;\n        }, D.prototype.getPublicKeyString = function() {\n          return (0, B.bufferToHex)(this.getPublicKey());\n        }, D.prototype.getAddress = function() {\n          return (0, B.publicToAddress)(this.pubKey);\n        }, D.prototype.getAddressString = function() {\n          return (0, B.bufferToHex)(this.getAddress());\n        }, D.prototype.getChecksumAddressString = function() {\n          return (0, B.toChecksumAddress)(this.getAddressString());\n        }, D.prototype.toV3 = function(V, G) {\n          return n(this, void 0, void 0, function() {\n            var M, p, s, a, o, u, h;\n            return x(this, function(v) {\n              switch (v.label) {\n                case 0:\n                  if (!ne(this.privateKey))\n                    throw new Error(\"This is a public key only wallet\");\n                  switch (M = U(G), a = M.kdf, a) {\n                    case \"pbkdf2\":\n                      return [3, 1];\n                    case \"scrypt\":\n                      return [3, 2];\n                  }\n                  return [3, 4];\n                case 1:\n                  return p = H(M), s = k.pbkdf2Sync(Buffer.from(V), p.salt, p.c, p.dklen, \"sha256\"), [3, 5];\n                case 2:\n                  return p = Z(M), [4, (0, z.scrypt)(Buffer.from(V), p.salt, p.n, p.r, p.p, p.dklen)];\n                case 3:\n                  return s = v.sent(), [3, 5];\n                case 4:\n                  throw new Error(\"Unsupported kdf\");\n                case 5:\n                  if (o = k.createCipheriv(M.cipher, s.slice(0, 16), M.iv), !o)\n                    throw new Error(\"Unsupported cipher\");\n                  return u = Y(o, this.privKey), h = (0, B.keccak256)(Buffer.concat([Buffer.from(s.slice(16, 32)), Buffer.from(u)])), [2, {\n                    version: 3,\n                    id: O({ random: M.uuid }),\n                    // @ts-ignore - the official V3 keystore spec omits the address key\n                    address: this.getAddress().toString(\"hex\"),\n                    crypto: {\n                      ciphertext: u.toString(\"hex\"),\n                      cipherparams: { iv: M.iv.toString(\"hex\") },\n                      cipher: M.cipher,\n                      kdf: M.kdf,\n                      kdfparams: r(r({}, p), { salt: p.salt.toString(\"hex\") }),\n                      mac: h.toString(\"hex\")\n                    }\n                  }];\n              }\n            });\n          });\n        }, D.prototype.getV3Filename = function(V) {\n          var G = V ? new Date(V) : /* @__PURE__ */ new Date();\n          return [\"UTC--\", G.toJSON().replace(/:/g, \"-\"), \"--\", this.getAddress().toString(\"hex\")].join(\"\");\n        }, D.prototype.toV3String = function(V, G) {\n          return n(this, void 0, void 0, function() {\n            var M, p;\n            return x(this, function(s) {\n              switch (s.label) {\n                case 0:\n                  return p = (M = JSON).stringify, [4, this.toV3(V, G)];\n                case 1:\n                  return [2, p.apply(M, [s.sent()])];\n              }\n            });\n          });\n        }, D;\n      }()\n    );\n    e.default = W;\n    function Y(D, V) {\n      return Buffer.concat([D.update(V), D.final()]);\n    }\n    function ne(D) {\n      return D != null;\n    }\n  }(Bf)), Bf;\n}\nvar T8 = no();\nconst nu = [\n  [\n    \"49ee3eba8c1600700ee1b87eb599f16716b0b1022947733551fde4050ca6804\",\n    \"3ca0cfe4b3bc6ddf346d49d06ea0ed34e621062c0e056c1d0405d266e10268a\"\n  ],\n  [\n    \"1ef15c18599971b7beced415a40f0c7deacfd9b0d1819e03d723d8bc943cfca\",\n    \"5668060aa49730b7be4801df46ec62de53ecd11abe43a32873000c36e8dc1f\"\n  ],\n  [\n    \"234287dcbaffe7f969c748655fca9e58fa8120b6d56eb0c1080d17957ebe47b\",\n    \"3b056f100f96fb21e889527d41f4e39940135dd7a6c94cc6ed0268ee89e5615\"\n  ],\n  [\n    \"3909690e1123c80678a7ba0fde0e8447f6f02b3f6b960034d1e93524f8b476\",\n    \"7122e9063d239d89d4e336753845b76f2b33ca0d7f0c1acd4b9fe974994cc19\"\n  ],\n  [\n    \"40fd002e38ea01a01b2702eb7c643e9decc2894cbf31765922e281939ab542c\",\n    \"109f720a79e2a41471f054ca885efd90c8cfbbec37991d1b6343991e0a3e740\"\n  ],\n  [\n    \"2f52066635c139fc2f64eb0bd5e3fd7a705f576854ec4f00aa60361fddb981b\",\n    \"6d78a24d8a5f97fc600318ce16b3c840315979c3273078ec1a285f217ee6a26\"\n  ],\n  [\n    \"6a0767a1fd60d5b9027a35af1b68e57a1c366ebcde2006cdd07af27043ef674\",\n    \"606b72c0ca0498b8c1817ed7922d550894c324f5efdfc85a19a1ae382411ca2\"\n  ],\n  [\n    \"7fa463ee2a2d6a585d5c3358918270f6c28c66df1f86803374d1edf3819cc62\",\n    \"a996edf01598832e644e1cae9a37288865ad80e2787f9bf958aceccc99afae\"\n  ],\n  [\n    \"3d4da70d1540da597dbae1651d28487604a4e66a4a1823b97e8e9639393dbec\",\n    \"45cdef70c35d3b6f0a2273a9886ccb6306d813e8204bdfd30b4efee63c8a3f9\"\n  ],\n  [\n    \"1e448fdbcd9896c6fbf5f36cb7e7fcb77a751ff2d942593cae023363cc7750e\",\n    \"30c81da0f3a8cb64468eaa491c7ae7b4842b62cb4148820da211afc4caffb3a\"\n  ],\n  [\n    \"6531acf1a7cb90a4eb27de0b7f915e387a3b0fd063ba6e1289b91f48411be26\",\n    \"31330f5daa091889981a3ea782ae997f5f171336ed0487a03f051551a2cafa2\"\n  ],\n  [\n    \"54be016394d5662d67d7e82f5e889ed2f97ccf95d911f57dd2362c4040ed4f4\",\n    \"c6cb184053f054d6a59c1bf0986d17090d25089b3fdcdaf185edc87ef113e5\"\n  ],\n  [\n    \"35b9ecd0499ca1d5d42dcbb0c6b4042b3733c64b607ca711e706e786ef2afc6\",\n    \"5624b476a5b21c3a544f0712d4817b06ad380a5a6529d323bf64da8ef862d8d\"\n  ],\n  [\n    \"4ce0378e3ee8f77ed58f2ddbd8bb7676c8a38bfb1d3694c275254bd8ca38e23\",\n    \"5a16fcbff0769c9cf2b02c31621878ec819fff4b8231bff82c6183db2746820\"\n  ],\n  [\n    \"648d5c6f98680a1b926bfeb01c00224c56fdcf751b251c4449c8a94f425cfcf\",\n    \"72c05ac793cd1620a833fbe2214d36900ebe446e095c62fcb740937f98cca8c\"\n  ],\n  [\n    \"bd09be3e4e1af8a14189977e334f097c18e4a8bf42577ef5aafa0f807bd89b\",\n    \"6e0e72ed7eb65c86cee29c411fb4761122558ee81013344ba8509c49de9f9b6\"\n  ],\n  [\n    \"35ea4e339b44ae7724419bdfbe07022253137a4afb7cbaffad341ea61249357\",\n    \"3665d676a026a174f367bb4417780e53a7803cb02d0db32eb4545c267c42f14\"\n  ],\n  [\n    \"36457bc744f42e697b825c2d1afd8f4029d696a4514710f81da52d88e178643\",\n    \"7c93715896735492a68c7969a024b3a8fd538bffc1521538107de1a5f13ce9c\"\n  ],\n  [\n    \"5b3a08ebcf9c109cc9082f70d9df2b9c11b5428ee23917b4e790c4c10f6e661\",\n    \"9d7b42ab0c20f5510df7ea5e196eec99342739077e9a168198c89da859753\"\n  ],\n  [\n    \"21883ef8580fc06e59481955d52ece3aca6e82c8c9fc58e216dcf46f96990c6\",\n    \"51a6423543e6e8a43e71da34cd90f5b520b8d33b67c4bf857573ab9e301aa4c\"\n  ],\n  [\n    \"19e86b77f9b581e81092b305c852faf53940a8f15f0a6990c414f04c0fa7ef9\",\n    \"515630e35d4398c9c79fc4ee08e1023fa47d8e03c6e7819c6d2ccef45398fa\"\n  ],\n  [\n    \"888ab8eb4c31bb2ac5b54aa320dbe1a69c96b864e8a5f54d89c1d1a6b86c24\",\n    \"730e148467f6a55ce22c5296f5380df88f38de76ef0b2de844cd3094aaaf3ea\"\n  ],\n  [\n    \"75e79ff13a894e7120dac17b7429c0c32ce7828f726c9973728c0977a5f5977\",\n    \"4960526e59c1c736561a201bc56f7d762641b39f609d273cc996f5d9197cfb8\"\n  ],\n  [\n    \"640fe009249115d7254f72ecafb3006139e4bed7e9041af51458c737282d1d5\",\n    \"3cc6c978a575246e2ce4f7ef1fcc7f63085db9ff98a1b1f3fe374087c0332c\"\n  ],\n  [\n    \"6d6fd09ccab7c26de9b3906191235deb5c34685580c488275356a05e209ca96\",\n    \"7157f81a34213dd8f91dea4f6df1bcfabc4ee091a3049eeeb3b7923d39b8645\"\n  ],\n  [\n    \"5531ca1d00f151d71da820918f74caf2985b24dca20e124721fff507b5a5876\",\n    \"518529643d3f25e47f72c322223ba60a63d6bfe78cf3f612215d9c19bf29200\"\n  ],\n  [\n    \"6192d454e4f8fe212bdfccd5b15dd5056d7622ffe456c6c67e5a7265aea49c4\",\n    \"2377a45dc630017ae863cb968ddb38333a70c7946d8684e6d7a6213f634b7bc\"\n  ],\n  [\n    \"542fb44b4ef3640a64fdb22a2560fb26668065c069cf31d1df424819a39ff18\",\n    \"5dbae9b0948e0361aea443503840341c322aa1a1366ce5390e71bf161f78f8c\"\n  ],\n  [\n    \"299ff3e3412a7eb4cb4a3051b07b1be2e7b1c4b789f39ffb52cba3d048b71de\",\n    \"1951d3175c02761b291d86b6c0a08387ad5e2a2130ccc33c852530572cb3958\"\n  ],\n  [\n    \"628ce3f5367dadc1411133e55eb25e2e3c2880d6e28754a5cb1c5d109627e73\",\n    \"ae3e9b7d50964e28bd15380400b7659b87affdef5d2586cbefcd9be7d67c0d\"\n  ],\n  [\n    \"6ea54aff064895eccf9db2283225d62044ae67621192b3346338948382f5933\",\n    \"6431507e51aadacfaf39f102a8ff387756e9b5e1bc8323d44acae55130d93db\"\n  ],\n  [\n    \"28097d50d175a6235320fe8cfe138dd9e46895d189582e472c38ad7a67d923a\",\n    \"7f9eab4133d7d09a7ff63368d6135c26262b62336eca1b5ca33f2096ce388ba\"\n  ],\n  [\n    \"619fd09cdd6ff4323973f256c2cbdcb224f7f25b8aef623af2d4a0105e62e02\",\n    \"2c95f0ae11d47eeae1bc7f1350f75f9185c5bc840382ceb38a797cae9c40308\"\n  ],\n  [\n    \"641c18982ced304512a3f2395942a38add0d6a7156229c2a7c8b8dfbe9beb96\",\n    \"6f6288c9c659b6af5ac975f4180deffe53d516399b2cc62f31732e9d4ba9837\"\n  ],\n  [\n    \"58ab546e51fe49fc5a382e4064a2bd6cfc268904412f86c26de14f28a71d0f2\",\n    \"124b7217943e7e328408e8afdfa7da00dcbc94a2bb85fd8e01fb162d2c2c0a9\"\n  ],\n  [\n    \"a82c2fdedbb26c3c762a12f7e86b0e01e65320e0a25a8399d665f6e266bf74\",\n    \"1a1de28e253f3e10f44d0111e8074f882d7f42e5900780ccbdc31da372d3fd8\"\n  ],\n  [\n    \"744c725a7455a992e3cf5bd007bc234dd4668dba285f553f38350ad94c1615b\",\n    \"7f721a87f48798bdc4a9c0eb88559e2ad7a74112fd901e70ea159e67a9c33f\"\n  ],\n  [\n    \"434df142ddaa60f7881b6348d91687de40457de7ccfb07f0304b9e820705d0c\",\n    \"7fae425e3b53f97dd1f5b20e49ed9fe24ff1efc341ba5e017ac89cf8df0cc39\"\n  ],\n  [\n    \"7a1e2b809dff46277021cbc376f79c37e1b683bbd6bca5317014f0dc0e1ae73\",\n    \"56790278a231912c334eff05281e08af1558e85516b4411ef64647c13bea431\"\n  ],\n  [\n    \"4931b7990348d41cf8907be79f45bb7991fd18f8a57868351c92fa7a34cbcd7\",\n    \"ca35091815cdf0837d396e25aad6052ad32d497a33b123256cffdc008bc50e\"\n  ],\n  [\n    \"250b815d352fd89f8210b624b147ea7d0a4f47bcac49f3ac9b777840da93ebe\",\n    \"1173f10e9691948b7da7632f328520455aadcba46e017f891e0a1d7da2bef04\"\n  ],\n  [\n    \"2223b85032fa67292f6e1f822628e6756e5c3cc08fc252ab88d63d624e4dfb2\",\n    \"55619ba96a7dcec77832fcb22cd5c21c7dcebc0280d730cba0002b67e0a8c63\"\n  ],\n  [\n    \"249b131e04de73af9820d3e22492d9ec51bdc0c4c4f34d95352fa44dd61f245\",\n    \"7576d3b5d136368ff01170a77d8286d0d1c7c40688862fb40813b4af3c6065e\"\n  ],\n  [\n    \"6777915d9b4769027eb7e04733f8a2d669c84fe06080f55e8a55674dfbf9efb\",\n    \"640d0ff384c9635e1af364760f104e058e3c86209fa9d2320aeac887b2e02d8\"\n  ],\n  [\n    \"2abe3f237681052f002414399111cf07f8421535af41251edc427a36b5b19c9\",\n    \"636ce4deaf468a503ab20ccb2f7e5bdc98551656ebf53e9c7786b11dd9090be\"\n  ],\n  [\n    \"4d5cc5414758ea1be55be779bd7da296c7e11f1564d9e8797ceea347c16f8ea\",\n    \"1a680c4c410cf5ddc74e95ff2897c193edaaecce5b2cde4e96bbae5c0054eff\"\n  ],\n  [\n    \"46c375c684b30adf4d51de81e92afee52b1a3847e177403372c82109373edca\",\n    \"1eaadc5783c90a0261306423d52009e991126b3f620e9cb6cffca41ca096f4f\"\n  ],\n  [\n    \"2ddfb71f51205888118cbabba8fd07d460a810289bfdeeb7118707e310cb152\",\n    \"1fd905d07b3933be886f2518246bdafa6f33259a174668808223cd7c28183c7\"\n  ],\n  [\n    \"386f3879960713d41fdb3b1e41bbebf26b1c0e27a9a75bb1adcc1a0d3e8547b\",\n    \"2b21498c0f34ec6f17c720334dc0f36021c2f87afbbbc8847d0bd536eb265e5\"\n  ],\n  [\n    \"407eae62c6c4de3b942195afec3f45efec71ddb5e6edee3d427631bcdbf9b90\",\n    \"436e7f2d78268ef62c4172d2ff1469028bad1f1d0f97ab007064418e61caa8f\"\n  ],\n  [\n    \"1b881175e21201d17e095e9b3966b354f47de8c1acee5177f5909e0fd72328f\",\n    \"69954b1a9b8bfccf8ec384d32924518a935758f3d3662ef754bcc88f1f6f3ec\"\n  ],\n  [\n    \"7d545a82bff003b8115be32a0c437f7c0a98f776bcf7fddb0392822844f3c5e\",\n    \"34b6e53a9565a7daa010711f5bf72254a4e61da3e6a562210a9abc9e8b66d69\"\n  ],\n  [\n    \"299b9fcd4fadfc4b6141457a3036aaa68501c23df579de26df69d4def89b913\",\n    \"b95bf2c2bb303c38bb396382edc798ca6a4847e573ce19b7b08533d1912675\"\n  ],\n  [\n    \"551f5a4dae4a341a3e20336a7d2f365ddd45849351ec6dd4fcbedfe4806d5d5\",\n    \"5865c977a0ecf13ce85ae14c5c316872080bd36f0f614f56b6dfc7ece83792e\"\n  ],\n  [\n    \"7a1d69c08e68c80ad8b310736e6247a53bcba0183b9b8798833bc696a0fb6e2\",\n    \"3ce803a20ebb3b120d5eaf0ad64bed0522fad1a0f2ce39a5c5cbae98c4438f6\"\n  ],\n  [\n    \"28acacc0bc41d84e83663f02b36981a2c8272ecd72d3901164be2affb09c504\",\n    \"7a5aee0b160eaff5b5968ab1a0304ce58c3d5ae0148d9191c39e87668229e5b\"\n  ],\n  [\n    \"1f78cfdbcc767b68e69a224a077468cdfcb0afd6952b85bccbdb96d1fb8500b\",\n    \"4772ba173c6b583284eb001cfc2a124104833f464ff9df096443e10ef3e9dd4\"\n  ],\n  [\n    \"2774108962ca9897e7f22c064d2ccedac4fef5fc9569331c27cdc336c95774b\",\n    \"9e13d79b68e8dc8091c019618f5b07283a710ddf1733dc674a99fc32c12911\"\n  ],\n  [\n    \"770d116415cd2c4ace0d8b721dd77e4a2ef766591f9ec9fa0b61304548994ed\",\n    \"42165d93c82f687635aa2b68492b3adffd516beb4baa94520efa11467a209fd\"\n  ],\n  [\n    \"5e6e4ece6621e2275415e1fda1e7c4f496de498b77c0b913073c6a6099394b9\",\n    \"3d92ce044fc77fa227adc31f6fc17ef8b4ec1c5aafc44630c0d9195075bf56d\"\n  ],\n  [\n    \"6e69c717b5d98807ff1e404a5187a9ceaf0110b83aa15a84f930928b1171825\",\n    \"1ee7cfc3a9744d7fa380ba28604af9df33ac077724374c04588bd71fa16b177\"\n  ],\n  [\n    \"404318f2d2ceb44f549c80f9d7de9879d8f7da4b81e7350c00e974ebf2daef1\",\n    \"3934831b5af70d17a3f1da9d2931bd757e6acf2893236264fc7e0d92ff1a1cb\"\n  ],\n  [\n    \"20dcb6f394fea6d549b2e75748f61b7ec03b6e52319cb14163373a9c22bb9dc\",\n    \"106a8c96cfb95a331618b7416d1498554730499e194a58fbf63019890480fc7\"\n  ],\n  [\n    \"119000f277ccee013e6bb121194ec1ab5460fb6a96eb702a14079865f4170aa\",\n    \"1737a32f5415e8720a5606ec1dd4756f02e7c6817e3723b453d091f2d192773\"\n  ],\n  [\n    \"45d0fb5cd95db76d05dec3faa12e467a308eabaad363a062353db3cd2d9b749\",\n    \"ae08691b5b0cdd19ec499132421638f470f493320e4003d123ab1da761b965\"\n  ],\n  [\n    \"1257b3e65cdfb6367c6d0942327e799bc66eb221e70c6573a9862889eb51c38\",\n    \"593309fd45755dd2cc4afd2b9316bc4638b0c5ddb3009694fcb7b250d0c8a2f\"\n  ],\n  [\n    \"186dcf9950f72e868014a8accf14aa36e82a7a2a29f86ba37f6632da4189db3\",\n    \"55684c9f7a043fc523ed78f756f834b4db823d5e4161bd79602c17d55a5cd8c\"\n  ],\n  [\n    \"58791d5569f282f5c3b01ecdc9388df7ba3ca223a2dc1eed5edaf2a1d302fb9\",\n    \"6298d7dd51561a045bb4089deda9f40b2865589ed433e56d54554f8b45e79f0\"\n  ],\n  [\n    \"13fd87144aa5aa4b24d5a7bf907d8280d15937fed262d41084898cb688fc28b\",\n    \"3fa54367770cc4479a857411ddcabe86627b405ce1cd14ad3b2863bde13abe4\"\n  ],\n  [\n    \"48118139445415f0c1879224e2dee744ed35280ff00537260402a1741ec3676\",\n    \"4dfa39dadaabecfc54ecb7a25319444f8e952782d863790e42a9887064fc0c1\"\n  ],\n  [\n    \"4ad031bb9eda84f2fe5d354c7948d41558ca657a04508654721810ee72ef158\",\n    \"620ebd5d0086b92c6009a42777b946a351c2c7ba852b57d3c9905fc337459ef\"\n  ],\n  [\n    \"4a34abb016ad8cb4575ea5bd28385d2348e5bcc0cbba90059f90f9c71f86e8b\",\n    \"4f781829ad83f9ed1e1b6de0e5f4ac60dfdfe7f23cb4411e815817e705e52c8\"\n  ],\n  [\n    \"7fc632d7512aab5356b7915dca854c8b12b369ab54f524fbce352f00eb9b9f9\",\n    \"2ce80b944fc9158005f630b34385d50c3ad84450a9e1e529925b3211dd2a1de\"\n  ],\n  [\n    \"65ed10347503cbc0216ca03f7536cca16b6abd18d332a9258685907f2e5c23f\",\n    \"3be1a18c6bfa6f2f4898ebefad5a8e844c74626d5baa04a820d407fe28bbca6\"\n  ],\n  [\n    \"1a8abba1be2e276cdd1f28c912280833a5ede1ec121738fcca47dc070dcc71d\",\n    \"21b724378bc029a5199799df005922590d4e59cae52976f8e437bf6693eec4a\"\n  ],\n  [\n    \"3a99c22dafcfe9004ebb674805736a26aeed7ed5d465ae37226dcbe270a972b\",\n    \"5bf67552af08e1e6e2a24bf562c23225e89869cab9bef8becb3669175a3c94f\"\n  ],\n  [\n    \"4a6a5e4b3501f2b7bbdd8da73ea81ffca347170bdfb6776a037cdd74c560fb4\",\n    \"5af167ebb259c2da88740ec559ee04052bb66480b836cadd0e2590c32d7111b\"\n  ],\n  [\n    \"6890d95308525f0bac9dc25cc1189eb92d29d4b3fe61bc8aee1c716ac17b1e8\",\n    \"e6f23f78e882026b53ea4fac6950e56e3da461e52339eb43d2fdb2dade7ca9\"\n  ],\n  [\n    \"748f4cf4f027efdeaed7c7f91ef3730ff2f2bb0bfc2db8f27aadde947f7d4d5\",\n    \"3a1cbc550699411052c76293b8c41a3a8a1ecf12cbbc029a1b2b6ea986fca93\"\n  ],\n  [\n    \"7321f3f581690922cd0dec40c9c352aae412ec2ccdf718f137f7786ab452cd3\",\n    \"5be5130c9277cdb76d7409452438ec15d246b211dd1e276ee58e82a81c98fd4\"\n  ],\n  [\n    \"6c4d6cb7e7ae70955224b8a912ff57ca218635a2436b36cee25dce8a5cdf51f\",\n    \"32f8c03c6db3246946e432e4148e69f5628b200c6d7d72449df6eeac0998039\"\n  ],\n  [\n    \"1dad5f2e795ea6fa5177f110989516eacf8fb37bd6a091c7c93f1d73a2fe309\",\n    \"56b2298c538180e99dea3e171dbb5c6fba0bd0a9ed40537277c0c2373a8e2c4\"\n  ],\n  [\n    \"1610605baacc9bc62c4cc923dc943347cfece7ae241e746fbe6c2c878221dbd\",\n    \"431a82d657e0d109d00dea88cf3fa9b999845221b7b5590a20c40fc71368c1c\"\n  ],\n  [\n    \"6a4f5c787fb09a5be2b04d2eafa1e6f3d3c863ee22960eb0b64f6eaf6659162\",\n    \"14dbc3eaea6146ee7eaace5a91ed9430dad3a47e9ca2f68b455171f8fe6a7b3\"\n  ],\n  [\n    \"738415b73e55412b0e582e45ff0d7bf4b1bf2922db581783fdcc75559f40e\",\n    \"33825aeb3fd8459999eb418d15102ba5864b069c6ea517f0c6e9eab8d9aca47\"\n  ],\n  [\n    \"2603e72ce53985c70782774057a17944f7b4ce224a809be4e2b5af3606aa1d8\",\n    \"92822921809c42318f42dac4d773325f41c43069e990adac7818a45e2554dc\"\n  ],\n  [\n    \"181cd967ab4615357cc96c82eae9152ce7598c1a1dfdd91a458bddb016ae9fe\",\n    \"5d562fdaeb0e12647e230e50eaf216bed52fa73c6b7378821a3bfc4cd66d4ff\"\n  ],\n  [\n    \"1121726069b9ef5954ba6490100b226e0be53fef3e071b7c58a1286174b789a\",\n    \"4b25594cf4e9eb2d14b3f52f2661a9992234fc222c0a0d44517cb77deb9c16f\"\n  ],\n  [\n    \"e543663969b915337f105f80995a77b356f1a51d8b4a4fb12d44364130e873\",\n    \"34b2e3c009fdab4cb7349a580df2e64c0098a123280078e5da6623a9ec6b44f\"\n  ],\n  [\n    \"4e2f8909bb62de5ef65600e61bbf969293815296b6e23702875e049b3ce5c45\",\n    \"3cb81f2c21f22a7add26fa38a9ce5d9cce1bb251bd2698f90c34ff0a84f7af\"\n  ],\n  [\n    \"37b546e403a1ba970c17b67c2f1361ab9c803f8d2b5cd93803014faa08861ed\",\n    \"37079184ea46272f5809b523d060686633f7995167897a153be1772fd6566f6\"\n  ],\n  [\n    \"27bddca77f7bd7f66b3693567a4238f2e6751d95b0bcb409f6b24d08f84798c\",\n    \"6417a85cbfd6fc02df560d3963a241a986baacdfa423f65d7227ce49a96c57d\"\n  ],\n  [\n    \"2de71a39aa043057d1bc66e45f804542acddf18f7a6d88c0d7fb0ca240debdf\",\n    \"306c1ce39ab46300f7cca0f3a2fbfa77296a27e24bc66b0b8044968ec0ee413\"\n  ],\n  [\n    \"307c877154364c0c03534e7327d5a88e1380ceef6481567ade37a14ee7c1a72\",\n    \"3404bc7dbfb33b95d922d0693aaf9358f77888d7d95e773c38d83dbe2e5f995\"\n  ],\n  [\n    \"79f09ff7c60850e5f5ea020722659a1ed27db4c95dca131f99552f785c8afbc\",\n    \"40429528c099349b426ddbf129497176951a64a53db5f9d8bd2be0252cb22b2\"\n  ],\n  [\n    \"4027dc6b56d446e5972f35464eeac85c5254ef377c902d9fe37aea841bb5292\",\n    \"7c3ea37689ef679fa2f5c7e031a78e23d484a8317990fd34d44d95cc1db3717\"\n  ],\n  [\n    \"645dbf78a3c228c4b7151450b5e65edb58e71f37e1e4bc5f471e0f1abd6d9c2\",\n    \"15cfe7850f327b256e23b00627451560c5c6ab60db78d45b7ab286afb6f13ab\"\n  ],\n  [\n    \"1503ca373757677ad1d911a2b599d01c46eb879d1ce21ae171c7e439846a85f\",\n    \"583eb269b7030da6a0c324026919de3f9489d2ff6ae0e6320c36f05469ad66c\"\n  ],\n  [\n    \"66e1819ba3ec4ad4ae9f7d7588d23baa004e29d3aad2393d52af204a81626ca\",\n    \"505249980cbe6273b82ad5038fe04a981896f4117345ac1abcc67e2525c0ee4\"\n  ],\n  [\n    \"5ec20dbb290254545f9292c0a8e4fbbfb80ad9aab0a0e0e9e9923f784d70ed1\",\n    \"bdb1ca3a859227cf5d00eaae1f22584e826ed83b7ccdb65483ed5213dc4323\"\n  ],\n  [\n    \"a5c1a5011f4b81c5c01ef0b07c0fbf0a166de77280f0ae241f2db6cba15194\",\n    \"4444521fb9b33d7dfeb1247d0ee1a2b854ad166cb663d9dd2e686909362a689\"\n  ],\n  [\n    \"1f35335de40e00c62642dac2fda8b30f071986ce4f11db849df11bc45ad4e0c\",\n    \"7801a2c761b90fd4477ba0be9a775003d5dfcd959b1ed198b4681f15e7acbf\"\n  ],\n  [\n    \"48db4798cf6821c1ffb8178b1d3bb6020e04186c96aaf4670972d367f4ed5f\",\n    \"781019494df95b888f1578f1b4a3f8e125ea60eca47ef9207a10630671217a3\"\n  ],\n  [\n    \"17f653d904210148a8e74d8e719a3061683c164aa6d79c902a19f185ab437bd\",\n    \"6780e97985932c3860d810af1e065d454b1cb4be0e7ffe2d8cea7d52526e223\"\n  ],\n  [\n    \"5c4d0c7432f9b0070436240f9855adae1467cdc9826952ae01b68cd52a3ad89\",\n    \"1c5747f968ed91261b7ae9bf1023c999da9816e37de602d6a1a50d397752bff\"\n  ],\n  [\n    \"6fedd7639fdaa2f7bad4ca0b391710f6f8a7e890250ae8ae4252bb8b39a1e58\",\n    \"436a215f655a3fd3778b2335ffdc9aca6b98474e43d764c1f8362830b084f0e\"\n  ],\n  [\n    \"7fbd45a889c5e9d127bb4f8474d6be7cb9796bbfff923b75e42a1ad4cae37d6\",\n    \"484bd12622a6ba81cd53049c550d9ed682a8e765b656b1cbff9bbea637bd1f4\"\n  ],\n  [\n    \"17d984d47937263f7966a3e7b1eea04071e678494bd749c9e02b48b3234f06d\",\n    \"7b341ff08722c4e161005d0037204a7a2001fdda7af2cc1a0b04a027f115a0f\"\n  ],\n  [\n    \"7f1822045db45ea07e1519c3ee1f7705915f35fe4dd8db1e8921b5d1c740edf\",\n    \"33d41e06b93320ad1b3d9580380ec797a05dac3f1cc8008899110ebefde2f78\"\n  ],\n  [\n    \"7b19453ecb74b7d0e2a66b9890ff73bfbbcd61a266abd6d82dbe665bf32f34d\",\n    \"6dba2355420dac582b1f349609ea1c89b89bba2d1a68a0642f1dd12d86e73cb\"\n  ],\n  [\n    \"273e82a15f395ddf2489a95685bec8bac62c4b459d1b28987d3cb27e4bc9128\",\n    \"653375b48a4cf5d5b101c9ef533039bedce5dbeef3f59e8f168bdc99b06ca5f\"\n  ],\n  [\n    \"3006c9e7fc6a553d8eb4e8a47ce9f10d1a39576ac255ae9e0a4ce3869e76212\",\n    \"65fe9e2ef2aae608be309332d464f57e28f1df5de1a6a519751b056971f932e\"\n  ],\n  [\n    \"5e8f384c8a4607fbe9789fcc52d54249d304d698562597d114c1d81452d3dee\",\n    \"3c8bc78066b5d947dc1e405e326ee55ea606c7988f666748d259850fa259a22\"\n  ],\n  [\n    \"7841b2102e9aa103fb53a642b3e167b21113ea44751ab38e0b5ef8312654db9\",\n    \"71bf5c8308fcf9c4a7847494cd9bdd946fddf7d3a37e8bb0b201ff2343deb8e\"\n  ],\n  [\n    \"40f68027420c11e3ade9aae041978dc18081c4f94943463aac92d887f922a62\",\n    \"499c6062594a6c7e21a3cb91ea451813393bff365a27a08f1a515439b83cf42\"\n  ],\n  [\n    \"6ce77a50d038b222634e87948df0590b79d66087b01e42b9b6d8fa30ebb1465\",\n    \"35f5c46bb1be8555a93f155a174d54ec048c2ac8676e7c743054ddc52709d37\"\n  ],\n  [\n    \"604f8b9f2dacb13d569262864063c2d4bb2b2cd716db6eeb2b1eeabc57746f6\",\n    \"68c6799e24f3b44eec3049973445174727a66970f1614a782efa2b91ab1e457\"\n  ],\n  [\n    \"73d620f3bfe77f672943d448d7dc05327adf64b8e7af50039c469d7f7c994c4\",\n    \"4859deb36eaf0c802f0d1514602368143a33ec6ce8fd55248b59025debc6afb\"\n  ],\n  [\n    \"3fd2bcd1c89d706a3647fbd354097f09c76636e93ae504973f944d8fc3bcc1\",\n    \"677ef842cf5eb2444941f527abec567725e469469192354ad509a26ebb3d0e0\"\n  ],\n  [\n    \"39222ea924ac17b533c72ffb2c47ffdc11d6a7f7c70fbde3a10fb0b8f35eb2f\",\n    \"20dc4bd1089019bc1d7379b4feb3eae6eb5af59e9f253845da9fd633057e952\"\n  ],\n  [\n    \"326f58994e1347f62e4102183215b5db956378d2f61f14aba4dec94577f53c\",\n    \"7a03284c296003bbe05178a1d82efdb7b8125511d63e20e50aed789c2e52e1\"\n  ],\n  [\n    \"53aa8939c74d4ee58f03bc88bace5a45c7bfcf27466201da05dc6723a5f5632\",\n    \"2e32535ca7732904a048183247b04b426ecf9b39fc393a9cebe92fb1dc7a7f1\"\n  ],\n  [\n    \"6cee1a03145e93b3e826e6067005f09c06099c98198c91c222407ba5c8c132e\",\n    \"beaecad1274e7c6e5476a100c271aa1a6f86ee5a9fa5c2f26124d5886fa63\"\n  ],\n  [\n    \"3ec659b8175e1be1bd5a252108714776b813e330393f587814f5f1f32a73332\",\n    \"529a5cf9f8c237ae69a94217d173c8d19c156952041f5c980da557990863fa7\"\n  ],\n  [\n    \"3d66ec5963d0c534d4139c8cef2e1ac48b3e7965fafabf58be26f903318af4e\",\n    \"3d3f2de7a95f59b683725ee6283cbaf31f97c4b600df9a4621413223a468740\"\n  ],\n  [\n    \"7fb38ace8e0932fac2ea0d3eb676db8d684db1817e2e4d59da7996ce398b4a\",\n    \"68f92bd5768cdd4710249f9d49ef1d5654e497b9a4ba10bd2971366d83fb400\"\n  ],\n  [\n    \"1c4a49314d6b4969cdd142c76ceb7682bfb868ace7f7568b0fc8635bda5a9fb\",\n    \"5fc0519f1f4cc10b5771312458748c036313b87707ed0540026ac64a5955aa9\"\n  ],\n  [\n    \"3073c95d08d3b97caea5f0be16b2789bee766f76b7e5499f8ce8f96abb0f344\",\n    \"52a8974b4eb9a1f6a0ae2c83cb4715bf18d73f057255fcb3f63b74f7e78f590\"\n  ],\n  [\n    \"44485b16d597a5de3604df6f7ed7e00b8aeef9e7e8dea8688255153b8bb16aa\",\n    \"6cccb0ba170123266f24b5d93a744397dc2c44820edc4f8f5b9a0f5c9b3b940\"\n  ],\n  [\n    \"7618f77b7b32d512688dd62e0b48231d9574c6361e8be353a7dc04f7c3a115e\",\n    \"78ffcd16d80636381ca231aae70d99c9e20298b4f5388fd823ea9fa2b8ddfd9\"\n  ],\n  [\n    \"7dc82fee1ef95cf5b3720fcc07f63246654bfe39762627839da40e51c75654d\",\n    \"4c0ccdd70955da74558de20c88352df8a02aa97e4d5971c500e884740a8cb62\"\n  ],\n  [\n    \"7fa5d460dc10cbb418b444d9bde97e92c70a99a222b99f244dccee7e62cc04c\",\n    \"636163901baa5b7576c38c43407af578b8c4607e01e86011ae2dde587a89f84\"\n  ],\n  [\n    \"758930d46006623a756c89bd0cc378f6a3c1f43c9a0edbb42274c35e75c16d2\",\n    \"1d74dd9f81c2fec811b8cbd6168a745b0a111932b2a345265ef2853b50b6245\"\n  ],\n  [\n    \"7332ee0626b044d664ef228f8cb84df7c643e52f6a2591ae1c9007ad61ec16e\",\n    \"229bd8e630572cbdee54283234cf3e9f060e6382f99943bf234119d47b54470\"\n  ],\n  [\n    \"78a16ef803aa20a075bb2f66c61bb2dae5698bebb94a0995fa74c3d53de1614\",\n    \"246d588b68edb6fed96c128349908c42dcd64c46341b205e79f4aed9b5d3675\"\n  ],\n  [\n    \"6e1933939bd03b67bba753cc0cbe7d2f25bad68c993887ef8c9e2fcd59b0647\",\n    \"599413f7c204a11a5ce315eab11299ab7326603412bb00bc1c59ff75a37d6b4\"\n  ],\n  [\n    \"4a79957a5a1888ad063b51c69565a2b48e8eb917183e220a1c8d3374526d30e\",\n    \"1f092de0e069bba7fc5386e2e9a114c1618f88c4b95e220cd35ffe96f99fcad\"\n  ],\n  [\n    \"3148aa3df9ece39aca84f59489f2710522216f14be6055ee0027529d1d55e2d\",\n    \"617e9a52a92975db0ba1977f71116f7058a0d31b869ac7f3ee2fd80b0c5100c\"\n  ],\n  [\n    \"5c1188e72384160ae39d07328346cda4f6c12d227448e6236f04dc971625287\",\n    \"1643006eb3a3bc6aafd5f685cf054f2a572e6ca58c0118bcec0b833741f116d\"\n  ],\n  [\n    \"3f72efc93c9b71adc4c51d8fc69d3940b20d08733af2b7d05140fdb1d1c1004\",\n    \"7399259987c8f4ebfab46e522380707e58427d3962ee0c2a91760813f76d232\"\n  ],\n  [\n    \"3129b34c03c51aa8f611e91d5cfcc9bd3ef108ee66e6d3ee35a0e0e50055bb\",\n    \"563b18b5650085efb4cf179a029e6afff27b1d3091cd28eaa68d24fa1f801c6\"\n  ],\n  [\n    \"16eac0f9fb4c67cf89a7fa4ee615bbe731d8edcb709a1b9b50c7d873a530f52\",\n    \"7ff8288b6e199ca8f316192881424a37fb080c29daa76b1f0edaccaf580a80e\"\n  ],\n  [\n    \"75f6b6028c43ce832f65d7e8e620d43b16cba215b4b94df5b60fc24e9655ee4\",\n    \"35e9ccfaed2293a8b94b28de03bcb13eb64a26c831e26cc61a39b97969a2ff0\"\n  ],\n  [\n    \"3c6152fe093bd6316897917ec56a218640ec1b2148f21db9b14fc7a5ff362e8\",\n    \"6eef2df27ae7d63a28856b07b73e7aad7ca94f317201a1e675ffc6f9a1710dd\"\n  ],\n  [\n    \"54e01b5fe4fd96052aad55b3f26b1d254dfc7e2525fffb9ae0a77eb8cc5579\",\n    \"7c3d39232ab333675b219abc766ed9b4782c840e6b046614dedb8a619696eb0\"\n  ],\n  [\n    \"d1e63f8ea8a76429cf254a6d3b668761f0dc572d4bfac4fd56d9eaf58fb6c0\",\n    \"2bd0a84d3908a63085824c9329a0983913006ba155b56a58eb3f9becab29c45\"\n  ],\n  [\n    \"2d6122f2a702edd4da7385b1580796a71d13bd72be94cfb3fec01149c006c2d\",\n    \"70eb282fae992efa6f5915e578b640653549f23385ef3a29ab29b1b9b8ad63b\"\n  ],\n  [\n    \"752fec14beaadb5ddbba6b3a17fcb86579fa588ef407fad0ea07dbb22a640d3\",\n    \"3feb6728eca21a1e84e8f9f23010387a53a96a1cb62d86fb37996150a1299ef\"\n  ],\n  [\n    \"63f94a92f27acde8f5ed949b459506f51d70c85bcc61a34d647264ecc53c65e\",\n    \"37e5dce0646ee66f4fdb93b82d54d83a054948fa7d7fa74ab6b36246fc7383e\"\n  ],\n  [\n    \"d6aa909287a2f05b9528690c741702c4c5f4d486c19a46c38215f52ef79c7b\",\n    \"5ebe1128dd81093df4aca0df365d58adab848d1be1a94b95eeb649afd66a018\"\n  ],\n  [\n    \"12866812b3053e2f7a9572bdaf5ef2b48c6fb62a0eed9ff0356df50e7d05557\",\n    \"6785f7eb2cd1c120e4c7167b46861d10117040a2e9f2ca86a71e9d67df90613\"\n  ],\n  [\n    \"46a730d05330b1b13673cb8a1b8f45460035e4a9f1a1751cfba099c4355c1c\",\n    \"76fb0ec6cd16a8141cdcd875c8b2de9fce42d296072643d148ac7e7fa7472df\"\n  ],\n  [\n    \"4bd4380a22900bd34835e0a908eacf4b6edb61eda0cf483f9212453b37e7516\",\n    \"5e9551cd20d8d7ddbf4366880b7d5267385afa1966ff30da4baaf273b009d29\"\n  ],\n  [\n    \"71f1994ad40baa2922424ae222663a64f93d8b67929e9a10f9e4c1ab19f3833\",\n    \"85320fe68ec0d37cc19fdfd03589d66906ffa4046c80e1b094a85f27676346\"\n  ],\n  [\n    \"5a63b1bf5232f28f808765c6be7ce1f81c52145b39f01c879fae0f4303bee61\",\n    \"3bc5d6df68bb6d0577bf9ae2ae59ec0e9b2dc7dd56ea179fb38a41e853db950\"\n  ],\n  [\n    \"161ded55ff1087032381e6c1449704f63ad2d88df82dfc44a71890fa09b3941\",\n    \"78a52e0013842037274ea75daaf8eb4afc04ccc4b07bfaf3f5ee47d165e01b\"\n  ],\n  [\n    \"1bfce5229c5fbff5c0f452a22317fcfcd9262f23df41840f84fe7d44cfba1a1\",\n    \"66b387872c00e63c73006a955d42cf49c46c5708fc9d1579b9ae38341b24a3d\"\n  ],\n  [\n    \"56d47dadc9cbd1dcb2ee3efcd5d4af5e6aea71df10815c68b54a14e81d11b44\",\n    \"47e966ba54df48e9b612a903685e0060a67e4725402e8cb4cf654e54e813a3e\"\n  ],\n  [\n    \"4b1c44438afd4ddf20a2cf612df2ee494ce84c7274c5529e857693e73018491\",\n    \"430403bd31d8f0677e06abff7159384560f27b9622943fea1a3192f14bf40d4\"\n  ],\n  [\n    \"7f7281728fc2214aa1dbf13176a4624b53814734abd570eb6ef7c7e32379606\",\n    \"312da47be347fb3fa2c9089b38df372560dcace2effeeacab4d96ab11567295\"\n  ],\n  [\n    \"16a28884a1be8183e0d3fc0db84a9afbf47126fd3be548c2a584aaafbfa7dfe\",\n    \"7c3f57b3b895564ba562c1cd80b71fda6d2e611665c6ab87744f5390858fe24\"\n  ],\n  [\n    \"323339f37b327a731232a9580e79952063c7c232bd1380146d8a83c285f4b8b\",\n    \"4f16be1d983c7232f92cce6b9690695978d42cecc8eeb8c206e125d1098a265\"\n  ],\n  [\n    \"624d26cbaa197e104eb83cebf2adeed09a5cdad359993fe5e3529d4d0def21d\",\n    \"261b7da3cfb55c788977e0d8d640e3e93ae5a325d962ce85c816d7d32cfc430\"\n  ],\n  [\n    \"f24ecb7ee83a3e28dab54a330dc93d0429a7aea36412e922dce8fbff40d60d\",\n    \"b043e36a258d1df1d21b0cc7be9c4dcae1bd4ed326c110e668ac23d86805a6\"\n  ],\n  [\n    \"686cea46b710bde1231483bfdbc700cfa3da6ecd5841c0e0c782f9ea24328ec\",\n    \"7eb7407aa58edd6911c7c7e8d1e03bb52ead4a2415a0c33325872ff3a521dd6\"\n  ],\n  [\n    \"3866ee1186264549df3dfcdf8705c0380c9372eef6d4081c2454d3aded1720e\",\n    \"634c6d3e8eb8af652a4be73e3b613452c2213104ca875b66b4b15ee5b1716af\"\n  ],\n  [\n    \"484c687cd2969a1d20a58cdfb9a60f280a473284503b1ecff5de514aaf8206b\",\n    \"34d44d26b7427e51a646d1b924084762f5b461685450f21d6a472de565bebd8\"\n  ],\n  [\n    \"203561333771fa0fe22c4033349f7b877d15b0542a5598e81e067968768247a\",\n    \"2b6a533aff6e2163a36a2a89cb7415848bef48db40f952ffd380f47676707c2\"\n  ],\n  [\n    \"2ffa6cca6233695760251206fc5e34c8d3692498589478cdd3d5b09f0b7c05d\",\n    \"6c57d605478fa9626c4ed769554d075daa53e1a1d0bd4d94174d3bfeeb11ad6\"\n  ],\n  [\n    \"5dccf0fa46a5571f204d0b033b45f299cbb3d9f80fded57253ea4f1c64faaef\",\n    \"30a38e131ee8756ee5ea2a3e16618a5dbc28b5b9311308bf037ecc2039dfc7d\"\n  ],\n  [\n    \"57b0a2eaebeafd950221facdd24790d7d1ab8883e5c5d55635f0d14a1ee4741\",\n    \"7b41cc478fa6be38417271db8ed12efc0da6982552c1496025d2df0576bf4ad\"\n  ],\n  [\n    \"611b5725101f611c387ccaa13889ecf3bb5595071a179ce350029bfca4ad7f1\",\n    \"3129755977abc8995fec7eec1123a1561e429fde37ff36af002d3211831ecf4\"\n  ],\n  [\n    \"1c06bbd0c52fdab9fcaf680c7a93fb821e538a2ed79f00f3c34d5afb9ea6b31\",\n    \"3873d3bdfe0be0157bbc141198dc95497823cc222986d24c594b87bd48dc527\"\n  ],\n  [\n    \"275cdbabc989c615130d36dabfa55ca9d539ed5f67c187444b0a9a12e5b7234\",\n    \"2b7f723e68e579e551115d56f0ae71a3b787b843cc04a35b9f11084b006521\"\n  ],\n  [\n    \"6cc702eb20f8b5940c7da71f8b1801f55c8c2d8e2e4a3c6c983f00bc1ffdd95\",\n    \"5d15b3727bc66f3aba6d589acdd139fae115232eb845abe61fbdfc51341352e\"\n  ],\n  [\n    \"44defb418700cee8c9bd696b872adb005490512d8bba081f8f99a9f15cc981c\",\n    \"3b2072cdb1d919b2b65b5cb3557f0a3381d7ca293c267ca4a38f83e77bcc96e\"\n  ],\n  [\n    \"fd83ce77b1578b3a9b8c3cbeaddb1504d2fd4a19c901c21ac65961224e4966\",\n    \"110cbe64fc10c6b9c66f15ca406a35f50b723b35d83c5eb9797a57f8395f4f9\"\n  ],\n  [\n    \"9dc6ff90e341875e113bbfb507724dc7095a280d2f32cb6ba61a1e0c2d2aef\",\n    \"4aeb622896c852c2747454e8f172c9482955a42ecbe522d6ce07ecde79d0a51\"\n  ],\n  [\n    \"71c58b0e47b9dd9107ebd8a8c8fa9f0534e78231bac612c1ddc7a94edf33eb7\",\n    \"7f90edaf4792bf8334adbaa0f4ee7c654312725af188682d75f34874c4eccb9\"\n  ],\n  [\n    \"1f6de1f14988778ceb2dfe844f92394f1f1e72fd1581ceb3bf336c95ce50345\",\n    \"4f6007ed4e022d2ee9fe4ca8207c5f6c766c4f3b85260e941fb24ad0dcbf0bc\"\n  ],\n  [\n    \"3ddc3ac25ede4a67a97547ed27dc920239b585fb3624177e2e8d59eba678115\",\n    \"a9afd8f8bb759cbd1dff2addc63f47da4ba1291ea34229c09c0637dc5c8d24\"\n  ],\n  [\n    \"c56b0269d8431556e471cab9d70edda3a37b391696f107b2dc370631de51d\",\n    \"729c52f6b134f733eb750c14bd9f95c077f0f6f6ff4005701e5bedc6544599d\"\n  ],\n  [\n    \"44d32ce19ac6807cb22e4f25fe1486a36a13926f147fbfa054b63ff0446177d\",\n    \"212a21e8c124c9cd37c80d2dd66913ceaa6b6f666522f115c39382b2d5925e8\"\n  ],\n  [\n    \"35dfc16f3ae6ccc06a267bf6d931601e52f3e45359ffc513570b65b96adc4f\",\n    \"74311d10f4bece01b5ae65a6affe5c931463aa1b73a3320eeb41bbb7bb1ff62\"\n  ],\n  [\n    \"e0acd9d2d907031b319b80121dc90699d003d220ea785d50e5033cdb3b1a03\",\n    \"3911ba78d6e507485d6374b0f7d2e6198f6462a7d6d3cf046404a07af690357\"\n  ],\n  [\n    \"3c57918ca254c0cb7dac251ef4e10c7d82327969552eae15d26c4c52660922a\",\n    \"5fd5f5ff3f14e671548074114c72c48409df8a2e71fc8aa3c8acb506e2a88df\"\n  ],\n  [\n    \"222ad8b61e219ba2b581f606b7c996516850a46a3db72fe1f72b5a9be6c324c\",\n    \"72015a5e2db648112abd284fd867b59fc5606645177d26cf6e9a655c9912d42\"\n  ],\n  [\n    \"3c86d5d774bc614469768ad38f7be9a53e9a233942c5c553b82e49aae684764\",\n    \"480febea8229e130dedffff89c11f3c43e11724e6bd89d5566d78752859d41c\"\n  ],\n  [\n    \"adb73bb8352d0c10175df371f7868ef2c9e0c79ac788430c480c0f7d85c187\",\n    \"60b564785248111502e6f39c4994d6293fac22bc25f4d764b2fb1957d3c9bd8\"\n  ],\n  [\n    \"3836ab8b46cf4f453a22532c886940b982029b29c42adca90ded5bf77e6bcb9\",\n    \"7b15e91d6355f147b171a90b064a9d8b2d7bf3699bbf4987664c61c950d8996\"\n  ],\n  [\n    \"12ed96af1a97c45ec31f1531e96f6fb28a03ba52ab8484545fbe0dddc97bb32\",\n    \"6d1f522b6c6cad0940cff8e23decc72bb8d4164696af031415508b025aa8be1\"\n  ],\n  [\n    \"27382994ae5878223ef802e9b4882f481a1b4008f1eec8484483471f7aa742b\",\n    \"c31750d242b3975b0026a0e86ccdd17d0f680a8c6f53f197fc25eb1f777917\"\n  ],\n  [\n    \"431677eba3715455bc235557518a74f3b111a88844ef13e159ad44bc16de3e6\",\n    \"30000e1eb6a17d9df776981e65c6e500fded1ac12003adc9446b269812c9197\"\n  ],\n  [\n    \"4b563e6f42589671579eabfa2cda5502b361c46a5ac8d45c8ed44741a925b33\",\n    \"627bdb41678443fdd1aa607709e9699b652308615f4bea760a3b79ee0d9ab5c\"\n  ],\n  [\n    \"2932fd3f81fc973ca9def6b7f1bb50f980fe589187cfe9e9f52ba4d356cf2c8\",\n    \"1e6bfd00fa976c4770263a227048214c38850fe0f059e7b3d2c7871ef07d68f\"\n  ],\n  [\n    \"e44e4f3d96d9dec775b996be57e57fdc28e7c68023109b221c414a244a0dbc\",\n    \"58b1e52fa274812e5184e00e9ad812bec2463140adfb4bea3b2d665867dcc9\"\n  ],\n  [\n    \"7fcb89be1f4bec745887bb891e53fefd665c53d00a9e74de16b8a7e1f7adfb5\",\n    \"74af0b06633f779897e199609c71cc5649bbb65bc2c0abd4c678f0480c198d1\"\n  ],\n  [\n    \"62a381ffb904ea3ff4d451d4c8459457cdbc3dc2fd2da646a95d8c1e90c0b7b\",\n    \"1ba058658e09db9e319fa73de8ab4a992b71e4efc22c273725bdcab84e2a315\"\n  ],\n  [\n    \"1b0fbb7a84c67e668450a54449c7a46261a2d355589f8b84ebfbaf9a77ee938\",\n    \"44f8fffa33dd33a6146c35d196595e22cc4a215f61ee9197cd751400970a1b\"\n  ],\n  [\n    \"78fe920bd96a356d4d95ee34adafe8fecf071d3107c36f047b4024ddc4b3eea\",\n    \"6162f29607fdbec10181fbac6e57d5cb41b922c5791fb24bd28bcdd75d16c41\"\n  ],\n  [\n    \"5629b849e026e65d119ac11821d7ab7efd9c52226f75c7427505d6818bb0c8d\",\n    \"1539c0f90970ee8b490e45bbe5568170e5708521a0e59f976be680595906feb\"\n  ],\n  [\n    \"62bc853f349bac8c6e5921d27ba85dbd9ba20a375d70a7bc008928f3e123b04\",\n    \"6acfeb1de05ba43c3ef1a9110a983a320e77b3ca294abbc04aeca19b194f26f\"\n  ],\n  [\n    \"4cf4bed663464418285cbae359b5d84ec76b5997d24f3640984c7663421190f\",\n    \"941f818e3e3e8fb1568da85217d17f9250ebc948379014d900a7b1a848494\"\n  ],\n  [\n    \"52ff3d9ffe9a302f6dfaaf74bab57c08027d5cb699a69b30830540c0a2d47a1\",\n    \"987dd8876873778d933fbfed37aab2f7d6f669c37024f926b1edcb2ca55782\"\n  ],\n  [\n    \"1109ee32f0bc53de6bfa457060b366e909d7c18061ec9845f46ac715496897f\",\n    \"38f36f172bdfd454b9285f86e6bdece8fdffc95182c7d801b03c671cc55139b\"\n  ],\n  [\n    \"4b4482f1d84efe23dadf3bb10df3dcaa251312dcdd604f616f1eb540e1f3232\",\n    \"7c9c149dcae9135f940fb54482f9c3cd8193721643a6e23157b8020410d439c\"\n  ],\n  [\n    \"69cb459b9e415b7581ca163611c470d875971d5d7949de732d1f0f200544a73\",\n    \"a7136fa9dd00c0469863b7def3f83a5611ed628810d7e807e7a873da5a9897\"\n  ],\n  [\n    \"b66a4e32ac9a4baa8f64780acd94ed3628b2b0ea874ba4dece629af65f9e62\",\n    \"24328ba9996a24389658e3467b8b90dc3927ef8419fe28b3f55b1c1aaa51915\"\n  ],\n  [\n    \"5ecc3080062dd451236de0e4eb91c5c75100733364bc5469f5fa76f79021ecb\",\n    \"6da4abb9031a27b5be94529324fad8026e7d871570780081b0f424d4fe543c9\"\n  ],\n  [\n    \"1e3146f00880bb22486d5bc73e54367d54251f4002bcf342d0393b05a4b9ce0\",\n    \"23b6fb8e945d3205f633ba724202db5a99305f807137edf942cd60eef867699\"\n  ],\n  [\n    \"2e1da8013285598b899f026c6974185db12c97b4c63509769d3d4ad1d18a4e5\",\n    \"1e7e7b668674d1593c39d58bc7bccbf568208732b3519bc2cdf93db34366862\"\n  ],\n  [\n    \"d26c3f389d81709506f184b53871497c8d36c5c9eee8e3737358204c1acba3\",\n    \"34649c3d39f3b825947fedbca215ae30c5a5995e93b1c8efca4944cf85a082a\"\n  ],\n  [\n    \"91300478a83595d548f32f259033291fc7d083953b0b8bde88c7559660c563\",\n    \"e5d2bff57fc6551e9b80c06ac7314a71907cdcc66ce82f2cce721a670df10a\"\n  ],\n  [\n    \"1f7abcb9d462c63ffe92aa56619ae8590089cca4d93ee3e5f34a63882452cc7\",\n    \"7e9f85c7b7ca6e9a4f3a026d1048adbeef69ea9d876c6f647c257b879a81bdd\"\n  ],\n  [\n    \"4d2caa1323012e4c83b0ad387308b8aef5637bc35ddd882e7f5e41cf2ca410f\",\n    \"47150e808c81a540b6f8864e9d6636589cacaa516f82caaa96506edfbd6f0e\"\n  ],\n  [\n    \"3c10a6083c38351deb3e6d1b386827d0acf48979b66b95249eb8700ec26b069\",\n    \"47e34bfe561d903cffdd1d849b85aa3cbd31cb4a9bbd8cc2e5fd2f95016cabc\"\n  ],\n  [\n    \"758bd54868eec045d0b4d3d2bc415d24bce13fee47cefdfda46425c109b657\",\n    \"3392a7c66ea3bd7b044680bbe9f78ae86752097404c067e9d2572f55330df83\"\n  ],\n  [\n    \"19e718e0ca1d2d6fadbc6006ee7dda7a385430e29f5e239cdd4bb7c3fdcb2f8\",\n    \"5c68249b7fe03ea2e13481a63b6cd4bf74ce42009a89fee0b3f8f968b3ec709\"\n  ],\n  [\n    \"28077f57ea62401806367e6d54fe45d02de5b072db787ffdcc3854e12a3e855\",\n    \"14f3762689072f5fb41d03e94b01808c739f6d42b7b785b0e464100b150efd2\"\n  ],\n  [\n    \"3b8a8cefd017363ce867265af3293cec081fa589fe561830f0078778cbd338f\",\n    \"69ccf2383cb7b4f9c806d72535812483e7c5e9a1a5928529d64ca7e085e758d\"\n  ],\n  [\n    \"77878f388d22161a2953e5aca6bac1ea480e102f329574b4b201640d44a296b\",\n    \"7eb35706a90a03aff7c2fecca72659136547cee98038746db5aba16fd7178df\"\n  ],\n  [\n    \"97332e6da70961f2ef31b7b628f1018d21db8db015922a301fca7d6fc6a8e6\",\n    \"2e37b06f639fc7a82601b744570a2619e543cbfaf60e474107fcaf4686d3223\"\n  ],\n  [\n    \"a81518d452d3aac48bf0386c3ff170ef4e684a4def242c964e129c64f4d647\",\n    \"37506e44c85908ec7b7adda9547fbdcc2e3605151fefa77fbf127ce3bc938f2\"\n  ],\n  [\n    \"e80336b2220b1d666074f6b0dac85353d0e4c2e8bd0f37055a2236a6a9fadc\",\n    \"1cae76d73eda7a5964c5d9d3ad6748aff51f5543c56441d2fdb7b444a39846a\"\n  ],\n  [\n    \"2c01fd8430ecb44e066f352c4f697fc9fda177dbe162f82862d7b9ea8c918de\",\n    \"6e1dfa99640fdf5b30603d34c7c97c1aa6e6b7f3a2c52a21fc64b0fcac7d591\"\n  ],\n  [\n    \"744e37b511cd0ddcfe15f3581947014c159de81ed055d15a13c7a2d1fa39f0f\",\n    \"685caa8ff6979a6c63640ac638a3f9c75737f2031bd55322a47384357af164d\"\n  ],\n  [\n    \"40e627ff84e1a7a9068b4368770f5956128a4d9e9e33e9cf5e24d9a242149fd\",\n    \"2465bd6cb20bbdf810e2bc5c3c458cecf4f3aa163a7ac99c2579e5f33417f2e\"\n  ],\n  [\n    \"5f635af7f554a17bceb6ccb6e637abf89ab6dadd399189b0a0390e87b1896bc\",\n    \"2aa6238a69f89665646c0e3ca2ba5f709cc6e14351cf71e1b00ec45201417a2\"\n  ],\n  [\n    \"5edad3063c9fa8305978d7e6a4e037c9fa519b8023c7608dfc3b66e5c1e8985\",\n    \"49f405d07d7d01919da51159ecdad1031a5ac208c026fdfc14d38f633d92183\"\n  ],\n  [\n    \"2fdf2e8a45858c12926a1f25a62255fb2d02d0149a15ef669f859806683e649\",\n    \"61cfb686bb31e2524470d4ad2ae09e3cc91b16305a21d748098feb1d8ce3b3d\"\n  ],\n  [\n    \"ecdbd7c37f1dffa3943977278da3bb429afdf948b4ea6cdebace3d3be82381\",\n    \"190b67fb34f7f3ad6afd3d6b6427aa327547d8ac0fb4deeb0feeba1f63d6c60\"\n  ],\n  [\n    \"233021b483f578dfa5222f8cccba5766ceee0ac65f6d4a3b1673b302a21fb3c\",\n    \"7d4b6d44d175d4b593f06f5a6dcba2cdbc4eaa2097abaf613123546866cf4ef\"\n  ],\n  [\n    \"42db4e953c2a7a743de9fe20c5798f2247f51db4eabc6f40e86c13909a310ce\",\n    \"12c1a0764a0b9f3666e431923ce15e7fcd0ded5ab153f0b48d362cca1604e65\"\n  ],\n  [\n    \"30d539e2b545fb957e40e2255f6463b52d227c9808472cee6a3d521aa283a44\",\n    \"5f9eccf747fe6313570f99e845db32b40070acee9ce9e34da7f3c29ca53a07a\"\n  ],\n  [\n    \"4bd64e5ade3e2733580a6116b4af328751198e7128f9acfe3a3496b545efb5a\",\n    \"4d584768900dabfc0dbaa086632b8051bb3905ef79b84d96c01514441d0cc93\"\n  ],\n  [\n    \"62d6e771f02e591557197d13c3e77dfa2d1794ac1808407bd8227c4be31b466\",\n    \"5c6f5607c1808e899ba36a425911fa8566b7ea9cc80de8a80538c0fceb837c0\"\n  ],\n  [\n    \"5ce406218cb2852b1d2fe1836b19462f664631785216e87ffbce26030e2101f\",\n    \"5225f107743c255ab50e7be4a090fe39478d1ef4ff558468559d8cfa87bb94\"\n  ],\n  [\n    \"670286486e8dda3dc66b0ed3149be7697d3e06c8279844079daa7e42d5af728\",\n    \"26becabe7430380c56e320f5ae3329569cae7b0af06fd5327ee23979d200eb0\"\n  ],\n  [\n    \"3ef448df33a4394c43e93e5850cd0c5a6dcb18ae1cd865d00fe8ede9336a9f5\",\n    \"56711f6ab7e0e4f7365ac34e284ac2879f40208c46f6febcc1dcf7146ecf015\"\n  ],\n  [\n    \"4b63fc130288e92f2d6ba238caa7a6364804e29829ac037c57df32fbf762bc3\",\n    \"1eb8c80af55278b4113286c038fff2bfad2da62763bb03426506b869139da0e\"\n  ],\n  [\n    \"4e7e998557b29a95f805a6e2e26efc1e970108272d4755738c04f28572295c0\",\n    \"97cfcc2f447bde61bde71049d8200a74a3028b21703bc139143d81a3623f09\"\n  ],\n  [\n    \"574b67898f02964c408f68e9470e7b615be037e40b824e6617f89cb56c21219\",\n    \"49392d5f8e6740a1b0b7444f56d7a17363f8656c6e4c628678c86223f2e46c8\"\n  ],\n  [\n    \"7e8cb50ea5d5c1b09e219e7305bcb601d99b6d7185b1c388aa8e36fe1e56554\",\n    \"47fefa308645455c12ccb5817da338f0c4f423b341aff4a9d158891a4fd69ba\"\n  ],\n  [\n    \"67266dea9e71b4ed2bf24a597a823dd048cf31e725db511edceac72998c9ef6\",\n    \"39babd65850befde1f7c28e41dbdbb4caf82bbcf3bcb5b33161f1c2960b2d8\"\n  ],\n  [\n    \"63e99c2cb9c74eb9227d48065e27abb8f606df8fc83b2c44e4ea38b046bad2b\",\n    \"60494a53dd13ecf34e08079d343c88fb655d6d810785af81f08d5aa9bcdcf9\"\n  ],\n  [\n    \"3cf0600b0f5a2a4eb78c487cd385350e8c7848e3f6983231881d7f1bbe28543\",\n    \"56dee4288528de609976ef6b903b652127c37b0590e91a2fdbebc3f11df2628\"\n  ],\n  [\n    \"758f09245fa4b8b23d290ee2b3bfcede199b4fdb11f3cf2502a8ceedd61b129\",\n    \"622d9baadfde781e985d9722e0a04715666769a4cc7a9bea0b96d6386be1746\"\n  ],\n  [\n    \"38e1a45b81492aa95d7abea2b08b8c14dc0b8a41108b036871fb737910ae18c\",\n    \"145c611262656385e5ed6243568cd3f9f59dbfed7a01ba11e22bb8bb272e08e\"\n  ],\n  [\n    \"206e54ca53a2f155bd4fc45bf2edb77798ae6623defd4cf22f2dd4a7d119dad\",\n    \"6c94e7f0825ad81680e4cdbcaaaf4df806d57a0d1fb2331926c3fe2b79d22e8\"\n  ],\n  [\n    \"56e98d2862893caebf66180e84badf19ffc8b53041eaaa313ae7286a8fac3d\",\n    \"526306f9c01afd6e0c1198ea5de17630f5a39c4ecd02d8e6f0d613c355995c6\"\n  ],\n  [\n    \"4fa56f376c83db33f9dab2656558f3399099ec1de5e3018b7a6932dba8aa378\",\n    \"3fa0984c931c9e38113e0c0e47e4401562761f92a7a23b45168f4e80ff5b54d\"\n  ],\n  [\n    \"450cfaadfecdb8a2fbd4b95c44cb1db723ee5ac9677c9c188b3d7c8eff4ca58\",\n    \"1a552bdfc0c81be734f1f6ca9a6dd3ab4daa61c11fb53ebb7046eee25d617c7\"\n  ],\n  [\n    \"6fe20e5c8a8004e33eafc84d16ef770f2f0b7bace19adaaa150f987d295a34d\",\n    \"28a35040a2ebe9a14a162d3208d5eabc6e2f3a8310f926bd80be65aa71775e2\"\n  ],\n  [\n    \"1bd65f45a35bf62ae8f9ffcbd7de2976b90518b6820c219f039c50043bb1edf\",\n    \"fb5f0f8659f9b6ed7cb0ddd7999506d0c20b26bbe69d1915a31842cfac41eb\"\n  ],\n  [\n    \"4ba4cc166be8dec764910f75b45f74b40c690c74709e90f3aa372f0bd2d6997\",\n    \"40301cf5c1751f4b971e46c4ede85fcac5c59a5ce5ae7c48151f27b24b219c\"\n  ],\n  [\n    \"21cfbc678f5a279ebb6ed124273c8df37eaf12a2d04180403ae6b5ec0b1e1ef\",\n    \"4478ed6a346d899ad7b0b10350270aad39ddd5b68529297e4c91a54357f0a7f\"\n  ],\n  [\n    \"350bfefbe3d864eaadac9cc1195c14159bb736be743aed7380d2384cadd2046\",\n    \"5e2a4b3ad0e1d7b9b8ef72b10d68a80e5ee691d7db591fcfbaad6240d41da8b\"\n  ],\n  [\n    \"529acd569127f73c8d34345f87e96cebfb48ee12a00a3861cda209337ed94e6\",\n    \"3120671a89b705e5bfd99b0e7fd2118b4914a3ac309b3d74527cacb5ad7491\"\n  ],\n  [\n    \"55d3d7956a97d10e65a4d8ffeba40deaf0db0b57f8e022cdb3df6df613f5c6d\",\n    \"159e59a6f92f48fcf85aa96c1a03749a4c4e2cf9e2bc94dd36796daebd9b8b9\"\n  ],\n  [\n    \"405f019ee8f2e972a005c549b0884b5051f63d1e78480b73208dc07d8c65a1f\",\n    \"4301a3d0c285ad309ff24a12c100ead7f48ba1368143712f32ac141ab4d9e8d\"\n  ],\n  [\n    \"376d59b298d982f02dccad0edd5bbd4e5e8fad7898750675ed0856850a7babe\",\n    \"5233b12bbc50564eb61cc098a17d3d97f06ec7a230380e4c5d3b725cc318eba\"\n  ],\n  [\n    \"2f55624af6109ef04b2ed035a44a904ace8627f55889f011f768aabf4de9a38\",\n    \"7f64209ce7dfb63337ccf3d8c14f4093295f86996cabfee23b1655549aca089\"\n  ],\n  [\n    \"3b8965e942bed2714bc2e685fb103496e1e3595ac6a343d6df45fb5ef6979ed\",\n    \"5b7cac7a165cb69ae103dd9052fb39c00ed0aad47989005aee53972d82d45b5\"\n  ],\n  [\n    \"7abfe3accdec1eae1a50049efdd9a8eb7c2921a08e8bf1fe606e9d5a4039ec4\",\n    \"3af178e7e831f8148244d2d2b284a32991852db6212ad0a9d77540ef648a5fe\"\n  ],\n  [\n    \"4983196df6ad7d6f0a8d76f86af3863ad8611374a03fc0fd00793181dbde9d\",\n    \"204c1f91b70f975a21d24a8face664e496f00f602daaafa69a3b56098a4cf89\"\n  ],\n  [\n    \"79e2b91c1531a3b16dbd53e72d94e16bf265cbec261658151acfaea3718ea72\",\n    \"3d9bdb47e8b148c1c5e9e694ffbc2cf71aac74ae1a85e8d8c3f77e580f962eb\"\n  ],\n  [\n    \"297efceec61b3be17565843cae465c52524b4ecd9331a4170f54f7de8c4556c\",\n    \"6ccef1733624cc8b973ac63dd54e7a53604929affe81c3439525ae5ed6af993\"\n  ],\n  [\n    \"44f04b1966264a23ccdc870c8563ad2efcd4c8087b5469b90e792287a5581c7\",\n    \"1c417f0e9829fa3d3cbb7c3cf4dc7aac04c5bf66ff3f86b833a42c533aed1fc\"\n  ],\n  [\n    \"6ff83f5d8b51db3be0bda80eed2e2adb7037f2f58f705e88f0f98197431ac26\",\n    \"64f59b8428894c2b7afd740866065ded42e716c7d48accd3f117f22768ed9fd\"\n  ],\n  [\n    \"14aa8187c9559f77cd1cf96b2dfc949182529936f2b0b4050ea56e134073b24\",\n    \"5f36508c68b1dc586f3fd3f4e2bd29c6d8258491b8a6aa19ede811ce0d3d0a1\"\n  ],\n  [\n    \"95e8882a68c5000d1c2be7c0b43e7f2a6f8de906485241f0285a5c73a27a83\",\n    \"1e4cb67207ab73bc1e5d19fa2146fde6d03021393b77a55df4ddda1fd28f5b1\"\n  ],\n  [\n    \"2ae0704dacb3da47d564514b4c3543505b403ba09a248c6e74593cba1867ff5\",\n    \"5a4b5818088dc9ef4066b90a8893ae80fc89584f987ec1928ef9d72cea2bd67\"\n  ],\n  [\n    \"61a10898a76fb99989e51c0e823cb60b95ec7ccccb917c42b2b28014f5fd94d\",\n    \"23d8ec1de45366d3b86c64c2da05a2ce3d171adf52ca5522e652ffd0eeee795\"\n  ],\n  [\n    \"79884133c879cf07734976fd64de220c5a972e04c2a3afb74c362d6c3beecbf\",\n    \"2aaa0e6d4891b792b5643fdf09873343cd0e3fbba3cbd0601b481a4083f32b6\"\n  ],\n  [\n    \"45f73d2fa82be6c5ccd0f62d2237efe8727c479967d27cce28e42b9a44bad5b\",\n    \"2fa4932215f72d56d8be5205c5851c9b3e5f2a14468e4a7acace5437c6b27dd\"\n  ],\n  [\n    \"37f53f771850f52f9c8f87b53c6bf0c93c2bed76f5fd1d5697356d0b2325007\",\n    \"50f1a052b79b446fbc7b93ffa1a4515f6c3be3a76a2b0bc5eb8ff327549960c\"\n  ],\n  [\n    \"71bd6d23e0d2f312d47582efa609101f15b9ccc571fca8ac4fe3457c67fbc9b\",\n    \"3b3fdf86bd4c7fc26d60540a6439b4d179dcbf7b91efb0ddc60dfbff9a148c6\"\n  ],\n  [\n    \"78219ba049438385b829c13a4993874a4a326c4143de0dd581c7b9956f99b06\",\n    \"5505f1268dcdd4ee01b77abac3bfdcbf3f0513ab097c69ff777b4a631aaf256\"\n  ],\n  [\n    \"b81e924a86536dcf68bc5a2ca2065a61103ba6c9eb0ae4cf8cce9dbe286f15\",\n    \"653a6dfb51acfe8a844fb8362795e5549d424aed88d3a090366a44f840b5b83\"\n  ],\n  [\n    \"441c0d7b7aa705046dc0e07ba5f33a7d9df23f694a05192ff8c2d7be2aa3fdc\",\n    \"4c06568c0902bb99d428bfa0a946ed0f0ca0a51fbf07cad88e06e9c78e38a59\"\n  ],\n  [\n    \"2569c8c78b6d6b92533f29f767c95720d377fa63ad5a3b9827ee0a74b0488aa\",\n    \"4b59c81d3cfe08834f946d9d57614f5366e0bcd9349475aaaebe01341196fe0\"\n  ],\n  [\n    \"3f2fa285a0471647b214eac652bbad9d58a9f2dd2e812aff0210d0d8a6eb32f\",\n    \"4cdb18e1c2848c2b52c1a6557165bd1a8f55c2f7562f5cc0b326f73c25b696c\"\n  ],\n  [\n    \"5bb5141ab4fcc5290ae9151b8045a2cd8391547ce7b3b33cbbb10f8fb538092\",\n    \"5a36bfd52acc6a83a9913b937ec086cc27fed030b5fa70dbc5d3c12c9515f56\"\n  ],\n  [\n    \"3f3fed272edf91aa7f8ca5d70005d390fbc67830ffc69c5fa3ae17582d2771\",\n    \"459057e0883c44d8776fa217405f443e5954f08c4a5db68e437becaa664a999\"\n  ],\n  [\n    \"5237ca6656237a717a739a4509f70db1b9dedbb6cd232f60c9bd8c4563a6b1f\",\n    \"56c7799dd02896dbe7d69dd8bb9718270549592099569d107b7b49c34bf5a49\"\n  ],\n  [\n    \"1cf6b8499ac881e0b2fc7def9bc1a28937033b2fc52de99e75909a620c7a281\",\n    \"5769cf4f735366fa386b6858043dc99a100f86fbc77b16d57d77766197ba27a\"\n  ],\n  [\n    \"1b74b8a6b86dbf9638cdb0601e1a332b8d880753423d38c3394902c57f15e40\",\n    \"6bb2dc10d2ecbb913219d0ebdc8d3337d644ed8b6c4e70637ef4c7e50887488\"\n  ],\n  [\n    \"61e4da415661bba52a4737e2bcde1a837787c4796b2e1854778534f1582c29b\",\n    \"27c43e632cb7652e8508c9c38e3b4ad0d3dd6ba748d42dc84ec2685e64b9aad\"\n  ],\n  [\n    \"7c460a204d23f20ce86596dae6ac9b36734e4a9f7c5b43262c97a36c6a41c6e\",\n    \"481a11f9300ab4c4bf6924c5ca884728cc361247377065920966785d043fbbf\"\n  ],\n  [\n    \"124ff5e55e4effa40daa5b9618d75c49c8b6fad95cbe8c0bfdd83cb9bed8316\",\n    \"33a2ea15d0f71f58a00de71acd7f22ccf9002115e49dd1f7631faa0d32f9987\"\n  ],\n  [\n    \"61c9f8fc86715e95ff43583a865c5a6515f93381839d557ef884a68637eaf4c\",\n    \"5877daaa42bbab9083b571e12648a9d62ced4470d71653092b6546f4a5acceb\"\n  ],\n  [\n    \"70a6b9a9e5d1fcc07dd9ebef6d8f5fcf04c6cb34932d0fe2335330ac6dc8d3d\",\n    \"3f0cbd332ac56922e886656bee74f6e9bb4bb88f7af7bba9098678af1f38fc\"\n  ],\n  [\n    \"41db8a0f1ea78443a39e08a54323743c8897eed1ddc28f41aec6f2655040d9f\",\n    \"7d4bf32f8f4719c2e4af8b7889f3b65cfdd033dc2f971798a12170f2b26efce\"\n  ],\n  [\n    \"62f035e01acdfe841104942d6c8c07f0fbd618cb85998ea24bcc24cfac1f8\",\n    \"1caa886104b7d753fda93645a746989794cd825c62473b526ea34b3d51b5771\"\n  ],\n  [\n    \"441c6f016d270e86c19843727b83b864cec060cafc813b23d7e41e5abb1a60a\",\n    \"29fece4e40400f3acae0586f4fc8ed535e805e472123ec38d662d8a0b01c086\"\n  ],\n  [\n    \"2c791ba0fb0b66177815c98191fa6188dba9c795e34a7c3c8a19086215e3cee\",\n    \"11123151389d4b330db6a665a560407e7cd8c3807c749e2b0cffd9c3074ba77\"\n  ],\n  [\n    \"5292da4ca71ae75ed0554c267747e39c7a129b3b863e1af3ebb3e368439c4ea\",\n    \"63af6a5016deea8cc674c44f16c63c1db31f09af4fb4d2ea7917c28116661fc\"\n  ],\n  [\n    \"3367388d5d1b7758dc3d92e244f227bb8a54e3d9909e7b7dd62ab5965e3efc7\",\n    \"7ffb4833071e4b03ea755ccb9938487a478248fe9b1158a08f1ac298801c092\"\n  ],\n  [\n    \"95c863314b7f18090f8eee602403be823a367a1b416d54c32e5f914e67d922\",\n    \"159c2824f899171deee23e0ed520d4825bd667983df0a8d45d3a1f7156d91f9\"\n  ],\n  [\n    \"621c6e08b3c57404644ad49ac7629832c141273fa1f323781b3395393fe985c\",\n    \"65d1eb0140652958c4371ebec791e03317d6b2e689d90e304666f1b610783dd\"\n  ],\n  [\n    \"54313129bf13993952cd2b31ed06013aba85e74c1b8a00e062031f32188a84e\",\n    \"680129efc9eb8ec07fc180e8f6877e5f0f9f44e3000a2c586ed4ce49d12a313\"\n  ],\n  [\n    \"21ea57a1c8286bb45872e78617853c47b89091670ba51c124afa3362e7260d\",\n    \"7087e5c1536df233ec9bfe2f983e8d7622892b9bf64c450c9823898e2cc2fc8\"\n  ],\n  [\n    \"3793b05b99e7a57d88db4ed0dbc3b771285abcd9052da50f88595354409f3f3\",\n    \"12164105041c056f127e737c7cd63981e05f246bd2b6b65d1f427019c7c3801\"\n  ],\n  [\n    \"befd345cef5fcae22ac37dacd6b9128cc58cbba3e3fd774e11b421c2ba392\",\n    \"6209d25f24f88f7876ca604db23d05f78e6b3b67fb033f2f1bee221f352b8c8\"\n  ],\n  [\n    \"15fa536045fda4c65ff74f10b4e669ce88b9996c6772288289d3ad725987fa6\",\n    \"30e0c2124a35e265e931ccc66ce5ac3697d982814beb407144ff6762cb691df\"\n  ],\n  [\n    \"38b795bd77ac573576dc204857a488cac2cce19809882631ca2069598c577c8\",\n    \"786ba555d55ebef688b068bb9186a34a08cb00bdfef51619bbf911890ae9a13\"\n  ],\n  [\n    \"6c66853592196c3eb8d9526dc155205e2c64097adf8684bb0e15eb460ce1c72\",\n    \"1bb4ebf654f4250c8dd1061a4e1b464b31a8a9999ac9960446ef8108a66871a\"\n  ],\n  [\n    \"5b08dfbc87ad9c00b88e78816973ad2f9c10c70f2156908892cc7b7a2a1fd30\",\n    \"1151f407a77e2556073173d8f5c9ff561d8a23742121ca15f7d0ac391af50ea\"\n  ],\n  [\n    \"309190eba106aa6ead54b5ca5817969aa68b4b4c627700799a49fc6bdd32ba1\",\n    \"505b6a2bc7b0d78ca6ce2abe7dfb7312369918a4599cccf8a615f6701cfd851\"\n  ],\n  [\n    \"89cc205966af08acc8910d563af7443d5dfbb5d88dae79c013c678c65dcecc\",\n    \"1f8cf955694b246a423ac725791231257b88936e00347ecaa1e17045c0ab540\"\n  ],\n  [\n    \"480086b61a80c36cf1e1a350baf554e58ee8d9333186b70c9c512fb9e9d5a84\",\n    \"511edfe58f8d36a6170df743731da1ff525cfd5108be20e30ac4183d1281570\"\n  ],\n  [\n    \"3caf14fb1d2e90a13ad4eb091250fe37133aabf6029633e905e5a93ead41dbb\",\n    \"49122aff6059dfda19e4b973aba5ebe3804c91728936c6381c1ed1ea9380920\"\n  ],\n  [\n    \"66d1b8fb2cabc46cd79741ce1cb7326077ad8ea3227a6427244bdd3806bdadd\",\n    \"4a52eb74f4d5371ba3265dffd61c844f9e68d4ff0b44dc4936182f9280bb66b\"\n  ],\n  [\n    \"373330c5afd53c31257fcc9050fef873e15ea9f81d9810f30744309b04e02b3\",\n    \"5889806607b3dc97a9c5b0c8a2f16d1792099a22866b879ca480cb89a11ef5c\"\n  ],\n  [\n    \"26840d0ec69a22c6818ff64b8b14633b531508c866e21d1dc9239778ae9e8c7\",\n    \"157971f9a6e3a24d3b307be0e7c8cd352e2eb5cad33cf276270c0f309ee63fc\"\n  ],\n  [\n    \"ebb84848f1c38c19a754d1b5d9460e39624dadbb30800987c9419c0f933b9f\",\n    \"517b297cf32f4064e6d6c8e761ba8db89809604a701c7b3aa1a9c6beb370ea7\"\n  ],\n  [\n    \"25780380bc0795ed0dca727c55240f1d63593e552d224adb40df2d3721c0f66\",\n    \"10215fb5a893e0275e9f1f66b217dde35addee91ed0e8f7d79531a2ff57b8c8\"\n  ],\n  [\n    \"243e1581cd1abfbf18c31c19a4c3d1cedfe69a40bb57b607c9af2717eefc742\",\n    \"1296c27929f14535718c3a4ebe045f00afdc60afc74c7d398d8ce1b6609dc0f\"\n  ],\n  [\n    \"48babb8649e054bc8e0b902c89e6940c265f48464520649502ef1064eb94562\",\n    \"3235be7852b0526d1a16f6969ec0e5b0e09cedaadc65863dea4e47f4f398264\"\n  ],\n  [\n    \"592db7c27e63489ef4bcef2eafce89f40067cd9a1ba48bc3dc76b5fc62ad9ca\",\n    \"48b7711b570cd9ac65910e75e752f4b751fdbfb4091a28f59b8c046d3d9f8bc\"\n  ],\n  [\n    \"31d133456222586ae42a9ec7ce8539ee04afbe0b2ed00a2564dab0798d9b55d\",\n    \"a77c52fa1fd718db5c83e7fda6d7d4d9aafef9ad95cad621470f2b753729e5\"\n  ],\n  [\n    \"4651668379883521e7983aafcb93811b4a72ef2975b3277773746708ef3e3fc\",\n    \"512507f3f544d80ba5d47f73b571881e8d70d7b1d305b9704bdad036b7abc47\"\n  ],\n  [\n    \"26069e359b2e847affaef604f772f36224608b7642245d0e643889ed231bddc\",\n    \"75ae1ec379f074ebc91270077c74b4d34347ce183b676b4dbe100bfff143b9e\"\n  ],\n  [\n    \"3196d01d1fa11dc3803b4813c4bbc6326869f61410f2bd14bc0f570d875aebe\",\n    \"20313217cac79875bd2a503db1e86d1e5559911667a02524759344468d9561d\"\n  ],\n  [\n    \"483256607f75f06fb126addc60cadddd602154cc4782bcc08351a48745d0b97\",\n    \"2950a7e500ebbe9775f08be37cc2e62ccf9030de18948d1bab07a4a9173f75d\"\n  ],\n  [\n    \"65f07b6050a2fc6eebe2c29ffa62f764060f7f9d3c82d2cb5e4e368aaa442c9\",\n    \"562c9654b646cb84a213b41de203c871b3eae0a05c9c105a66a53c319c06373\"\n  ],\n  [\n    \"284870f6181c43f3b01d94baa9c5b6ada0deb861145523ad9169580eb7bed35\",\n    \"5e03e6c40c1cfa3cafb01fd0622349871832a9d35499d06408a83edc1b76d02\"\n  ],\n  [\n    \"32229810a52137f0e6c3d37595c46f6132822d4b05f42674b48d7a7ac3ad85\",\n    \"7babde959a0cf2c53ee59fc52c77c3adf899453f077f441965629f9aead30cd\"\n  ],\n  [\n    \"1ea8b98a6b85e74e0a2fbc18b206e290f3ed94ce99ca665e8e2351dfade990a\",\n    \"478e93c4724115fb1648c8d5347422adbc1a0bbf962b2312e14aec80e1be742\"\n  ],\n  [\n    \"270cbaa08c79140c85b864475a0bf569cc03ac785e57f543dc444f37ce746cf\",\n    \"3a9b8d894016680ae9d1bf3deb931d8987d4d8d8bfed45b81ccc595ec79046b\"\n  ],\n  [\n    \"6943922708b8ae5b40dd7031ef2e487abc4ac39a3591368285e83d6c9c51f4d\",\n    \"5f157c37d09634e8cbfbef90ea50af59815d011e419a691c67ca3402b5efc33\"\n  ],\n  [\n    \"48ac6a80979fab4912cf0cb557d917a0bd68825d8658ec100496eaae6ff62e1\",\n    \"2b6931350ab183402e39476340eb1177b7006f7a552915581e29a79bd7203a0\"\n  ],\n  [\n    \"e3adf9517d92ef22d1e2a787740a292ba32d5ca69faa9e8675f63ed816dce5\",\n    \"36bccf69bb12dadd610145a3399213248d193660d8dc90a2e206f23bf2c7997\"\n  ],\n  [\n    \"5e6c8ae5afb2fa470f767581f3d578cf6a49547e4b78665edfd45776948bef8\",\n    \"6cbfc11953dd7e195d2ce74e52a60df524767b44c4608bdd755be4bc85eb74c\"\n  ],\n  [\n    \"15a576a1242d39300f0db3ad770983825988da0457718ecd596c63a0a0eb4a6\",\n    \"69a42e5f6f5a63349b57683a4609bba90f556a1680fa1ec3b02ee7d3211f903\"\n  ],\n  [\n    \"274cd14e4fbf2ed07402e8ad8075b320c5f76b7ea45ea36af523e95ed63ab50\",\n    \"6ca640f9557c5f2d8b27f6ce95b108880ff4e4816b26b70b6506114389ce656\"\n  ],\n  [\n    \"4d8284e132e2fe81c5f71be1e3c79ab51b229e2c56c323e207cda179999d123\",\n    \"116cfc00e9fbee1cf16af6282123cdf20eed13021c2037ef4c86f94eb6e6cba\"\n  ],\n  [\n    \"4056194fb5643e97991942ef5b63cadd89080bf57a01489c4398aca03f0980a\",\n    \"2e2cddb434fa6f6da7859c3d518f0ced8795eea043a6c9613fb3e020103339f\"\n  ],\n  [\n    \"5d119d5c5ce532afc0875e0ee9b026d878c8773d34237f90a0d0670da6f01b3\",\n    \"4a79fc025ce076b6a4742fbcc8cad313d0a8220c58024a41a5a674c0947e64b\"\n  ],\n  [\n    \"11800ce4061d99b9d53fd4138802335258f7798c5a935c9979f5a949ce1d483\",\n    \"36745a4741a5c7290eaa8f2a3f9ec955ccb7ca323272e5d35d35c2a724ffac8\"\n  ],\n  [\n    \"4302525bceb97fa642fd5560a4a39fba3d2c06f68e6aff3332ff1854439ebb3\",\n    \"e31edfd081ce82f8177b2d7d96e69851d09e908c2517114ffb37ee12c0ac64\"\n  ],\n  [\n    \"2f5fcbb96f0a66fd3bdfbcc78bda361cb812570f50e7c476533d56eee01c0e3\",\n    \"527428a34855b5695c479d8fb7e831a299f7897f36682a74169cc60d160df2d\"\n  ],\n  [\n    \"52167df045ad0dc999b98de3d035aced9da4434211149b8cf4bf20e774580cf\",\n    \"19051d2a1ad3fab190c5dfaf45188b49b4e90cca22aae54f0a785562d3d3f41\"\n  ],\n  [\n    \"541b5332491dbdb2b6f6bccceb7634970c046963891fae936dd950f4432b961\",\n    \"78fa54da996a51e3a9c06091d58c2405a806649da2bb1f323807c4eec50eda2\"\n  ],\n  [\n    \"5f11e973da659b7738f87ca5bd4f3bd02207dd3c8d978f0d3e83fe81030febd\",\n    \"137aba7027069f62d25caed416e13537687bb1428e71e5f0a0c52d52f2e65bc\"\n  ],\n  [\n    \"15ec941ee6c2110b819b5541be52981c09d83484c9dc735c43f39f5778718b4\",\n    \"4561826142dc5b56acfcf605a78a4090472bb61235bcd605a765e05d0a7e549\"\n  ],\n  [\n    \"68ba398736d659522f484406110b43c68158bf4992094acf797a38979c587a4\",\n    \"7c1d9e1702e28afddf22fed7a7a79df4315c174d0c6c4f4c75bc77d9b56777f\"\n  ],\n  [\n    \"67889cea31c81a429fbae643a4fce0ecd690a5c32b99397e39ed6d7a08702df\",\n    \"7ea277c80b671146c9e455b98f42f45b941ac95ca2d15c8fa9ea82ee9b45e01\"\n  ],\n  [\n    \"596f2c68390ac26505d3c2eca5c77d46f8f3acbed192a2649d8c525a58d2334\",\n    \"49f3bd8c62c610d5c19c52d970bde24b270c4ff7ae900453b909e72483974a0\"\n  ],\n  [\n    \"567779fb8b0afe592cea284629e3621ccfae3c4d7d3dc559c9fed750591a395\",\n    \"6010bdc33f1cdb374facefff537e7910b72a1120502f312a7ce41df0d552ddd\"\n  ],\n  [\n    \"cebed0233e810aa6a29a8b0829d28f1c92f303d14dd73d6b12da98117dfc7\",\n    \"4bdd51e1192a00df23aa8d0673e4915877ca41ddb8c9eaf21d39dd167fde7b7\"\n  ],\n  [\n    \"4c7085f066adeb6781596771972b188177e63f2e2b3788d03e033cdd5af1f06\",\n    \"2929ee89f525862b0cedb3ab9b5166e1680cb77fb4668f10a6a3d76b5434566\"\n  ],\n  [\n    \"760e341bd836899c226176f47685f69438270c150c6fe7744cd723cd1e72359\",\n    \"1bf09f2f1aac1a10ce8bdf20d5d178db747f01a4aa0aa8a5e4bfeef562cd94e\"\n  ],\n  [\n    \"6016b94c00b54920027ef64902c61478244b1936337d2ad41d9a8d43dd6a4b2\",\n    \"3bf3dd9bce7f6d6f120de87fcbce6219340b59c2c1d75ee0d45105d33aab1cd\"\n  ],\n  [\n    \"4929e44ff692eb944d1045bee96e750219cda3bda0500029f0df49a1db30b5b\",\n    \"2e138dcbd092242699004b4ce98764ffe4e892841f56830af298581cd1e523f\"\n  ],\n  [\n    \"5972d0e526311bacb70a04e88969b6c63c7399b578f0dc28bbd00d65ef01da7\",\n    \"76b22bca9ac12d26530e7b0757e646beb3bbc5680d0f3f82fb8ee57ed4b5e39\"\n  ],\n  [\n    \"2ca0a42a26e26934ca2d48db960b4719113d87c5e57fb437d557c5eb4e03ac7\",\n    \"62778c02561d4ec5d83a132afd7763a8349207c6b5d01fba70b56ba660cba2e\"\n  ],\n  [\n    \"5137ee53f076e21a2c23da09f63c0d275408c31e4634a6b6373be5cf13e6c00\",\n    \"14fb446c077beb78e04de3282a63bfde12f9af85caaca4ddfab506cee31c0c1\"\n  ],\n  [\n    \"7d944853d1627b63f560aeda33acf640d35a4ee4d23a744957a2dae9d5b7c6c\",\n    \"bcb411a210710acbcb9ea12680d89e3e4e652228b6786d3886e95f4d9e6970\"\n  ],\n  [\n    \"37d412c2ffb173a728477446b60b2b702d07a5243cb5fc8963e623a5ee75843\",\n    \"672c79968908f92cd0cb0b4c65ba86e8f359b015623a89441e1bf859bba84cb\"\n  ],\n  [\n    \"5b37f472aa80398bff12cc74c8ee784c4fc89757292580d3a498bff17e9f114\",\n    \"7d79da1aab9cfef58a5f3d1c9ec466956a45f8d2af0c1da6dd4c93f720fae6e\"\n  ],\n  [\n    \"25c09b3f1188c562571536202eb0f5fc4b9a7590417b8ea58b4343685d88a63\",\n    \"3d5b817c73b37e9a1d24ca923351359b42ced2f3cafbcac8c2d6322dc767bb\"\n  ],\n  [\n    \"32e60904e73f9756f71e0a918d302aeca17cad4acacc81bab15702ab5ff78f0\",\n    \"bcf4c0204f8275072f98a65b09ac58b87cdc9c70c4edfe99fe18870a3a5459\"\n  ],\n  [\n    \"49c35575996c1517d2daed90d2fe4a58e674d6b4aaa7288d0642c8bf59e562f\",\n    \"57eeee00adea4ca80eeabab57852cbf03f1a57e21872cd44221e0550b9193b8\"\n  ],\n  [\n    \"10e1776b4c2a867bf1b028c6edec224cc6616c747e272f49e69b67b02a893dd\",\n    \"8d45d62ec8e627b56950f2f7622a0438647f9e9f28e723e4a37cebc039a1b0\"\n  ],\n  [\n    \"79a93a75ecbe943acc964fd39ecfc971dc6555b2bc335e7b53f52f4eb16cd36\",\n    \"146132a68ce2ca8b48363612226771ac547eb3cf52b6eb7981718faac08aa3c\"\n  ],\n  [\n    \"6b22d32e0590e169504e7f19864fd646d0994e7ed3e578a5b88f6e095913439\",\n    \"68c3b22d859fb85e5c8fa0a8aea932285945b230957e603394333e9ad5acd82\"\n  ],\n  [\n    \"71ce5ec8286eb8c93b8481c6d19cf0a288ef4da4397e9c80f65023e516bc097\",\n    \"54470babc742780cd8a05499026e738ccbf81d4170d1731734de68a8e5b402c\"\n  ],\n  [\n    \"27beb13a43bc6a1f6ce046da438b0beac5899ff4d57962dcfb6476b563f74b\",\n    \"14074e9e93ee45394dfbe833998b9d1691961f8ba3166224b36404448c61bb3\"\n  ],\n  [\n    \"6b1de6c8f161aa6509a1dcacf2c0aa1bcf6ee9d9b40e032a9d72f77a6fa298c\",\n    \"5e9312eb5b59d6cbadd7d3dcbc39f1b5bd9a8346fdcfdf1107bada6f9cc048\"\n  ],\n  [\n    \"32670fc3fa43bf39974ba72ea51f0d045d92d084a81fe5282dfc8309aa900b9\",\n    \"518fee521bf1af62356aac3b7e53fdbf57121e030c6e9572b3de69912ca4eb4\"\n  ],\n  [\n    \"4b9ca363eabed9c66091a347375f7065cd28f49f914447de7cc1461f1375f1e\",\n    \"3a1a3a2e5e7e72476befe2571ece708052d740d02cbe6fed58740968ae609c4\"\n  ],\n  [\n    \"4cc6da42863a3deca62fa218b7a3b50e034eb4bafd393eccba3f4cbe192ef10\",\n    \"20bfa683c884f203713953b26d2821287ecd305fa2cb70570474533fc07f918\"\n  ],\n  [\n    \"87705353c44a5ccec8de65cf5433be6b3d9bd21eea49b60e6c907cf1a67a6a\",\n    \"112804b13eee56e3b01aff75fa08fa8374c44fc461aed8a30ad54acd09c24eb\"\n  ],\n  [\n    \"6cf6eeeb9d339c0a05f72fd5af73fc7588e6d957100ee8999109437bc126cae\",\n    \"54fa257cea22032eac272fcd034dadf2e00d602ef9e519cf7072023c130aad1\"\n  ],\n  [\n    \"19b32925048c5519d929650c833661b452ef7be7963fab0b6b328ab7dd7a28a\",\n    \"1bd0c14a10bf9b88ea61011c0b2e64d07da151c6203800d5a5d12063838a510\"\n  ],\n  [\n    \"12a5fc5559428bc3b4eff97b21b63668b866e0722807f1db1f19696bacd9b0d\",\n    \"4c2eb07f0c24047a3d73b560144f3fd32c99d6dbd9fc7cd2fd2a72a6e4b24c7\"\n  ],\n  [\n    \"13662b7a7d390aa76eb86a7c3bff6d9913eb28db6bd1a7c42de5cdad2e35ce2\",\n    \"40626aded7f56f82cc431ae30527b096f57fbfbc04d3e12a5abae3edf301cf1\"\n  ],\n  [\n    \"255825bd49b8a2cce114360bd9c8fe8c641af64c8e7710107213cfcb006f43d\",\n    \"3619cce4482335232f9e76a1460be9d296f2d468d26e4f95a78c71524fe59cc\"\n  ],\n  [\n    \"7f83009eeed4f12f54d341bbf06066480cfcdf51dda103ac54d4bcecf6b3b31\",\n    \"4269519d28faafd7fd68bebfd8404d71ba05d62c4bb6d65d24aa6802fb84ab6\"\n  ],\n  [\n    \"2f325650eb316646b4eec903fe44828fcb11054f1bd42ca3a77f7e734110b35\",\n    \"44f976082271016f9048e22c507d97d628722bb431f8d5cc1890524e6c386bf\"\n  ],\n  [\n    \"750b166bb6edc0ee80fae39c7c106879036738df2d79fb2294e1c21e9a24d6b\",\n    \"54f8aa297a1afafe2a17a3254f45861167414327e918d17003c6aad01d0b24c\"\n  ],\n  [\n    \"3aedb10db9cf3285cdeee375879396fac1fb50dd259e1716f8c01e66f67ca72\",\n    \"7feb9400f621f58c21601f23b7ec7c94a9b6b193c1cd74a8a60846aedadd359\"\n  ],\n  [\n    \"4ab7151702de76faa493e7a0b1ac20ee4d10c33b83fec9477547cb1236973eb\",\n    \"63f1f122e3ef3acc46b0915ac69c3f5772879799cad889a817f55f5853d1235\"\n  ],\n  [\n    \"1675ead0d20e5bc3a7a7331999a87ac4c916ae29669e54197bb02aa6364520f\",\n    \"4d1122da90d49e491922d9b533a6a668e2f65a2737ebb391ebb29fb7c1f8a9d\"\n  ],\n  [\n    \"2f7148111ef53c613157aeec12e16a20f13481da4390b6ce18a85d1d8547087\",\n    \"2eeda779ab395597651d2a0b833ccf53b10280750139916ae2baf4ec57c633d\"\n  ],\n  [\n    \"4439c7810e7b2ba772b701ec3acdca0b80c9df23047710b87f7dc3f13b337d3\",\n    \"5029cfe704c602a8a4662af0a5860ec03fb88f046d0e3400f2ce7638014c621\"\n  ],\n  [\n    \"2248eec40b5732a6a488b681f093643af7937071bc73118acae295a32b51b05\",\n    \"1577e4aec30a97b648de4d0b19cf8891151b4eb11f8de9c6d7312f091552e19\"\n  ],\n  [\n    \"4738424e558d4e0d87a3124ca02ea24f0adc6b7a9768b0d3945ed2a6104857c\",\n    \"33576f92aca3f0c8ae689c3c274c2de6b918940d86a6852e02fc99e35d1614\"\n  ],\n  [\n    \"7829edd8b866ebf7baaf604ed13d19a9797578f44bbc51b1cd67ca53803e96b\",\n    \"5559040a6083f2af1f9133ccaf5bc2ce06e56ddfc7dd410e9635c0116b62722\"\n  ],\n  [\n    \"7f927b881f2cdc05e1a69e40bb714af47b630d1425f08ab5d574ee698f33d51\",\n    \"26a465288e96572de303203bd38f4a03031e8158da0591cb037c0a5111d1056\"\n  ],\n  [\n    \"36a65598552f8753580d1655417d645a140966e10a1e1663015f9fdfae44881\",\n    \"33d5bbfaebf59eae72b89b1aea12ab2ba3c9617f8c3baed1ec16bdf668381b5\"\n  ],\n  [\n    \"403becfa545c826782026ff409cc16c9d4fe428f1b5b6e630c92439d2fa5fd\",\n    \"47bd6f2bf5d74f710ecb479c79b01fb774fbdad590e683a415cdedf33f71dc5\"\n  ],\n  [\n    \"3a747826d241b877d3d56b16e0b810cf088eda4fd6048da174c9991a942a5eb\",\n    \"2c7ba19b0a3486a2cdb84d4a388d34beb077a0e467ba44590166f93f6a09d2e\"\n  ],\n  [\n    \"3d60cd375842714b37bda89dd1f13a7e0f3ff133b522209617d031bce05a537\",\n    \"f77f216451ab01ad5226844d2162a7f32744688bcb4325445539e2ce5cec4\"\n  ],\n  [\n    \"235bf66f67c9100e7f0e22bb299cdfaa603644b240e0770aec7e7fd163e2a65\",\n    \"37110b3fa83ece3990afca2bea8d5ebb3c7aace60a0147f8e6ab733e2f2b4d5\"\n  ],\n  [\n    \"3b796d4eb69a55471fa86108f787b3604874e92b6887a7667a6c2bfbbd9a42b\",\n    \"4912d6dc0419732ef82cb3278415851d4e2d7ca89e0f4d7128cc9de51b810fe\"\n  ],\n  [\n    \"48d53516dd51e49faa7ab46c8c10db1befd10f23c6a9d9bc3640a2f0da44518\",\n    \"73a2fb3d064adadf21aa1362c04affc660598f38a9e069b3afb74d0a99ae9ee\"\n  ],\n  [\n    \"48c32cff161ed145da0d5b73084897647abb777adf65738559ceab6939cf3e0\",\n    \"3d99308978e828f857c382df32b472bda81e8ec8e30c8844077ba6d6d2ba903\"\n  ],\n  [\n    \"2947ff091a8ec9684affbc9a62e09e598841c4a6dc638088492aa47dea57097\",\n    \"19a2cc97975e547f97a4d02e42f89e6ced6f5a953cfccdec347867d26926541\"\n  ],\n  [\n    \"1960d85f30475615f82484eba0bdafb7ea7cac3809f0518a757d66f02b01676\",\n    \"36c8f77baabf0cc8805d993bbe62041fcf4e3239cf9d53278a4fbd91e75eeb7\"\n  ],\n  [\n    \"2765f28074d21d5a055340b6d40092d2bbef807e02009fabfa08ec0b9bdf38b\",\n    \"7fb189e0553d5df52b6843661814824b3f3cbebbd54988f042fb256c6bf30b\"\n  ],\n  [\n    \"348836cb2aaa00212f4b1a4e2d7fc5417f246bf2fe5c9a16ebabda449e2e08a\",\n    \"3f7276fd7d69e0d55ce5ee1d2d830534a27227fe0b6d8a36c93f9a78b872969\"\n  ],\n  [\n    \"7afb9d34b6a42ea8c6d870e4b8191c274201dc1f93a1a2219a2392b7e345a31\",\n    \"42bbc20dc7115e0758b364a110227b16b64ec58fc535ce5ff1a9ad8b8a09fdd\"\n  ],\n  [\n    \"2cae0c2afee1767fd4c66f52e1f176d217e92e89cc19eb36d5a6c1715f641a\",\n    \"5335efe2d9bc3667d25ea88bf76438a4d6ab9ba5c512f9da7d0529b79b62d83\"\n  ],\n  [\n    \"1cc5fde334707723c3a06f00c106db88664284a2df47bb6b144d9f960aea3e2\",\n    \"dbbf610d100316938bcd8bcd078513512ecb50d4579690dbefaa419c05980d\"\n  ],\n  [\n    \"54e90cb8f3a2998d2675c5780679e06c0556b1e618f8fdf07f9a4b2466fbf1e\",\n    \"16248676b6f06ec5e34994bc3115f85c8147b54f34d8500928f2fdc051e2089\"\n  ],\n  [\n    \"525c70a2ba0dbdd68d75640f47f13d0d415ea595f7030f533f4625c2a46523b\",\n    \"58292c8675e5e1a438f49e0c05648d9a7aa997f2f1fd77d5de1944afe5d7eea\"\n  ],\n  [\n    \"54726d78d099007393348787a03107ab492e59690a46c87fb02ec554f2353bd\",\n    \"53b54b77184ba75a3391e0ebfa6d6974db028f3f8e34bbd5460759a5848dd76\"\n  ],\n  [\n    \"4ac81a66903537769d3aac6c483ccc08535cb767b6b5e1ec8017a7393ab70ae\",\n    \"2cb22b77a8a05d26f11a4dec80eff292633aa05553a889c5ab16b6ac6e2ab17\"\n  ],\n  [\n    \"21d0175349e21114988a2930b9a607d43245783cb4a0c984ce27f4c4206708\",\n    \"59f1f49342cc5496213d3329bf4ca7fb0044337449c579bf53147a1dac9e67c\"\n  ],\n  [\n    \"167f821b381f4c8adcc39789475fb55ba639e5124fe75f26dd61be396dd5e66\",\n    \"22002c87d4cafb47ac9d27286d5cf5ff7a6715d69814118269b0729be9e4b3a\"\n  ],\n  [\n    \"31010666c6db83a9f9e4db4c48173afd405783ac53852a6e38a8ff925528843\",\n    \"1f466dc9b5d9094107c741dbf380f9fd98d8549cd50f67169901516f8cce74c\"\n  ],\n  [\n    \"1ad3875769a5053388a86edc85dd80fdffbbda6a456aea497ff81a0f1f6707b\",\n    \"2de7cdec5e2bad56a71bd2f33a4ae4c874e1ad4210a6ac32b443cfa34e85b1b\"\n  ],\n  [\n    \"c489650fb7f459ce09cd05a456fc5a46b849b38a671298ed645bcdaab168b0\",\n    \"45610d092b8af1c43ceed474cd17f7bbee65120aa6fa4d37f949e7e41f25327\"\n  ],\n  [\n    \"394256a5ef4d7af5459587a0bd2edb8acaf5ecfef2563c9a04daf34a4abe4c6\",\n    \"1ebee390dae1403c0c53994e1d064fa64e20fcb45392e209b2b99486a559ffd\"\n  ],\n  [\n    \"410a1511fead6151e9bedb089b9832d0fe01fab76d3f8459929f767525aeb27\",\n    \"361f0a5ffe09fcc3ad4eff3f5e89508ac247af80267100b69de3c59df561cfa\"\n  ],\n  [\n    \"38cd437c9f659e110a869605c182ee9fdc26de36baf559d9229e258267bb734\",\n    \"624b1128ea7739bf1cbd0e423af92a4884323c868d2ba0ee9d362946edee2d1\"\n  ],\n  [\n    \"78b126e50b7042d2a019f95cb87a3213c664ca1bafe345999b1e9e2dac1e608\",\n    \"19e398196b22f4488cbe854c614ad8c353839abc5ab3a4f3f5c03c16ba8a198\"\n  ],\n  [\n    \"6d3a5ce91132f385a91823c5c8046c4b638f5fe63357424410d901457cdb867\",\n    \"7b80bae16d2d487e122495174f7a70992bc5dafbed72bf84127ead7c57302bb\"\n  ],\n  [\n    \"32d053a904dc4d88fbe7d0b96e0cbeca22a00aa5c79c753d52b0b60abf31602\",\n    \"3af6a02e5cae6d6490354ae51185149e3fdb6d0d9caab90e95ff58aa0c40377\"\n  ],\n  [\n    \"49b1fbff5bdb0aa6938b066dde0ed772c0d81f9eff52e7fe038b0ccbd78adb5\",\n    \"1c6e57834eb14d507eed8b36c81ddf92fa91c242467061927a742fafa82b43d\"\n  ],\n  [\n    \"2f28b8994ca6f234d9293d26196b43b9d1d5306844348c4a638102c05de85f5\",\n    \"759cfb172eab065d477248b3569f4ff5791055f01e95fe71b94b8e615d73c96\"\n  ],\n  [\n    \"3c2ee954ff534f856f59188fa0f29ed8a022aee0cac52d634f6dc58cd514d70\",\n    \"22bd162e74925f0a876bd8a206b8767dfdd7c898576a73a490f138d9a7f99c6\"\n  ],\n  [\n    \"5763a7cab001e1aaeabf9ab5b9b2fffe6cc2b299ab04ec4933da74d960e1ab\",\n    \"715ee4f8ee93ab5a1dba00f0a6abc4eec47d49b61254cc27fc36a031e32f0f8\"\n  ],\n  [\n    \"19976ad8d7b7f47c785408243a227401996b36e47c7a78a7bc7d4256233ba9a\",\n    \"896b713c5d7777b0703821a73c1d9a4c3755501042120534ff13990975e1f5\"\n  ],\n  [\n    \"61674b992c29827186cab5ff454758dbbed8e89bc23d0bd33193afccc3a04bc\",\n    \"38e1020744c13903809ea30a0662fdb5226ae760cdcf10800faabec452e00f8\"\n  ],\n  [\n    \"2ea2d48bcb83c0c9cda4efe11f07165cfcbc9ccd26526e5fb12556316d4b1df\",\n    \"1d2d68b74ad384c5c4a9c85453104216357bfcdf635680b40215f0f800974cb\"\n  ],\n  [\n    \"7881212050264c40c336ed3a15dd2cd868ec9a558f5b728869eab66e8b8ed54\",\n    \"21aaefcc8ad8a161b8971d6880321781dbd939570c540da4c330922b8c81e9b\"\n  ],\n  [\n    \"b6be88ce0461d20f59c5199573cda0170b61decf6e8e69a6d32f1695adc4ed\",\n    \"5536e4808370716f2bb3423a9a49a38ddbfe91faf3b7a35eb53d3519238b6cf\"\n  ],\n  [\n    \"e5972af1655eb6dde2e8c77cc58044299922441b5ee41ceaf5cafedc765bcc\",\n    \"550282f37a4783dd60801c237045992d6fbe82a5902e7d837ea25f6f98c7b3a\"\n  ],\n  [\n    \"7efc1aad1f580d8f50274f1c114c40056be19a8c96fa8c4cb5bf85e1e7f3e4\",\n    \"2689f1c3898b114d668be6413643ee9f879913d40c262541fd0316264c60a4f\"\n  ],\n  [\n    \"7939db98037f59b0113e9d60051f75ac9c3cfd1a3eb535c73e2d945068c6c5c\",\n    \"410914ca8bbf3c65cdf3e9772ca790c19131c50068d34b7346c10260a578a8e\"\n  ],\n  [\n    \"225b77ad00a2b83d26690190b74867326eca4f55bfbc3a13be036225ca3b1b5\",\n    \"411faafef89042ce6beb64309fdaff70fa53e9d32d79a21e7f82f80e79ff05e\"\n  ],\n  [\n    \"1501e64c99c8b6658b0479f2c05c9142d246eaabfccf2fcec8dc4399539d8e1\",\n    \"3bab1e3339e42c9ee66c65b0b20236fdd9362d3ce786ad3a9779ab578af50a8\"\n  ],\n  [\n    \"59b907b941f24fb8ea2458153e55f07534b388e835af7b69f3c9f54392a335\",\n    \"1d5438c4f2f68a417f3d56f916d899a6ffe910f5f2989ca31687f1b10f60db8\"\n  ],\n  [\n    \"2887d08a26f484546f360e33abbf7a998b7170a5b30070938b84f072c676bf3\",\n    \"62a78e8d00e5d3a59e2fc424ffa08961567ba1ef24c8531cd7bceee6074a535\"\n  ],\n  [\n    \"6e3cc8076b3d45377929033af35aab0c6d19ae4fd47c0daf844079ca04c46eb\",\n    \"7b90f338e4d848aa8f19d0b5c3bca916a2a9024acbf14bddb278bca2aa39e5f\"\n  ],\n  [\n    \"34844dacdd3ec54a3af328bb9d67715ab33425e194ac9977ca02ef22e8f7a88\",\n    \"3c1affc6372f32a1634748124f9e1a03c4f0c993971da0dc28888b0801279d\"\n  ],\n  [\n    \"436b192e03a49796cf9bc5e93c88268b71c9c24f9c3a85322bba634ebea309d\",\n    \"67a8091ef69d62abcb28ce5df4dc7d53f8dc2b9690344f75ecd03a6d9386044\"\n  ],\n  [\n    \"592d25b68baff87a6d7fd41ff0dadbddc1bd1316683de3b2d677501c0eb14e4\",\n    \"27ad1e1099683f54589010faeefb19e38569ace43653be8787a42b0591e7bc5\"\n  ],\n  [\n    \"89a5111ae911512ba62e87b97f643c0219702f235c70f62c6678a129302009\",\n    \"557fa3d98e9ce7b83b47545013a4498f3de43787fb66b1a54521222242f7c1b\"\n  ],\n  [\n    \"1c9b5e53377e72da5066cb08566bbf9ec31ec1877f455d932cd9b1aa375d34e\",\n    \"72f79555a8bc207863f32d482fca54692825449fd8963fcea3de3a8183a739a\"\n  ],\n  [\n    \"574a6e05eb14591729515be239ea8c1fa9e12d4049d42876f76c8ff37bca03\",\n    \"5f99b3af43ca68c1c73e8190d5f73c8de162ba643d7d5f0cd73cfa8135db6d3\"\n  ],\n  [\n    \"513fc5c2e16505b2b25a2f284e167d5401194bcac0dc3ecf8b7c9acb560daa1\",\n    \"687ee7a1a8954d08d3856e1a16ded808e419e789736d3f55f79f7693bad69f5\"\n  ],\n  [\n    \"53d48bd1205274b1c2b0a0ceb3d21c5fcd7c8892a784931603240b288a598b9\",\n    \"35387abd7ea59c9b956de44d36533cad1f6668c438d666651695ff3862159be\"\n  ],\n  [\n    \"213eb1ea99e08825110dd61094eb6e8145119dc1c507636f068730b1e086d44\",\n    \"744f6853f4f02f4f042468d0739e0c9f64df720b87ed77d1979547084ef7a89\"\n  ],\n  [\n    \"735ef017d091ca23264ad0aa7bb9b2be3309b4539605e79ed4a652ccb2fbe3c\",\n    \"7f0ccc7a5747c4e921fff97d431169f690763427e2cfd1ad74d7a0308d7faa9\"\n  ],\n  [\n    \"3f36babc5a30070b610ed97db44997e6d9115c9c0579ad8f75d295a17130001\",\n    \"79047908a2474e32d5c712a07bf5c4ad522590bb5d6cefda410d30528e12ca8\"\n  ],\n  [\n    \"51c04907ae88a5926b242fb2862cb1f2c651a94e6caad5bff8601c079fded74\",\n    \"10a585a269f460aed43f54c7de13cdf623fc8de5957526997278be939ef32ad\"\n  ],\n  [\n    \"c1e1bd626a735aa2c065831317217ecce68e377eb1f67e54ce2e97bc2ef2dc\",\n    \"53c5af23a9b482f420be6dfd37b6886154cfd130794098e1f51c1885ac2556a\"\n  ],\n  [\n    \"5aff3b30775ae4758e604a4a6262803a545f5ef4e7855fa245ac6a6431a9ece\",\n    \"39a4799e5519047f29333bee9c86c99bfa8056d4aa381c396c4a44331fe795f\"\n  ],\n  [\n    \"3d753e9723701a8e9d99b91bb93dee2eda7ffa5072fb2cd5c5fd99aebcdb299\",\n    \"15798bf5c17d6d5880fed1553af32dd8d8baf2888c715a886575448a24c7975\"\n  ],\n  [\n    \"6593e5078466b07a4222d2e544da826d2c583c9cc5f2eaea148b129b00d4aa0\",\n    \"11b352b08a0a61d3cd67d1dc08069dec3bde907b3da0f56de5011b956bf8744\"\n  ],\n  [\n    \"7a6eb353c5be9ff03fe4a06c01fb71aad2b38144179a291ebcbb2c2417cca65\",\n    \"3de3ecb12f2fa699b46a9d399abf77ca17bebc3e491bfb2542dd0fba991e2bb\"\n  ],\n  [\n    \"2c7ead583d6c32162091034a9eddfa775b4e84b8bdbea939edb2a80dcf64f6\",\n    \"461790ce40d9c276d962b2a1e9a74d66e9d7335962e234e8a2fc6963d31722d\"\n  ],\n  [\n    \"34285af023d9b4c2c2b88e8704bf2c05a9b553b00b2e70ff05f8c2970cb134f\",\n    \"33fe678e7671760a83836107428dbade68c3593fbe568f3f8f1b2c568099c44\"\n  ],\n  [\n    \"6222f720a24466263db6a11842f117fc4bb78da6705f140e48869db3e087441\",\n    \"6eff5b9bf3aeedc962bc5a24b66e7bdad2153450ed53a058bf2c8dbf2907693\"\n  ],\n  [\n    \"17c6ec5ea206eb97cbf53851e37ce391080e0d2bf1e5395610f79ab0503f7ce\",\n    \"3adb71ca3523d88ceb1e365f12dfb24895453c14daf0046b2626cddadfdf5f7\"\n  ],\n  [\n    \"70859f9771a713e54974ce11cdaf44b0dcc3e9befa0c0834908d877eeaafd27\",\n    \"d18f794bf0cc0623b711e7450030424e52326c45ba9b03341883ae4828a5f8\"\n  ],\n  [\n    \"2a820cfd0fd4ab0871e7b303cd545a3086caf8fa818c087a4017197da74efbf\",\n    \"5f992683ff37f6c041b84bfc01503d333ac9763505cc8f69473da01812969d1\"\n  ],\n  [\n    \"5b0526de2c07fe7cd73e3884f642d57a0ac5e13c68590ed03a14e530616e8c1\",\n    \"eec69d0cbd92c9fca31ec967dba848bec368e792d6678797946a5e34fe3487\"\n  ],\n  [\n    \"6cf6b3efee707210cb3a72f1e885c3d0953aefb43e5e148c740aa1641725c61\",\n    \"911cb630b898e2c1a9115f9e45bafe3b819edfb1eab6e15612d14289939984\"\n  ],\n  [\n    \"74e913de55f1e46143cb2ecfc580f8d3d3908f200281322b84e21c989cda293\",\n    \"761d2736c9ac7670ba905bc2629c6c0dbe988820a4454ff415ba68710f7df92\"\n  ],\n  [\n    \"44084305e0c911a40b7cbefe5f13cffe9a99375d1a584c4a2200958050af7a9\",\n    \"249c83877371564708ea525b64b1e7e12785460d83364446531c9adcacba5f0\"\n  ],\n  [\n    \"2bf71ad4d1bee1a67fb300477029f54bdb0e09f78bf2ac2e8afc7465a7adbcc\",\n    \"6244dd6cad282539049be57487bfd9900bb0d5da805d02b535096368fcb4cd5\"\n  ],\n  [\n    \"3a62d8f763b62def36e4089458046a49c5ecb91b861549530773e0548ff2bb\",\n    \"6a10a03ba61e6ac657270465c09aa9526cf1ebe96bdecdf0e7000476a47b9eb\"\n  ],\n  [\n    \"284eed3a17c51e0677d4fe897f056abe9def8af07a4630e6ca5723e2aa6677\",\n    \"516a06ac1d5626ed03d2eee9de6f60f0311eca703a99b0fb31b9c66b01c27c7\"\n  ],\n  [\n    \"2a2c63b16cccd685f731d06fe93ce2cffb358d34d03dda9a7368185c1eb0c32\",\n    \"7180baca0ba81284809f92eca1654cd76b925a9242e5d5e0f18d0a55d13c6ec\"\n  ],\n  [\n    \"5f9466017ec09769611389ea5370ad68dda936d3f5816c9e928ff9574abf9a7\",\n    \"6619b5b145bb5f4f29deb7a4cd68ef4da3995312fa6537f0d01684da4267ece\"\n  ],\n  [\n    \"74f229babe01b4962b3307589c1a13019134b1db6822698388bebb55d21c30f\",\n    \"156ae857ab3279f754facba0db36398dffec8c31e5e160473198f2f891b7531\"\n  ],\n  [\n    \"334b9fe3a5fd99bc966ddd1309698fd32afd1f235062f2c275b6616a185de45\",\n    \"221a60053583cc0607f6f2e6966b62fc9dac00538bb7eb1148e007a92116d2\"\n  ],\n  [\n    \"7ad710ba002a67c731efbaba2149d16fec5d2f7aa3d126fd9886172e9f4ea30\",\n    \"3a10f8e902a7a13aec94d66415347e1314f9bac83a7db176096b809b25ffb86\"\n  ],\n  [\n    \"4306dd0a184a3283c3097ff8f7434cec80912e9dc04b7df21ba73fda9f8e6d8\",\n    \"6d42bd3d1a8dbddafd09e872e2aa3891ae79ec939dc1b382196bc21c4ab749\"\n  ],\n  [\n    \"1c3f2124e1135c32a426d1d14e471edd9e0f2c7bd703ee123cbbd608e8c4be7\",\n    \"3cc607a3c3f1ab68dd5fa56c65996002721b8ad8ad4b0dd9e5b1467d316583\"\n  ],\n  [\n    \"294af33272ffcee0b56a436de1b73759cbddebef4c07888b42c2f92b0b68e1\",\n    \"d837164311d5dca8d37b99ef9eb22708643c83d1cbdfe852f63ea07b06fbad\"\n  ],\n  [\n    \"753bdb5439a19bbffdfa02b1dc24e8368f22d0a8276b109c11e6feb26f56f39\",\n    \"6ed396231af93647633eab467f1a034f38e76823eb85baf97cae56e2dcd9f75\"\n  ],\n  [\n    \"5674f0cb892b733fc0b50e121d8679afed0a925c32594cc65ffe83bebe7748e\",\n    \"7fbf0325dd38dd94905adab2c52758552292a6a103d9edfcb11938828e828c8\"\n  ],\n  [\n    \"4a8f053573a0a74251059d0229d89b6660407ba0b491779fd10f87a5117c81f\",\n    \"21b70112485398bf67ec9d733df24a1df30dea718a93b786f41ed04e3ae3c5e\"\n  ],\n  [\n    \"726c01ec4a08df8fc8de173311f50d4f3b97c5a9cf68c1536146f827db95ae8\",\n    \"15013cafadefa7f1c4e4dfdd70bd4d3979dd18bd7f0332572ce2a3fd8773d12\"\n  ],\n  [\n    \"38ac0fbfa98937257460db7e6645d7e5112b6fce7234813fc8a704e8ade8da2\",\n    \"73c0109f86048aad08c443f781ae60ad13b99f7b9cfdf3128fe6d6eeb799a7b\"\n  ],\n  [\n    \"6f6d3a38621582ace092eb50ecfe9eff265df141ebdcab8653299116fcea291\",\n    \"4a1bf3f39bc919c8f1b720a0b1ce952cad17f2ba98308ee6b76dd9b6f3d7b75\"\n  ],\n  [\n    \"6a307fc28e1df8d9ad01766419e097797d65cb674436fa1c8f012d3de2c2a1f\",\n    \"26911a635ba824db004875d79dd84834a97ac12643e42829015bf88c1fd6f05\"\n  ],\n  [\n    \"2a74860e3336d6db916555894cc8028f41508812925db1925457afe40257155\",\n    \"5f8da573f4c39816ce2dba8a20224223a7cfec53117ec78973930c0e9b60244\"\n  ],\n  [\n    \"4d2b49e1ed0799f719b8269f092cb489a466a645bc0ccabafdc678864c176d7\",\n    \"5410083df7d256f18cbf5697ae5e52c31e075d8a3b27e21d6f5177ca882f6c1\"\n  ],\n  [\n    \"110ecb9fbf6c333d168cee473cc5ad98809b6cb9eb5d1f6cd28ab5fab504fd3\",\n    \"7e3c54d7533d9f8c3310f219dab0cc3ea4d39b418a748eeffd6bae2b8637a43\"\n  ],\n  [\n    \"5be4d711b80da70e6d3ac493250bbfd16f20b25f31919b3a91cf14ffbac1096\",\n    \"7f55a0919f082e8885f1515e83c5b39b6022404503507498e1b4422d79c43e2\"\n  ],\n  [\n    \"2605125b95ca4ba93a21cbbba5762898a7cf9e988f07ab9e64cb3868e3b139d\",\n    \"62f0ccf55b9fc0eaf9736fc8ee484e2acdbe259813af9803cf815829a5e9d3b\"\n  ],\n  [\n    \"1092bbbf206f2a3068167c3dd99a72de31e206f6c504c071c8214d105ff814d\",\n    \"309f489f68a62089f53b96df5d4fbc3ecc5a1a42eb7ece0e49bad17ad490ff4\"\n  ],\n  [\n    \"2abdee9409d9c92559ca3f4e6bddd649c31aa09b90bfcb4a612af491241e18d\",\n    \"3ffa8eac180a29de3f8a69efca84bac046f921f5725e96a6ff0530be1436aaf\"\n  ],\n  [\n    \"376313f27d00bb1aae7ec991745efe6ee28c6b50de0c6cd9845cc4bb4f83543\",\n    \"6a8e0a9389ba528b156fa94ac090a895d7b795818d4941c29415d9e2984c547\"\n  ],\n  [\n    \"a80380c71bd466a696b3f0fbf02817c9459d9798f4f3899cf32edf647fe066\",\n    \"6a09805e814e7cdfc76eba4b79f1df5ae559e0f0aba9f728d3cba4ea5c57471\"\n  ],\n  [\n    \"223694b921d247d989a79b9b2b2f07496036c40cb043eab074a9d6a2cd2ffed\",\n    \"c247217f1b1df35e30d9e15fdaadf42d6fb0edd3a5a7e265d4cdc426c120aa\"\n  ],\n  [\n    \"102333620df278c6714bbc880fc087db58c1b9b4d77ed4d61b32a74bfc7c3e2\",\n    \"6a77d37727ccf71c2caeb151faf4404d4b94e9047f9f0a7c3966367f3b53c65\"\n  ],\n  [\n    \"891626f466536929ee7eadcd18b41925706dedab7528ed5f0f7abf039eb9d2\",\n    \"5f73d11c141c933a35b2d0d06e5cbae614a20d17dc3b439f8bcdc3413c5ea37\"\n  ],\n  [\n    \"215c23fd3f073f870e5e80303967391bf173f8adcdbeec72d131c557babc203\",\n    \"10634332e9d9439a321597dc5b0fac9ff478834c3d6e281735f21a4a5e13266\"\n  ],\n  [\n    \"21ea0bdc1332bc36e6aeb43be9071651c27e4ea2eadec636c8d818d4af72a36\",\n    \"3a523d9643dccc6bb9c7c58413312caa3e60ba9c7c7f0177e0f3f469a3241e3\"\n  ],\n  [\n    \"60deaed1bffb6190beed40caaf2bfab5e43d3707aff7ad3f278d571aa247eae\",\n    \"e41f71ff254c1418e6a66992af307789fe04d6606fb2670900bb1a089fd879\"\n  ],\n  [\n    \"1e1fac4a1646253fb1332fadc21fbdd3e3a24a840d129400f520ae4116a4cf5\",\n    \"69c406f9f46576afad68808de0ab7e8922b6226af748e721d9097e21f1800f3\"\n  ],\n  [\n    \"5db0ddcdf79ffe74d6454c12d2bc60b06776db03c75dc413f5be42ea9a91b5e\",\n    \"134c3d6c699841f17306835bb193785228ffe7ab212a01a861c56b086a18cec\"\n  ],\n  [\n    \"626814e320fb5bea505b248fd1c1389ad586c1cfe04923fe2f83173e915f4f8\",\n    \"7ae407a926e887206a8b85cf485f1f327c9bb8ccbb6897024e2d122877d8ee0\"\n  ],\n  [\n    \"23186237dc7d3b570cea645282ad4c359731bbfa54e7f036426bf6493812cd\",\n    \"7d1fbab7e61a22d3b00993290d9f4cd5d820061573e787f66c2cff9a18e1eaf\"\n  ],\n  [\n    \"54302dcb0e6cc1c6e44cca8f61a63bb2ca65048d53fb325d36ff12c49a58202\",\n    \"1b77b3e37d13504b348046268d8ae25ce98ad783c25561a879dcc77e99c2426\"\n  ],\n  [\n    \"13961b56b9fc0e412e468c385c22bd0680a25624ec211ffbb6bc877b2a6926c\",\n    \"62f7f7792c77cd981fad13cb6863fe099c4d971c1374109185eae99943f16e9\"\n  ],\n  [\n    \"47abd7308c70659af3f00fafe6837298af3cb530b6c2ba710ffd07a6bc1ae98\",\n    \"75d0c8a7377aa9f0663d0c124a5659750847afabc29e39893fd27534a4a03cb\"\n  ],\n  [\n    \"2c6276b764fb398fa555857dbe0ce0ec18fab7a233bf23851295739801f0585\",\n    \"5d8f4897ce44007ec5bfcb9aeb78b8f6e1d40a514f72d213c9300d2770d2b8c\"\n  ]\n];\nfunction Ue(e, r, t, i = \"\") {\n  const c = i === \"\" ? \"invalid length\" : `invalid ${i} length`;\n  Vr(\n    e.gte(r) && e.lt(t),\n    `Message not signable, ${c}.`\n  );\n}\nclass l0 {\n  constructor(r, t) {\n    this.lowerBound = r, this.upperBound = t;\n  }\n}\nfunction ca(e, r, t = \"\") {\n  const i = t === \"\" ? \"invalid length\" : `invalid ${t} length`;\n  for (let c = 0; c < r.length; c++)\n    if (e.gte(r[c].lowerBound) && e.lt(r[c].upperBound))\n      return;\n  Vr(!1, `Message not signable, ${i}.`);\n}\nconst Z8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  Range: l0,\n  assertInMultiRange: ca,\n  assertInRange: Ue\n}, Symbol.toStringTag, { value: \"Module\" })), Ur = new ye(\n  \"800000000000011000000000000000000000000000000000000000000000001\",\n  16\n), Tt = new ye(\n  \"800000000000000000000000000000000000000000000000000000000000000\",\n  16\n), $e = new ye(\"0\", 16), $t = new ye(\"1\", 16), j8 = new ye(\"2\", 16), P8 = new ye(\"3\", 16), O8 = new ye(\"4\", 16), q8 = new ye(\"5\", 16), On = new ye(\"400000\", 16), mt = new ye(\"80000000\", 16), gt = new ye(\"8000000000000000\", 16), _a = [\n  new l0($e, mt),\n  new l0(gt, gt.add(mt))\n], Mt = new Ni.ec(\n  new Ni.curves.PresetCurve({\n    type: \"short\",\n    prime: null,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    p: Ur,\n    a: \"00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001\",\n    b: \"06f21413 efbe40de 150e596d 72f7a8c5 609ad26c 15c915c1 f4cdfcb9 9cee9e89\",\n    n: \"08000000 00000010 ffffffff ffffffff b781126d cae7b232 1e66a241 adc64d2f\",\n    hash: Li.sha256,\n    gRed: !1,\n    g: nu[1]\n  })\n), fu = nu.map(\n  (e) => Mt.curve.point(new ye(e[0], 16), new ye(e[1], 16))\n), N8 = fu[0];\nfunction ct(e) {\n  return e.substring(0, 2) === \"0x\";\n}\nfunction zr(e) {\n  let r = N8;\n  for (let t = 0; t < e.length; t++) {\n    const i = new ye(e[t], 16);\n    Vr(i.gte($e) && i.lt(Ur), \"Invalid input: \" + e[t]);\n    for (let c = 0; c < 252; c++) {\n      const n = fu[2 + t * 252 + c];\n      Vr(!r.getX().eq(n.getX())), i.and($t).toNumber() !== 0 && (r = r.add(n)), i.iushrn(1);\n    }\n  }\n  return r.getX().toString(16);\n}\nfunction ou(e, r, t, i, c, n, x, m, k, B = null) {\n  let z = e;\n  z = z.ushln(31).add(r), z = z.ushln(31).add(t), z = z.ushln(63).add(i), z = z.ushln(63).add(c), z = z.ushln(31).add(n), z = z.ushln(22).add(x);\n  let C = null;\n  B === null ? C = zr([\n    zr([m, k]),\n    z.toString(16)\n  ]) : C = zr([\n    zr([zr([m, k]), B]),\n    z.toString(16)\n  ]);\n  const F = new ye(C, 16);\n  return Ue(F, $e, Tt, \"msgHash\"), C;\n}\nfunction F8(e, r, t, i, c, n, x, m, k, B, z, C = null) {\n  let F = r;\n  F = F.ushln(64).add(t), F = F.ushln(64).add(B), F = F.ushln(32).add(c);\n  let T = e;\n  T = T.ushln(64).add(i), T = T.ushln(64).add(z), T = T.ushln(32).add(n), T = T.ushln(81).add($e);\n  let L = null;\n  const O = zr([\n    zr([x, k]),\n    m\n  ]);\n  C === null ? L = zr([\n    zr([O, F.toString(16)]),\n    T.toString(16)\n  ]) : L = zr([\n    zr([zr([O, C]), F.toString(16)]),\n    T.toString(16)\n  ]);\n  const q = new ye(L, 16);\n  return Ue(q, $e, Tt, \"msgHash\"), L;\n}\nfunction C8(e, r, t, i, c, n, x, m, k, B, z, C) {\n  let F = i;\n  F = F.ushln(64).add(c), F = F.ushln(64).add(C), F = F.ushln(32).add(n);\n  let T = e;\n  T = T.ushln(64).add(z), T = T.ushln(64).add(r), T = T.ushln(64).add(t), T = T.ushln(32).add(x), T = T.ushln(17).add($e);\n  let L = null;\n  const O = zr([zr([m, k]), B]);\n  L = zr([\n    zr([O, F.toString(16)]),\n    T.toString(16)\n  ]);\n  const q = new ye(L, 16);\n  return Ue(q, $e, Tt, \"msgHash\"), L;\n}\nfunction J8(e, r, t, i, c, n, x, m) {\n  Vr(\n    ct(c) && ct(n),\n    \"Hex strings expected to be prefixed with 0x.\"\n  );\n  const k = new ye(e), B = new ye(r), z = new ye(t, 10), C = new ye(i, 10), F = new ye(c.substring(2), 16), T = new ye(n.substring(2), 16), L = new ye(x), O = new ye(m);\n  return Ue(k, $e, mt), Ue(B, $e, mt), Ue(z, $e, gt), Ue(C, $e, gt), Ue(F, $e, Ur), Ue(T, $e, Ur), Ue(L, $e, mt), Ue(O, $e, On), ou(\n    $e,\n    k,\n    B,\n    z,\n    C,\n    L,\n    O,\n    c.substring(2),\n    n.substring(2)\n  );\n}\nfunction Y8(e, r, t, i, c, n, x, m, k, B, z) {\n  Vr(\n    ct(c) && ct(n),\n    \"Hex strings expected to be prefixed with 0x.\"\n  );\n  const C = new ye(e), F = new ye(r), T = new ye(t, 10), L = new ye(i, 10), O = new ye(c.substring(2), 16), q = new ye(n.substring(2), 16), R = new ye(x), U = new ye(m), H = new ye(k), Z = new ye(B), W = new ye(z);\n  return ca(C, _a), ca(F, _a), Ue(T, $e, gt), Ue(L, $e, gt), Ue(O, $e, Ur), Ue(q, $e, Ur), Ue(R, $e, mt), Ue(U, $e, On), Ue(H, $e, Ur), ca(Z, _a), Ue(W, $e, gt), C8(\n    P8,\n    C,\n    F,\n    T,\n    L,\n    R,\n    U,\n    c.substring(2),\n    n.substring(2),\n    k.substring(2),\n    Z,\n    W\n  );\n}\nfunction X8(e, r, t, i, c, n, x, m = null) {\n  Vr(\n    ct(i) && ct(n) && (m === null || ct(m)),\n    \"Hex strings expected to be prefixed with 0x.\"\n  );\n  const k = new ye(e, 10), B = new ye(r), z = new ye(t), C = new ye(i.substring(2), 16), F = new ye(c), T = new ye(n.substring(2), 16), L = new ye(x);\n  Ue(k, $e, gt), Ue(B, $e, mt), Ue(z, $e, mt), Ue(C, $e, Ur), Ue(F, $e, mt), Ue(T, $e, Ur), Ue(L, $e, On);\n  let O = $t;\n  return m !== null && (m = m.substring(2), Ue(new ye(m), $e, Ur, \"condition\"), O = j8), ou(\n    O,\n    z,\n    F,\n    k,\n    $e,\n    B,\n    L,\n    i.substring(2),\n    n.substring(2),\n    m\n  );\n}\nfunction Q8(e, r, t, i, c, n, x, m, k, B, z = null) {\n  Vr(\n    ct(m) && ct(i) && ct(n) && (z === null || ct(z)),\n    \"Hex strings expected to be prefixed with 0x.\"\n  );\n  const C = new ye(e, 10), F = new ye(r), T = new ye(t), L = new ye(i.substring(2), 16), O = new ye(c), q = new ye(n.substring(2), 16), R = new ye(x), U = new ye(m), H = new ye(k), Z = new ye(B);\n  Ue(C, $e, gt), Ue(F, $e, mt), ca(T, _a), Ue(L, $e, Ur), ca(O, _a), Ue(q, $e, Ur), Ue(R, $e, On), Ue(U, $e, Ur), ca(H, _a), Ue(Z, $e, gt);\n  let W = O8;\n  return z !== null && (z = z.substring(2), Ue(new ye(z), $e, Ur, \"condition\"), W = q8), F8(\n    W,\n    T,\n    O,\n    C,\n    F,\n    R,\n    i.substring(2),\n    n.substring(2),\n    m.substring(2),\n    H,\n    Z,\n    z\n  );\n}\nfunction cu(e) {\n  return e = new ye(e, 16).toString(16), e.length <= 62 ? e : (Vr(e.length === 63), e + \"0\");\n}\nfunction e5(e, r) {\n  const t = new ye(r, 16);\n  Ue(t, $e, Tt, \"msgHash\");\n  const i = e.sign(cu(r)), { r: c, s: n } = i, x = n.invm(Mt.n);\n  return Ue(c, $t, Tt, \"r\"), Ue(n, $t, Mt.n, \"s\"), Ue(x, $t, Tt, \"w\"), i;\n}\nfunction r5(e, r, t) {\n  const i = new ye(r, 16);\n  Ue(i, $e, Tt, \"msgHash\");\n  const { r: c, s: n } = t, x = n.invm(Mt.n);\n  return Ue(c, $t, Tt, \"r\"), Ue(n, $t, Mt.n, \"s\"), Ue(x, $t, Tt, \"w\"), e.verify(cu(r), t);\n}\nconst L8 = 130, U8 = 63;\nfunction Mi(e, r, t = void 0) {\n  const c = Al(e).slice(r, t);\n  return Fl(c);\n}\nfunction du(e, r) {\n  return new RegExp(\"^[0-9a-fA-F]{\" + r + \"}$\").test(e);\n}\nfunction $8(e) {\n  const r = e.replace(/^0x/, \"\");\n  Vr(du(r, L8));\n  const t = r.substring(0, 64);\n  return fo(t, Mt.n);\n}\nfunction D8(e) {\n  const r = e.replace(/^0x/, \"\");\n  return Vr(r.length <= U8), Vr(du(r, r.length)), Mt.keyFromPrivate(r, \"hex\").getPublic().getX().toJSON();\n}\nfunction K8(e, r) {\n  const t = Gh(e), i = T8.hdkey.fromMasterSeed(t).derivePath(r).getWallet().getPrivateKeyString(), c = Mt.n;\n  return Mt.keyFromPrivate(fo(i, c), \"hex\");\n}\nfunction H8(e, r, t, i) {\n  const c = Li.sha256().update(e).digest(\"hex\"), n = Li.sha256().update(r).digest(\"hex\"), x = Mi(c, -31), m = Mi(n, -31), k = Mi(t, -31), B = Mi(t, -62, -31);\n  return `m/2645'/${x}'/${m}'/${k}'/${B}'/${i}`;\n}\nfunction fo(e, r) {\n  const t = new ye(\n    \"1 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\",\n    16\n  ), i = t.sub(\n    t.mod(r)\n  );\n  let c = 0, n = jc(e, c);\n  for (c++; !n.lt(i); )\n    n = jc(e, c), c++;\n  return n.umod(r).toString(\"hex\");\n}\nfunction jc(e, r) {\n  return new ye(\n    Li.sha256().update(\n      ji(\n        wa(e) + Vl(Pl(r), 2)\n      )\n    ).digest(\"hex\"),\n    16\n  );\n}\nconst V8 = Mt.n, t5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  StarkExEc: V8,\n  getAccountPath: H8,\n  getKeyPairFromPath: K8,\n  getPrivateKeyFromEthSignature: $8,\n  grindKey: fo,\n  privateToStarkKey: D8\n}, Symbol.toStringTag, { value: \"Module\" }));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@starkware-industries+starkware-crypto-utils@0.2.1/node_modules/@starkware-industries/starkware-crypto-utils/dist/index.es.js\n");

/***/ })

};
;