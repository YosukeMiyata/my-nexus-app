"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@fuel-ts+script@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__55070659c3ff7c6c0b5898313b658823";
exports.ids = ["vendor-chunks/@fuel-ts+script@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__55070659c3ff7c6c0b5898313b658823"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+script@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__55070659c3ff7c6c0b5898313b658823/node_modules/@fuel-ts/script/dist/index.mjs":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+script@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__55070659c3ff7c6c0b5898313b658823/node_modules/@fuel-ts/script/dist/index.mjs ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractScript: () => (/* binding */ AbstractScript),\n/* harmony export */   Script: () => (/* binding */ Script),\n/* harmony export */   returnZeroScript: () => (/* binding */ returnZeroScript)\n/* harmony export */ });\n/* harmony import */ var _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fuel-ts/abi-coder */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+abi-coder@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6_6403986254e63357a3dfff475209c93d/node_modules/@fuel-ts/abi-coder/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_account__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fuel-ts/account */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+account@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_f204daa1b5bd0d8f80ab398db79a8f51/node_modules/@fuel-ts/account/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fuel-ts/errors */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+errors@0.101.1/node_modules/@fuel-ts/errors/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fuel-ts/utils */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+utils@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_j_f5ff000e110be614030afd6e0fd99f41/node_modules/@fuel-ts/utils/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_program__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fuel-ts/program */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+program@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_6e753f1b81b88d2c391508fb79ab08d1/node_modules/@fuel-ts/program/dist/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/script.ts\n\n\n\n\n\n// src/script-invocation-scope.ts\n\n\nvar ScriptInvocationScope = class extends _fuel_ts_program__WEBPACK_IMPORTED_MODULE_4__.FunctionInvocationScope {\n  static {\n    __name(this, \"ScriptInvocationScope\");\n  }\n  scriptRequest;\n  async updateScriptRequest() {\n    if (!this.scriptRequest) {\n      await this.buildScriptRequest();\n    }\n    this.transactionRequest.setScript(this.scriptRequest, this.args);\n  }\n  async buildScriptRequest() {\n    const programBytes = this.program.bytes;\n    const chainInfoCache = await this.program.provider.getChain();\n    if (!chainInfoCache) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError.CODES.CHAIN_INFO_CACHE_EMPTY,\n        \"Provider chain info cache is empty. Please make sure to initialize the `Provider` properly by running `new Provider()`\"\n      );\n    }\n    this.scriptRequest = new _fuel_ts_program__WEBPACK_IMPORTED_MODULE_4__.ScriptRequest(\n      programBytes,\n      (args) => this.func.encodeArguments(args),\n      () => []\n    );\n  }\n};\n\n// src/types.ts\n\nvar AbstractScript = class extends _fuel_ts_program__WEBPACK_IMPORTED_MODULE_4__.AbstractProgram {\n  static {\n    __name(this, \"AbstractScript\");\n  }\n};\n\n// src/script.ts\nvar Script = class _Script extends AbstractScript {\n  static {\n    __name(this, \"Script\");\n  }\n  /**\n   * The compiled bytecode of the script.\n   */\n  bytes;\n  /**\n   * The ABI interface for the script.\n   */\n  interface;\n  /**\n   * The account associated with the script.\n   */\n  account;\n  /**\n   * The script request object.\n   */\n  script;\n  /**\n   * The provider used for interacting with the network.\n   */\n  provider;\n  /**\n   * Functions that can be invoked within the script.\n   */\n  functions;\n  /**\n   * Create a new instance of the Script class.\n   *\n   * @param bytecode - The compiled bytecode of the script.\n   * @param abi - The ABI interface for the script.\n   * @param account - The account associated with the script.\n   */\n  constructor(bytecode, abi, account) {\n    super();\n    this.bytes = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(bytecode);\n    this.interface = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Interface(abi);\n    this.provider = account.provider;\n    this.account = account;\n    this.functions = {\n      main: /* @__PURE__ */ __name((...args) => new ScriptInvocationScope(this, this.interface.getFunction(\"main\"), args), \"main\")\n    };\n  }\n  /**\n   * Set the configurable constants of the script.\n   *\n   * @param configurables - An object containing the configurable constants and their values.\n   * @throws Will throw an error if the script has no configurable constants to be set or if an invalid constant is provided.\n   * @returns This instance of the `Script`.\n   */\n  setConfigurableConstants(configurables) {\n    try {\n      if (!Object.keys(this.interface.configurables).length) {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError.CODES.INVALID_CONFIGURABLE_CONSTANTS,\n          `The script does not have configurable constants to be set`\n        );\n      }\n      Object.entries(configurables).forEach(([key, value]) => {\n        if (!this.interface.configurables[key]) {\n          throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError(\n            _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError.CODES.CONFIGURABLE_NOT_FOUND,\n            `The script does not have a configurable constant named: '${key}'`\n          );\n        }\n        const { offset } = this.interface.configurables[key];\n        const encoded = this.interface.encodeConfigurable(key, value);\n        this.bytes.set(encoded, offset);\n      });\n    } catch (err) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_2__.FuelError.CODES.INVALID_CONFIGURABLE_CONSTANTS,\n        `Error setting configurable constants: ${err.message}.`\n      );\n    }\n    return this;\n  }\n  /**\n   *\n   * @param account - The account used to pay the deployment costs.\n   * @returns The _blobId_ and a _waitForResult_ callback that returns the deployed predicate\n   * once the blob deployment transaction finishes.\n   *\n   * The returned loader script will have the same configurable constants\n   * as the original script which was used to generate the loader script.\n   */\n  deploy(account) {\n    return (0,_fuel_ts_account__WEBPACK_IMPORTED_MODULE_1__.deployScriptOrPredicate)({\n      deployer: account,\n      abi: this.interface.jsonAbi,\n      bytecode: this.bytes,\n      loaderInstanceCallback: /* @__PURE__ */ __name((loaderBytecode, newAbi) => new _Script(loaderBytecode, newAbi, this.account), \"loaderInstanceCallback\")\n    });\n  }\n};\n\n// src/scripts.ts\n\nvar returnZeroScript = new _fuel_ts_program__WEBPACK_IMPORTED_MODULE_4__.ScriptRequest(\n  /*\n    Opcode::RET(REG_ZERO)\n    Opcode::NOOP\n  */\n  // TODO: Don't use hardcoded scripts: https://github.com/FuelLabs/fuels-ts/issues/281\n  \"0x24000000\",\n  () => new Uint8Array(0),\n  () => void 0\n);\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+script@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__55070659c3ff7c6c0b5898313b658823/node_modules/@fuel-ts/script/dist/index.mjs\n");

/***/ })

};
;