"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10";
exports.ids = ["vendor-chunks/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/index.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/index.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StreamingSocket = exports.SocketWrapper = exports.ReconnectingSocket = exports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;\nvar queueingstreamingsocket_1 = __webpack_require__(/*! ./queueingstreamingsocket */ \"(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/queueingstreamingsocket.js\");\nObject.defineProperty(exports, \"ConnectionStatus\", ({ enumerable: true, get: function () { return queueingstreamingsocket_1.ConnectionStatus; } }));\nObject.defineProperty(exports, \"QueueingStreamingSocket\", ({ enumerable: true, get: function () { return queueingstreamingsocket_1.QueueingStreamingSocket; } }));\nvar reconnectingsocket_1 = __webpack_require__(/*! ./reconnectingsocket */ \"(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/reconnectingsocket.js\");\nObject.defineProperty(exports, \"ReconnectingSocket\", ({ enumerable: true, get: function () { return reconnectingsocket_1.ReconnectingSocket; } }));\nvar socketwrapper_1 = __webpack_require__(/*! ./socketwrapper */ \"(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/socketwrapper.js\");\nObject.defineProperty(exports, \"SocketWrapper\", ({ enumerable: true, get: function () { return socketwrapper_1.SocketWrapper; } }));\nvar streamingsocket_1 = __webpack_require__(/*! ./streamingsocket */ \"(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/streamingsocket.js\");\nObject.defineProperty(exports, \"StreamingSocket\", ({ enumerable: true, get: function () { return streamingsocket_1.StreamingSocket; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNvc21qcytzb2NrZXRAMC4zNC4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxxQkFBcUIsR0FBRywwQkFBMEIsR0FBRywrQkFBK0IsR0FBRyx3QkFBd0I7QUFDekksZ0NBQWdDLG1CQUFPLENBQUMsdUxBQTJCO0FBQ25FLG9EQUFtRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUNqSiwyREFBMEQsRUFBRSxxQ0FBcUMsNkRBQTZELEVBQUM7QUFDL0osMkJBQTJCLG1CQUFPLENBQUMsNktBQXNCO0FBQ3pELHNEQUFxRCxFQUFFLHFDQUFxQyxtREFBbUQsRUFBQztBQUNoSixzQkFBc0IsbUJBQU8sQ0FBQyxtS0FBaUI7QUFDL0MsaURBQWdELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ2pJLHdCQUF3QixtQkFBTyxDQUFDLHVLQUFtQjtBQUNuRCxtREFBa0QsRUFBRSxxQ0FBcUMsNkNBQTZDLEVBQUM7QUFDdkkiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0Bjb3NtanMrc29ja2V0QDAuMzQuMF9idWZmZXJ1dGlsQDQuMC45X3V0Zi04LXZhbGlkYXRlQDUuMC4xMC9ub2RlX21vZHVsZXMvQGNvc21qcy9zb2NrZXQvYnVpbGQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0cmVhbWluZ1NvY2tldCA9IGV4cG9ydHMuU29ja2V0V3JhcHBlciA9IGV4cG9ydHMuUmVjb25uZWN0aW5nU29ja2V0ID0gZXhwb3J0cy5RdWV1ZWluZ1N0cmVhbWluZ1NvY2tldCA9IGV4cG9ydHMuQ29ubmVjdGlvblN0YXR1cyA9IHZvaWQgMDtcbnZhciBxdWV1ZWluZ3N0cmVhbWluZ3NvY2tldF8xID0gcmVxdWlyZShcIi4vcXVldWVpbmdzdHJlYW1pbmdzb2NrZXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb25uZWN0aW9uU3RhdHVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBxdWV1ZWluZ3N0cmVhbWluZ3NvY2tldF8xLkNvbm5lY3Rpb25TdGF0dXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJRdWV1ZWluZ1N0cmVhbWluZ1NvY2tldFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcXVldWVpbmdzdHJlYW1pbmdzb2NrZXRfMS5RdWV1ZWluZ1N0cmVhbWluZ1NvY2tldDsgfSB9KTtcbnZhciByZWNvbm5lY3Rpbmdzb2NrZXRfMSA9IHJlcXVpcmUoXCIuL3JlY29ubmVjdGluZ3NvY2tldFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlY29ubmVjdGluZ1NvY2tldFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVjb25uZWN0aW5nc29ja2V0XzEuUmVjb25uZWN0aW5nU29ja2V0OyB9IH0pO1xudmFyIHNvY2tldHdyYXBwZXJfMSA9IHJlcXVpcmUoXCIuL3NvY2tldHdyYXBwZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTb2NrZXRXcmFwcGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzb2NrZXR3cmFwcGVyXzEuU29ja2V0V3JhcHBlcjsgfSB9KTtcbnZhciBzdHJlYW1pbmdzb2NrZXRfMSA9IHJlcXVpcmUoXCIuL3N0cmVhbWluZ3NvY2tldFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlN0cmVhbWluZ1NvY2tldFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3RyZWFtaW5nc29ja2V0XzEuU3RyZWFtaW5nU29ja2V0OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/queueingstreamingsocket.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/queueingstreamingsocket.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;\nconst stream_1 = __webpack_require__(/*! @cosmjs/stream */ \"(ssr)/./node_modules/.pnpm/@cosmjs+stream@0.34.0/node_modules/@cosmjs/stream/build/index.js\");\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/.pnpm/xstream@11.14.0/node_modules/xstream/index.js\");\nconst streamingsocket_1 = __webpack_require__(/*! ./streamingsocket */ \"(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/streamingsocket.js\");\nvar ConnectionStatus;\n(function (ConnectionStatus) {\n    ConnectionStatus[ConnectionStatus[\"Unconnected\"] = 0] = \"Unconnected\";\n    ConnectionStatus[ConnectionStatus[\"Connecting\"] = 1] = \"Connecting\";\n    ConnectionStatus[ConnectionStatus[\"Connected\"] = 2] = \"Connected\";\n    ConnectionStatus[ConnectionStatus[\"Disconnected\"] = 3] = \"Disconnected\";\n})(ConnectionStatus || (exports.ConnectionStatus = ConnectionStatus = {}));\n/**\n * A wrapper around StreamingSocket that can queue requests.\n */\nclass QueueingStreamingSocket {\n    constructor(url, timeout = 10000, reconnectedHandler) {\n        this.queue = [];\n        this.isProcessingQueue = false;\n        this.url = url;\n        this.timeout = timeout;\n        this.reconnectedHandler = reconnectedHandler;\n        const eventProducer = {\n            start: (listener) => (this.eventProducerListener = listener),\n            stop: () => (this.eventProducerListener = undefined),\n        };\n        this.events = xstream_1.Stream.create(eventProducer);\n        this.connectionStatusProducer = new stream_1.DefaultValueProducer(ConnectionStatus.Unconnected);\n        this.connectionStatus = new stream_1.ValueAndUpdates(this.connectionStatusProducer);\n        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);\n        this.socket.events.subscribe({\n            next: (event) => {\n                if (!this.eventProducerListener)\n                    throw new Error(\"No event producer listener set\");\n                this.eventProducerListener.next(event);\n            },\n            error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected),\n        });\n    }\n    connect() {\n        this.connectionStatusProducer.update(ConnectionStatus.Connecting);\n        this.socket.connected.then(async () => {\n            this.connectionStatusProducer.update(ConnectionStatus.Connected);\n            return this.processQueue();\n        }, () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected));\n        this.socket.connect();\n    }\n    disconnect() {\n        this.connectionStatusProducer.update(ConnectionStatus.Disconnected);\n        this.socket.disconnect();\n    }\n    reconnect() {\n        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);\n        this.socket.events.subscribe({\n            next: (event) => {\n                if (!this.eventProducerListener)\n                    throw new Error(\"No event producer listener set\");\n                this.eventProducerListener.next(event);\n            },\n            error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected),\n        });\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.socket.connected.then(() => {\n            if (this.reconnectedHandler) {\n                this.reconnectedHandler();\n            }\n        });\n        this.connect();\n    }\n    getQueueLength() {\n        return this.queue.length;\n    }\n    queueRequest(request) {\n        this.queue.push(request);\n        // We don’t need to wait for the queue to be processed.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.processQueue();\n    }\n    async processQueue() {\n        if (this.isProcessingQueue || this.connectionStatus.value !== ConnectionStatus.Connected) {\n            return;\n        }\n        this.isProcessingQueue = true;\n        let request;\n        while ((request = this.queue.shift())) {\n            try {\n                await this.socket.send(request);\n                this.isProcessingQueue = false;\n            }\n            catch (error) {\n                // Probably the connection is down; will try again automatically when reconnected.\n                this.queue.unshift(request);\n                this.isProcessingQueue = false;\n                return;\n            }\n        }\n    }\n}\nexports.QueueingStreamingSocket = QueueingStreamingSocket;\n//# sourceMappingURL=queueingstreamingsocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNvc21qcytzb2NrZXRAMC4zNC4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9xdWV1ZWluZ3N0cmVhbWluZ3NvY2tldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsR0FBRyx3QkFBd0I7QUFDMUQsaUJBQWlCLG1CQUFPLENBQUMsbUhBQWdCO0FBQ3pDLGtCQUFrQixtQkFBTyxDQUFDLHlGQUFTO0FBQ25DLDBCQUEwQixtQkFBTyxDQUFDLHVLQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVCQUF1Qix3QkFBd0Isd0JBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQiIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGNvc21qcytzb2NrZXRAMC4zNC4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9xdWV1ZWluZ3N0cmVhbWluZ3NvY2tldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUXVldWVpbmdTdHJlYW1pbmdTb2NrZXQgPSBleHBvcnRzLkNvbm5lY3Rpb25TdGF0dXMgPSB2b2lkIDA7XG5jb25zdCBzdHJlYW1fMSA9IHJlcXVpcmUoXCJAY29zbWpzL3N0cmVhbVwiKTtcbmNvbnN0IHhzdHJlYW1fMSA9IHJlcXVpcmUoXCJ4c3RyZWFtXCIpO1xuY29uc3Qgc3RyZWFtaW5nc29ja2V0XzEgPSByZXF1aXJlKFwiLi9zdHJlYW1pbmdzb2NrZXRcIik7XG52YXIgQ29ubmVjdGlvblN0YXR1cztcbihmdW5jdGlvbiAoQ29ubmVjdGlvblN0YXR1cykge1xuICAgIENvbm5lY3Rpb25TdGF0dXNbQ29ubmVjdGlvblN0YXR1c1tcIlVuY29ubmVjdGVkXCJdID0gMF0gPSBcIlVuY29ubmVjdGVkXCI7XG4gICAgQ29ubmVjdGlvblN0YXR1c1tDb25uZWN0aW9uU3RhdHVzW1wiQ29ubmVjdGluZ1wiXSA9IDFdID0gXCJDb25uZWN0aW5nXCI7XG4gICAgQ29ubmVjdGlvblN0YXR1c1tDb25uZWN0aW9uU3RhdHVzW1wiQ29ubmVjdGVkXCJdID0gMl0gPSBcIkNvbm5lY3RlZFwiO1xuICAgIENvbm5lY3Rpb25TdGF0dXNbQ29ubmVjdGlvblN0YXR1c1tcIkRpc2Nvbm5lY3RlZFwiXSA9IDNdID0gXCJEaXNjb25uZWN0ZWRcIjtcbn0pKENvbm5lY3Rpb25TdGF0dXMgfHwgKGV4cG9ydHMuQ29ubmVjdGlvblN0YXR1cyA9IENvbm5lY3Rpb25TdGF0dXMgPSB7fSkpO1xuLyoqXG4gKiBBIHdyYXBwZXIgYXJvdW5kIFN0cmVhbWluZ1NvY2tldCB0aGF0IGNhbiBxdWV1ZSByZXF1ZXN0cy5cbiAqL1xuY2xhc3MgUXVldWVpbmdTdHJlYW1pbmdTb2NrZXQge1xuICAgIGNvbnN0cnVjdG9yKHVybCwgdGltZW91dCA9IDEwMDAwLCByZWNvbm5lY3RlZEhhbmRsZXIpIHtcbiAgICAgICAgdGhpcy5xdWV1ZSA9IFtdO1xuICAgICAgICB0aGlzLmlzUHJvY2Vzc2luZ1F1ZXVlID0gZmFsc2U7XG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aW1lb3V0O1xuICAgICAgICB0aGlzLnJlY29ubmVjdGVkSGFuZGxlciA9IHJlY29ubmVjdGVkSGFuZGxlcjtcbiAgICAgICAgY29uc3QgZXZlbnRQcm9kdWNlciA9IHtcbiAgICAgICAgICAgIHN0YXJ0OiAobGlzdGVuZXIpID0+ICh0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lciA9IGxpc3RlbmVyKSxcbiAgICAgICAgICAgIHN0b3A6ICgpID0+ICh0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lciA9IHVuZGVmaW5lZCksXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZXZlbnRzID0geHN0cmVhbV8xLlN0cmVhbS5jcmVhdGUoZXZlbnRQcm9kdWNlcik7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvblN0YXR1c1Byb2R1Y2VyID0gbmV3IHN0cmVhbV8xLkRlZmF1bHRWYWx1ZVByb2R1Y2VyKENvbm5lY3Rpb25TdGF0dXMuVW5jb25uZWN0ZWQpO1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXMgPSBuZXcgc3RyZWFtXzEuVmFsdWVBbmRVcGRhdGVzKHRoaXMuY29ubmVjdGlvblN0YXR1c1Byb2R1Y2VyKTtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgc3RyZWFtaW5nc29ja2V0XzEuU3RyZWFtaW5nU29ja2V0KHRoaXMudXJsLCB0aGlzLnRpbWVvdXQpO1xuICAgICAgICB0aGlzLnNvY2tldC5ldmVudHMuc3Vic2NyaWJlKHtcbiAgICAgICAgICAgIG5leHQ6IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIpXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGV2ZW50IHByb2R1Y2VyIGxpc3RlbmVyIHNldFwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lci5uZXh0KGV2ZW50KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogKCkgPT4gdGhpcy5jb25uZWN0aW9uU3RhdHVzUHJvZHVjZXIudXBkYXRlKENvbm5lY3Rpb25TdGF0dXMuRGlzY29ubmVjdGVkKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbm5lY3QoKSB7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvblN0YXR1c1Byb2R1Y2VyLnVwZGF0ZShDb25uZWN0aW9uU3RhdHVzLkNvbm5lY3RpbmcpO1xuICAgICAgICB0aGlzLnNvY2tldC5jb25uZWN0ZWQudGhlbihhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXNQcm9kdWNlci51cGRhdGUoQ29ubmVjdGlvblN0YXR1cy5Db25uZWN0ZWQpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1F1ZXVlKCk7XG4gICAgICAgIH0sICgpID0+IHRoaXMuY29ubmVjdGlvblN0YXR1c1Byb2R1Y2VyLnVwZGF0ZShDb25uZWN0aW9uU3RhdHVzLkRpc2Nvbm5lY3RlZCkpO1xuICAgICAgICB0aGlzLnNvY2tldC5jb25uZWN0KCk7XG4gICAgfVxuICAgIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvblN0YXR1c1Byb2R1Y2VyLnVwZGF0ZShDb25uZWN0aW9uU3RhdHVzLkRpc2Nvbm5lY3RlZCk7XG4gICAgICAgIHRoaXMuc29ja2V0LmRpc2Nvbm5lY3QoKTtcbiAgICB9XG4gICAgcmVjb25uZWN0KCkge1xuICAgICAgICB0aGlzLnNvY2tldCA9IG5ldyBzdHJlYW1pbmdzb2NrZXRfMS5TdHJlYW1pbmdTb2NrZXQodGhpcy51cmwsIHRoaXMudGltZW91dCk7XG4gICAgICAgIHRoaXMuc29ja2V0LmV2ZW50cy5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgbmV4dDogKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lcilcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gZXZlbnQgcHJvZHVjZXIgbGlzdGVuZXIgc2V0XCIpO1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyLm5leHQoZXZlbnQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiAoKSA9PiB0aGlzLmNvbm5lY3Rpb25TdGF0dXNQcm9kdWNlci51cGRhdGUoQ29ubmVjdGlvblN0YXR1cy5EaXNjb25uZWN0ZWQpLFxuICAgICAgICB9KTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1mbG9hdGluZy1wcm9taXNlc1xuICAgICAgICB0aGlzLnNvY2tldC5jb25uZWN0ZWQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5yZWNvbm5lY3RlZEhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlY29ubmVjdGVkSGFuZGxlcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb25uZWN0KCk7XG4gICAgfVxuICAgIGdldFF1ZXVlTGVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5xdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIHF1ZXVlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMucXVldWUucHVzaChyZXF1ZXN0KTtcbiAgICAgICAgLy8gV2UgZG9u4oCZdCBuZWVkIHRvIHdhaXQgZm9yIHRoZSBxdWV1ZSB0byBiZSBwcm9jZXNzZWQuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZmxvYXRpbmctcHJvbWlzZXNcbiAgICAgICAgdGhpcy5wcm9jZXNzUXVldWUoKTtcbiAgICB9XG4gICAgYXN5bmMgcHJvY2Vzc1F1ZXVlKCkge1xuICAgICAgICBpZiAodGhpcy5pc1Byb2Nlc3NpbmdRdWV1ZSB8fCB0aGlzLmNvbm5lY3Rpb25TdGF0dXMudmFsdWUgIT09IENvbm5lY3Rpb25TdGF0dXMuQ29ubmVjdGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmdRdWV1ZSA9IHRydWU7XG4gICAgICAgIGxldCByZXF1ZXN0O1xuICAgICAgICB3aGlsZSAoKHJlcXVlc3QgPSB0aGlzLnF1ZXVlLnNoaWZ0KCkpKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuc29ja2V0LnNlbmQocmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmdRdWV1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gUHJvYmFibHkgdGhlIGNvbm5lY3Rpb24gaXMgZG93bjsgd2lsbCB0cnkgYWdhaW4gYXV0b21hdGljYWxseSB3aGVuIHJlY29ubmVjdGVkLlxuICAgICAgICAgICAgICAgIHRoaXMucXVldWUudW5zaGlmdChyZXF1ZXN0KTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzUHJvY2Vzc2luZ1F1ZXVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5RdWV1ZWluZ1N0cmVhbWluZ1NvY2tldCA9IFF1ZXVlaW5nU3RyZWFtaW5nU29ja2V0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVldWVpbmdzdHJlYW1pbmdzb2NrZXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/queueingstreamingsocket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/reconnectingsocket.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/reconnectingsocket.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ReconnectingSocket = void 0;\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/.pnpm/xstream@11.14.0/node_modules/xstream/index.js\");\nconst queueingstreamingsocket_1 = __webpack_require__(/*! ./queueingstreamingsocket */ \"(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/queueingstreamingsocket.js\");\n/**\n * A wrapper around QueueingStreamingSocket that reconnects automatically.\n */\nclass ReconnectingSocket {\n    /** Starts with a 0.1 second timeout, then doubles every attempt with a maximum timeout of 5 seconds. */\n    static calculateTimeout(index) {\n        return Math.min(2 ** index * 100, 5000);\n    }\n    constructor(url, timeout = 10000, reconnectedHandler) {\n        this.unconnected = true;\n        this.disconnected = false;\n        this.timeoutIndex = 0;\n        this.reconnectTimeout = null;\n        const eventProducer = {\n            start: (listener) => (this.eventProducerListener = listener),\n            stop: () => (this.eventProducerListener = undefined),\n        };\n        this.events = xstream_1.Stream.create(eventProducer);\n        this.socket = new queueingstreamingsocket_1.QueueingStreamingSocket(url, timeout, reconnectedHandler);\n        this.socket.events.subscribe({\n            next: (event) => {\n                if (this.eventProducerListener) {\n                    this.eventProducerListener.next(event);\n                }\n            },\n            error: (error) => {\n                if (this.eventProducerListener) {\n                    this.eventProducerListener.error(error);\n                }\n            },\n        });\n        this.connectionStatus = this.socket.connectionStatus;\n        this.connectionStatus.updates.subscribe({\n            next: (status) => {\n                if (status === queueingstreamingsocket_1.ConnectionStatus.Connected) {\n                    this.timeoutIndex = 0;\n                }\n                if (status === queueingstreamingsocket_1.ConnectionStatus.Disconnected) {\n                    if (this.reconnectTimeout) {\n                        clearTimeout(this.reconnectTimeout);\n                        this.reconnectTimeout = null;\n                    }\n                    this.reconnectTimeout = setTimeout(() => this.socket.reconnect(), ReconnectingSocket.calculateTimeout(this.timeoutIndex++));\n                }\n            },\n        });\n    }\n    connect() {\n        if (!this.unconnected) {\n            throw new Error(\"Cannot connect: socket has already connected\");\n        }\n        this.socket.connect();\n        this.unconnected = false;\n    }\n    disconnect() {\n        if (this.unconnected) {\n            throw new Error(\"Cannot disconnect: socket has not yet connected\");\n        }\n        this.socket.disconnect();\n        if (this.eventProducerListener) {\n            this.eventProducerListener.complete();\n        }\n        this.disconnected = true;\n    }\n    queueRequest(request) {\n        if (this.disconnected) {\n            throw new Error(\"Cannot queue request: socket has disconnected\");\n        }\n        this.socket.queueRequest(request);\n    }\n}\nexports.ReconnectingSocket = ReconnectingSocket;\n//# sourceMappingURL=reconnectingsocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNvc21qcytzb2NrZXRAMC4zNC4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9yZWNvbm5lY3Rpbmdzb2NrZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGtCQUFrQixtQkFBTyxDQUFDLHlGQUFTO0FBQ25DLGtDQUFrQyxtQkFBTyxDQUFDLHVMQUEyQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGNvc21qcytzb2NrZXRAMC4zNC4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9yZWNvbm5lY3Rpbmdzb2NrZXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlY29ubmVjdGluZ1NvY2tldCA9IHZvaWQgMDtcbmNvbnN0IHhzdHJlYW1fMSA9IHJlcXVpcmUoXCJ4c3RyZWFtXCIpO1xuY29uc3QgcXVldWVpbmdzdHJlYW1pbmdzb2NrZXRfMSA9IHJlcXVpcmUoXCIuL3F1ZXVlaW5nc3RyZWFtaW5nc29ja2V0XCIpO1xuLyoqXG4gKiBBIHdyYXBwZXIgYXJvdW5kIFF1ZXVlaW5nU3RyZWFtaW5nU29ja2V0IHRoYXQgcmVjb25uZWN0cyBhdXRvbWF0aWNhbGx5LlxuICovXG5jbGFzcyBSZWNvbm5lY3RpbmdTb2NrZXQge1xuICAgIC8qKiBTdGFydHMgd2l0aCBhIDAuMSBzZWNvbmQgdGltZW91dCwgdGhlbiBkb3VibGVzIGV2ZXJ5IGF0dGVtcHQgd2l0aCBhIG1heGltdW0gdGltZW91dCBvZiA1IHNlY29uZHMuICovXG4gICAgc3RhdGljIGNhbGN1bGF0ZVRpbWVvdXQoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGgubWluKDIgKiogaW5kZXggKiAxMDAsIDUwMDApO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHRpbWVvdXQgPSAxMDAwMCwgcmVjb25uZWN0ZWRIYW5kbGVyKSB7XG4gICAgICAgIHRoaXMudW5jb25uZWN0ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmRpc2Nvbm5lY3RlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRpbWVvdXRJbmRleCA9IDA7XG4gICAgICAgIHRoaXMucmVjb25uZWN0VGltZW91dCA9IG51bGw7XG4gICAgICAgIGNvbnN0IGV2ZW50UHJvZHVjZXIgPSB7XG4gICAgICAgICAgICBzdGFydDogKGxpc3RlbmVyKSA9PiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIgPSBsaXN0ZW5lciksXG4gICAgICAgICAgICBzdG9wOiAoKSA9PiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIgPSB1bmRlZmluZWQpLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmV2ZW50cyA9IHhzdHJlYW1fMS5TdHJlYW0uY3JlYXRlKGV2ZW50UHJvZHVjZXIpO1xuICAgICAgICB0aGlzLnNvY2tldCA9IG5ldyBxdWV1ZWluZ3N0cmVhbWluZ3NvY2tldF8xLlF1ZXVlaW5nU3RyZWFtaW5nU29ja2V0KHVybCwgdGltZW91dCwgcmVjb25uZWN0ZWRIYW5kbGVyKTtcbiAgICAgICAgdGhpcy5zb2NrZXQuZXZlbnRzLnN1YnNjcmliZSh7XG4gICAgICAgICAgICBuZXh0OiAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIubmV4dChldmVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXMgPSB0aGlzLnNvY2tldC5jb25uZWN0aW9uU3RhdHVzO1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXMudXBkYXRlcy5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgbmV4dDogKHN0YXR1cykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT09IHF1ZXVlaW5nc3RyZWFtaW5nc29ja2V0XzEuQ29ubmVjdGlvblN0YXR1cy5Db25uZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lb3V0SW5kZXggPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSBxdWV1ZWluZ3N0cmVhbWluZ3NvY2tldF8xLkNvbm5lY3Rpb25TdGF0dXMuRGlzY29ubmVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnJlY29ubmVjdFRpbWVvdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnJlY29ubmVjdFRpbWVvdXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvbm5lY3RUaW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29ubmVjdFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHRoaXMuc29ja2V0LnJlY29ubmVjdCgpLCBSZWNvbm5lY3RpbmdTb2NrZXQuY2FsY3VsYXRlVGltZW91dCh0aGlzLnRpbWVvdXRJbmRleCsrKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbm5lY3QoKSB7XG4gICAgICAgIGlmICghdGhpcy51bmNvbm5lY3RlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNvbm5lY3Q6IHNvY2tldCBoYXMgYWxyZWFkeSBjb25uZWN0ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zb2NrZXQuY29ubmVjdCgpO1xuICAgICAgICB0aGlzLnVuY29ubmVjdGVkID0gZmFsc2U7XG4gICAgfVxuICAgIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIGlmICh0aGlzLnVuY29ubmVjdGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZGlzY29ubmVjdDogc29ja2V0IGhhcyBub3QgeWV0IGNvbm5lY3RlZFwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNvY2tldC5kaXNjb25uZWN0KCk7XG4gICAgICAgIGlmICh0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lcikge1xuICAgICAgICAgICAgdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIuY29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRpc2Nvbm5lY3RlZCA9IHRydWU7XG4gICAgfVxuICAgIHF1ZXVlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgICAgIGlmICh0aGlzLmRpc2Nvbm5lY3RlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHF1ZXVlIHJlcXVlc3Q6IHNvY2tldCBoYXMgZGlzY29ubmVjdGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc29ja2V0LnF1ZXVlUmVxdWVzdChyZXF1ZXN0KTtcbiAgICB9XG59XG5leHBvcnRzLlJlY29ubmVjdGluZ1NvY2tldCA9IFJlY29ubmVjdGluZ1NvY2tldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlY29ubmVjdGluZ3NvY2tldC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/reconnectingsocket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/socketwrapper.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/socketwrapper.js ***!
  \********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SocketWrapper = void 0;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst isomorphic_ws_1 = __importDefault(__webpack_require__(/*! isomorphic-ws */ \"(ssr)/./node_modules/.pnpm/isomorphic-ws@4.0.1_ws@7.5.10_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/isomorphic-ws/node.js\"));\nfunction environmentIsNodeJs() {\n    return (typeof process !== \"undefined\" &&\n        typeof process.versions !== \"undefined\" &&\n        typeof process.versions.node !== \"undefined\");\n}\n/**\n * A thin wrapper around isomorphic-ws' WebSocket class that adds\n * - constant message/error/open/close handlers\n * - explict connection via a connect() method\n * - type support for events\n * - handling of corner cases in the open and close behaviour\n */\nclass SocketWrapper {\n    constructor(url, messageHandler, errorHandler, openHandler, closeHandler, timeout = 10000) {\n        this.closed = false;\n        this.connected = new Promise((resolve, reject) => {\n            this.connectedResolver = resolve;\n            this.connectedRejecter = reject;\n        });\n        this.url = url;\n        this.messageHandler = messageHandler;\n        this.errorHandler = errorHandler;\n        this.openHandler = openHandler;\n        this.closeHandler = closeHandler;\n        this.timeout = timeout;\n    }\n    /**\n     * returns a promise that resolves when connection is open\n     */\n    connect() {\n        const socket = new isomorphic_ws_1.default(this.url);\n        socket.onerror = (error) => {\n            this.clearTimeout();\n            if (this.errorHandler) {\n                this.errorHandler(error);\n            }\n        };\n        socket.onmessage = (messageEvent) => {\n            this.messageHandler({\n                type: messageEvent.type,\n                data: messageEvent.data,\n            });\n        };\n        socket.onopen = (_) => {\n            this.clearTimeout();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.connectedResolver();\n            if (this.openHandler) {\n                this.openHandler();\n            }\n        };\n        socket.onclose = (closeEvent) => {\n            this.closed = true;\n            if (this.closeHandler) {\n                this.closeHandler(closeEvent);\n            }\n        };\n        const started = Date.now();\n        this.timeoutId = setTimeout(() => {\n            socket.onmessage = () => 0;\n            socket.onerror = () => 0;\n            socket.onopen = () => 0;\n            socket.onclose = () => 0;\n            socket.close();\n            this.socket = undefined;\n            const elapsed = Math.floor(Date.now() - started);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.connectedRejecter(`Connection attempt timed out after ${elapsed} ms`);\n        }, this.timeout);\n        this.socket = socket;\n    }\n    /**\n     * Closes an established connection and aborts other connection states\n     */\n    disconnect() {\n        if (!this.socket) {\n            throw new Error(\"Socket undefined. This must be called after connecting.\");\n        }\n        this.clearTimeout();\n        switch (this.socket.readyState) {\n            case isomorphic_ws_1.default.OPEN:\n                this.socket.close(1000 /* Normal Closure */);\n                break;\n            case isomorphic_ws_1.default.CLOSED:\n                // nothing to be done\n                break;\n            case isomorphic_ws_1.default.CONNECTING:\n                // imitate missing abort API\n                this.socket.onopen = () => 0;\n                this.socket.onclose = () => 0;\n                this.socket.onerror = () => 0;\n                this.socket.onmessage = () => 0;\n                this.socket = undefined;\n                if (this.closeHandler) {\n                    this.closeHandler({ wasClean: false, code: 4001 });\n                }\n                break;\n            case isomorphic_ws_1.default.CLOSING:\n                // already closing. Let it proceed\n                break;\n            default:\n                throw new Error(`Unknown readyState: ${this.socket.readyState}`);\n        }\n    }\n    async send(data) {\n        return new Promise((resolve, reject) => {\n            if (!this.socket) {\n                throw new Error(\"Socket undefined. This must be called after connecting.\");\n            }\n            if (this.closed) {\n                throw new Error(\"Socket was closed, so no data can be sent anymore.\");\n            }\n            // this exception should be thrown by send() automatically according to\n            // https://developer.mozilla.org/de/docs/Web/API/WebSocket#send() but it does not work in browsers\n            if (this.socket.readyState !== isomorphic_ws_1.default.OPEN) {\n                throw new Error(\"Websocket is not open\");\n            }\n            if (environmentIsNodeJs()) {\n                this.socket.send(data, (err) => (err ? reject(err) : resolve()));\n            }\n            else {\n                // Browser websocket send method does not accept a callback\n                this.socket.send(data);\n                resolve();\n            }\n        });\n    }\n    /**\n     * Clears the timeout function, such that no timeout error will be raised anymore. This should be\n     * called when the connection is established, a connection error occurred or the socket is disconnected.\n     *\n     * This method must not be called before `connect()`.\n     * This method is idempotent.\n     */\n    clearTimeout() {\n        if (!this.timeoutId) {\n            throw new Error(\"Timeout ID not set. This should not happen and usually means connect() was not called.\");\n        }\n        // Note: do not unset this.timeoutId to allow multiple calls to this function\n        clearTimeout(this.timeoutId);\n    }\n}\nexports.SocketWrapper = SocketWrapper;\n//# sourceMappingURL=socketwrapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNvc21qcytzb2NrZXRAMC4zNC4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9zb2NrZXR3cmFwcGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0Esd0NBQXdDLG1CQUFPLENBQUMsMEpBQWU7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLFNBQVM7QUFDbEYsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDZCQUE2QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsdUJBQXVCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0Bjb3NtanMrc29ja2V0QDAuMzQuMF9idWZmZXJ1dGlsQDQuMC45X3V0Zi04LXZhbGlkYXRlQDUuMC4xMC9ub2RlX21vZHVsZXMvQGNvc21qcy9zb2NrZXQvYnVpbGQvc29ja2V0d3JhcHBlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU29ja2V0V3JhcHBlciA9IHZvaWQgMDtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmNvbnN0IGlzb21vcnBoaWNfd3NfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaXNvbW9ycGhpYy13c1wiKSk7XG5mdW5jdGlvbiBlbnZpcm9ubWVudElzTm9kZUpzKCkge1xuICAgIHJldHVybiAodHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMubm9kZSAhPT0gXCJ1bmRlZmluZWRcIik7XG59XG4vKipcbiAqIEEgdGhpbiB3cmFwcGVyIGFyb3VuZCBpc29tb3JwaGljLXdzJyBXZWJTb2NrZXQgY2xhc3MgdGhhdCBhZGRzXG4gKiAtIGNvbnN0YW50IG1lc3NhZ2UvZXJyb3Ivb3Blbi9jbG9zZSBoYW5kbGVyc1xuICogLSBleHBsaWN0IGNvbm5lY3Rpb24gdmlhIGEgY29ubmVjdCgpIG1ldGhvZFxuICogLSB0eXBlIHN1cHBvcnQgZm9yIGV2ZW50c1xuICogLSBoYW5kbGluZyBvZiBjb3JuZXIgY2FzZXMgaW4gdGhlIG9wZW4gYW5kIGNsb3NlIGJlaGF2aW91clxuICovXG5jbGFzcyBTb2NrZXRXcmFwcGVyIHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIG1lc3NhZ2VIYW5kbGVyLCBlcnJvckhhbmRsZXIsIG9wZW5IYW5kbGVyLCBjbG9zZUhhbmRsZXIsIHRpbWVvdXQgPSAxMDAwMCkge1xuICAgICAgICB0aGlzLmNsb3NlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGVkUmVzb2x2ZXIgPSByZXNvbHZlO1xuICAgICAgICAgICAgdGhpcy5jb25uZWN0ZWRSZWplY3RlciA9IHJlamVjdDtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xuICAgICAgICB0aGlzLm1lc3NhZ2VIYW5kbGVyID0gbWVzc2FnZUhhbmRsZXI7XG4gICAgICAgIHRoaXMuZXJyb3JIYW5kbGVyID0gZXJyb3JIYW5kbGVyO1xuICAgICAgICB0aGlzLm9wZW5IYW5kbGVyID0gb3BlbkhhbmRsZXI7XG4gICAgICAgIHRoaXMuY2xvc2VIYW5kbGVyID0gY2xvc2VIYW5kbGVyO1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aW1lb3V0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gY29ubmVjdGlvbiBpcyBvcGVuXG4gICAgICovXG4gICAgY29ubmVjdCgpIHtcbiAgICAgICAgY29uc3Qgc29ja2V0ID0gbmV3IGlzb21vcnBoaWNfd3NfMS5kZWZhdWx0KHRoaXMudXJsKTtcbiAgICAgICAgc29ja2V0Lm9uZXJyb3IgPSAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJUaW1lb3V0KCk7XG4gICAgICAgICAgICBpZiAodGhpcy5lcnJvckhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVycm9ySGFuZGxlcihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHNvY2tldC5vbm1lc3NhZ2UgPSAobWVzc2FnZUV2ZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VIYW5kbGVyKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBtZXNzYWdlRXZlbnQudHlwZSxcbiAgICAgICAgICAgICAgICBkYXRhOiBtZXNzYWdlRXZlbnQuZGF0YSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBzb2NrZXQub25vcGVuID0gKF8pID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJUaW1lb3V0KCk7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgICAgICAgdGhpcy5jb25uZWN0ZWRSZXNvbHZlcigpO1xuICAgICAgICAgICAgaWYgKHRoaXMub3BlbkhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm9wZW5IYW5kbGVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHNvY2tldC5vbmNsb3NlID0gKGNsb3NlRXZlbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNsb3NlSGFuZGxlcikge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VIYW5kbGVyKGNsb3NlRXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBzdGFydGVkID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdGhpcy50aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHNvY2tldC5vbm1lc3NhZ2UgPSAoKSA9PiAwO1xuICAgICAgICAgICAgc29ja2V0Lm9uZXJyb3IgPSAoKSA9PiAwO1xuICAgICAgICAgICAgc29ja2V0Lm9ub3BlbiA9ICgpID0+IDA7XG4gICAgICAgICAgICBzb2NrZXQub25jbG9zZSA9ICgpID0+IDA7XG4gICAgICAgICAgICBzb2NrZXQuY2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMuc29ja2V0ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgY29uc3QgZWxhcHNlZCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAtIHN0YXJ0ZWQpO1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGVkUmVqZWN0ZXIoYENvbm5lY3Rpb24gYXR0ZW1wdCB0aW1lZCBvdXQgYWZ0ZXIgJHtlbGFwc2VkfSBtc2ApO1xuICAgICAgICB9LCB0aGlzLnRpbWVvdXQpO1xuICAgICAgICB0aGlzLnNvY2tldCA9IHNvY2tldDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2VzIGFuIGVzdGFibGlzaGVkIGNvbm5lY3Rpb24gYW5kIGFib3J0cyBvdGhlciBjb25uZWN0aW9uIHN0YXRlc1xuICAgICAqL1xuICAgIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIGlmICghdGhpcy5zb2NrZXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNvY2tldCB1bmRlZmluZWQuIFRoaXMgbXVzdCBiZSBjYWxsZWQgYWZ0ZXIgY29ubmVjdGluZy5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jbGVhclRpbWVvdXQoKTtcbiAgICAgICAgc3dpdGNoICh0aGlzLnNvY2tldC5yZWFkeVN0YXRlKSB7XG4gICAgICAgICAgICBjYXNlIGlzb21vcnBoaWNfd3NfMS5kZWZhdWx0Lk9QRU46XG4gICAgICAgICAgICAgICAgdGhpcy5zb2NrZXQuY2xvc2UoMTAwMCAvKiBOb3JtYWwgQ2xvc3VyZSAqLyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIGlzb21vcnBoaWNfd3NfMS5kZWZhdWx0LkNMT1NFRDpcbiAgICAgICAgICAgICAgICAvLyBub3RoaW5nIHRvIGJlIGRvbmVcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgaXNvbW9ycGhpY193c18xLmRlZmF1bHQuQ09OTkVDVElORzpcbiAgICAgICAgICAgICAgICAvLyBpbWl0YXRlIG1pc3NpbmcgYWJvcnQgQVBJXG4gICAgICAgICAgICAgICAgdGhpcy5zb2NrZXQub25vcGVuID0gKCkgPT4gMDtcbiAgICAgICAgICAgICAgICB0aGlzLnNvY2tldC5vbmNsb3NlID0gKCkgPT4gMDtcbiAgICAgICAgICAgICAgICB0aGlzLnNvY2tldC5vbmVycm9yID0gKCkgPT4gMDtcbiAgICAgICAgICAgICAgICB0aGlzLnNvY2tldC5vbm1lc3NhZ2UgPSAoKSA9PiAwO1xuICAgICAgICAgICAgICAgIHRoaXMuc29ja2V0ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNsb3NlSGFuZGxlcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlSGFuZGxlcih7IHdhc0NsZWFuOiBmYWxzZSwgY29kZTogNDAwMSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIGlzb21vcnBoaWNfd3NfMS5kZWZhdWx0LkNMT1NJTkc6XG4gICAgICAgICAgICAgICAgLy8gYWxyZWFkeSBjbG9zaW5nLiBMZXQgaXQgcHJvY2VlZFxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcmVhZHlTdGF0ZTogJHt0aGlzLnNvY2tldC5yZWFkeVN0YXRlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIHNlbmQoZGF0YSkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLnNvY2tldCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNvY2tldCB1bmRlZmluZWQuIFRoaXMgbXVzdCBiZSBjYWxsZWQgYWZ0ZXIgY29ubmVjdGluZy5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5jbG9zZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTb2NrZXQgd2FzIGNsb3NlZCwgc28gbm8gZGF0YSBjYW4gYmUgc2VudCBhbnltb3JlLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHRoaXMgZXhjZXB0aW9uIHNob3VsZCBiZSB0aHJvd24gYnkgc2VuZCgpIGF1dG9tYXRpY2FsbHkgYWNjb3JkaW5nIHRvXG4gICAgICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kZS9kb2NzL1dlYi9BUEkvV2ViU29ja2V0I3NlbmQoKSBidXQgaXQgZG9lcyBub3Qgd29yayBpbiBicm93c2Vyc1xuICAgICAgICAgICAgaWYgKHRoaXMuc29ja2V0LnJlYWR5U3RhdGUgIT09IGlzb21vcnBoaWNfd3NfMS5kZWZhdWx0Lk9QRU4pIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXZWJzb2NrZXQgaXMgbm90IG9wZW5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZW52aXJvbm1lbnRJc05vZGVKcygpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChkYXRhLCAoZXJyKSA9PiAoZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKCkpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEJyb3dzZXIgd2Vic29ja2V0IHNlbmQgbWV0aG9kIGRvZXMgbm90IGFjY2VwdCBhIGNhbGxiYWNrXG4gICAgICAgICAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChkYXRhKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbGVhcnMgdGhlIHRpbWVvdXQgZnVuY3Rpb24sIHN1Y2ggdGhhdCBubyB0aW1lb3V0IGVycm9yIHdpbGwgYmUgcmFpc2VkIGFueW1vcmUuIFRoaXMgc2hvdWxkIGJlXG4gICAgICogY2FsbGVkIHdoZW4gdGhlIGNvbm5lY3Rpb24gaXMgZXN0YWJsaXNoZWQsIGEgY29ubmVjdGlvbiBlcnJvciBvY2N1cnJlZCBvciB0aGUgc29ja2V0IGlzIGRpc2Nvbm5lY3RlZC5cbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIG11c3Qgbm90IGJlIGNhbGxlZCBiZWZvcmUgYGNvbm5lY3QoKWAuXG4gICAgICogVGhpcyBtZXRob2QgaXMgaWRlbXBvdGVudC5cbiAgICAgKi9cbiAgICBjbGVhclRpbWVvdXQoKSB7XG4gICAgICAgIGlmICghdGhpcy50aW1lb3V0SWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRpbWVvdXQgSUQgbm90IHNldC4gVGhpcyBzaG91bGQgbm90IGhhcHBlbiBhbmQgdXN1YWxseSBtZWFucyBjb25uZWN0KCkgd2FzIG5vdCBjYWxsZWQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIE5vdGU6IGRvIG5vdCB1bnNldCB0aGlzLnRpbWVvdXRJZCB0byBhbGxvdyBtdWx0aXBsZSBjYWxscyB0byB0aGlzIGZ1bmN0aW9uXG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRJZCk7XG4gICAgfVxufVxuZXhwb3J0cy5Tb2NrZXRXcmFwcGVyID0gU29ja2V0V3JhcHBlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvY2tldHdyYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/socketwrapper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/streamingsocket.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/streamingsocket.js ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StreamingSocket = void 0;\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/.pnpm/xstream@11.14.0/node_modules/xstream/index.js\");\nconst socketwrapper_1 = __webpack_require__(/*! ./socketwrapper */ \"(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/socketwrapper.js\");\n/**\n * A WebSocket wrapper that exposes all events as a stream.\n *\n * This underlying socket will not be closed when the stream has no listeners\n */\nclass StreamingSocket {\n    constructor(url, timeout = 10000) {\n        this.socket = new socketwrapper_1.SocketWrapper(url, (event) => {\n            if (this.eventProducerListener) {\n                this.eventProducerListener.next(event);\n            }\n        }, (errorEvent) => {\n            if (this.eventProducerListener) {\n                this.eventProducerListener.error(errorEvent);\n            }\n        }, () => {\n            // socket opened\n        }, (closeEvent) => {\n            if (this.eventProducerListener) {\n                if (closeEvent.wasClean) {\n                    this.eventProducerListener.complete();\n                }\n                else {\n                    this.eventProducerListener.error(\"Socket was closed unclean\");\n                }\n            }\n        }, timeout);\n        this.connected = this.socket.connected;\n        const eventProducer = {\n            start: (listener) => (this.eventProducerListener = listener),\n            stop: () => (this.eventProducerListener = undefined),\n        };\n        this.events = xstream_1.Stream.create(eventProducer);\n    }\n    connect() {\n        this.socket.connect();\n    }\n    disconnect() {\n        this.socket.disconnect();\n    }\n    async send(data) {\n        return this.socket.send(data);\n    }\n}\nexports.StreamingSocket = StreamingSocket;\n//# sourceMappingURL=streamingsocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNvc21qcytzb2NrZXRAMC4zNC4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9zdHJlYW1pbmdzb2NrZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGtCQUFrQixtQkFBTyxDQUFDLHlGQUFTO0FBQ25DLHdCQUF3QixtQkFBTyxDQUFDLG1LQUFpQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0Bjb3NtanMrc29ja2V0QDAuMzQuMF9idWZmZXJ1dGlsQDQuMC45X3V0Zi04LXZhbGlkYXRlQDUuMC4xMC9ub2RlX21vZHVsZXMvQGNvc21qcy9zb2NrZXQvYnVpbGQvc3RyZWFtaW5nc29ja2V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdHJlYW1pbmdTb2NrZXQgPSB2b2lkIDA7XG5jb25zdCB4c3RyZWFtXzEgPSByZXF1aXJlKFwieHN0cmVhbVwiKTtcbmNvbnN0IHNvY2tldHdyYXBwZXJfMSA9IHJlcXVpcmUoXCIuL3NvY2tldHdyYXBwZXJcIik7XG4vKipcbiAqIEEgV2ViU29ja2V0IHdyYXBwZXIgdGhhdCBleHBvc2VzIGFsbCBldmVudHMgYXMgYSBzdHJlYW0uXG4gKlxuICogVGhpcyB1bmRlcmx5aW5nIHNvY2tldCB3aWxsIG5vdCBiZSBjbG9zZWQgd2hlbiB0aGUgc3RyZWFtIGhhcyBubyBsaXN0ZW5lcnNcbiAqL1xuY2xhc3MgU3RyZWFtaW5nU29ja2V0IHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHRpbWVvdXQgPSAxMDAwMCkge1xuICAgICAgICB0aGlzLnNvY2tldCA9IG5ldyBzb2NrZXR3cmFwcGVyXzEuU29ja2V0V3JhcHBlcih1cmwsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIubmV4dChldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIChlcnJvckV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lci5lcnJvcihlcnJvckV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgLy8gc29ja2V0IG9wZW5lZFxuICAgICAgICB9LCAoY2xvc2VFdmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNsb3NlRXZlbnQud2FzQ2xlYW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIuY29tcGxldGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyLmVycm9yKFwiU29ja2V0IHdhcyBjbG9zZWQgdW5jbGVhblwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIHRpbWVvdXQpO1xuICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IHRoaXMuc29ja2V0LmNvbm5lY3RlZDtcbiAgICAgICAgY29uc3QgZXZlbnRQcm9kdWNlciA9IHtcbiAgICAgICAgICAgIHN0YXJ0OiAobGlzdGVuZXIpID0+ICh0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lciA9IGxpc3RlbmVyKSxcbiAgICAgICAgICAgIHN0b3A6ICgpID0+ICh0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lciA9IHVuZGVmaW5lZCksXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZXZlbnRzID0geHN0cmVhbV8xLlN0cmVhbS5jcmVhdGUoZXZlbnRQcm9kdWNlcik7XG4gICAgfVxuICAgIGNvbm5lY3QoKSB7XG4gICAgICAgIHRoaXMuc29ja2V0LmNvbm5lY3QoKTtcbiAgICB9XG4gICAgZGlzY29ubmVjdCgpIHtcbiAgICAgICAgdGhpcy5zb2NrZXQuZGlzY29ubmVjdCgpO1xuICAgIH1cbiAgICBhc3luYyBzZW5kKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc29ja2V0LnNlbmQoZGF0YSk7XG4gICAgfVxufVxuZXhwb3J0cy5TdHJlYW1pbmdTb2NrZXQgPSBTdHJlYW1pbmdTb2NrZXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJlYW1pbmdzb2NrZXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@cosmjs+socket@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/socket/build/streamingsocket.js\n");

/***/ })

};
;