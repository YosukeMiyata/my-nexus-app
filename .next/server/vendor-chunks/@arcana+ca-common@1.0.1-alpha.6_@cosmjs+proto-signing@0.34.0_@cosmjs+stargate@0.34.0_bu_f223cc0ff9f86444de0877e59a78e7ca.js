"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca";
exports.ids = ["vendor-chunks/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/balances/ub-api.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/balances/ub-api.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBalances: () => (/* binding */ getBalances)\n/* harmony export */ });\n/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ \"(ssr)/./node_modules/.pnpm/decimal.js@10.6.0/node_modules/decimal.js/decimal.mjs\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/index.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\n\n\n\nasync function getBalances(vscURL, universe, address) {\n    const resp = await (0,_types__WEBPACK_IMPORTED_MODULE_2__.msgpackableAxios)({\n        baseURL: vscURL,\n        url: `/api/v1/get-balance/${_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe[universe]}/${(0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(address)}`,\n    });\n    const { data } = resp;\n    return data.balances.map(bal => ({\n        chainID: new _data__WEBPACK_IMPORTED_MODULE_3__.OmniversalChainID(bal.universe, bal.chain_id),\n        totalValue: new decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](bal.total_usd),\n        currencywise: bal.currencies.map(cur => ({\n            tokenAddress: cur.token_address,\n            amount: new decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cur.balance),\n            value: new decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cur.value)\n        }))\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9iYWxhbmNlcy91Yi1hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlDO0FBQ2M7QUFDSDtBQUNBO0FBQ1Y7QUFDM0I7QUFDUCx1QkFBdUIsd0RBQWdCO0FBQ3ZDO0FBQ0Esb0NBQW9DLHVEQUFRLFdBQVcsR0FBRyxnREFBVSxVQUFVO0FBQzlFLEtBQUs7QUFDTCxZQUFZLE9BQU87QUFDbkI7QUFDQSxxQkFBcUIsb0RBQWlCO0FBQ3RDLHdCQUF3QixrREFBTztBQUMvQjtBQUNBO0FBQ0Esd0JBQXdCLGtEQUFPO0FBQy9CLHVCQUF1QixrREFBTztBQUM5QixTQUFTO0FBQ1QsS0FBSztBQUNMIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AYXJjYW5hK2NhLWNvbW1vbkAxLjAuMS1hbHBoYS42X0Bjb3NtanMrcHJvdG8tc2lnbmluZ0AwLjM0LjBfQGNvc21qcytzdGFyZ2F0ZUAwLjM0LjBfYnVfZjIyM2NjMGZmOWY4NjQ0NGRlMDg3N2U1OWE3OGU3Y2Evbm9kZV9tb2R1bGVzL0BhcmNhbmEvY2EtY29tbW9uL2Rpc3QvZXNtL2JhbGFuY2VzL3ViLWFwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGVjaW1hbCBmcm9tIFwiZGVjaW1hbC5qc1wiO1xuaW1wb3J0IHsgVW5pdmVyc2UgfSBmcm9tIFwiLi4vcHJvdG8vZGVmaW5pdGlvblwiO1xuaW1wb3J0IHsgbXNncGFja2FibGVBeGlvcyB9IGZyb20gXCIuLi90eXBlc1wiO1xuaW1wb3J0IHsgT21uaXZlcnNhbENoYWluSUQgfSBmcm9tIFwiLi4vZGF0YVwiO1xuaW1wb3J0IHsgYnl0ZXNUb0hleCB9IGZyb20gXCJ2aWVtXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QmFsYW5jZXModnNjVVJMLCB1bml2ZXJzZSwgYWRkcmVzcykge1xuICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBtc2dwYWNrYWJsZUF4aW9zKHtcbiAgICAgICAgYmFzZVVSTDogdnNjVVJMLFxuICAgICAgICB1cmw6IGAvYXBpL3YxL2dldC1iYWxhbmNlLyR7VW5pdmVyc2VbdW5pdmVyc2VdfS8ke2J5dGVzVG9IZXgoYWRkcmVzcyl9YCxcbiAgICB9KTtcbiAgICBjb25zdCB7IGRhdGEgfSA9IHJlc3A7XG4gICAgcmV0dXJuIGRhdGEuYmFsYW5jZXMubWFwKGJhbCA9PiAoe1xuICAgICAgICBjaGFpbklEOiBuZXcgT21uaXZlcnNhbENoYWluSUQoYmFsLnVuaXZlcnNlLCBiYWwuY2hhaW5faWQpLFxuICAgICAgICB0b3RhbFZhbHVlOiBuZXcgRGVjaW1hbChiYWwudG90YWxfdXNkKSxcbiAgICAgICAgY3VycmVuY3l3aXNlOiBiYWwuY3VycmVuY2llcy5tYXAoY3VyID0+ICh7XG4gICAgICAgICAgICB0b2tlbkFkZHJlc3M6IGN1ci50b2tlbl9hZGRyZXNzLFxuICAgICAgICAgICAgYW1vdW50OiBuZXcgRGVjaW1hbChjdXIuYmFsYW5jZSksXG4gICAgICAgICAgICB2YWx1ZTogbmV3IERlY2ltYWwoY3VyLnZhbHVlKVxuICAgICAgICB9KSlcbiAgICB9KSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/balances/ub-api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/cosmos/index.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/cosmos/index.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Registry: () => (/* binding */ Registry),\n/* harmony export */   createCosmosClient: () => (/* binding */ createCosmosClient),\n/* harmony export */   createCosmosWallet: () => (/* binding */ createCosmosWallet)\n/* harmony export */ });\n/* harmony import */ var _cosmjs_proto_signing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/.pnpm/@cosmjs+proto-signing@0.34.0/node_modules/@cosmjs/proto-signing/build/index.js\");\n/* harmony import */ var _cosmjs_stargate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cosmjs/stargate */ \"(ssr)/./node_modules/.pnpm/@cosmjs+stargate@0.34.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@cosmjs/stargate/build/index.js\");\n/* harmony import */ var _cosmjs_stargate__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cosmjs_stargate__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toBytes.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n\n\n\n\nconst Registry = new _cosmjs_proto_signing__WEBPACK_IMPORTED_MODULE_0__.Registry(_cosmjs_stargate__WEBPACK_IMPORTED_MODULE_1__.defaultRegistryTypes);\n{\n    Registry.register(\"/xarchain.chainabstraction.MsgCreateSolverData\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgCreateSolverData);\n    Registry.register(\"/xarchain.chainabstraction.MsgCreateSolverDataResponse\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgCreateSolverDataResponse);\n    Registry.register(\"/xarchain.chainabstraction.MsgUpdateSolverData\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgUpdateSolverData);\n    Registry.register(\"/xarchain.chainabstraction.MsgUpdateSolverDataResponse\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgCreateSolverDataResponse);\n    Registry.register(\"/xarchain.chainabstraction.MsgCreateRequestForFunds\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgCreateRequestForFunds);\n    Registry.register(\"/xarchain.chainabstraction.MsgCreateRequestForFundsResponse\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgCreateRequestForFundsResponse);\n    Registry.register(\"/xarchain.chainabstraction.MsgRefundReq\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgRefundReq);\n    Registry.register(\"/xarchain.chainabstraction.MsgRefundReqResponse\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgRefundReqResponse);\n    Registry.register(\"/xarchain.chainabstraction.MsgDoubleCheckTx\", _proto_definition__WEBPACK_IMPORTED_MODULE_2__.MsgDoubleCheckTx);\n}\nfunction createCosmosWallet(privateKey) {\n    const pkBytes = typeof privateKey === \"string\" ? (0,viem__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(privateKey) : privateKey;\n    return _cosmjs_proto_signing__WEBPACK_IMPORTED_MODULE_0__.DirectSecp256k1Wallet.fromKey(pkBytes, \"arcana\");\n}\nfunction createCosmosClient(signer, endpoint, options) {\n    return _cosmjs_stargate__WEBPACK_IMPORTED_MODULE_1__.SigningStargateClient.connectWithSigner(endpoint, signer, {\n        registry: Registry,\n        ...options,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9jb3Ntb3MvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMkY7QUFDWDtBQUM5QztBQUM2TDtBQUN4TixxQkFBcUIsMkRBQWMsQ0FBQyxrRUFBb0I7QUFDL0Q7QUFDQSx3RUFBd0Usa0VBQW1CO0FBQzNGLGdGQUFnRiwwRUFBMkI7QUFDM0csd0VBQXdFLGtFQUFtQjtBQUMzRixnRkFBZ0YsMEVBQTJCO0FBQzNHLDZFQUE2RSx1RUFBd0I7QUFDckcscUZBQXFGLCtFQUFnQztBQUNySCxpRUFBaUUsMkRBQVk7QUFDN0UseUVBQXlFLG1FQUFvQjtBQUM3RixxRUFBcUUsK0RBQWdCO0FBQ3JGO0FBQ087QUFDUCxxREFBcUQsZ0RBQVU7QUFDL0QsV0FBVyx3RUFBcUI7QUFDaEM7QUFDTztBQUNQLFdBQVcsbUVBQXFCO0FBQ2hDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20vY29zbW9zL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlZ2lzdHJ5IGFzIENvc21vc1JlZ2lzdHJ5LCBEaXJlY3RTZWNwMjU2azFXYWxsZXQsIH0gZnJvbSBcIkBjb3NtanMvcHJvdG8tc2lnbmluZ1wiO1xuaW1wb3J0IHsgZGVmYXVsdFJlZ2lzdHJ5VHlwZXMsIFNpZ25pbmdTdGFyZ2F0ZUNsaWVudCwgfSBmcm9tIFwiQGNvc21qcy9zdGFyZ2F0ZVwiO1xuaW1wb3J0IHsgaGV4VG9CeXRlcyB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyBNc2dDcmVhdGVSZXF1ZXN0Rm9yRnVuZHMsIE1zZ0NyZWF0ZVJlcXVlc3RGb3JGdW5kc1Jlc3BvbnNlLCBNc2dDcmVhdGVTb2x2ZXJEYXRhLCBNc2dDcmVhdGVTb2x2ZXJEYXRhUmVzcG9uc2UsIE1zZ0RvdWJsZUNoZWNrVHgsIE1zZ1JlZnVuZFJlcSwgTXNnUmVmdW5kUmVxUmVzcG9uc2UsIE1zZ1VwZGF0ZVNvbHZlckRhdGEsIH0gZnJvbSBcIi4uL3Byb3RvL2RlZmluaXRpb25cIjtcbmV4cG9ydCBjb25zdCBSZWdpc3RyeSA9IG5ldyBDb3Ntb3NSZWdpc3RyeShkZWZhdWx0UmVnaXN0cnlUeXBlcyk7XG57XG4gICAgUmVnaXN0cnkucmVnaXN0ZXIoXCIveGFyY2hhaW4uY2hhaW5hYnN0cmFjdGlvbi5Nc2dDcmVhdGVTb2x2ZXJEYXRhXCIsIE1zZ0NyZWF0ZVNvbHZlckRhdGEpO1xuICAgIFJlZ2lzdHJ5LnJlZ2lzdGVyKFwiL3hhcmNoYWluLmNoYWluYWJzdHJhY3Rpb24uTXNnQ3JlYXRlU29sdmVyRGF0YVJlc3BvbnNlXCIsIE1zZ0NyZWF0ZVNvbHZlckRhdGFSZXNwb25zZSk7XG4gICAgUmVnaXN0cnkucmVnaXN0ZXIoXCIveGFyY2hhaW4uY2hhaW5hYnN0cmFjdGlvbi5Nc2dVcGRhdGVTb2x2ZXJEYXRhXCIsIE1zZ1VwZGF0ZVNvbHZlckRhdGEpO1xuICAgIFJlZ2lzdHJ5LnJlZ2lzdGVyKFwiL3hhcmNoYWluLmNoYWluYWJzdHJhY3Rpb24uTXNnVXBkYXRlU29sdmVyRGF0YVJlc3BvbnNlXCIsIE1zZ0NyZWF0ZVNvbHZlckRhdGFSZXNwb25zZSk7XG4gICAgUmVnaXN0cnkucmVnaXN0ZXIoXCIveGFyY2hhaW4uY2hhaW5hYnN0cmFjdGlvbi5Nc2dDcmVhdGVSZXF1ZXN0Rm9yRnVuZHNcIiwgTXNnQ3JlYXRlUmVxdWVzdEZvckZ1bmRzKTtcbiAgICBSZWdpc3RyeS5yZWdpc3RlcihcIi94YXJjaGFpbi5jaGFpbmFic3RyYWN0aW9uLk1zZ0NyZWF0ZVJlcXVlc3RGb3JGdW5kc1Jlc3BvbnNlXCIsIE1zZ0NyZWF0ZVJlcXVlc3RGb3JGdW5kc1Jlc3BvbnNlKTtcbiAgICBSZWdpc3RyeS5yZWdpc3RlcihcIi94YXJjaGFpbi5jaGFpbmFic3RyYWN0aW9uLk1zZ1JlZnVuZFJlcVwiLCBNc2dSZWZ1bmRSZXEpO1xuICAgIFJlZ2lzdHJ5LnJlZ2lzdGVyKFwiL3hhcmNoYWluLmNoYWluYWJzdHJhY3Rpb24uTXNnUmVmdW5kUmVxUmVzcG9uc2VcIiwgTXNnUmVmdW5kUmVxUmVzcG9uc2UpO1xuICAgIFJlZ2lzdHJ5LnJlZ2lzdGVyKFwiL3hhcmNoYWluLmNoYWluYWJzdHJhY3Rpb24uTXNnRG91YmxlQ2hlY2tUeFwiLCBNc2dEb3VibGVDaGVja1R4KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb3Ntb3NXYWxsZXQocHJpdmF0ZUtleSkge1xuICAgIGNvbnN0IHBrQnl0ZXMgPSB0eXBlb2YgcHJpdmF0ZUtleSA9PT0gXCJzdHJpbmdcIiA/IGhleFRvQnl0ZXMocHJpdmF0ZUtleSkgOiBwcml2YXRlS2V5O1xuICAgIHJldHVybiBEaXJlY3RTZWNwMjU2azFXYWxsZXQuZnJvbUtleShwa0J5dGVzLCBcImFyY2FuYVwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb3Ntb3NDbGllbnQoc2lnbmVyLCBlbmRwb2ludCwgb3B0aW9ucykge1xuICAgIHJldHVybiBTaWduaW5nU3RhcmdhdGVDbGllbnQuY29ubmVjdFdpdGhTaWduZXIoZW5kcG9pbnQsIHNpZ25lciwge1xuICAgICAgICByZWdpc3RyeTogUmVnaXN0cnksXG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/cosmos/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chaindata.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chaindata.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chaindata: () => (/* binding */ Chaindata),\n/* harmony export */   ChaindataMap: () => (/* binding */ ChaindataMap),\n/* harmony export */   RPCURLMap: () => (/* binding */ RPCURLMap)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toBytes.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n/* harmony import */ var _chainid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chainid */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chainid.js\");\n/* harmony import */ var _currency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./currency */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/currency.js\");\n/* harmony import */ var _permitutils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../permitutils */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/permitutils/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/utils.js\");\n\n\n\n\n\n\nconst RawData = [\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x000000000000000000000000000000000000000000000000000000000000a4b1\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x000000000000000000000000000000000000000000000000000000000000000a\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x0000000000000000000000000b2c639c533813f4aa9d7837caf62653d097ff85\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x00000000000000000000000094b008aa00579c1307b0ef2c499ad98a8ce58e58\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000000089\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x0000000000000000000000003c499c542cef5e3811e1192ce70d8cc03d5c3359\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.PolygonEMT,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 4,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x000000000000000000000000000000000000000000000000000000000000a86a\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x000000000000000000000000b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x0000000000000000000000009702230a8ea53601f5cd2dc00fdbc13d4df4a8c7\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 5,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x000000000000000000000000000000000000000000000000000000000000e708\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x000000000000000000000000176211869ca2b568f2a7d4ee941e073a821ee1ff\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x000000000000000000000000a219439258ca9da29e9cc4ce5596924745e12b93\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000082750\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x00000000000000000000000006efdbff2a14a7c8e15944d1f4a48f9f95f663a4\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x000000000000000000000000f55bec9cafdbe8730f096aa55dad6d22d44099df\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000002105\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x000000000000000000000000fde4c96c8593536e31f229ea8f37b2ada2699bb2\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x00000000000000000000000000000000000000000000000000000000000003e7\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x000000000000000000000000b88339cb7199b77e23db6e890353e22632ba630f\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x000000000000000000000000B8CE59FC3717ada4C02eaDF9682A9e934F625ebb\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 16,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000002019\",\n        Currencies: [\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x000000000000000000000000d077a400968890eacc75cdc901f0356c943e4fdb\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 17,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x000000000000000000000000000000000000000000000000000000000000c3b8\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x0000000000000000000000009aa0f72392b5784ad86c6f3e899bcc053d00db4f\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x0000000000000000000000006386da73545ae4e2b2e0393688fa8b65bb9a7169\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x00000000000000000000000072af9f169b619d85a47dfa8fefbcd39de55c567d\",\n                TokenDecimals: 18,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 18,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000000038\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000008ac76a51cc950d9822d68b83fe1ad97b32cd580d\",\n                TokenDecimals: 18,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x00000000000000000000000055d398326f99059ff775485246999027b3197955\",\n                TokenDecimals: 18,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000002170ed0880ac9a755fd29b2688956bd959f933f8\",\n                TokenDecimals: 18,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 6,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 1,\n        ChainID32: \"0x00000000000000000000000000000000000000000000000000000000000026a1\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x286c479da40dc953bddc3bb4c453b608bba2e0ac483b077bd475174115395e6b\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0xa0265fb5c32f6e8db3197af3c7eb05c48ae373605b8165b6f4a51c5b0ba4812e\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0xf8f8b6283d7fa5b672b530cbb84fcccb4ff8dc40f8176ef4544ddb1f1952ad07\",\n                TokenDecimals: 9,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000066eee\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x00000000000000000000000075faf114eafb1bdbe2f0316df893fd58ce46aa4d\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x000000000000000000000000f954d4a5859b37de88a91bdbb8ad309056fb04b1\",\n                TokenDecimals: 18,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000aa37dc\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x0000000000000000000000005fd84259d66cd46123540766be93dfe6d43130d7\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 1,\n                TokenContractAddress: \"0x0000000000000000000000006462693c2f21ac0e517f12641d404895030f7426\",\n                TokenDecimals: 18,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000013882\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x00000000000000000000000041e94eb019c0762f9bfcf9fb1e58725bfb0e7582\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 4,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000014a34\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenContractAddress: \"0x000000000000000000000000036cbd53842c5426634e7929541ec2318f3dcf7e\",\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x0000000000000000000000000000000000000000000000000000000000aa36a7\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                TokenContractAddress: \"0x0000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238\",\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.EIP2612Canonical,\n                PermitContractVersion: 2,\n                TokenDecimals: 6,\n                USDPriceOracleAddress: \"0x0000000000000000000000000000000000000000\",\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 3,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenDecimals: 18,\n                USDPriceOracleAddress: \"0x0000000000000000000000000000000000000000\",\n                IsGasToken: true,\n            },\n        ],\n    },\n    {\n        Universe: 0,\n        ChainID32: \"0x000000000000000000000000000000000000000000000000000000000000279f\",\n        Currencies: [\n            {\n                CurrencyID: 1,\n                TokenContractAddress: \"0x000000000000000000000000f817257fed379853cde0fa4f97ab987181b1e5ea\",\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenDecimals: 6,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 2,\n                TokenContractAddress: \"0x0000000000000000000000001c56f176d6735888fbb6f8bd9adad8ad7a023a0b\",\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenDecimals: 18,\n                IsGasToken: false,\n            },\n            {\n                CurrencyID: 20,\n                TokenContractAddress: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                PermitVariant: _permitutils__WEBPACK_IMPORTED_MODULE_3__.PermitVariant.Unsupported,\n                TokenDecimals: 18,\n                IsGasToken: true,\n            },\n        ],\n    },\n];\nclass CurrencyMap {\n    map = new Map();\n    constructor(currencies) {\n        for (const cur of currencies) {\n            this.map.set((0,viem__WEBPACK_IMPORTED_MODULE_5__.toHex)(cur.tokenAddress), cur);\n        }\n    }\n    get(input) {\n        return this.map.get((0,_utils__WEBPACK_IMPORTED_MODULE_4__.ezPadTo32Hex)(input));\n    }\n}\n// Certain data fields are auto-generated while others are not.\nconst Chaindata = RawData.map((ch) => {\n    const ch32 = Buffer.from((0,viem__WEBPACK_IMPORTED_MODULE_6__.hexToBytes)(ch.ChainID32));\n    const currencies = ch.Currencies.map((cur) => {\n        return new _currency__WEBPACK_IMPORTED_MODULE_2__.Currency(cur.CurrencyID, (0,viem__WEBPACK_IMPORTED_MODULE_6__.hexToBytes)(cur.TokenContractAddress), cur.TokenDecimals, cur.PermitVariant, cur.PermitContractVersion, cur.IsGasToken);\n    });\n    return {\n        Universe: ch.Universe,\n        ChainID: new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(ch.Universe, ch32),\n        ChainID32: ch32,\n        Currencies: currencies,\n        CurrencyMap: new CurrencyMap(currencies),\n    };\n});\nconst ChaindataMap = new _chainid__WEBPACK_IMPORTED_MODULE_1__.ChainIDKeyedMap(Chaindata.map((ch) => [ch.ChainID, ch]));\nconst RPCURLMap = new _chainid__WEBPACK_IMPORTED_MODULE_1__.ChainIDKeyedMap([\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 421614),\n        \"https://arb-sepolia.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 11155420),\n        \"https://opt-sepolia.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 80002),\n        \"https://polygon-amoy.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 84532),\n        \"https://base-sepolia.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 11155111),\n        \"https://eth-sepolia.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 137),\n        \"https://polygon-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 42161),\n        \"https://arb-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 10),\n        \"https://opt-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 8453),\n        \"https://base-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 1),\n        \"https://eth-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 534352),\n        \"https://scroll-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 59144),\n        \"https://linea-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 43114),\n        \"https://avax-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 999),\n        \"https://rpc.hyperliquid.xyz/evm\",\n    ], // Alchemy doesn't support this.\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 8217),\n        \"https://go.getblock.io/d7094dbd80ab474ba7042603fe912332\",\n    ], // Alchemy doesn't support this.\n    [new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 50104), \"https://rpc.sophon.xyz\"], // Alchemy doesn't support this.\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 56),\n        \"https://bnb-mainnet.g.alchemy.com/v2/PfaswrKq0rjOrfYWHfE9uLQKhiD4JCdq\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM, 10143),\n        \"https://lb.drpc.org/monad-testnet/Am5nENoJmEuovqui8_LMxzp4ChJzW7kR8JfPrqRhf0fE\",\n    ],\n    [\n        new _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.FUEL, 9889),\n        \"https://omniscient-fittest-pallet.fuel-mainnet.quiknode.pro/3193ae52f2522af1a4357a482e475e019857f02b/v1/graphql\",\n    ],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chaindata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chainid.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chainid.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainIDKeyedMap: () => (/* binding */ ChainIDKeyedMap),\n/* harmony export */   OmniversalChainID: () => (/* binding */ OmniversalChainID),\n/* harmony export */   encodeChainID36: () => (/* binding */ encodeChainID36)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toBytes.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/fromBytes.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/utils.js\");\n\n\n\nfunction encodeChainID36(universe, chainID) {\n    let chainIDB;\n    if (Buffer.isBuffer(chainID) || chainID instanceof Uint8Array) {\n        chainIDB = chainID;\n    }\n    else {\n        chainIDB = (0,viem__WEBPACK_IMPORTED_MODULE_2__.toBytes)(chainID);\n    }\n    const buf = Buffer.alloc(36);\n    buf.writeUint32BE(universe);\n    buf.set(chainIDB, 4 + (32 - chainIDB.length));\n    return buf;\n}\nclass OmniversalChainID {\n    universe;\n    chainID;\n    binaryForm;\n    constructor(universe, chainID) {\n        this.universe = universe;\n        if (typeof chainID === \"bigint\") {\n            this.chainID = chainID;\n        }\n        else if (typeof chainID === \"number\" || typeof chainID === \"string\") {\n            this.chainID = BigInt(chainID);\n        }\n        else if (chainID instanceof Uint8Array) {\n            this.chainID = (0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToBigInt)(chainID);\n        }\n        this.binaryForm = encodeChainID36(this.universe, this.chainID);\n    }\n    toString() {\n        return (0,_proto_definition__WEBPACK_IMPORTED_MODULE_0__.universeToJSON)(this.universe) + \"_\" + this.chainID.toString(10);\n    }\n    toJSON() {\n        return {\n            universe: (0,_proto_definition__WEBPACK_IMPORTED_MODULE_0__.universeToJSON)(this.universe),\n            chainID: (0,viem__WEBPACK_IMPORTED_MODULE_4__.toHex)(this.chainID),\n        };\n    }\n    static fromJSON(input) {\n        return new OmniversalChainID((0,_proto_definition__WEBPACK_IMPORTED_MODULE_0__.universeFromJSON)(input.universe), (0,viem__WEBPACK_IMPORTED_MODULE_5__.hexToBigInt)(input.chainID));\n    }\n    static fromChainID36(_input) {\n        const input = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.convertToBufferIfNecessary)(_input);\n        const univID = input.readUint32BE(0);\n        const rest = input.subarray(4);\n        return new OmniversalChainID(univID, rest);\n    }\n    // Do not modify the returned buffer. Make a copy if necessary.\n    toBytes() {\n        return this.binaryForm;\n    }\n    equals(rhs) {\n        return this.universe === rhs.universe && this.chainID === rhs.chainID;\n    }\n    static equals(lhs, rhs) {\n        return lhs.equals(rhs);\n    }\n}\nclass ChainIDKeyedMap {\n    map;\n    constructor(entries = null) {\n        this.map = new Map(entries != null\n            ? entries.map((e) => [(0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(e[0].toBytes()), e[1]])\n            : null);\n    }\n    get(key) {\n        return this.map.get((0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(key.toBytes()));\n    }\n    set(key, value) {\n        this.map.set((0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(key.toBytes()), value);\n        return this;\n    }\n    getFromChainID36(key) {\n        return this.map.get((0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(key));\n    }\n    *entries() {\n        for (const [key, value] of this.map.entries()) {\n            yield [OmniversalChainID.fromChainID36((0,viem__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(key)), value];\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9kYXRhL2NoYWluaWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJGO0FBQ25CO0FBQ25CO0FBQzlDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw2Q0FBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixtREFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUVBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGlFQUFjO0FBQ3BDLHFCQUFxQiwyQ0FBSztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsbUVBQWdCLGtCQUFrQixpREFBVztBQUNsRjtBQUNBO0FBQ0Esc0JBQXNCLGtFQUEwQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxnREFBVTtBQUM1QztBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsZ0RBQVU7QUFDdEM7QUFDQTtBQUNBLHFCQUFxQixnREFBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsZ0RBQVU7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGdEQUFVO0FBQzdEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9kYXRhL2NoYWluaWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnl0ZXNUb0JpZ0ludCwgYnl0ZXNUb0hleCwgaGV4VG9CaWdJbnQsIGhleFRvQnl0ZXMsIHRvQnl0ZXMsIHRvSGV4LCB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyB1bml2ZXJzZUZyb21KU09OLCB1bml2ZXJzZVRvSlNPTiwgfSBmcm9tIFwiLi4vcHJvdG8vZGVmaW5pdGlvblwiO1xuaW1wb3J0IHsgY29udmVydFRvQnVmZmVySWZOZWNlc3NhcnkgfSBmcm9tIFwiLi91dGlsc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUNoYWluSUQzNih1bml2ZXJzZSwgY2hhaW5JRCkge1xuICAgIGxldCBjaGFpbklEQjtcbiAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGNoYWluSUQpIHx8IGNoYWluSUQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGNoYWluSURCID0gY2hhaW5JRDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNoYWluSURCID0gdG9CeXRlcyhjaGFpbklEKTtcbiAgICB9XG4gICAgY29uc3QgYnVmID0gQnVmZmVyLmFsbG9jKDM2KTtcbiAgICBidWYud3JpdGVVaW50MzJCRSh1bml2ZXJzZSk7XG4gICAgYnVmLnNldChjaGFpbklEQiwgNCArICgzMiAtIGNoYWluSURCLmxlbmd0aCkpO1xuICAgIHJldHVybiBidWY7XG59XG5leHBvcnQgY2xhc3MgT21uaXZlcnNhbENoYWluSUQge1xuICAgIHVuaXZlcnNlO1xuICAgIGNoYWluSUQ7XG4gICAgYmluYXJ5Rm9ybTtcbiAgICBjb25zdHJ1Y3Rvcih1bml2ZXJzZSwgY2hhaW5JRCkge1xuICAgICAgICB0aGlzLnVuaXZlcnNlID0gdW5pdmVyc2U7XG4gICAgICAgIGlmICh0eXBlb2YgY2hhaW5JRCA9PT0gXCJiaWdpbnRcIikge1xuICAgICAgICAgICAgdGhpcy5jaGFpbklEID0gY2hhaW5JRDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgY2hhaW5JRCA9PT0gXCJudW1iZXJcIiB8fCB0eXBlb2YgY2hhaW5JRCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdGhpcy5jaGFpbklEID0gQmlnSW50KGNoYWluSUQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNoYWluSUQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICB0aGlzLmNoYWluSUQgPSBieXRlc1RvQmlnSW50KGNoYWluSUQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYmluYXJ5Rm9ybSA9IGVuY29kZUNoYWluSUQzNih0aGlzLnVuaXZlcnNlLCB0aGlzLmNoYWluSUQpO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHVuaXZlcnNlVG9KU09OKHRoaXMudW5pdmVyc2UpICsgXCJfXCIgKyB0aGlzLmNoYWluSUQudG9TdHJpbmcoMTApO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB1bml2ZXJzZTogdW5pdmVyc2VUb0pTT04odGhpcy51bml2ZXJzZSksXG4gICAgICAgICAgICBjaGFpbklEOiB0b0hleCh0aGlzLmNoYWluSUQpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBPbW5pdmVyc2FsQ2hhaW5JRCh1bml2ZXJzZUZyb21KU09OKGlucHV0LnVuaXZlcnNlKSwgaGV4VG9CaWdJbnQoaW5wdXQuY2hhaW5JRCkpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUNoYWluSUQzNihfaW5wdXQpIHtcbiAgICAgICAgY29uc3QgaW5wdXQgPSBjb252ZXJ0VG9CdWZmZXJJZk5lY2Vzc2FyeShfaW5wdXQpO1xuICAgICAgICBjb25zdCB1bml2SUQgPSBpbnB1dC5yZWFkVWludDMyQkUoMCk7XG4gICAgICAgIGNvbnN0IHJlc3QgPSBpbnB1dC5zdWJhcnJheSg0KTtcbiAgICAgICAgcmV0dXJuIG5ldyBPbW5pdmVyc2FsQ2hhaW5JRCh1bml2SUQsIHJlc3QpO1xuICAgIH1cbiAgICAvLyBEbyBub3QgbW9kaWZ5IHRoZSByZXR1cm5lZCBidWZmZXIuIE1ha2UgYSBjb3B5IGlmIG5lY2Vzc2FyeS5cbiAgICB0b0J5dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5iaW5hcnlGb3JtO1xuICAgIH1cbiAgICBlcXVhbHMocmhzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaXZlcnNlID09PSByaHMudW5pdmVyc2UgJiYgdGhpcy5jaGFpbklEID09PSByaHMuY2hhaW5JRDtcbiAgICB9XG4gICAgc3RhdGljIGVxdWFscyhsaHMsIHJocykge1xuICAgICAgICByZXR1cm4gbGhzLmVxdWFscyhyaHMpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDaGFpbklES2V5ZWRNYXAge1xuICAgIG1hcDtcbiAgICBjb25zdHJ1Y3RvcihlbnRyaWVzID0gbnVsbCkge1xuICAgICAgICB0aGlzLm1hcCA9IG5ldyBNYXAoZW50cmllcyAhPSBudWxsXG4gICAgICAgICAgICA/IGVudHJpZXMubWFwKChlKSA9PiBbYnl0ZXNUb0hleChlWzBdLnRvQnl0ZXMoKSksIGVbMV1dKVxuICAgICAgICAgICAgOiBudWxsKTtcbiAgICB9XG4gICAgZ2V0KGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuZ2V0KGJ5dGVzVG9IZXgoa2V5LnRvQnl0ZXMoKSkpO1xuICAgIH1cbiAgICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLm1hcC5zZXQoYnl0ZXNUb0hleChrZXkudG9CeXRlcygpKSwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZ2V0RnJvbUNoYWluSUQzNihrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmdldChieXRlc1RvSGV4KGtleSkpO1xuICAgIH1cbiAgICAqZW50cmllcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgdGhpcy5tYXAuZW50cmllcygpKSB7XG4gICAgICAgICAgICB5aWVsZCBbT21uaXZlcnNhbENoYWluSUQuZnJvbUNoYWluSUQzNihoZXhUb0J5dGVzKGtleSkpLCB2YWx1ZV07XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chainid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/currency.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/currency.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Currency: () => (/* binding */ Currency),\n/* harmony export */   CurrencyID: () => (/* binding */ CurrencyID)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toBytes.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/fromBytes.js\");\n/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ \"(ssr)/./node_modules/.pnpm/decimal.js@10.6.0/node_modules/decimal.js/decimal.mjs\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/utils.js\");\n\n\n\nvar CurrencyID;\n(function (CurrencyID) {\n    CurrencyID[CurrencyID[\"USDC\"] = 1] = \"USDC\";\n    CurrencyID[CurrencyID[\"USDT\"] = 2] = \"USDT\";\n    CurrencyID[CurrencyID[\"ETH\"] = 3] = \"ETH\";\n    CurrencyID[CurrencyID[\"POL\"] = 4] = \"POL\";\n    CurrencyID[CurrencyID[\"AVAX\"] = 5] = \"AVAX\";\n    CurrencyID[CurrencyID[\"BNB\"] = 6] = \"BNB\";\n    CurrencyID[CurrencyID[\"HYPE\"] = 16] = \"HYPE\";\n    CurrencyID[CurrencyID[\"KAIA\"] = 17] = \"KAIA\";\n    CurrencyID[CurrencyID[\"SOPH\"] = 18] = \"SOPH\";\n    CurrencyID[CurrencyID[\"MON\"] = 20] = \"MON\";\n})(CurrencyID || (CurrencyID = {}));\nclass Currency {\n    currencyID;\n    decimals;\n    permitVariant;\n    permitContractVersion;\n    isGasToken;\n    // this is always 32 byte long\n    tokenAddress;\n    /* This is the ratio between one unit to the smallest unit used.\n  \n       For example, USDC, which has a ‘decimals’ value of 6, is designed so that 1 USDC = 10⁶ μUSDC, which is the smallest indivisible amount representable.\n     */\n    oneUnitToAtomicUnitRatio;\n    constructor(currencyID, tokenAddress, decimals, permitVariant, permitContractVersion = 0, isGasToken) {\n        this.currencyID = currencyID;\n        this.decimals = decimals;\n        this.permitVariant = permitVariant;\n        this.permitContractVersion = permitContractVersion;\n        this.isGasToken = isGasToken;\n        if (typeof tokenAddress === \"string\") {\n            this.tokenAddress = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.zeroExtendBufToGivenSize)((0,viem__WEBPACK_IMPORTED_MODULE_2__.toBytes)(tokenAddress), 32);\n        }\n        else if (tokenAddress instanceof Uint8Array) {\n            this.tokenAddress = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.zeroExtendBufToGivenSize)(tokenAddress, 32);\n        }\n        else if (Array.isArray(tokenAddress) &&\n            tokenAddress.length >= 1 &&\n            typeof tokenAddress[0] === \"number\") {\n            this.tokenAddress = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.zeroExtendBufToGivenSize)(Buffer.from(tokenAddress), 32);\n        }\n        this.oneUnitToAtomicUnitRatio = decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pow(10, decimals);\n    }\n    convertUnitsToAmountDecimal(input) {\n        let rawunits;\n        if (typeof input === \"bigint\") {\n            rawunits = input.toString(10);\n        }\n        else if (typeof input === \"number\") {\n            rawunits = input.toString();\n        }\n        else if (input instanceof Uint8Array) {\n            rawunits = (0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToBigInt)(input).toString(10);\n        }\n        else if (typeof input === \"string\") {\n            rawunits = input;\n        }\n        else {\n            throw new Error(\"Invalid input\");\n        }\n        return decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].div(rawunits, this.oneUnitToAtomicUnitRatio);\n    }\n    convertAmountToUnitsInBinary(input) {\n        return Buffer.from((0,viem__WEBPACK_IMPORTED_MODULE_2__.toBytes)(input.mul(this.oneUnitToAtomicUnitRatio).ceil().toHex()));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9kYXRhL2N1cnJlbmN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4QztBQUNiO0FBQ2tCO0FBQzVDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQzFCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZ0VBQXdCLENBQUMsNkNBQU87QUFDaEU7QUFDQTtBQUNBLGdDQUFnQyxnRUFBd0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZ0VBQXdCO0FBQ3hEO0FBQ0Esd0NBQXdDLGtEQUFPO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1EQUFhO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrREFBTztBQUN0QjtBQUNBO0FBQ0EsMkJBQTJCLDZDQUFPO0FBQ2xDO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20vZGF0YS9jdXJyZW5jeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBieXRlc1RvQmlnSW50LCB0b0J5dGVzIH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCBEZWNpbWFsIGZyb20gXCJkZWNpbWFsLmpzXCI7XG5pbXBvcnQgeyB6ZXJvRXh0ZW5kQnVmVG9HaXZlblNpemUgfSBmcm9tIFwiLi91dGlsc1wiO1xuZXhwb3J0IHZhciBDdXJyZW5jeUlEO1xuKGZ1bmN0aW9uIChDdXJyZW5jeUlEKSB7XG4gICAgQ3VycmVuY3lJRFtDdXJyZW5jeUlEW1wiVVNEQ1wiXSA9IDFdID0gXCJVU0RDXCI7XG4gICAgQ3VycmVuY3lJRFtDdXJyZW5jeUlEW1wiVVNEVFwiXSA9IDJdID0gXCJVU0RUXCI7XG4gICAgQ3VycmVuY3lJRFtDdXJyZW5jeUlEW1wiRVRIXCJdID0gM10gPSBcIkVUSFwiO1xuICAgIEN1cnJlbmN5SURbQ3VycmVuY3lJRFtcIlBPTFwiXSA9IDRdID0gXCJQT0xcIjtcbiAgICBDdXJyZW5jeUlEW0N1cnJlbmN5SURbXCJBVkFYXCJdID0gNV0gPSBcIkFWQVhcIjtcbiAgICBDdXJyZW5jeUlEW0N1cnJlbmN5SURbXCJCTkJcIl0gPSA2XSA9IFwiQk5CXCI7XG4gICAgQ3VycmVuY3lJRFtDdXJyZW5jeUlEW1wiSFlQRVwiXSA9IDE2XSA9IFwiSFlQRVwiO1xuICAgIEN1cnJlbmN5SURbQ3VycmVuY3lJRFtcIktBSUFcIl0gPSAxN10gPSBcIktBSUFcIjtcbiAgICBDdXJyZW5jeUlEW0N1cnJlbmN5SURbXCJTT1BIXCJdID0gMThdID0gXCJTT1BIXCI7XG4gICAgQ3VycmVuY3lJRFtDdXJyZW5jeUlEW1wiTU9OXCJdID0gMjBdID0gXCJNT05cIjtcbn0pKEN1cnJlbmN5SUQgfHwgKEN1cnJlbmN5SUQgPSB7fSkpO1xuZXhwb3J0IGNsYXNzIEN1cnJlbmN5IHtcbiAgICBjdXJyZW5jeUlEO1xuICAgIGRlY2ltYWxzO1xuICAgIHBlcm1pdFZhcmlhbnQ7XG4gICAgcGVybWl0Q29udHJhY3RWZXJzaW9uO1xuICAgIGlzR2FzVG9rZW47XG4gICAgLy8gdGhpcyBpcyBhbHdheXMgMzIgYnl0ZSBsb25nXG4gICAgdG9rZW5BZGRyZXNzO1xuICAgIC8qIFRoaXMgaXMgdGhlIHJhdGlvIGJldHdlZW4gb25lIHVuaXQgdG8gdGhlIHNtYWxsZXN0IHVuaXQgdXNlZC5cbiAgXG4gICAgICAgRm9yIGV4YW1wbGUsIFVTREMsIHdoaWNoIGhhcyBhIOKAmGRlY2ltYWxz4oCZIHZhbHVlIG9mIDYsIGlzIGRlc2lnbmVkIHNvIHRoYXQgMSBVU0RDID0gMTDigbYgzrxVU0RDLCB3aGljaCBpcyB0aGUgc21hbGxlc3QgaW5kaXZpc2libGUgYW1vdW50IHJlcHJlc2VudGFibGUuXG4gICAgICovXG4gICAgb25lVW5pdFRvQXRvbWljVW5pdFJhdGlvO1xuICAgIGNvbnN0cnVjdG9yKGN1cnJlbmN5SUQsIHRva2VuQWRkcmVzcywgZGVjaW1hbHMsIHBlcm1pdFZhcmlhbnQsIHBlcm1pdENvbnRyYWN0VmVyc2lvbiA9IDAsIGlzR2FzVG9rZW4pIHtcbiAgICAgICAgdGhpcy5jdXJyZW5jeUlEID0gY3VycmVuY3lJRDtcbiAgICAgICAgdGhpcy5kZWNpbWFscyA9IGRlY2ltYWxzO1xuICAgICAgICB0aGlzLnBlcm1pdFZhcmlhbnQgPSBwZXJtaXRWYXJpYW50O1xuICAgICAgICB0aGlzLnBlcm1pdENvbnRyYWN0VmVyc2lvbiA9IHBlcm1pdENvbnRyYWN0VmVyc2lvbjtcbiAgICAgICAgdGhpcy5pc0dhc1Rva2VuID0gaXNHYXNUb2tlbjtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbkFkZHJlc3MgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHRoaXMudG9rZW5BZGRyZXNzID0gemVyb0V4dGVuZEJ1ZlRvR2l2ZW5TaXplKHRvQnl0ZXModG9rZW5BZGRyZXNzKSwgMzIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRva2VuQWRkcmVzcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIHRoaXMudG9rZW5BZGRyZXNzID0gemVyb0V4dGVuZEJ1ZlRvR2l2ZW5TaXplKHRva2VuQWRkcmVzcywgMzIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodG9rZW5BZGRyZXNzKSAmJlxuICAgICAgICAgICAgdG9rZW5BZGRyZXNzLmxlbmd0aCA+PSAxICYmXG4gICAgICAgICAgICB0eXBlb2YgdG9rZW5BZGRyZXNzWzBdID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICB0aGlzLnRva2VuQWRkcmVzcyA9IHplcm9FeHRlbmRCdWZUb0dpdmVuU2l6ZShCdWZmZXIuZnJvbSh0b2tlbkFkZHJlc3MpLCAzMik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vbmVVbml0VG9BdG9taWNVbml0UmF0aW8gPSBEZWNpbWFsLnBvdygxMCwgZGVjaW1hbHMpO1xuICAgIH1cbiAgICBjb252ZXJ0VW5pdHNUb0Ftb3VudERlY2ltYWwoaW5wdXQpIHtcbiAgICAgICAgbGV0IHJhd3VuaXRzO1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSBcImJpZ2ludFwiKSB7XG4gICAgICAgICAgICByYXd1bml0cyA9IGlucHV0LnRvU3RyaW5nKDEwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgaW5wdXQgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIHJhd3VuaXRzID0gaW5wdXQudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIHJhd3VuaXRzID0gYnl0ZXNUb0JpZ0ludChpbnB1dCkudG9TdHJpbmcoMTApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBpbnB1dCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmF3dW5pdHMgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaW5wdXRcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIERlY2ltYWwuZGl2KHJhd3VuaXRzLCB0aGlzLm9uZVVuaXRUb0F0b21pY1VuaXRSYXRpbyk7XG4gICAgfVxuICAgIGNvbnZlcnRBbW91bnRUb1VuaXRzSW5CaW5hcnkoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHRvQnl0ZXMoaW5wdXQubXVsKHRoaXMub25lVW5pdFRvQXRvbWljVW5pdFJhdGlvKS5jZWlsKCkudG9IZXgoKSkpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/currency.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/erc20.evm.abi.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/erc20.evm.abi.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERC20ABI: () => (/* binding */ ERC20ABI)\n/* harmony export */ });\nconst ERC20ABI = [\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"balance\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        comment: \"From the EIP-2612 spec.\",\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"nonces\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        comment: \"From the EIP-2612 spec.\",\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"deadline\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint8\",\n                name: \"v\",\n                type: \"uint8\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"r\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"s\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"permit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        comment: \"Available on bridged tokens on Polygon.\",\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"userAddress\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"functionSignature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"sigR\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"sigS\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint8\",\n                name: \"sigV\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"executeMetaTransaction\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        comment: \"Available on bridged tokens on Polygon.\",\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"user\",\n                type: \"address\",\n            },\n        ],\n        name: \"getNonce\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"nonce\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9kYXRhL2VyYzIwLmV2bS5hYmkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20vZGF0YS9lcmMyMC5ldm0uYWJpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBFUkMyMEFCSSA9IFtcbiAgICB7XG4gICAgICAgIGNvbnN0YW50OiB0cnVlLFxuICAgICAgICBpbnB1dHM6IFtdLFxuICAgICAgICBuYW1lOiBcIm5hbWVcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIHBheWFibGU6IGZhbHNlLFxuICAgICAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNvbnN0YW50OiBmYWxzZSxcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJfc3BlbmRlclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIl92YWx1ZVwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJhcHByb3ZlXCIsXG4gICAgICAgIG91dHB1dHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYm9vbFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgcGF5YWJsZTogZmFsc2UsXG4gICAgICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29uc3RhbnQ6IHRydWUsXG4gICAgICAgIGlucHV0czogW10sXG4gICAgICAgIG5hbWU6IFwidG90YWxTdXBwbHlcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBwYXlhYmxlOiBmYWxzZSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjb25zdGFudDogZmFsc2UsXG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiX2Zyb21cIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJfdG9cIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJfdmFsdWVcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIG5hbWU6IFwidHJhbnNmZXJGcm9tXCIsXG4gICAgICAgIG91dHB1dHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYm9vbFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgcGF5YWJsZTogZmFsc2UsXG4gICAgICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29uc3RhbnQ6IHRydWUsXG4gICAgICAgIGlucHV0czogW10sXG4gICAgICAgIG5hbWU6IFwiZGVjaW1hbHNcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50OFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgcGF5YWJsZTogZmFsc2UsXG4gICAgICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29uc3RhbnQ6IHRydWUsXG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiX293bmVyXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBuYW1lOiBcImJhbGFuY2VPZlwiLFxuICAgICAgICBvdXRwdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJiYWxhbmNlXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBwYXlhYmxlOiBmYWxzZSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjb25zdGFudDogdHJ1ZSxcbiAgICAgICAgaW5wdXRzOiBbXSxcbiAgICAgICAgbmFtZTogXCJzeW1ib2xcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIHBheWFibGU6IGZhbHNlLFxuICAgICAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNvbnN0YW50OiBmYWxzZSxcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJfdG9cIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJfdmFsdWVcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIG5hbWU6IFwidHJhbnNmZXJcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJib29sXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBwYXlhYmxlOiBmYWxzZSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjb25zdGFudDogdHJ1ZSxcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJfb3duZXJcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJfc3BlbmRlclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJhbGxvd2FuY2VcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBwYXlhYmxlOiBmYWxzZSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBwYXlhYmxlOiB0cnVlLFxuICAgICAgICBzdGF0ZU11dGFiaWxpdHk6IFwicGF5YWJsZVwiLFxuICAgICAgICB0eXBlOiBcImZhbGxiYWNrXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFub255bW91czogZmFsc2UsXG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJvd25lclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwic3BlbmRlclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcInZhbHVlXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBuYW1lOiBcIkFwcHJvdmFsXCIsXG4gICAgICAgIHR5cGU6IFwiZXZlbnRcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcImZyb21cIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcInRvXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwidmFsdWVcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIG5hbWU6IFwiVHJhbnNmZXJcIixcbiAgICAgICAgdHlwZTogXCJldmVudFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjb21tZW50OiBcIkZyb20gdGhlIEVJUC0yNjEyIHNwZWMuXCIsXG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJvd25lclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJub25jZXNcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29tbWVudDogXCJGcm9tIHRoZSBFSVAtMjYxMiBzcGVjLlwiLFxuICAgICAgICBpbnB1dHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwib3duZXJcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInNwZW5kZXJcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInZhbHVlXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJkZWFkbGluZVwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDhcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInZcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcInVpbnQ4XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJyXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJzXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBuYW1lOiBcInBlcm1pdFwiLFxuICAgICAgICBvdXRwdXRzOiBbXSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjb21tZW50OiBcIkF2YWlsYWJsZSBvbiBicmlkZ2VkIHRva2VucyBvbiBQb2x5Z29uLlwiLFxuICAgICAgICBpbnB1dHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwidXNlckFkZHJlc3NcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJmdW5jdGlvblNpZ25hdHVyZVwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInNpZ1JcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInNpZ1NcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQ4XCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJzaWdWXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50OFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJleGVjdXRlTWV0YVRyYW5zYWN0aW9uXCIsXG4gICAgICAgIG91dHB1dHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIHN0YXRlTXV0YWJpbGl0eTogXCJwYXlhYmxlXCIsXG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29tbWVudDogXCJBdmFpbGFibGUgb24gYnJpZGdlZCB0b2tlbnMgb24gUG9seWdvbi5cIixcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInVzZXJcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIG5hbWU6IFwiZ2V0Tm9uY2VcIixcbiAgICAgICAgb3V0cHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJub25jZVwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG5dO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/erc20.evm.abi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainIDKeyedMap: () => (/* reexport safe */ _chainid__WEBPACK_IMPORTED_MODULE_1__.ChainIDKeyedMap),\n/* harmony export */   Chaindata: () => (/* reexport safe */ _chaindata__WEBPACK_IMPORTED_MODULE_0__.Chaindata),\n/* harmony export */   ChaindataMap: () => (/* reexport safe */ _chaindata__WEBPACK_IMPORTED_MODULE_0__.ChaindataMap),\n/* harmony export */   Currency: () => (/* reexport safe */ _currency__WEBPACK_IMPORTED_MODULE_2__.Currency),\n/* harmony export */   CurrencyID: () => (/* reexport safe */ _currency__WEBPACK_IMPORTED_MODULE_2__.CurrencyID),\n/* harmony export */   ERC20ABI: () => (/* reexport safe */ _erc20_evm_abi__WEBPACK_IMPORTED_MODULE_5__.ERC20ABI),\n/* harmony export */   EVMVaultABI: () => (/* reexport safe */ _vault_evm_abi__WEBPACK_IMPORTED_MODULE_4__.EVMVaultABI),\n/* harmony export */   OmniversalChainID: () => (/* reexport safe */ _chainid__WEBPACK_IMPORTED_MODULE_1__.OmniversalChainID),\n/* harmony export */   RPCURLMap: () => (/* reexport safe */ _chaindata__WEBPACK_IMPORTED_MODULE_0__.RPCURLMap),\n/* harmony export */   convertBigIntToDecimal: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.convertBigIntToDecimal),\n/* harmony export */   convertDecimalToBigInt: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.convertDecimalToBigInt),\n/* harmony export */   convertToBufferIfNecessary: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.convertToBufferIfNecessary),\n/* harmony export */   encodeChainID36: () => (/* reexport safe */ _chainid__WEBPACK_IMPORTED_MODULE_1__.encodeChainID36),\n/* harmony export */   ezPadTo32Hex: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.ezPadTo32Hex),\n/* harmony export */   maxByBigInt: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.maxByBigInt),\n/* harmony export */   minByByBigInt: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.minByByBigInt),\n/* harmony export */   zeroExtendBufToGivenSize: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.zeroExtendBufToGivenSize)\n/* harmony export */ });\n/* harmony import */ var _chaindata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chaindata */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chaindata.js\");\n/* harmony import */ var _chainid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chainid */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/chainid.js\");\n/* harmony import */ var _currency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./currency */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/currency.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/utils.js\");\n/* harmony import */ var _vault_evm_abi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vault.evm.abi */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/vault.evm.abi.js\");\n/* harmony import */ var _erc20_evm_abi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./erc20.evm.abi */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/erc20.evm.abi.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9kYXRhL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRCO0FBQ0Y7QUFDQztBQUNIO0FBQ1E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9kYXRhL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vY2hhaW5kYXRhJztcbmV4cG9ydCAqIGZyb20gJy4vY2hhaW5pZCc7XG5leHBvcnQgKiBmcm9tICcuL2N1cnJlbmN5JztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0ICogZnJvbSAnLi92YXVsdC5ldm0uYWJpJztcbmV4cG9ydCAqIGZyb20gJy4vZXJjMjAuZXZtLmFiaSc7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/utils.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/utils.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertBigIntToDecimal: () => (/* binding */ convertBigIntToDecimal),\n/* harmony export */   convertDecimalToBigInt: () => (/* binding */ convertDecimalToBigInt),\n/* harmony export */   convertToBufferIfNecessary: () => (/* binding */ convertToBufferIfNecessary),\n/* harmony export */   ezPadTo32Hex: () => (/* binding */ ezPadTo32Hex),\n/* harmony export */   maxByBigInt: () => (/* binding */ maxByBigInt),\n/* harmony export */   minByByBigInt: () => (/* binding */ minByByBigInt),\n/* harmony export */   zeroExtendBufToGivenSize: () => (/* binding */ zeroExtendBufToGivenSize)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/data/pad.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ \"(ssr)/./node_modules/.pnpm/decimal.js@10.6.0/node_modules/decimal.js/decimal.mjs\");\n\n\nfunction convertToBufferIfNecessary(buf) {\n    return Buffer.isBuffer(buf) ? buf : Buffer.from(buf);\n}\nfunction zeroExtendBufToGivenSize(buf, size = 32) {\n    if (buf.length === size) {\n        return convertToBufferIfNecessary(buf);\n    }\n    if (buf.length > size) {\n        return convertToBufferIfNecessary(buf.subarray(0, size));\n    }\n    const out = Buffer.alloc(size);\n    out.set(buf, size - buf.length);\n    return out;\n}\nfunction ezPadTo32Hex(input) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_1__.pad)(typeof input !== \"string\" ? (0,viem__WEBPACK_IMPORTED_MODULE_2__.toHex)(input) : input, {\n        dir: \"left\",\n        size: 32,\n    });\n}\nfunction convertDecimalToBigInt(dec) {\n    return BigInt(dec.ceil().toFixed());\n}\nfunction convertBigIntToDecimal(big) {\n    return new decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](big.toString(10));\n}\nfunction maxByBigInt(items, getValue) {\n    return items.reduce((m, e) => getValue(e) > getValue(m) ? e : m);\n}\nfunction minByByBigInt(items, getValue) {\n    return items.reduce((m, e) => getValue(e) < getValue(m) ? e : m);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9kYXRhL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBa0M7QUFDRDtBQUMxQjtBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHlDQUFHLDZCQUE2QiwyQ0FBSztBQUNoRDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCxlQUFlLGtEQUFPO0FBQ3RCO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AYXJjYW5hK2NhLWNvbW1vbkAxLjAuMS1hbHBoYS42X0Bjb3NtanMrcHJvdG8tc2lnbmluZ0AwLjM0LjBfQGNvc21qcytzdGFyZ2F0ZUAwLjM0LjBfYnVfZjIyM2NjMGZmOWY4NjQ0NGRlMDg3N2U1OWE3OGU3Y2Evbm9kZV9tb2R1bGVzL0BhcmNhbmEvY2EtY29tbW9uL2Rpc3QvZXNtL2RhdGEvdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFkLCB0b0hleCB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgRGVjaW1hbCBmcm9tIFwiZGVjaW1hbC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb0J1ZmZlcklmTmVjZXNzYXJ5KGJ1Zikge1xuICAgIHJldHVybiBCdWZmZXIuaXNCdWZmZXIoYnVmKSA/IGJ1ZiA6IEJ1ZmZlci5mcm9tKGJ1Zik7XG59XG5leHBvcnQgZnVuY3Rpb24gemVyb0V4dGVuZEJ1ZlRvR2l2ZW5TaXplKGJ1Ziwgc2l6ZSA9IDMyKSB7XG4gICAgaWYgKGJ1Zi5sZW5ndGggPT09IHNpemUpIHtcbiAgICAgICAgcmV0dXJuIGNvbnZlcnRUb0J1ZmZlcklmTmVjZXNzYXJ5KGJ1Zik7XG4gICAgfVxuICAgIGlmIChidWYubGVuZ3RoID4gc2l6ZSkge1xuICAgICAgICByZXR1cm4gY29udmVydFRvQnVmZmVySWZOZWNlc3NhcnkoYnVmLnN1YmFycmF5KDAsIHNpemUpKTtcbiAgICB9XG4gICAgY29uc3Qgb3V0ID0gQnVmZmVyLmFsbG9jKHNpemUpO1xuICAgIG91dC5zZXQoYnVmLCBzaXplIC0gYnVmLmxlbmd0aCk7XG4gICAgcmV0dXJuIG91dDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlelBhZFRvMzJIZXgoaW5wdXQpIHtcbiAgICByZXR1cm4gcGFkKHR5cGVvZiBpbnB1dCAhPT0gXCJzdHJpbmdcIiA/IHRvSGV4KGlucHV0KSA6IGlucHV0LCB7XG4gICAgICAgIGRpcjogXCJsZWZ0XCIsXG4gICAgICAgIHNpemU6IDMyLFxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnREZWNpbWFsVG9CaWdJbnQoZGVjKSB7XG4gICAgcmV0dXJuIEJpZ0ludChkZWMuY2VpbCgpLnRvRml4ZWQoKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29udmVydEJpZ0ludFRvRGVjaW1hbChiaWcpIHtcbiAgICByZXR1cm4gbmV3IERlY2ltYWwoYmlnLnRvU3RyaW5nKDEwKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbWF4QnlCaWdJbnQoaXRlbXMsIGdldFZhbHVlKSB7XG4gICAgcmV0dXJuIGl0ZW1zLnJlZHVjZSgobSwgZSkgPT4gZ2V0VmFsdWUoZSkgPiBnZXRWYWx1ZShtKSA/IGUgOiBtKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtaW5CeUJ5QmlnSW50KGl0ZW1zLCBnZXRWYWx1ZSkge1xuICAgIHJldHVybiBpdGVtcy5yZWR1Y2UoKG0sIGUpID0+IGdldFZhbHVlKGUpIDwgZ2V0VmFsdWUobSkgPyBlIDogbSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/vault.evm.abi.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/vault.evm.abi.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EVMVaultABI: () => (/* binding */ EVMVaultABI)\n/* harmony export */ });\nconst EVMVaultABI = [\n    {\n        inputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        inputs: [],\n        name: \"AccessControlBadConfirmation\",\n        type: \"error\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"neededRole\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"AccessControlUnauthorizedAccount\",\n        type: \"error\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"target\",\n                type: \"address\",\n            },\n        ],\n        name: \"AddressEmptyCode\",\n        type: \"error\",\n    },\n    {\n        inputs: [],\n        name: \"ECDSAInvalidSignature\",\n        type: \"error\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"length\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"ECDSAInvalidSignatureLength\",\n        type: \"error\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"s\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ECDSAInvalidSignatureS\",\n        type: \"error\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"implementation\",\n                type: \"address\",\n            },\n        ],\n        name: \"ERC1967InvalidImplementation\",\n        type: \"error\",\n    },\n    {\n        inputs: [],\n        name: \"ERC1967NonPayable\",\n        type: \"error\",\n    },\n    {\n        inputs: [],\n        name: \"FailedCall\",\n        type: \"error\",\n    },\n    {\n        inputs: [],\n        name: \"InvalidInitialization\",\n        type: \"error\",\n    },\n    {\n        inputs: [],\n        name: \"NotInitializing\",\n        type: \"error\",\n    },\n    {\n        inputs: [],\n        name: \"ReentrancyGuardReentrantCall\",\n        type: \"error\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        name: \"SafeERC20FailedOperation\",\n        type: \"error\",\n    },\n    {\n        inputs: [],\n        name: \"UUPSUnauthorizedCallContext\",\n        type: \"error\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"slot\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"UUPSUnsupportedProxiableUUID\",\n        type: \"error\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"requestHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"gasRefunded\",\n                type: \"bool\",\n            },\n        ],\n        name: \"Deposit\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"requestHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"solver\",\n                type: \"address\",\n            },\n        ],\n        name: \"Fill\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"enum Vault.Function\",\n                name: \"_function\",\n                type: \"uint8\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"overhead\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"GasOverheadUpdate\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"gasPrice\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"GasPriceUpdate\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint64\",\n                name: \"version\",\n                type: \"uint64\",\n            },\n        ],\n        name: \"Initialized\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"ReceiveETH\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"previousAdminRole\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"newAdminRole\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"RoleAdminChanged\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"sender\",\n                type: \"address\",\n            },\n        ],\n        name: \"RoleGranted\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"sender\",\n                type: \"address\",\n            },\n        ],\n        name: \"RoleRevoked\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"solver\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"nonce\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Settle\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"implementation\",\n                type: \"address\",\n            },\n        ],\n        name: \"Upgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Withdraw\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"DEFAULT_ADMIN_ROLE\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"UPGRADE_INTERFACE_VERSION\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"chainID\",\n                                type: \"uint256\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.SourcePair[]\",\n                        name: \"sources\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"enum Vault.Universe\",\n                        name: \"destinationUniverse\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"destinationChainID\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.DestinationPair[]\",\n                        name: \"destinations\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"expiry\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"address_\",\n                                type: \"bytes32\",\n                            },\n                        ],\n                        internalType: \"struct Vault.Party[]\",\n                        name: \"parties\",\n                        type: \"tuple[]\",\n                    },\n                ],\n                internalType: \"struct Vault.Request\",\n                name: \"request\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"chainIndex\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"deposit\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"depositNonce\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"chainID\",\n                                type: \"uint256\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.SourcePair[]\",\n                        name: \"sources\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"enum Vault.Universe\",\n                        name: \"destinationUniverse\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"destinationChainID\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.DestinationPair[]\",\n                        name: \"destinations\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"expiry\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"address_\",\n                                type: \"bytes32\",\n                            },\n                        ],\n                        internalType: \"struct Vault.Party[]\",\n                        name: \"parties\",\n                        type: \"tuple[]\",\n                    },\n                ],\n                internalType: \"struct Vault.Request\",\n                name: \"request\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"chainIndex\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"depositWithRefund\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"chainID\",\n                                type: \"uint256\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.SourcePair[]\",\n                        name: \"sources\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"enum Vault.Universe\",\n                        name: \"destinationUniverse\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"destinationChainID\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.DestinationPair[]\",\n                        name: \"destinations\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"expiry\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"address_\",\n                                type: \"bytes32\",\n                            },\n                        ],\n                        internalType: \"struct Vault.Party[]\",\n                        name: \"parties\",\n                        type: \"tuple[]\",\n                    },\n                ],\n                internalType: \"struct Vault.Request\",\n                name: \"request\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"signature\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"fill\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"fillNonce\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"getRoleAdmin\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n        ],\n        name: \"grantRole\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n        ],\n        name: \"hasRole\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"admin\",\n                type: \"address\",\n            },\n        ],\n        name: \"initialize\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"maxGasPrice\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"enum Vault.Function\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"overhead\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"proxiableUUID\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"address\",\n                name: \"callerConfirmation\",\n                type: \"address\",\n            },\n        ],\n        name: \"renounceRole\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"requestState\",\n        outputs: [\n            {\n                internalType: \"enum Vault.RFFState\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"role\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n        ],\n        name: \"revokeRole\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_maxGasPrice\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"setMaxGasPrice\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"enum Vault.Function\",\n                name: \"_function\",\n                type: \"uint8\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_overhead\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"setOverHead\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"enum Vault.Universe\",\n                        name: \"universe\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"chainID\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"address[]\",\n                        name: \"solvers\",\n                        type: \"address[]\",\n                    },\n                    {\n                        internalType: \"address[]\",\n                        name: \"tokens\",\n                        type: \"address[]\",\n                    },\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"amounts\",\n                        type: \"uint256[]\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct Vault.SettleData\",\n                name: \"settleData\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"signature\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"settle\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"settleNonce\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes4\",\n                name: \"interfaceId\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"newImplementation\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"upgradeToAndCall\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"vaultBalance\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"chainID\",\n                                type: \"uint256\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.SourcePair[]\",\n                        name: \"sources\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"enum Vault.Universe\",\n                        name: \"destinationUniverse\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"destinationChainID\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"tokenAddress\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"value\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct Vault.DestinationPair[]\",\n                        name: \"destinations\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"expiry\",\n                        type: \"uint256\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"enum Vault.Universe\",\n                                name: \"universe\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"address_\",\n                                type: \"bytes32\",\n                            },\n                        ],\n                        internalType: \"struct Vault.Party[]\",\n                        name: \"parties\",\n                        type: \"tuple[]\",\n                    },\n                ],\n                internalType: \"struct Vault.Request\",\n                name: \"request\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"signature\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"verifyRequestSignature\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"winningSolver\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"withdraw\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/vault.evm.abi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/yakaggregator.evm.abi.js":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/yakaggregator.evm.abi.js ***!
  \***************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YakAggregatorEVMABI: () => (/* binding */ YakAggregatorEVMABI)\n/* harmony export */ });\nconst YakAggregatorEVMABI = [\n    {\n        inputs: [\n            { internalType: \"uint256\", name: \"_amountIn\", type: \"uint256\" },\n            {\n                internalType: \"address\",\n                name: \"_tokenIn\",\n                type: \"address\",\n            },\n            { internalType: \"address\", name: \"_tokenOut\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_maxSteps\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"findBestPath\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"amounts\",\n                        type: \"uint256[]\",\n                    },\n                    { internalType: \"address[]\", name: \"adapters\", type: \"address[]\" },\n                    {\n                        internalType: \"address[]\",\n                        name: \"path\",\n                        type: \"address[]\",\n                    },\n                    { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n                ],\n                internalType: \"struct YakRouter.FormattedOffer\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"uint256\", name: \"_amountIn\", type: \"uint256\" },\n            {\n                internalType: \"address\",\n                name: \"_tokenIn\",\n                type: \"address\",\n            },\n            { internalType: \"address\", name: \"_tokenOut\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_maxSteps\",\n                type: \"uint256\",\n            },\n            { internalType: \"uint256\", name: \"_gasPrice\", type: \"uint256\" },\n        ],\n        name: \"findBestPathWithGas\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"amounts\",\n                        type: \"uint256[]\",\n                    },\n                    { internalType: \"address[]\", name: \"adapters\", type: \"address[]\" },\n                    {\n                        internalType: \"address[]\",\n                        name: \"path\",\n                        type: \"address[]\",\n                    },\n                    { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n                ],\n                internalType: \"struct YakRouter.FormattedOffer\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"amountIn\",\n                        type: \"uint256\",\n                    },\n                    { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n                    {\n                        internalType: \"address[]\",\n                        name: \"path\",\n                        type: \"address[]\",\n                    },\n                    { internalType: \"address[]\", name: \"adapters\", type: \"address[]\" },\n                ],\n                internalType: \"struct YakRouter.Trade\",\n                name: \"_trade\",\n                type: \"tuple\",\n            },\n            { internalType: \"address\", name: \"_to\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_fee\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"swapNoSplit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"amountIn\",\n                        type: \"uint256\",\n                    },\n                    { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n                    {\n                        internalType: \"address[]\",\n                        name: \"path\",\n                        type: \"address[]\",\n                    },\n                    { internalType: \"address[]\", name: \"adapters\", type: \"address[]\" },\n                ],\n                internalType: \"struct YakRouter.Trade\",\n                name: \"_trade\",\n                type: \"tuple\",\n            },\n            { internalType: \"address\", name: \"_to\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_fee\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"swapNoSplitFromAVAX\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"amountIn\",\n                        type: \"uint256\",\n                    },\n                    { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n                    {\n                        internalType: \"address[]\",\n                        name: \"path\",\n                        type: \"address[]\",\n                    },\n                    { internalType: \"address[]\", name: \"adapters\", type: \"address[]\" },\n                ],\n                internalType: \"struct YakRouter.Trade\",\n                name: \"_trade\",\n                type: \"tuple\",\n            },\n            { internalType: \"address\", name: \"_to\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_fee\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"swapNoSplitToAVAX\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"amountIn\",\n                        type: \"uint256\",\n                    },\n                    { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n                    {\n                        internalType: \"address[]\",\n                        name: \"path\",\n                        type: \"address[]\",\n                    },\n                    { internalType: \"address[]\", name: \"adapters\", type: \"address[]\" },\n                ],\n                internalType: \"struct YakRouter.Trade\",\n                name: \"_trade\",\n                type: \"tuple\",\n            },\n            { internalType: \"address\", name: \"_to\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_fee\",\n                type: \"uint256\",\n            },\n            { internalType: \"uint256\", name: \"_deadline\", type: \"uint256\" },\n            {\n                internalType: \"uint8\",\n                name: \"_v\",\n                type: \"uint8\",\n            },\n            { internalType: \"bytes32\", name: \"_r\", type: \"bytes32\" },\n            {\n                internalType: \"bytes32\",\n                name: \"_s\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"swapNoSplitToAVAXWithPermit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"amountIn\",\n                        type: \"uint256\",\n                    },\n                    { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n                    {\n                        internalType: \"address[]\",\n                        name: \"path\",\n                        type: \"address[]\",\n                    },\n                    { internalType: \"address[]\", name: \"adapters\", type: \"address[]\" },\n                ],\n                internalType: \"struct YakRouter.Trade\",\n                name: \"_trade\",\n                type: \"tuple\",\n            },\n            { internalType: \"address\", name: \"_to\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_fee\",\n                type: \"uint256\",\n            },\n            { internalType: \"uint256\", name: \"_deadline\", type: \"uint256\" },\n            {\n                internalType: \"uint8\",\n                name: \"_v\",\n                type: \"uint8\",\n            },\n            { internalType: \"bytes32\", name: \"_r\", type: \"bytes32\" },\n            {\n                internalType: \"bytes32\",\n                name: \"_s\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"swapNoSplitWithPermit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/yakaggregator.evm.abi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVault.js":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVault.js ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessErrorInput: () => (/* binding */ AccessErrorInput),\n/* harmony export */   AccessErrorOutput: () => (/* binding */ AccessErrorOutput),\n/* harmony export */   ArcanaVault: () => (/* binding */ ArcanaVault),\n/* harmony export */   ArcanaVaultInterface: () => (/* binding */ ArcanaVaultInterface),\n/* harmony export */   InitializationErrorInput: () => (/* binding */ InitializationErrorInput),\n/* harmony export */   InitializationErrorOutput: () => (/* binding */ InitializationErrorOutput),\n/* harmony export */   ReentrancyErrorInput: () => (/* binding */ ReentrancyErrorInput),\n/* harmony export */   ReentrancyErrorOutput: () => (/* binding */ ReentrancyErrorOutput),\n/* harmony export */   RoleAccessErrorInput: () => (/* binding */ RoleAccessErrorInput),\n/* harmony export */   RoleAccessErrorOutput: () => (/* binding */ RoleAccessErrorOutput),\n/* harmony export */   UniverseInput: () => (/* binding */ UniverseInput),\n/* harmony export */   UniverseOutput: () => (/* binding */ UniverseOutput)\n/* harmony export */ });\n/* harmony import */ var fuels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fuels */ \"(ssr)/./node_modules/.pnpm/fuels@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_jsdom@26.1_b20937e3f604b46d6217e388b4bd6dee/node_modules/fuels/dist/index.mjs\");\n/* Autogenerated file. Do not edit manually. */\n\nvar AccessErrorInput;\n(function (AccessErrorInput) {\n    AccessErrorInput[\"NotOwner\"] = \"NotOwner\";\n})(AccessErrorInput || (AccessErrorInput = {}));\nvar AccessErrorOutput;\n(function (AccessErrorOutput) {\n    AccessErrorOutput[\"NotOwner\"] = \"NotOwner\";\n})(AccessErrorOutput || (AccessErrorOutput = {}));\nvar InitializationErrorInput;\n(function (InitializationErrorInput) {\n    InitializationErrorInput[\"CannotReinitialized\"] = \"CannotReinitialized\";\n})(InitializationErrorInput || (InitializationErrorInput = {}));\nvar InitializationErrorOutput;\n(function (InitializationErrorOutput) {\n    InitializationErrorOutput[\"CannotReinitialized\"] = \"CannotReinitialized\";\n})(InitializationErrorOutput || (InitializationErrorOutput = {}));\nvar ReentrancyErrorInput;\n(function (ReentrancyErrorInput) {\n    ReentrancyErrorInput[\"NonReentrant\"] = \"NonReentrant\";\n})(ReentrancyErrorInput || (ReentrancyErrorInput = {}));\nvar ReentrancyErrorOutput;\n(function (ReentrancyErrorOutput) {\n    ReentrancyErrorOutput[\"NonReentrant\"] = \"NonReentrant\";\n})(ReentrancyErrorOutput || (ReentrancyErrorOutput = {}));\nvar RoleAccessErrorInput;\n(function (RoleAccessErrorInput) {\n    RoleAccessErrorInput[\"NotSettlementVerifier\"] = \"NotSettlementVerifier\";\n    RoleAccessErrorInput[\"NotRefundEligible\"] = \"NotRefundEligible\";\n})(RoleAccessErrorInput || (RoleAccessErrorInput = {}));\nvar RoleAccessErrorOutput;\n(function (RoleAccessErrorOutput) {\n    RoleAccessErrorOutput[\"NotSettlementVerifier\"] = \"NotSettlementVerifier\";\n    RoleAccessErrorOutput[\"NotRefundEligible\"] = \"NotRefundEligible\";\n})(RoleAccessErrorOutput || (RoleAccessErrorOutput = {}));\nvar UniverseInput;\n(function (UniverseInput) {\n    UniverseInput[\"ETHEREUM\"] = \"ETHEREUM\";\n    UniverseInput[\"FUEL\"] = \"FUEL\";\n    UniverseInput[\"SOLANA\"] = \"SOLANA\";\n})(UniverseInput || (UniverseInput = {}));\nvar UniverseOutput;\n(function (UniverseOutput) {\n    UniverseOutput[\"ETHEREUM\"] = \"ETHEREUM\";\n    UniverseOutput[\"FUEL\"] = \"FUEL\";\n    UniverseOutput[\"SOLANA\"] = \"SOLANA\";\n})(UniverseOutput || (UniverseOutput = {}));\nconst abi = {\n    programType: \"contract\",\n    specVersion: \"1\",\n    encodingVersion: \"1\",\n    concreteTypes: [\n        {\n            type: \"()\",\n            concreteTypeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n        },\n        {\n            type: \"b256\",\n            concreteTypeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n        },\n        {\n            type: \"bool\",\n            concreteTypeId: \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n        },\n        {\n            type: \"enum errors::RoleAccessError\",\n            concreteTypeId: \"19d4ddc6bfa7239c40e8a40045394730ec18e202048f5b6404eb6b453bb70362\",\n            metadataTypeId: 2,\n        },\n        {\n            type: \"enum errors::VaultError\",\n            concreteTypeId: \"1174ac322e5f50aeb24de065558295d834bab4ad055eedc043379d91a8958834\",\n            metadataTypeId: 3,\n        },\n        {\n            type: \"enum standards::src5::AccessError\",\n            concreteTypeId: \"3f702ea3351c9c1ece2b84048006c8034a24cbc2bad2e740d0412b4172951d3d\",\n            metadataTypeId: 4,\n        },\n        {\n            type: \"enum standards::src5::State\",\n            concreteTypeId: \"192bc7098e2fe60635a9918afb563e4e5419d386da2bdbf0d716b4bc8549802c\",\n            metadataTypeId: 5,\n        },\n        {\n            type: \"enum std::identity::Identity\",\n            concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n            metadataTypeId: 6,\n        },\n        {\n            type: \"enum std::option::Option<bool>\",\n            concreteTypeId: \"160e7964babcf172e41aa29b138f9c2ccfc416ad2368dabdbdf877ec5de5503f\",\n            metadataTypeId: 7,\n            typeArguments: [\n                \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n            ],\n        },\n        {\n            type: \"enum std::option::Option<struct data_structures::Request>\",\n            concreteTypeId: \"2644cb541197d16874ed15ff9b4e74d0cb01be34849c3fb2d8356f064f7b097a\",\n            metadataTypeId: 7,\n            typeArguments: [\n                \"8f17cef827b9269639659b2f90120c93255dfedb8f58f7f69e7f2f2a9040077d\",\n            ],\n        },\n        {\n            type: \"enum sway_libs::ownership::errors::InitializationError\",\n            concreteTypeId: \"1dfe7feadc1d9667a4351761230f948744068a090fe91b1bc6763a90ed5d3893\",\n            metadataTypeId: 8,\n        },\n        {\n            type: \"enum sway_libs::reentrancy::errors::ReentrancyError\",\n            concreteTypeId: \"4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038\",\n            metadataTypeId: 9,\n        },\n        {\n            type: \"struct data_structures::Request\",\n            concreteTypeId: \"8f17cef827b9269639659b2f90120c93255dfedb8f58f7f69e7f2f2a9040077d\",\n            metadataTypeId: 14,\n        },\n        {\n            type: \"struct data_structures::SettleData\",\n            concreteTypeId: \"3f398311d910f45891ebe297c796818054c203bb631628fb87216c30add71db0\",\n            metadataTypeId: 15,\n        },\n        {\n            type: \"struct events::Deposit\",\n            concreteTypeId: \"a93fb3d7088884ac8084fc44b117612059604f3d2051bfb1e2612381c3cebda9\",\n            metadataTypeId: 17,\n        },\n        {\n            type: \"struct events::Fill\",\n            concreteTypeId: \"5d6f0cf603f336a11e076b3797ac315dc56056f8fd733e270621be9b42f539f8\",\n            metadataTypeId: 18,\n        },\n        {\n            type: \"struct events::RefundEligibleRoleSet\",\n            concreteTypeId: \"6bf7e984bfcd09a667a74ad394cc04dc36275dcc2610439ddd4eb06e138e0c99\",\n            metadataTypeId: 19,\n        },\n        {\n            type: \"struct events::RefundEligibleRoleTransfer\",\n            concreteTypeId: \"69cfe1483138c6201ab36e7cf5e0b54aa9ee674f19318d289e55961bfdcc4ebf\",\n            metadataTypeId: 20,\n        },\n        {\n            type: \"struct events::Settle\",\n            concreteTypeId: \"d33ab1a100ca3838867bc1b5bd324dbf7d8385b8c61195a20e87cf71d3d35d4f\",\n            metadataTypeId: 21,\n        },\n        {\n            type: \"struct events::SettlementVerifierRoleSet\",\n            concreteTypeId: \"cff3cdf4605fc7bc13714d42a1fa51fa0fd5743cc3ee2cebf512d2ee1f0541d0\",\n            metadataTypeId: 22,\n        },\n        {\n            type: \"struct events::SettlementVerifierRoleTransfer\",\n            concreteTypeId: \"57e2d2b7e4cba1e211aa57fd003552898667215676b5c12e9018c643d3177b08\",\n            metadataTypeId: 23,\n        },\n        {\n            type: \"struct events::Withdraw\",\n            concreteTypeId: \"2dbac8ab9d6c521bc756385f712aadb559780f80981fd7f47f28ba0bf5aab3de\",\n            metadataTypeId: 24,\n        },\n        {\n            type: \"struct std::asset_id::AssetId\",\n            concreteTypeId: \"c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974\",\n            metadataTypeId: 26,\n        },\n        {\n            type: \"struct std::b512::B512\",\n            concreteTypeId: \"745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322\",\n            metadataTypeId: 27,\n        },\n        {\n            type: \"struct sway_libs::ownership::events::OwnershipRenounced\",\n            concreteTypeId: \"43c4fa7b3297401afbf300127e59ea913e5c8f0c7ae69abbec789ab0bb872bed\",\n            metadataTypeId: 31,\n        },\n        {\n            type: \"struct sway_libs::ownership::events::OwnershipSet\",\n            concreteTypeId: \"e1ef35033ea9d2956f17c3292dea4a46ce7d61fdf37bbebe03b7b965073f43b5\",\n            metadataTypeId: 32,\n        },\n        {\n            type: \"struct sway_libs::ownership::events::OwnershipTransferred\",\n            concreteTypeId: \"b3fffbcb3158d7c010c31b194b60fb7857adb4ad61bdcf4b8b42958951d9f308\",\n            metadataTypeId: 33,\n        },\n        {\n            type: \"u256\",\n            concreteTypeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n        },\n        {\n            type: \"u64\",\n            concreteTypeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n        },\n    ],\n    metadataTypes: [\n        {\n            type: \"[_; 2]\",\n            metadataTypeId: 0,\n            components: [\n                {\n                    name: \"__array_element\",\n                    typeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n                },\n            ],\n        },\n        {\n            type: \"enum data_structures::Universe\",\n            metadataTypeId: 1,\n            components: [\n                {\n                    name: \"ETHEREUM\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"FUEL\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"SOLANA\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n            ],\n        },\n        {\n            type: \"enum errors::RoleAccessError\",\n            metadataTypeId: 2,\n            components: [\n                {\n                    name: \"NotSettlementVerifier\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"NotRefundEligible\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n            ],\n        },\n        {\n            type: \"enum errors::VaultError\",\n            metadataTypeId: 3,\n            components: [\n                {\n                    name: \"AssetMismatch\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"ChainIdMismatch\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"DestinationPairsNotFilled\",\n                    typeId: 30,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: 12,\n                        },\n                    ],\n                },\n                {\n                    name: \"InvalidFillOutputs\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"InvalidSignature\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"NonceAlreadyUsed\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"RequestExpired\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"RequestUnverified\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"SolversAndAmountsLengthMismatch\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"SolversAndAssetsLengthMismatch\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"ValueMismatch\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"AddressNotFound\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n            ],\n        },\n        {\n            type: \"enum standards::src5::AccessError\",\n            metadataTypeId: 4,\n            components: [\n                {\n                    name: \"NotOwner\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n            ],\n        },\n        {\n            type: \"enum standards::src5::State\",\n            metadataTypeId: 5,\n            components: [\n                {\n                    name: \"Uninitialized\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"Initialized\",\n                    typeId: 6,\n                },\n                {\n                    name: \"Revoked\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n            ],\n        },\n        {\n            type: \"enum std::identity::Identity\",\n            metadataTypeId: 6,\n            components: [\n                {\n                    name: \"Address\",\n                    typeId: 25,\n                },\n                {\n                    name: \"ContractId\",\n                    typeId: 28,\n                },\n            ],\n        },\n        {\n            type: \"enum std::option::Option\",\n            metadataTypeId: 7,\n            components: [\n                {\n                    name: \"None\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n                {\n                    name: \"Some\",\n                    typeId: 10,\n                },\n            ],\n            typeParameters: [10],\n        },\n        {\n            type: \"enum sway_libs::ownership::errors::InitializationError\",\n            metadataTypeId: 8,\n            components: [\n                {\n                    name: \"CannotReinitialized\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n            ],\n        },\n        {\n            type: \"enum sway_libs::reentrancy::errors::ReentrancyError\",\n            metadataTypeId: 9,\n            components: [\n                {\n                    name: \"NonReentrant\",\n                    typeId: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n                },\n            ],\n        },\n        {\n            type: \"generic T\",\n            metadataTypeId: 10,\n        },\n        {\n            type: \"raw untyped ptr\",\n            metadataTypeId: 11,\n        },\n        {\n            type: \"struct data_structures::DestinationPair\",\n            metadataTypeId: 12,\n            components: [\n                {\n                    name: \"asset_id\",\n                    typeId: 26,\n                },\n                {\n                    name: \"value\",\n                    typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n            ],\n        },\n        {\n            type: \"struct data_structures::Party\",\n            metadataTypeId: 13,\n            components: [\n                {\n                    name: \"universe\",\n                    typeId: 1,\n                },\n                {\n                    name: \"address\",\n                    typeId: 25,\n                },\n            ],\n        },\n        {\n            type: \"struct data_structures::Request\",\n            metadataTypeId: 14,\n            components: [\n                {\n                    name: \"sources\",\n                    typeId: 30,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: 16,\n                        },\n                    ],\n                },\n                {\n                    name: \"destination_universe\",\n                    typeId: 1,\n                },\n                {\n                    name: \"destination_chain_id\",\n                    typeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n                {\n                    name: \"destinations\",\n                    typeId: 30,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: 12,\n                        },\n                    ],\n                },\n                {\n                    name: \"nonce\",\n                    typeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n                {\n                    name: \"expiry\",\n                    typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n                {\n                    name: \"parties\",\n                    typeId: 30,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: 13,\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            type: \"struct data_structures::SettleData\",\n            metadataTypeId: 15,\n            components: [\n                {\n                    name: \"universe\",\n                    typeId: 1,\n                },\n                {\n                    name: \"chain_id\",\n                    typeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n                {\n                    name: \"solvers\",\n                    typeId: 30,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: 25,\n                        },\n                    ],\n                },\n                {\n                    name: \"assets\",\n                    typeId: 30,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: 26,\n                        },\n                    ],\n                },\n                {\n                    name: \"amounts\",\n                    typeId: 30,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                        },\n                    ],\n                },\n                {\n                    name: \"nonce\",\n                    typeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n            ],\n        },\n        {\n            type: \"struct data_structures::SourcePair\",\n            metadataTypeId: 16,\n            components: [\n                {\n                    name: \"universe\",\n                    typeId: 1,\n                },\n                {\n                    name: \"chain_id\",\n                    typeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n                {\n                    name: \"asset_id\",\n                    typeId: 26,\n                },\n                {\n                    name: \"value\",\n                    typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n            ],\n        },\n        {\n            type: \"struct events::Deposit\",\n            metadataTypeId: 17,\n            components: [\n                {\n                    name: \"from\",\n                    typeId: 25,\n                },\n                {\n                    name: \"signed_message_hash\",\n                    typeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n                },\n            ],\n        },\n        {\n            type: \"struct events::Fill\",\n            metadataTypeId: 18,\n            components: [\n                {\n                    name: \"from\",\n                    typeId: 25,\n                },\n                {\n                    name: \"signed_message_hash\",\n                    typeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n                },\n                {\n                    name: \"solver\",\n                    typeId: 25,\n                },\n            ],\n        },\n        {\n            type: \"struct events::RefundEligibleRoleSet\",\n            metadataTypeId: 19,\n            components: [\n                {\n                    name: \"identity\",\n                    typeId: 6,\n                },\n                {\n                    name: \"has_role\",\n                    typeId: \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n                },\n            ],\n        },\n        {\n            type: \"struct events::RefundEligibleRoleTransfer\",\n            metadataTypeId: 20,\n            components: [\n                {\n                    name: \"old_identity\",\n                    typeId: 6,\n                },\n                {\n                    name: \"new_identity\",\n                    typeId: 6,\n                },\n            ],\n        },\n        {\n            type: \"struct events::Settle\",\n            metadataTypeId: 21,\n            components: [\n                {\n                    name: \"solver\",\n                    typeId: 25,\n                },\n                {\n                    name: \"asset_id\",\n                    typeId: 26,\n                },\n                {\n                    name: \"amount\",\n                    typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n                {\n                    name: \"nonce\",\n                    typeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n            ],\n        },\n        {\n            type: \"struct events::SettlementVerifierRoleSet\",\n            metadataTypeId: 22,\n            components: [\n                {\n                    name: \"identity\",\n                    typeId: 6,\n                },\n                {\n                    name: \"has_role\",\n                    typeId: \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n                },\n            ],\n        },\n        {\n            type: \"struct events::SettlementVerifierRoleTransfer\",\n            metadataTypeId: 23,\n            components: [\n                {\n                    name: \"old_identity\",\n                    typeId: 6,\n                },\n                {\n                    name: \"new_identity\",\n                    typeId: 6,\n                },\n            ],\n        },\n        {\n            type: \"struct events::Withdraw\",\n            metadataTypeId: 24,\n            components: [\n                {\n                    name: \"to\",\n                    typeId: 6,\n                },\n                {\n                    name: \"asset_id\",\n                    typeId: 26,\n                },\n                {\n                    name: \"amount\",\n                    typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n            ],\n        },\n        {\n            type: \"struct std::address::Address\",\n            metadataTypeId: 25,\n            components: [\n                {\n                    name: \"bits\",\n                    typeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n                },\n            ],\n        },\n        {\n            type: \"struct std::asset_id::AssetId\",\n            metadataTypeId: 26,\n            components: [\n                {\n                    name: \"bits\",\n                    typeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n                },\n            ],\n        },\n        {\n            type: \"struct std::b512::B512\",\n            metadataTypeId: 27,\n            components: [\n                {\n                    name: \"bits\",\n                    typeId: 0,\n                },\n            ],\n        },\n        {\n            type: \"struct std::contract_id::ContractId\",\n            metadataTypeId: 28,\n            components: [\n                {\n                    name: \"bits\",\n                    typeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n                },\n            ],\n        },\n        {\n            type: \"struct std::vec::RawVec\",\n            metadataTypeId: 29,\n            components: [\n                {\n                    name: \"ptr\",\n                    typeId: 11,\n                },\n                {\n                    name: \"cap\",\n                    typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n            ],\n            typeParameters: [10],\n        },\n        {\n            type: \"struct std::vec::Vec\",\n            metadataTypeId: 30,\n            components: [\n                {\n                    name: \"buf\",\n                    typeId: 29,\n                    typeArguments: [\n                        {\n                            name: \"\",\n                            typeId: 10,\n                        },\n                    ],\n                },\n                {\n                    name: \"len\",\n                    typeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n            ],\n            typeParameters: [10],\n        },\n        {\n            type: \"struct sway_libs::ownership::events::OwnershipRenounced\",\n            metadataTypeId: 31,\n            components: [\n                {\n                    name: \"previous_owner\",\n                    typeId: 6,\n                },\n            ],\n        },\n        {\n            type: \"struct sway_libs::ownership::events::OwnershipSet\",\n            metadataTypeId: 32,\n            components: [\n                {\n                    name: \"new_owner\",\n                    typeId: 6,\n                },\n            ],\n        },\n        {\n            type: \"struct sway_libs::ownership::events::OwnershipTransferred\",\n            metadataTypeId: 33,\n            components: [\n                {\n                    name: \"new_owner\",\n                    typeId: 6,\n                },\n                {\n                    name: \"previous_owner\",\n                    typeId: 6,\n                },\n            ],\n        },\n    ],\n    functions: [\n        {\n            inputs: [],\n            name: \"owner\",\n            output: \"192bc7098e2fe60635a9918afb563e4e5419d386da2bdbf0d716b4bc8549802c\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Returns the owner.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Return Values\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * [State] - Represents the state of ownership for this contract.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"request\",\n                    concreteTypeId: \"8f17cef827b9269639659b2f90120c93255dfedb8f58f7f69e7f2f2a9040077d\",\n                },\n                {\n                    name: \"signature\",\n                    concreteTypeId: \"745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322\",\n                },\n                {\n                    name: \"chain_index\",\n                    concreteTypeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n            ],\n            name: \"deposit\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Takes a deposit for the given request.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `request`: [Request] - The user's request.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `signature`: [B512] - The signature over the `request`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `from`: [Address] - The signer of the `request`.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `chain_index`: [u64] - The index of the source data.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" This method verifies the given request against the given signature.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the `request` chain ID doesn't match `FUEL_IGNITION_CHAIN_ID`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the `request` has expired.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the asset deposited doesn't match the asset in the `request`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the amount of asset deposited doesn't match the amount of asset in the `request`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the nonce of the `request` is already used.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the `request` could not be verified.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `3`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Writes: `4`\"],\n                },\n                {\n                    name: \"payable\",\n                    arguments: [],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"nonce\",\n                    concreteTypeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n            ],\n            name: \"deposit_nonce\",\n            output: \"160e7964babcf172e41aa29b138f9c2ccfc416ad2368dabdbdf877ec5de5503f\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Gets a bool describing whether a given nonce has been used in a deposit\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `nonce`: [u64] - The nonce of a deposit.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Returns\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * [Option<bool>] - Whether a given nonce has been used in a deposit.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"request\",\n                    concreteTypeId: \"8f17cef827b9269639659b2f90120c93255dfedb8f58f7f69e7f2f2a9040077d\",\n                },\n                {\n                    name: \"signature\",\n                    concreteTypeId: \"745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322\",\n                },\n            ],\n            name: \"fill\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Verifies that a request has been filled.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" The solver's transaction, that includes calling thing method, must contain outputs that fill the `request` destination pairs.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `request`: [Request] - The user's request.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `signature`: [B512] - The signature over the `request`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `from`: [Address] - The signer of the `request`.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the `request` chain ID doesn't match `FUEL_IGNITION_CHAIN_ID`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the `request` has expired.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the there aren't enough transaction outputs to satisfy the `request`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When a transaction output doesn't match the corresponding destination pair or receiver.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the nonce of the `request` is already used.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the `request` could not be verified.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `3`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Writes: `4`\"],\n                },\n                {\n                    name: \"payable\",\n                    arguments: [],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"nonce\",\n                    concreteTypeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n            ],\n            name: \"fill_nonce\",\n            output: \"160e7964babcf172e41aa29b138f9c2ccfc416ad2368dabdbdf877ec5de5503f\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Gets a bool describing whether a given nonce has been used in a fill\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `nonce`: [u64] - The nonce of a fill.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Returns\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * [Option<bool>] - Whether a given nonce has been used in a fill.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"request\",\n                    concreteTypeId: \"8f17cef827b9269639659b2f90120c93255dfedb8f58f7f69e7f2f2a9040077d\",\n                },\n            ],\n            name: \"hash_request\",\n            output: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n            attributes: null,\n        },\n        {\n            inputs: [\n                {\n                    name: \"settle_data\",\n                    concreteTypeId: \"3f398311d910f45891ebe297c796818054c203bb631628fb87216c30add71db0\",\n                },\n            ],\n            name: \"hash_settle_data\",\n            output: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n            attributes: null,\n        },\n        {\n            inputs: [],\n            name: \"initialize_vault\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Initializes the vault, setting privileged roles.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" This method can only be called once.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When ownership has been set before.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Writes: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"identity\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n            ],\n            name: \"refund_eligible_role\",\n            output: \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Returns true if the given `identity` has the `refund eligible` role.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n        {\n            inputs: [],\n            name: \"renounce_ownership\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Revokes ownership of the current owner and disallows any new owners.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Only the contract `owner` can call this method.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the sender is not the owner.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Writes: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"signed_message_hash\",\n                    concreteTypeId: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n                },\n            ],\n            name: \"requests\",\n            output: \"2644cb541197d16874ed15ff9b4e74d0cb01be34849c3fb2d8356f064f7b097a\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Gets a [Request] hash from it's associated `signed_message_hash`\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `signed_message_hash`: [b256] - The hash of the EIP-191 signature of a hashed request.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Returns\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * [Option<Request>] - The request.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `3`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"identity\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n                {\n                    name: \"has_role\",\n                    concreteTypeId: \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n                },\n            ],\n            name: \"set_refund_eligible_role\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Allows the `owner` to assign or revoke the `refund eligible` role.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Only the contract `owner` can call this method.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `identity`: [Identity] - The `Identity` who's status as a `refund eligible` will be updated.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `has_role`: [bool] - The status to be set.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Write: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"identity\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n                {\n                    name: \"has_role\",\n                    concreteTypeId: \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n                },\n            ],\n            name: \"set_settlement_verifier_role\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Allows the `owner` to assign or revoke the `settlement verifier` role.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Only the contract `owner` can call this method.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `identity`: [Identity] - The `Identity` who's status as a `settlement verifier` will be updated.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `has_role`: [bool] - The status to be set.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Write: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"settle_data\",\n                    concreteTypeId: \"3f398311d910f45891ebe297c796818054c203bb631628fb87216c30add71db0\",\n                },\n                {\n                    name: \"signature\",\n                    concreteTypeId: \"745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322\",\n                },\n            ],\n            name: \"settle\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Pay solvers for verified work.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Anyone can call this method as it checks if the `settle_data` was signed by the contract owner,\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" if so the `settle_data` is considered valid.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `settle_data`: [SettleData] - The data of each transfer to a solver.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `signature`: [B512] - The signature used to verify that the contract owner signed the given `settle_data`.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When reentrency occurs.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the number of solvers and assets in the `settle_data` don't match.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the number of solvers and amounts in the `settle_data` don't match.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the recovered address doesn't match the contract owner's address.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * When the nonce of the `settle_data` is already used.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Writes: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"nonce\",\n                    concreteTypeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n                },\n            ],\n            name: \"settle_nonce\",\n            output: \"160e7964babcf172e41aa29b138f9c2ccfc416ad2368dabdbdf877ec5de5503f\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Gets a bool describing whether a given nonce has been used in a settlement\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `nonce`: [u64] - The nonce of a settlement.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Returns\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * [Option<bool>] - Whether a given nonce has been used in a settlement.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"identity\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n            ],\n            name: \"settlement_verifier_role\",\n            output: \"b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Returns true if the given `identity` has the `settlement_verifier` role.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"new_owner\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n            ],\n            name: \"transfer_ownership\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Transfers ownership to the passed identity.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Only the contract `owner` can call this method.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `new_owner`: [Identity] - The `Identity` that will be the next owner.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the sender is not the owner.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Write: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"new_identity\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n            ],\n            name: \"transfer_refund_eligible_role\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Allows a `refund eligible` to transfer their role.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Only a `refund eligible` can call this method.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `new_identity`: [Identity] - The `Identity` who will receive the role.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the sender is not a `refund eligible`.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Write: `2`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"new_identity\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n            ],\n            name: \"transfer_settlement_verifier_role\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" Allows a `settlement verifier` to transfer their role.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Only a `settlement verifier` can call this method.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\n                        \" * `new_identity`: [Identity] - The `Identity` who will receive the role.\",\n                    ],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When the sender is not a `settlement verifier`.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Write: `2`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\", \"write\"],\n                },\n            ],\n        },\n        {\n            inputs: [\n                {\n                    name: \"request\",\n                    concreteTypeId: \"8f17cef827b9269639659b2f90120c93255dfedb8f58f7f69e7f2f2a9040077d\",\n                },\n                {\n                    name: \"signature\",\n                    concreteTypeId: \"745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322\",\n                },\n            ],\n            name: \"verify_request_signature\",\n            output: \"7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b\",\n            attributes: null,\n        },\n        {\n            inputs: [\n                {\n                    name: \"to\",\n                    concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n                },\n                {\n                    name: \"asset_id\",\n                    concreteTypeId: \"c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974\",\n                },\n                {\n                    name: \"amount\",\n                    concreteTypeId: \"1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0\",\n                },\n            ],\n            name: \"withdraw\",\n            output: \"2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d\",\n            attributes: [\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Withdraw assets from the contract.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Additional Information\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" Only callable by the contract owner.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Arguments\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `to`: [Identity] - The recipient of the withdrawal.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `asset_id`: [AssetId] - The asset to withdraw.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * `amount`: [u64] - The amount withdraw.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Reverts\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When not called by the owner.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * When reentrency occurs.\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" # Number of Storage Accesses\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\"\"],\n                },\n                {\n                    name: \"doc-comment\",\n                    arguments: [\" * Reads: `1`\"],\n                },\n                {\n                    name: \"storage\",\n                    arguments: [\"read\"],\n                },\n            ],\n        },\n    ],\n    loggedTypes: [\n        {\n            logId: \"1257819527469551790\",\n            concreteTypeId: \"1174ac322e5f50aeb24de065558295d834bab4ad055eedc043379d91a8958834\",\n        },\n        {\n            logId: \"12195664052085097644\",\n            concreteTypeId: \"a93fb3d7088884ac8084fc44b117612059604f3d2051bfb1e2612381c3cebda9\",\n        },\n        {\n            logId: \"6732614218709939873\",\n            concreteTypeId: \"5d6f0cf603f336a11e076b3797ac315dc56056f8fd733e270621be9b42f539f8\",\n        },\n        {\n            logId: \"2161305517876418151\",\n            concreteTypeId: \"1dfe7feadc1d9667a4351761230f948744068a090fe91b1bc6763a90ed5d3893\",\n        },\n        {\n            logId: \"16280289466020123285\",\n            concreteTypeId: \"e1ef35033ea9d2956f17c3292dea4a46ce7d61fdf37bbebe03b7b965073f43b5\",\n        },\n        {\n            logId: \"4571204900286667806\",\n            concreteTypeId: \"3f702ea3351c9c1ece2b84048006c8034a24cbc2bad2e740d0412b4172951d3d\",\n        },\n        {\n            logId: \"4883303303013154842\",\n            concreteTypeId: \"43c4fa7b3297401afbf300127e59ea913e5c8f0c7ae69abbec789ab0bb872bed\",\n        },\n        {\n            logId: \"7779943637668661670\",\n            concreteTypeId: \"6bf7e984bfcd09a667a74ad394cc04dc36275dcc2610439ddd4eb06e138e0c99\",\n        },\n        {\n            logId: \"14984546834664376252\",\n            concreteTypeId: \"cff3cdf4605fc7bc13714d42a1fa51fa0fd5743cc3ee2cebf512d2ee1f0541d0\",\n        },\n        {\n            logId: \"5557842539076482339\",\n            concreteTypeId: \"4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038\",\n        },\n        {\n            logId: \"15220673195713116216\",\n            concreteTypeId: \"d33ab1a100ca3838867bc1b5bd324dbf7d8385b8c61195a20e87cf71d3d35d4f\",\n        },\n        {\n            logId: \"12970362301975156672\",\n            concreteTypeId: \"b3fffbcb3158d7c010c31b194b60fb7857adb4ad61bdcf4b8b42958951d9f308\",\n        },\n        {\n            logId: \"1861356391699522460\",\n            concreteTypeId: \"19d4ddc6bfa7239c40e8a40045394730ec18e202048f5b6404eb6b453bb70362\",\n        },\n        {\n            logId: \"7624560394341238304\",\n            concreteTypeId: \"69cfe1483138c6201ab36e7cf5e0b54aa9ee674f19318d289e55961bfdcc4ebf\",\n        },\n        {\n            logId: \"6332855713295737314\",\n            concreteTypeId: \"57e2d2b7e4cba1e211aa57fd003552898667215676b5c12e9018c643d3177b08\",\n        },\n        {\n            logId: \"3295166716781023771\",\n            concreteTypeId: \"2dbac8ab9d6c521bc756385f712aadb559780f80981fd7f47f28ba0bf5aab3de\",\n        },\n    ],\n    messagesTypes: [],\n    configurables: [\n        {\n            name: \"INITIAL_OWNER\",\n            concreteTypeId: \"ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335\",\n            offset: 64088,\n        },\n        {\n            name: \"FUEL_IGNITION_CHAIN_ID\",\n            concreteTypeId: \"1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e\",\n            offset: 64056,\n        },\n    ],\n};\nconst storageSlots = [];\nclass ArcanaVaultInterface extends fuels__WEBPACK_IMPORTED_MODULE_0__.Interface {\n    constructor() {\n        super(abi);\n    }\n}\nclass ArcanaVault extends fuels__WEBPACK_IMPORTED_MODULE_0__.Contract {\n    static abi = abi;\n    static storageSlots = storageSlots;\n    constructor(id, accountOrProvider) {\n        super(id, abi, accountOrProvider);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVault.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVaultFactory.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVaultFactory.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArcanaVaultFactory: () => (/* binding */ ArcanaVaultFactory)\n/* harmony export */ });\n/* harmony import */ var fuels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fuels */ \"(ssr)/./node_modules/.pnpm/fuels@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_jsdom@26.1_b20937e3f604b46d6217e388b4bd6dee/node_modules/fuels/dist/index.mjs\");\n/* harmony import */ var _ArcanaVault__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ArcanaVault */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVault.js\");\n/* Autogenerated file. Do not edit manually. */\n\n\nconst bytecode = (0,fuels__WEBPACK_IMPORTED_MODULE_0__.decompressBytecode)(\"\");\nclass ArcanaVaultFactory extends fuels__WEBPACK_IMPORTED_MODULE_0__.ContractFactory {\n    static bytecode = bytecode;\n    constructor(accountOrProvider) {\n        super(bytecode, _ArcanaVault__WEBPACK_IMPORTED_MODULE_1__.ArcanaVault.abi, accountOrProvider, _ArcanaVault__WEBPACK_IMPORTED_MODULE_1__.ArcanaVault.storageSlots);\n    }\n    static deploy(wallet, options = {}) {\n        const factory = new ArcanaVaultFactory(wallet);\n        return factory.deploy(options);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVaultFactory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/index.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/index.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessErrorInput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.AccessErrorInput),\n/* harmony export */   AccessErrorOutput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.AccessErrorOutput),\n/* harmony export */   ArcanaVault: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.ArcanaVault),\n/* harmony export */   ArcanaVaultFactory: () => (/* reexport safe */ _ArcanaVaultFactory__WEBPACK_IMPORTED_MODULE_1__.ArcanaVaultFactory),\n/* harmony export */   ArcanaVaultInterface: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.ArcanaVaultInterface),\n/* harmony export */   InitializationErrorInput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.InitializationErrorInput),\n/* harmony export */   InitializationErrorOutput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.InitializationErrorOutput),\n/* harmony export */   ReentrancyErrorInput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.ReentrancyErrorInput),\n/* harmony export */   ReentrancyErrorOutput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.ReentrancyErrorOutput),\n/* harmony export */   RoleAccessErrorInput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.RoleAccessErrorInput),\n/* harmony export */   RoleAccessErrorOutput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.RoleAccessErrorOutput),\n/* harmony export */   UniverseInput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.UniverseInput),\n/* harmony export */   UniverseOutput: () => (/* reexport safe */ _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__.UniverseOutput)\n/* harmony export */ });\n/* harmony import */ var _ArcanaVault__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ArcanaVault */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVault.js\");\n/* harmony import */ var _ArcanaVaultFactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ArcanaVaultFactory */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/ArcanaVaultFactory.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9mdWVsY29udHJhY3RzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNPIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AYXJjYW5hK2NhLWNvbW1vbkAxLjAuMS1hbHBoYS42X0Bjb3NtanMrcHJvdG8tc2lnbmluZ0AwLjM0LjBfQGNvc21qcytzdGFyZ2F0ZUAwLjM0LjBfYnVfZjIyM2NjMGZmOWY4NjQ0NGRlMDg3N2U1OWE3OGU3Y2Evbm9kZV9tb2R1bGVzL0BhcmNhbmEvY2EtY29tbW9uL2Rpc3QvZXNtL2Z1ZWxjb250cmFjdHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9BcmNhbmFWYXVsdCc7XG5leHBvcnQgKiBmcm9tICcuL0FyY2FuYVZhdWx0RmFjdG9yeSc7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/index.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/index.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminFeeRecipient: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.AdminFeeRecipient),\n/* harmony export */   ArcanaVault: () => (/* reexport safe */ _fuelcontracts__WEBPACK_IMPORTED_MODULE_0__.ArcanaVault),\n/* harmony export */   ArcanaVaultFactory: () => (/* reexport safe */ _fuelcontracts__WEBPACK_IMPORTED_MODULE_0__.ArcanaVaultFactory),\n/* harmony export */   AutoSelectionError: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.AutoSelectionError),\n/* harmony export */   BebopAggregator: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.BebopAggregator),\n/* harmony export */   ChainIDKeyedMap: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.ChainIDKeyedMap),\n/* harmony export */   Chaindata: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.Chaindata),\n/* harmony export */   ChaindataMap: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.ChaindataMap),\n/* harmony export */   CollectionFeeRequirement: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.CollectionFeeRequirement),\n/* harmony export */   Currency: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.Currency),\n/* harmony export */   CurrencyID: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.CurrencyID),\n/* harmony export */   DepositVEPacket: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.DepositVEPacket),\n/* harmony export */   ERC20ABI: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.ERC20ABI),\n/* harmony export */   EVMVaultABI: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.EVMVaultABI),\n/* harmony export */   Environment: () => (/* reexport safe */ _vaultcontracts__WEBPACK_IMPORTED_MODULE_4__.Environment),\n/* harmony export */   FillVEPacket: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.FillVEPacket),\n/* harmony export */   FixedFeeTuple: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.FixedFeeTuple),\n/* harmony export */   GrpcWebError: () => (/* reexport safe */ _proto_grpc__WEBPACK_IMPORTED_MODULE_2__.GrpcWebError),\n/* harmony export */   GrpcWebImpl: () => (/* reexport safe */ _proto_grpc__WEBPACK_IMPORTED_MODULE_2__.GrpcWebImpl),\n/* harmony export */   LiFiAggregator: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.LiFiAggregator),\n/* harmony export */   MsgCreateProtocolFees: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgCreateProtocolFees),\n/* harmony export */   MsgCreateProtocolFeesResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgCreateProtocolFeesResponse),\n/* harmony export */   MsgCreateRequestForFunds: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgCreateRequestForFunds),\n/* harmony export */   MsgCreateRequestForFundsResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgCreateRequestForFundsResponse),\n/* harmony export */   MsgCreateSolverData: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgCreateSolverData),\n/* harmony export */   MsgCreateSolverDataResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgCreateSolverDataResponse),\n/* harmony export */   MsgDoubleCheckTx: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgDoubleCheckTx),\n/* harmony export */   MsgRefundReq: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgRefundReq),\n/* harmony export */   MsgRefundReqResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgRefundReqResponse),\n/* harmony export */   MsgUpdateProtocolFees: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgUpdateProtocolFees),\n/* harmony export */   MsgUpdateProtocolFeesResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgUpdateProtocolFeesResponse),\n/* harmony export */   MsgUpdateSolverData: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgUpdateSolverData),\n/* harmony export */   MsgUpdateSolverDataResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.MsgUpdateSolverDataResponse),\n/* harmony export */   OmniversalChainID: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.OmniversalChainID),\n/* harmony export */   OmniversalRFF: () => (/* reexport safe */ _rff_rff__WEBPACK_IMPORTED_MODULE_8__.OmniversalRFF),\n/* harmony export */   PageRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.PageRequest),\n/* harmony export */   PageResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.PageResponse),\n/* harmony export */   PermitCreationError: () => (/* reexport safe */ _permitutils__WEBPACK_IMPORTED_MODULE_5__.PermitCreationError),\n/* harmony export */   PermitVariant: () => (/* reexport safe */ _permitutils__WEBPACK_IMPORTED_MODULE_5__.PermitVariant),\n/* harmony export */   PriceOracleData: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.PriceOracleData),\n/* harmony export */   PriceOracleDatum: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.PriceOracleDatum),\n/* harmony export */   ProtocolFees: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.ProtocolFees),\n/* harmony export */   QueryAllRequestForFundsRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryAllRequestForFundsRequest),\n/* harmony export */   QueryAllRequestForFundsResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryAllRequestForFundsResponse),\n/* harmony export */   QueryAllSettlementRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryAllSettlementRequest),\n/* harmony export */   QueryAllSettlementResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryAllSettlementResponse),\n/* harmony export */   QueryAllSolverDataRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryAllSolverDataRequest),\n/* harmony export */   QueryAllSolverDataResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryAllSolverDataResponse),\n/* harmony export */   QueryClientImpl: () => (/* reexport safe */ _proto_grpc__WEBPACK_IMPORTED_MODULE_2__.QueryClientImpl),\n/* harmony export */   QueryGetPriceOracleDataRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetPriceOracleDataRequest),\n/* harmony export */   QueryGetPriceOracleDataResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetPriceOracleDataResponse),\n/* harmony export */   QueryGetProtocolFeesRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetProtocolFeesRequest),\n/* harmony export */   QueryGetProtocolFeesResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetProtocolFeesResponse),\n/* harmony export */   QueryGetRequestForFundsRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetRequestForFundsRequest),\n/* harmony export */   QueryGetRequestForFundsResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetRequestForFundsResponse),\n/* harmony export */   QueryGetSettlementRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetSettlementRequest),\n/* harmony export */   QueryGetSettlementResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetSettlementResponse),\n/* harmony export */   QueryGetSolverDataRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetSolverDataRequest),\n/* harmony export */   QueryGetSolverDataResponse: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryGetSolverDataResponse),\n/* harmony export */   QueryRequestForFundsByAddressRequest: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.QueryRequestForFundsByAddressRequest),\n/* harmony export */   QuoteType: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.QuoteType),\n/* harmony export */   RFFDestinationPair: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.RFFDestinationPair),\n/* harmony export */   RFFSourcePair: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.RFFSourcePair),\n/* harmony export */   RFFSourceState: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.RFFSourceState),\n/* harmony export */   RPCURLMap: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.RPCURLMap),\n/* harmony export */   Registry: () => (/* reexport safe */ _cosmos__WEBPACK_IMPORTED_MODULE_7__.Registry),\n/* harmony export */   RequestForFunds: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.RequestForFunds),\n/* harmony export */   RouteFee: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.RouteFee),\n/* harmony export */   Settlement: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.Settlement),\n/* harmony export */   SignatureDatum: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.SignatureDatum),\n/* harmony export */   SolverAddress: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.SolverAddress),\n/* harmony export */   SolverData: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.SolverData),\n/* harmony export */   Universe: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe),\n/* harmony export */   YieldYakAggregator: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.YieldYakAggregator),\n/* harmony export */   aggregateAggregators: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.aggregateAggregators),\n/* harmony export */   autoSelectSources: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.autoSelectSources),\n/* harmony export */   collectionFeeRequirementFromJSON: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.collectionFeeRequirementFromJSON),\n/* harmony export */   collectionFeeRequirementToJSON: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.collectionFeeRequirementToJSON),\n/* harmony export */   convertBigIntToDecimal: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.convertBigIntToDecimal),\n/* harmony export */   convertDecimalToBigInt: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.convertDecimalToBigInt),\n/* harmony export */   convertToBufferIfNecessary: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.convertToBufferIfNecessary),\n/* harmony export */   createCosmosClient: () => (/* reexport safe */ _cosmos__WEBPACK_IMPORTED_MODULE_7__.createCosmosClient),\n/* harmony export */   createCosmosWallet: () => (/* reexport safe */ _cosmos__WEBPACK_IMPORTED_MODULE_7__.createCosmosWallet),\n/* harmony export */   createEVMVaultContract: () => (/* reexport safe */ _vaultcontracts__WEBPACK_IMPORTED_MODULE_4__.createEVMVaultContract),\n/* harmony export */   destinationSwapWithExactIn: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.destinationSwapWithExactIn),\n/* harmony export */   determineDestinationSwaps: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.determineDestinationSwaps),\n/* harmony export */   encodeChainID36: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.encodeChainID36),\n/* harmony export */   ezPadTo32Hex: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.ezPadTo32Hex),\n/* harmony export */   getBalances: () => (/* reexport safe */ _balances_ub_api__WEBPACK_IMPORTED_MODULE_10__.getBalances),\n/* harmony export */   getVaultContractMap: () => (/* reexport safe */ _vaultcontracts__WEBPACK_IMPORTED_MODULE_4__.getVaultContractMap),\n/* harmony export */   liquidateInputHoldings: () => (/* reexport safe */ _xcs__WEBPACK_IMPORTED_MODULE_6__.liquidateInputHoldings),\n/* harmony export */   maxByBigInt: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.maxByBigInt),\n/* harmony export */   minByByBigInt: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.minByByBigInt),\n/* harmony export */   msgpackableAxios: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_9__.msgpackableAxios),\n/* harmony export */   protobufPackage: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.protobufPackage),\n/* harmony export */   rFFSourceStateFromJSON: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.rFFSourceStateFromJSON),\n/* harmony export */   rFFSourceStateToJSON: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.rFFSourceStateToJSON),\n/* harmony export */   signPermitForAddressAndValue: () => (/* reexport safe */ _permitutils__WEBPACK_IMPORTED_MODULE_5__.signPermitForAddressAndValue),\n/* harmony export */   universeFromJSON: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.universeFromJSON),\n/* harmony export */   universeToJSON: () => (/* reexport safe */ _proto_definition__WEBPACK_IMPORTED_MODULE_1__.universeToJSON),\n/* harmony export */   zeroExtendBufToGivenSize: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_3__.zeroExtendBufToGivenSize)\n/* harmony export */ });\n/* harmony import */ var _fuelcontracts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fuelcontracts */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/index.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n/* harmony import */ var _proto_grpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./proto/grpc */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/grpc.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n/* harmony import */ var _vaultcontracts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vaultcontracts */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/index.js\");\n/* harmony import */ var _permitutils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./permitutils */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/permitutils/index.js\");\n/* harmony import */ var _xcs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./xcs */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/index.js\");\n/* harmony import */ var _cosmos__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cosmos */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/cosmos/index.js\");\n/* harmony import */ var _rff_rff__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rff/rff */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/rff.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/index.js\");\n/* harmony import */ var _balances_ub_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./balances/ub-api */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/balances/ub-api.js\");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtFO0FBQy9CO0FBQ3VDO0FBQ25EO0FBQ1U7QUFDSDtBQUNSO0FBQ0c7QUFDQztBQUNGO0FBQ1UiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgQXJjYW5hVmF1bHQsIEFyY2FuYVZhdWx0RmFjdG9yeSB9IGZyb20gJy4vZnVlbGNvbnRyYWN0cyc7XG5leHBvcnQgKiBmcm9tICcuL3Byb3RvL2RlZmluaXRpb24nO1xuZXhwb3J0IHsgUXVlcnlDbGllbnRJbXBsLCBHcnBjV2ViRXJyb3IsIEdycGNXZWJJbXBsIH0gZnJvbSAnLi9wcm90by9ncnBjJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YSc7XG5leHBvcnQgKiBmcm9tICcuL3ZhdWx0Y29udHJhY3RzJztcbmV4cG9ydCAqIGZyb20gJy4vcGVybWl0dXRpbHMnO1xuZXhwb3J0ICogZnJvbSAnLi94Y3MnO1xuZXhwb3J0ICogZnJvbSAnLi9jb3Ntb3MnO1xuZXhwb3J0ICogZnJvbSAnLi9yZmYvcmZmJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9iYWxhbmNlcy91Yi1hcGknO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/permitutils/index.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/permitutils/index.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PermitCreationError: () => (/* binding */ PermitCreationError),\n/* harmony export */   PermitVariant: () => (/* binding */ PermitVariant),\n/* harmony export */   signPermitForAddressAndValue: () => (/* binding */ signPermitForAddressAndValue)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/data/pad.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/abi/encodeFunctionData.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n\n\nvar PermitVariant;\n(function (PermitVariant) {\n    PermitVariant[PermitVariant[\"Unsupported\"] = 0] = \"Unsupported\";\n    PermitVariant[PermitVariant[\"EIP2612Canonical\"] = 1] = \"EIP2612Canonical\";\n    PermitVariant[PermitVariant[\"DAI\"] = 2] = \"DAI\";\n    PermitVariant[PermitVariant[\"Polygon2612\"] = 3] = \"Polygon2612\";\n    PermitVariant[PermitVariant[\"PolygonEMT\"] = 4] = \"PolygonEMT\";\n})(PermitVariant || (PermitVariant = {}));\nclass PermitCreationError extends Error {\n}\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\nconst PolygonDomain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"verifyingContract\", type: \"address\" },\n    { name: \"salt\", type: \"bytes32\" },\n];\nasync function signPermitForAddressAndValue(cur, client, account, spender, value, contract, deadline) {\n    if (contract == null) {\n        contract = (0,viem__WEBPACK_IMPORTED_MODULE_1__.getContract)({\n            address: (0,viem__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(cur.tokenAddress.subarray(12)),\n            abi: _data__WEBPACK_IMPORTED_MODULE_0__.ERC20ABI,\n            client,\n        });\n    }\n    const walletAddress = account.address;\n    deadline = deadline ?? 2n ** 256n - 1n;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const requestsToBeMade = [\n        contract.read.name(),\n        client.request({ method: \"eth_chainId\" }, { dedupe: true }),\n    ];\n    switch (cur.permitVariant) {\n        case PermitVariant.Unsupported:\n        default: {\n            throw new PermitCreationError(\"Permits are unsupported on this currency\");\n        }\n        case PermitVariant.EIP2612Canonical:\n        case PermitVariant.DAI:\n        case PermitVariant.Polygon2612: {\n            requestsToBeMade[2] = contract.read.nonces([walletAddress]);\n            break;\n        }\n        case PermitVariant.PolygonEMT: {\n            requestsToBeMade[2] = contract.read.getNonce([walletAddress]);\n        }\n    }\n    const [name, chainID, nonce] = await Promise.all(requestsToBeMade);\n    switch (cur.permitVariant) {\n        case PermitVariant.EIP2612Canonical: {\n            return client.signTypedData({\n                types: {\n                    EIP712Domain,\n                    Permit: [\n                        { name: \"owner\", type: \"address\" },\n                        { name: \"spender\", type: \"address\" },\n                        { name: \"value\", type: \"uint256\" },\n                        { name: \"nonce\", type: \"uint256\" },\n                        { name: \"deadline\", type: \"uint256\" },\n                    ],\n                },\n                primaryType: \"Permit\",\n                domain: {\n                    name,\n                    version: cur.permitContractVersion.toString(10),\n                    chainId: (0,viem__WEBPACK_IMPORTED_MODULE_3__.hexToBigInt)(chainID),\n                    verifyingContract: contract.address,\n                },\n                message: {\n                    owner: walletAddress,\n                    spender,\n                    value,\n                    nonce,\n                    deadline,\n                },\n                account,\n            });\n        }\n        case PermitVariant.DAI: {\n            return client.signTypedData({\n                types: {\n                    EIP712Domain,\n                    Permit: [\n                        { name: \"holder\", type: \"address\" },\n                        { name: \"spender\", type: \"address\" },\n                        { name: \"nonce\", type: \"uint256\" },\n                        { name: \"expiry\", type: \"uint256\" },\n                        { name: \"allowed\", type: \"bool\" },\n                    ],\n                },\n                primaryType: \"Permit\",\n                domain: {\n                    name,\n                    version: cur.permitContractVersion.toString(10),\n                    chainId: (0,viem__WEBPACK_IMPORTED_MODULE_3__.hexToBigInt)(chainID),\n                    verifyingContract: contract.address,\n                },\n                message: {\n                    holder: walletAddress,\n                    spender: spender,\n                    nonce,\n                    expiry: deadline,\n                    allowed: true,\n                },\n                account,\n            });\n        }\n        case PermitVariant.Polygon2612: {\n            return client.signTypedData({\n                types: {\n                    EIP712Domain: PolygonDomain,\n                    Permit: [\n                        { name: \"holder\", type: \"address\" },\n                        { name: \"spender\", type: \"address\" },\n                        { name: \"nonce\", type: \"uint256\" },\n                        { name: \"expiry\", type: \"uint256\" },\n                        { name: \"allowed\", type: \"bool\" },\n                    ],\n                },\n                primaryType: \"Permit\",\n                domain: {\n                    name,\n                    version: cur.permitContractVersion.toString(10),\n                    verifyingContract: contract.address,\n                    salt: (0,viem__WEBPACK_IMPORTED_MODULE_4__.pad)(chainID, {\n                        dir: \"left\",\n                        size: 32,\n                    }),\n                },\n                message: {\n                    holder: walletAddress,\n                    spender: spender,\n                    nonce,\n                    expiry: deadline,\n                    allowed: true,\n                },\n                account,\n            });\n        }\n        case PermitVariant.PolygonEMT: {\n            const funcSig = (0,viem__WEBPACK_IMPORTED_MODULE_5__.encodeFunctionData)({\n                abi: _data__WEBPACK_IMPORTED_MODULE_0__.ERC20ABI,\n                functionName: \"approve\",\n                args: [spender, value],\n            });\n            return client.signTypedData({\n                types: {\n                    EIP712Domain: PolygonDomain,\n                    MetaTransaction: [\n                        { name: \"nonce\", type: \"uint256\" },\n                        { name: \"from\", type: \"address\" },\n                        { name: \"functionSignature\", type: \"bytes\" },\n                    ],\n                },\n                primaryType: \"MetaTransaction\",\n                domain: {\n                    name,\n                    version: cur.permitContractVersion.toString(10),\n                    verifyingContract: contract.address,\n                    salt: (0,viem__WEBPACK_IMPORTED_MODULE_4__.pad)(chainID, {\n                        dir: \"left\",\n                        size: 32,\n                    }),\n                },\n                message: {\n                    nonce,\n                    from: walletAddress,\n                    functionSignature: funcSig,\n                },\n                account,\n            });\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/permitutils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminFeeRecipient: () => (/* binding */ AdminFeeRecipient),\n/* harmony export */   CollectionFeeRequirement: () => (/* binding */ CollectionFeeRequirement),\n/* harmony export */   DepositVEPacket: () => (/* binding */ DepositVEPacket),\n/* harmony export */   FillVEPacket: () => (/* binding */ FillVEPacket),\n/* harmony export */   FixedFeeTuple: () => (/* binding */ FixedFeeTuple),\n/* harmony export */   MsgCreateProtocolFees: () => (/* binding */ MsgCreateProtocolFees),\n/* harmony export */   MsgCreateProtocolFeesResponse: () => (/* binding */ MsgCreateProtocolFeesResponse),\n/* harmony export */   MsgCreateRequestForFunds: () => (/* binding */ MsgCreateRequestForFunds),\n/* harmony export */   MsgCreateRequestForFundsResponse: () => (/* binding */ MsgCreateRequestForFundsResponse),\n/* harmony export */   MsgCreateSolverData: () => (/* binding */ MsgCreateSolverData),\n/* harmony export */   MsgCreateSolverDataResponse: () => (/* binding */ MsgCreateSolverDataResponse),\n/* harmony export */   MsgDoubleCheckTx: () => (/* binding */ MsgDoubleCheckTx),\n/* harmony export */   MsgRefundReq: () => (/* binding */ MsgRefundReq),\n/* harmony export */   MsgRefundReqResponse: () => (/* binding */ MsgRefundReqResponse),\n/* harmony export */   MsgUpdateProtocolFees: () => (/* binding */ MsgUpdateProtocolFees),\n/* harmony export */   MsgUpdateProtocolFeesResponse: () => (/* binding */ MsgUpdateProtocolFeesResponse),\n/* harmony export */   MsgUpdateSolverData: () => (/* binding */ MsgUpdateSolverData),\n/* harmony export */   MsgUpdateSolverDataResponse: () => (/* binding */ MsgUpdateSolverDataResponse),\n/* harmony export */   PageRequest: () => (/* binding */ PageRequest),\n/* harmony export */   PageResponse: () => (/* binding */ PageResponse),\n/* harmony export */   PriceOracleData: () => (/* binding */ PriceOracleData),\n/* harmony export */   PriceOracleDatum: () => (/* binding */ PriceOracleDatum),\n/* harmony export */   ProtocolFees: () => (/* binding */ ProtocolFees),\n/* harmony export */   QueryAllRequestForFundsRequest: () => (/* binding */ QueryAllRequestForFundsRequest),\n/* harmony export */   QueryAllRequestForFundsResponse: () => (/* binding */ QueryAllRequestForFundsResponse),\n/* harmony export */   QueryAllSettlementRequest: () => (/* binding */ QueryAllSettlementRequest),\n/* harmony export */   QueryAllSettlementResponse: () => (/* binding */ QueryAllSettlementResponse),\n/* harmony export */   QueryAllSolverDataRequest: () => (/* binding */ QueryAllSolverDataRequest),\n/* harmony export */   QueryAllSolverDataResponse: () => (/* binding */ QueryAllSolverDataResponse),\n/* harmony export */   QueryGetPriceOracleDataRequest: () => (/* binding */ QueryGetPriceOracleDataRequest),\n/* harmony export */   QueryGetPriceOracleDataResponse: () => (/* binding */ QueryGetPriceOracleDataResponse),\n/* harmony export */   QueryGetProtocolFeesRequest: () => (/* binding */ QueryGetProtocolFeesRequest),\n/* harmony export */   QueryGetProtocolFeesResponse: () => (/* binding */ QueryGetProtocolFeesResponse),\n/* harmony export */   QueryGetRequestForFundsRequest: () => (/* binding */ QueryGetRequestForFundsRequest),\n/* harmony export */   QueryGetRequestForFundsResponse: () => (/* binding */ QueryGetRequestForFundsResponse),\n/* harmony export */   QueryGetSettlementRequest: () => (/* binding */ QueryGetSettlementRequest),\n/* harmony export */   QueryGetSettlementResponse: () => (/* binding */ QueryGetSettlementResponse),\n/* harmony export */   QueryGetSolverDataRequest: () => (/* binding */ QueryGetSolverDataRequest),\n/* harmony export */   QueryGetSolverDataResponse: () => (/* binding */ QueryGetSolverDataResponse),\n/* harmony export */   QueryRequestForFundsByAddressRequest: () => (/* binding */ QueryRequestForFundsByAddressRequest),\n/* harmony export */   RFFDestinationPair: () => (/* binding */ RFFDestinationPair),\n/* harmony export */   RFFSourcePair: () => (/* binding */ RFFSourcePair),\n/* harmony export */   RFFSourceState: () => (/* binding */ RFFSourceState),\n/* harmony export */   RequestForFunds: () => (/* binding */ RequestForFunds),\n/* harmony export */   RouteFee: () => (/* binding */ RouteFee),\n/* harmony export */   Settlement: () => (/* binding */ Settlement),\n/* harmony export */   SignatureDatum: () => (/* binding */ SignatureDatum),\n/* harmony export */   SolverAddress: () => (/* binding */ SolverAddress),\n/* harmony export */   SolverData: () => (/* binding */ SolverData),\n/* harmony export */   Universe: () => (/* binding */ Universe),\n/* harmony export */   collectionFeeRequirementFromJSON: () => (/* binding */ collectionFeeRequirementFromJSON),\n/* harmony export */   collectionFeeRequirementToJSON: () => (/* binding */ collectionFeeRequirementToJSON),\n/* harmony export */   protobufPackage: () => (/* binding */ protobufPackage),\n/* harmony export */   rFFSourceStateFromJSON: () => (/* binding */ rFFSourceStateFromJSON),\n/* harmony export */   rFFSourceStateToJSON: () => (/* binding */ rFFSourceStateToJSON),\n/* harmony export */   universeFromJSON: () => (/* binding */ universeFromJSON),\n/* harmony export */   universeToJSON: () => (/* binding */ universeToJSON)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf/wire */ \"(ssr)/./node_modules/.pnpm/@bufbuild+protobuf@2.9.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js\");\n/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! long */ \"(ssr)/./node_modules/.pnpm/long@5.3.2/node_modules/long/index.js\");\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.0\n//   protoc               v6.31.0\n// source: definition.proto\n/* eslint-disable */\n\n\nconst protobufPackage = \"\";\nvar RFFSourceState;\n(function (RFFSourceState) {\n    RFFSourceState[RFFSourceState[\"WAITING\"] = 0] = \"WAITING\";\n    RFFSourceState[RFFSourceState[\"DEPOSITED\"] = 1] = \"DEPOSITED\";\n    RFFSourceState[RFFSourceState[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(RFFSourceState || (RFFSourceState = {}));\nfunction rFFSourceStateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"WAITING\":\n            return RFFSourceState.WAITING;\n        case 1:\n        case \"DEPOSITED\":\n            return RFFSourceState.DEPOSITED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return RFFSourceState.UNRECOGNIZED;\n    }\n}\nfunction rFFSourceStateToJSON(object) {\n    switch (object) {\n        case RFFSourceState.WAITING:\n            return \"WAITING\";\n        case RFFSourceState.DEPOSITED:\n            return \"DEPOSITED\";\n        case RFFSourceState.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nvar CollectionFeeRequirement;\n(function (CollectionFeeRequirement) {\n    CollectionFeeRequirement[CollectionFeeRequirement[\"UNDETERMINED\"] = 0] = \"UNDETERMINED\";\n    CollectionFeeRequirement[CollectionFeeRequirement[\"YES\"] = 1] = \"YES\";\n    CollectionFeeRequirement[CollectionFeeRequirement[\"NO\"] = 2] = \"NO\";\n    CollectionFeeRequirement[CollectionFeeRequirement[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CollectionFeeRequirement || (CollectionFeeRequirement = {}));\nfunction collectionFeeRequirementFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNDETERMINED\":\n            return CollectionFeeRequirement.UNDETERMINED;\n        case 1:\n        case \"YES\":\n            return CollectionFeeRequirement.YES;\n        case 2:\n        case \"NO\":\n            return CollectionFeeRequirement.NO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CollectionFeeRequirement.UNRECOGNIZED;\n    }\n}\nfunction collectionFeeRequirementToJSON(object) {\n    switch (object) {\n        case CollectionFeeRequirement.UNDETERMINED:\n            return \"UNDETERMINED\";\n        case CollectionFeeRequirement.YES:\n            return \"YES\";\n        case CollectionFeeRequirement.NO:\n            return \"NO\";\n        case CollectionFeeRequirement.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nvar Universe;\n(function (Universe) {\n    Universe[Universe[\"ETHEREUM\"] = 0] = \"ETHEREUM\";\n    Universe[Universe[\"FUEL\"] = 1] = \"FUEL\";\n    Universe[Universe[\"SOLANA\"] = 2] = \"SOLANA\";\n    Universe[Universe[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Universe || (Universe = {}));\nfunction universeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ETHEREUM\":\n            return Universe.ETHEREUM;\n        case 1:\n        case \"FUEL\":\n            return Universe.FUEL;\n        case 2:\n        case \"SOLANA\":\n            return Universe.SOLANA;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Universe.UNRECOGNIZED;\n    }\n}\nfunction universeToJSON(object) {\n    switch (object) {\n        case Universe.ETHEREUM:\n            return \"ETHEREUM\";\n        case Universe.FUEL:\n            return \"FUEL\";\n        case Universe.SOLANA:\n            return \"SOLANA\";\n        case Universe.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nfunction createBasePageRequest() {\n    return {\n        key: new Uint8Array(0),\n        offset: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        limit: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        countTotal: false,\n        reverse: false,\n    };\n}\nconst PageRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (!message.offset.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(16).uint64(message.offset.toString());\n        }\n        if (!message.limit.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(24).uint64(message.limit.toString());\n        }\n        if (message.countTotal !== false) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse !== false) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePageRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.bytes();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.offset = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.limit = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.countTotal = reader.bool();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.reverse = reader.bool();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0),\n            offset: isSet(object.offset) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.offset) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            limit: isSet(object.limit) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.limit) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            countTotal: isSet(object.countTotal)\n                ? globalThis.Boolean(object.countTotal)\n                : false,\n            reverse: isSet(object.reverse)\n                ? globalThis.Boolean(object.reverse)\n                : false,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.key.length !== 0) {\n            obj.key = base64FromBytes(message.key);\n        }\n        if (!message.offset.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.offset = (message.offset || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (!message.limit.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.limit = (message.limit || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.countTotal !== false) {\n            obj.countTotal = message.countTotal;\n        }\n        if (message.reverse !== false) {\n            obj.reverse = message.reverse;\n        }\n        return obj;\n    },\n    create(base) {\n        return PageRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBasePageRequest();\n        message.key = object.key ?? new Uint8Array(0);\n        message.offset =\n            object.offset !== undefined && object.offset !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.offset)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.limit =\n            object.limit !== undefined && object.limit !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.limit)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.countTotal = object.countTotal ?? false;\n        message.reverse = object.reverse ?? false;\n        return message;\n    },\n};\nfunction createBasePageResponse() {\n    return { nextKey: new Uint8Array(0), total: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n}\nconst PageResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (!message.total.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(16).uint64(message.total.toString());\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePageResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.nextKey = reader.bytes();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.total = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            nextKey: isSet(object.nextKey)\n                ? bytesFromBase64(object.nextKey)\n                : new Uint8Array(0),\n            total: isSet(object.total) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.total) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.nextKey.length !== 0) {\n            obj.nextKey = base64FromBytes(message.nextKey);\n        }\n        if (!message.total.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.total = (message.total || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        return obj;\n    },\n    create(base) {\n        return PageResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBasePageResponse();\n        message.nextKey = object.nextKey ?? new Uint8Array(0);\n        message.total =\n            object.total !== undefined && object.total !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.total)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        return message;\n    },\n};\nfunction createBaseRFFSourcePair() {\n    return {\n        universe: 0,\n        chainID: new Uint8Array(0),\n        tokenAddress: new Uint8Array(0),\n        value: new Uint8Array(0),\n        status: 0,\n        collectionFeeRequired: 0,\n    };\n}\nconst RFFSourcePair = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.universe !== 0) {\n            writer.uint32(8).int32(message.universe);\n        }\n        if (message.chainID.length !== 0) {\n            writer.uint32(18).bytes(message.chainID);\n        }\n        if (message.tokenAddress.length !== 0) {\n            writer.uint32(26).bytes(message.tokenAddress);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.status !== 0) {\n            writer.uint32(40).int32(message.status);\n        }\n        if (message.collectionFeeRequired !== 0) {\n            writer.uint32(48).int32(message.collectionFeeRequired);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRFFSourcePair();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.universe = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.chainID = reader.bytes();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.tokenAddress = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.value = reader.bytes();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.status = reader.int32();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.collectionFeeRequired = reader.int32();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            universe: isSet(object.universe) ? universeFromJSON(object.universe) : 0,\n            chainID: isSet(object.chainID)\n                ? bytesFromBase64(object.chainID)\n                : new Uint8Array(0),\n            tokenAddress: isSet(object.tokenAddress)\n                ? bytesFromBase64(object.tokenAddress)\n                : new Uint8Array(0),\n            value: isSet(object.value)\n                ? bytesFromBase64(object.value)\n                : new Uint8Array(0),\n            status: isSet(object.status) ? rFFSourceStateFromJSON(object.status) : 0,\n            collectionFeeRequired: isSet(object.collectionFeeRequired)\n                ? collectionFeeRequirementFromJSON(object.collectionFeeRequired)\n                : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.universe !== 0) {\n            obj.universe = universeToJSON(message.universe);\n        }\n        if (message.chainID.length !== 0) {\n            obj.chainID = base64FromBytes(message.chainID);\n        }\n        if (message.tokenAddress.length !== 0) {\n            obj.tokenAddress = base64FromBytes(message.tokenAddress);\n        }\n        if (message.value.length !== 0) {\n            obj.value = base64FromBytes(message.value);\n        }\n        if (message.status !== 0) {\n            obj.status = rFFSourceStateToJSON(message.status);\n        }\n        if (message.collectionFeeRequired !== 0) {\n            obj.collectionFeeRequired = collectionFeeRequirementToJSON(message.collectionFeeRequired);\n        }\n        return obj;\n    },\n    create(base) {\n        return RFFSourcePair.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseRFFSourcePair();\n        message.universe = object.universe ?? 0;\n        message.chainID = object.chainID ?? new Uint8Array(0);\n        message.tokenAddress = object.tokenAddress ?? new Uint8Array(0);\n        message.value = object.value ?? new Uint8Array(0);\n        message.status = object.status ?? 0;\n        message.collectionFeeRequired = object.collectionFeeRequired ?? 0;\n        return message;\n    },\n};\nfunction createBaseSignatureDatum() {\n    return {\n        universe: 0,\n        address: new Uint8Array(0),\n        signature: new Uint8Array(0),\n        hash: new Uint8Array(0),\n    };\n}\nconst SignatureDatum = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.universe !== 0) {\n            writer.uint32(8).int32(message.universe);\n        }\n        if (message.address.length !== 0) {\n            writer.uint32(18).bytes(message.address);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(26).bytes(message.signature);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignatureDatum();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.universe = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.address = reader.bytes();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.signature = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.hash = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            universe: isSet(object.universe) ? universeFromJSON(object.universe) : 0,\n            address: isSet(object.address)\n                ? bytesFromBase64(object.address)\n                : new Uint8Array(0),\n            signature: isSet(object.signature)\n                ? bytesFromBase64(object.signature)\n                : new Uint8Array(0),\n            hash: isSet(object.hash)\n                ? bytesFromBase64(object.hash)\n                : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.universe !== 0) {\n            obj.universe = universeToJSON(message.universe);\n        }\n        if (message.address.length !== 0) {\n            obj.address = base64FromBytes(message.address);\n        }\n        if (message.signature.length !== 0) {\n            obj.signature = base64FromBytes(message.signature);\n        }\n        if (message.hash.length !== 0) {\n            obj.hash = base64FromBytes(message.hash);\n        }\n        return obj;\n    },\n    create(base) {\n        return SignatureDatum.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseSignatureDatum();\n        message.universe = object.universe ?? 0;\n        message.address = object.address ?? new Uint8Array(0);\n        message.signature = object.signature ?? new Uint8Array(0);\n        message.hash = object.hash ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseRFFDestinationPair() {\n    return { tokenAddress: new Uint8Array(0), value: new Uint8Array(0) };\n}\nconst RFFDestinationPair = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.tokenAddress.length !== 0) {\n            writer.uint32(10).bytes(message.tokenAddress);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRFFDestinationPair();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.tokenAddress = reader.bytes();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            tokenAddress: isSet(object.tokenAddress)\n                ? bytesFromBase64(object.tokenAddress)\n                : new Uint8Array(0),\n            value: isSet(object.value)\n                ? bytesFromBase64(object.value)\n                : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.tokenAddress.length !== 0) {\n            obj.tokenAddress = base64FromBytes(message.tokenAddress);\n        }\n        if (message.value.length !== 0) {\n            obj.value = base64FromBytes(message.value);\n        }\n        return obj;\n    },\n    create(base) {\n        return RFFDestinationPair.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseRFFDestinationPair();\n        message.tokenAddress = object.tokenAddress ?? new Uint8Array(0);\n        message.value = object.value ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseRequestForFunds() {\n    return {\n        id: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        sources: [],\n        destinationChainID: new Uint8Array(0),\n        destinations: [],\n        nonce: new Uint8Array(0),\n        expiry: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        destinationUniverse: 0,\n        signatureData: [],\n        user: \"\",\n        fulfilledBy: new Uint8Array(0),\n        fulfilledAt: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        deposited: false,\n        fulfilled: false,\n        settled: false,\n        refunded: false,\n        creationBlock: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO,\n    };\n}\nconst RequestForFunds = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(8).uint64(message.id.toString());\n        }\n        for (const v of message.sources) {\n            RFFSourcePair.encode(v, writer.uint32(18).fork()).join();\n        }\n        if (message.destinationChainID.length !== 0) {\n            writer.uint32(26).bytes(message.destinationChainID);\n        }\n        for (const v of message.destinations) {\n            RFFDestinationPair.encode(v, writer.uint32(34).fork()).join();\n        }\n        if (message.nonce.length !== 0) {\n            writer.uint32(42).bytes(message.nonce);\n        }\n        if (!message.expiry.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(48).uint64(message.expiry.toString());\n        }\n        if (message.destinationUniverse !== 0) {\n            writer.uint32(72).int32(message.destinationUniverse);\n        }\n        for (const v of message.signatureData) {\n            SignatureDatum.encode(v, writer.uint32(82).fork()).join();\n        }\n        if (message.user !== \"\") {\n            writer.uint32(810).string(message.user);\n        }\n        if (message.fulfilledBy.length !== 0) {\n            writer.uint32(818).bytes(message.fulfilledBy);\n        }\n        if (!message.fulfilledAt.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(824).uint64(message.fulfilledAt.toString());\n        }\n        if (message.deposited !== false) {\n            writer.uint32(832).bool(message.deposited);\n        }\n        if (message.fulfilled !== false) {\n            writer.uint32(840).bool(message.fulfilled);\n        }\n        if (message.settled !== false) {\n            writer.uint32(848).bool(message.settled);\n        }\n        if (message.refunded !== false) {\n            writer.uint32(856).bool(message.refunded);\n        }\n        if (!message.creationBlock.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO)) {\n            writer.uint32(872).int64(message.creationBlock.toString());\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestForFunds();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.id = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.sources.push(RFFSourcePair.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.destinationChainID = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.destinations.push(RFFDestinationPair.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.nonce = reader.bytes();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.expiry = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 9: {\n                    if (tag !== 72) {\n                        break;\n                    }\n                    message.destinationUniverse = reader.int32();\n                    continue;\n                }\n                case 10: {\n                    if (tag !== 82) {\n                        break;\n                    }\n                    message.signatureData.push(SignatureDatum.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 101: {\n                    if (tag !== 810) {\n                        break;\n                    }\n                    message.user = reader.string();\n                    continue;\n                }\n                case 102: {\n                    if (tag !== 818) {\n                        break;\n                    }\n                    message.fulfilledBy = reader.bytes();\n                    continue;\n                }\n                case 103: {\n                    if (tag !== 824) {\n                        break;\n                    }\n                    message.fulfilledAt = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 104: {\n                    if (tag !== 832) {\n                        break;\n                    }\n                    message.deposited = reader.bool();\n                    continue;\n                }\n                case 105: {\n                    if (tag !== 840) {\n                        break;\n                    }\n                    message.fulfilled = reader.bool();\n                    continue;\n                }\n                case 106: {\n                    if (tag !== 848) {\n                        break;\n                    }\n                    message.settled = reader.bool();\n                    continue;\n                }\n                case 107: {\n                    if (tag !== 856) {\n                        break;\n                    }\n                    message.refunded = reader.bool();\n                    continue;\n                }\n                case 109: {\n                    if (tag !== 872) {\n                        break;\n                    }\n                    message.creationBlock = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.int64().toString());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            id: isSet(object.id) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            sources: globalThis.Array.isArray(object?.sources)\n                ? object.sources.map((e) => RFFSourcePair.fromJSON(e))\n                : [],\n            destinationChainID: isSet(object.destinationChainID)\n                ? bytesFromBase64(object.destinationChainID)\n                : new Uint8Array(0),\n            destinations: globalThis.Array.isArray(object?.destinations)\n                ? object.destinations.map((e) => RFFDestinationPair.fromJSON(e))\n                : [],\n            nonce: isSet(object.nonce)\n                ? bytesFromBase64(object.nonce)\n                : new Uint8Array(0),\n            expiry: isSet(object.expiry) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.expiry) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            destinationUniverse: isSet(object.destinationUniverse)\n                ? universeFromJSON(object.destinationUniverse)\n                : 0,\n            signatureData: globalThis.Array.isArray(object?.signatureData)\n                ? object.signatureData.map((e) => SignatureDatum.fromJSON(e))\n                : [],\n            user: isSet(object.user) ? globalThis.String(object.user) : \"\",\n            fulfilledBy: isSet(object.fulfilledBy)\n                ? bytesFromBase64(object.fulfilledBy)\n                : new Uint8Array(0),\n            fulfilledAt: isSet(object.fulfilledAt)\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.fulfilledAt)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            deposited: isSet(object.deposited)\n                ? globalThis.Boolean(object.deposited)\n                : false,\n            fulfilled: isSet(object.fulfilled)\n                ? globalThis.Boolean(object.fulfilled)\n                : false,\n            settled: isSet(object.settled)\n                ? globalThis.Boolean(object.settled)\n                : false,\n            refunded: isSet(object.refunded)\n                ? globalThis.Boolean(object.refunded)\n                : false,\n            creationBlock: isSet(object.creationBlock)\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.creationBlock)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.id = (message.id || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.sources?.length) {\n            obj.sources = message.sources.map((e) => RFFSourcePair.toJSON(e));\n        }\n        if (message.destinationChainID.length !== 0) {\n            obj.destinationChainID = base64FromBytes(message.destinationChainID);\n        }\n        if (message.destinations?.length) {\n            obj.destinations = message.destinations.map((e) => RFFDestinationPair.toJSON(e));\n        }\n        if (message.nonce.length !== 0) {\n            obj.nonce = base64FromBytes(message.nonce);\n        }\n        if (!message.expiry.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.expiry = (message.expiry || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.destinationUniverse !== 0) {\n            obj.destinationUniverse = universeToJSON(message.destinationUniverse);\n        }\n        if (message.signatureData?.length) {\n            obj.signatureData = message.signatureData.map((e) => SignatureDatum.toJSON(e));\n        }\n        if (message.user !== \"\") {\n            obj.user = message.user;\n        }\n        if (message.fulfilledBy.length !== 0) {\n            obj.fulfilledBy = base64FromBytes(message.fulfilledBy);\n        }\n        if (!message.fulfilledAt.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.fulfilledAt = (message.fulfilledAt || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.deposited !== false) {\n            obj.deposited = message.deposited;\n        }\n        if (message.fulfilled !== false) {\n            obj.fulfilled = message.fulfilled;\n        }\n        if (message.settled !== false) {\n            obj.settled = message.settled;\n        }\n        if (message.refunded !== false) {\n            obj.refunded = message.refunded;\n        }\n        if (!message.creationBlock.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO)) {\n            obj.creationBlock = (message.creationBlock || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO).toString();\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestForFunds.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseRequestForFunds();\n        message.id =\n            object.id !== undefined && object.id !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.sources =\n            object.sources?.map((e) => RFFSourcePair.fromPartial(e)) || [];\n        message.destinationChainID = object.destinationChainID ?? new Uint8Array(0);\n        message.destinations =\n            object.destinations?.map((e) => RFFDestinationPair.fromPartial(e)) || [];\n        message.nonce = object.nonce ?? new Uint8Array(0);\n        message.expiry =\n            object.expiry !== undefined && object.expiry !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.expiry)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.destinationUniverse = object.destinationUniverse ?? 0;\n        message.signatureData =\n            object.signatureData?.map((e) => SignatureDatum.fromPartial(e)) || [];\n        message.user = object.user ?? \"\";\n        message.fulfilledBy = object.fulfilledBy ?? new Uint8Array(0);\n        message.fulfilledAt =\n            object.fulfilledAt !== undefined && object.fulfilledAt !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.fulfilledAt)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.deposited = object.deposited ?? false;\n        message.fulfilled = object.fulfilled ?? false;\n        message.settled = object.settled ?? false;\n        message.refunded = object.refunded ?? false;\n        message.creationBlock =\n            object.creationBlock !== undefined && object.creationBlock !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.creationBlock)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO;\n        return message;\n    },\n};\nfunction createBaseMsgCreateRequestForFunds() {\n    return {\n        sources: [],\n        destinationUniverse: 0,\n        destinationChainID: new Uint8Array(0),\n        destinations: [],\n        nonce: new Uint8Array(0),\n        expiry: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        user: \"\",\n        signatureData: [],\n    };\n}\nconst MsgCreateRequestForFunds = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        for (const v of message.sources) {\n            RFFSourcePair.encode(v, writer.uint32(10).fork()).join();\n        }\n        if (message.destinationUniverse !== 0) {\n            writer.uint32(16).int32(message.destinationUniverse);\n        }\n        if (message.destinationChainID.length !== 0) {\n            writer.uint32(26).bytes(message.destinationChainID);\n        }\n        for (const v of message.destinations) {\n            RFFDestinationPair.encode(v, writer.uint32(34).fork()).join();\n        }\n        if (message.nonce.length !== 0) {\n            writer.uint32(42).bytes(message.nonce);\n        }\n        if (!message.expiry.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(48).uint64(message.expiry.toString());\n        }\n        if (message.user !== \"\") {\n            writer.uint32(58).string(message.user);\n        }\n        for (const v of message.signatureData) {\n            SignatureDatum.encode(v, writer.uint32(66).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateRequestForFunds();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.sources.push(RFFSourcePair.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.destinationUniverse = reader.int32();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.destinationChainID = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.destinations.push(RFFDestinationPair.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.nonce = reader.bytes();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.expiry = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 7: {\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.user = reader.string();\n                    continue;\n                }\n                case 8: {\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.signatureData.push(SignatureDatum.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            sources: globalThis.Array.isArray(object?.sources)\n                ? object.sources.map((e) => RFFSourcePair.fromJSON(e))\n                : [],\n            destinationUniverse: isSet(object.destinationUniverse)\n                ? universeFromJSON(object.destinationUniverse)\n                : 0,\n            destinationChainID: isSet(object.destinationChainID)\n                ? bytesFromBase64(object.destinationChainID)\n                : new Uint8Array(0),\n            destinations: globalThis.Array.isArray(object?.destinations)\n                ? object.destinations.map((e) => RFFDestinationPair.fromJSON(e))\n                : [],\n            nonce: isSet(object.nonce)\n                ? bytesFromBase64(object.nonce)\n                : new Uint8Array(0),\n            expiry: isSet(object.expiry) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.expiry) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            user: isSet(object.user) ? globalThis.String(object.user) : \"\",\n            signatureData: globalThis.Array.isArray(object?.signatureData)\n                ? object.signatureData.map((e) => SignatureDatum.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sources?.length) {\n            obj.sources = message.sources.map((e) => RFFSourcePair.toJSON(e));\n        }\n        if (message.destinationUniverse !== 0) {\n            obj.destinationUniverse = universeToJSON(message.destinationUniverse);\n        }\n        if (message.destinationChainID.length !== 0) {\n            obj.destinationChainID = base64FromBytes(message.destinationChainID);\n        }\n        if (message.destinations?.length) {\n            obj.destinations = message.destinations.map((e) => RFFDestinationPair.toJSON(e));\n        }\n        if (message.nonce.length !== 0) {\n            obj.nonce = base64FromBytes(message.nonce);\n        }\n        if (!message.expiry.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.expiry = (message.expiry || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.user !== \"\") {\n            obj.user = message.user;\n        }\n        if (message.signatureData?.length) {\n            obj.signatureData = message.signatureData.map((e) => SignatureDatum.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgCreateRequestForFunds.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateRequestForFunds();\n        message.sources =\n            object.sources?.map((e) => RFFSourcePair.fromPartial(e)) || [];\n        message.destinationUniverse = object.destinationUniverse ?? 0;\n        message.destinationChainID = object.destinationChainID ?? new Uint8Array(0);\n        message.destinations =\n            object.destinations?.map((e) => RFFDestinationPair.fromPartial(e)) || [];\n        message.nonce = object.nonce ?? new Uint8Array(0);\n        message.expiry =\n            object.expiry !== undefined && object.expiry !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.expiry)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.user = object.user ?? \"\";\n        message.signatureData =\n            object.signatureData?.map((e) => SignatureDatum.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgCreateRequestForFundsResponse() {\n    return { id: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n}\nconst MsgCreateRequestForFundsResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(8).uint64(message.id.toString());\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateRequestForFundsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.id = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { id: isSet(object.id) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.id = (message.id || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgCreateRequestForFundsResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateRequestForFundsResponse();\n        message.id =\n            object.id !== undefined && object.id !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        return message;\n    },\n};\nfunction createBaseQueryGetRequestForFundsRequest() {\n    return { id: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n}\nconst QueryGetRequestForFundsRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(8).uint64(message.id.toString());\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetRequestForFundsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.id = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { id: isSet(object.id) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.id = (message.id || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetRequestForFundsRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetRequestForFundsRequest();\n        message.id =\n            object.id !== undefined && object.id !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        return message;\n    },\n};\nfunction createBaseQueryGetRequestForFundsResponse() {\n    return { requestForFunds: undefined };\n}\nconst QueryGetRequestForFundsResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.requestForFunds !== undefined) {\n            RequestForFunds.encode(message.requestForFunds, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetRequestForFundsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.requestForFunds = RequestForFunds.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            requestForFunds: isSet(object.requestForFunds)\n                ? RequestForFunds.fromJSON(object.requestForFunds)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.requestForFunds !== undefined) {\n            obj.requestForFunds = RequestForFunds.toJSON(message.requestForFunds);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetRequestForFundsResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetRequestForFundsResponse();\n        message.requestForFunds =\n            object.requestForFunds !== undefined && object.requestForFunds !== null\n                ? RequestForFunds.fromPartial(object.requestForFunds)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseQueryAllRequestForFundsRequest() {\n    return { pagination: undefined };\n}\nconst QueryAllRequestForFundsRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllRequestForFundsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            pagination: isSet(object.pagination)\n                ? PageRequest.fromJSON(object.pagination)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pagination !== undefined) {\n            obj.pagination = PageRequest.toJSON(message.pagination);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryAllRequestForFundsRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllRequestForFundsRequest();\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? PageRequest.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseQueryAllRequestForFundsResponse() {\n    return { requestForFunds: [], pagination: undefined };\n}\nconst QueryAllRequestForFundsResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        for (const v of message.requestForFunds) {\n            RequestForFunds.encode(v, writer.uint32(10).fork()).join();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllRequestForFundsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.requestForFunds.push(RequestForFunds.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            requestForFunds: globalThis.Array.isArray(object?.requestForFunds)\n                ? object.requestForFunds.map((e) => RequestForFunds.fromJSON(e))\n                : [],\n            pagination: isSet(object.pagination)\n                ? PageResponse.fromJSON(object.pagination)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.requestForFunds?.length) {\n            obj.requestForFunds = message.requestForFunds.map((e) => RequestForFunds.toJSON(e));\n        }\n        if (message.pagination !== undefined) {\n            obj.pagination = PageResponse.toJSON(message.pagination);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryAllRequestForFundsResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllRequestForFundsResponse();\n        message.requestForFunds =\n            object.requestForFunds?.map((e) => RequestForFunds.fromPartial(e)) ||\n                [];\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? PageResponse.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseRouteFee() {\n    return {\n        sourceUniverse: 0,\n        destinationUniverse: 0,\n        sourceChainID: new Uint8Array(0),\n        destinationChainID: new Uint8Array(0),\n        sourceTokenAddress: new Uint8Array(0),\n        destinationTokenAddress: new Uint8Array(0),\n        feeBP: 0,\n    };\n}\nconst RouteFee = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.sourceUniverse !== 0) {\n            writer.uint32(8).int32(message.sourceUniverse);\n        }\n        if (message.destinationUniverse !== 0) {\n            writer.uint32(16).int32(message.destinationUniverse);\n        }\n        if (message.sourceChainID.length !== 0) {\n            writer.uint32(26).bytes(message.sourceChainID);\n        }\n        if (message.destinationChainID.length !== 0) {\n            writer.uint32(34).bytes(message.destinationChainID);\n        }\n        if (message.sourceTokenAddress.length !== 0) {\n            writer.uint32(42).bytes(message.sourceTokenAddress);\n        }\n        if (message.destinationTokenAddress.length !== 0) {\n            writer.uint32(50).bytes(message.destinationTokenAddress);\n        }\n        if (message.feeBP !== 0) {\n            writer.uint32(80).uint32(message.feeBP);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRouteFee();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.sourceUniverse = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.destinationUniverse = reader.int32();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.sourceChainID = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.destinationChainID = reader.bytes();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.sourceTokenAddress = reader.bytes();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.destinationTokenAddress = reader.bytes();\n                    continue;\n                }\n                case 10: {\n                    if (tag !== 80) {\n                        break;\n                    }\n                    message.feeBP = reader.uint32();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            sourceUniverse: isSet(object.sourceUniverse)\n                ? universeFromJSON(object.sourceUniverse)\n                : 0,\n            destinationUniverse: isSet(object.destinationUniverse)\n                ? universeFromJSON(object.destinationUniverse)\n                : 0,\n            sourceChainID: isSet(object.sourceChainID)\n                ? bytesFromBase64(object.sourceChainID)\n                : new Uint8Array(0),\n            destinationChainID: isSet(object.destinationChainID)\n                ? bytesFromBase64(object.destinationChainID)\n                : new Uint8Array(0),\n            sourceTokenAddress: isSet(object.sourceTokenAddress)\n                ? bytesFromBase64(object.sourceTokenAddress)\n                : new Uint8Array(0),\n            destinationTokenAddress: isSet(object.destinationTokenAddress)\n                ? bytesFromBase64(object.destinationTokenAddress)\n                : new Uint8Array(0),\n            feeBP: isSet(object.feeBP) ? globalThis.Number(object.feeBP) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sourceUniverse !== 0) {\n            obj.sourceUniverse = universeToJSON(message.sourceUniverse);\n        }\n        if (message.destinationUniverse !== 0) {\n            obj.destinationUniverse = universeToJSON(message.destinationUniverse);\n        }\n        if (message.sourceChainID.length !== 0) {\n            obj.sourceChainID = base64FromBytes(message.sourceChainID);\n        }\n        if (message.destinationChainID.length !== 0) {\n            obj.destinationChainID = base64FromBytes(message.destinationChainID);\n        }\n        if (message.sourceTokenAddress.length !== 0) {\n            obj.sourceTokenAddress = base64FromBytes(message.sourceTokenAddress);\n        }\n        if (message.destinationTokenAddress.length !== 0) {\n            obj.destinationTokenAddress = base64FromBytes(message.destinationTokenAddress);\n        }\n        if (message.feeBP !== 0) {\n            obj.feeBP = Math.round(message.feeBP);\n        }\n        return obj;\n    },\n    create(base) {\n        return RouteFee.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseRouteFee();\n        message.sourceUniverse = object.sourceUniverse ?? 0;\n        message.destinationUniverse = object.destinationUniverse ?? 0;\n        message.sourceChainID = object.sourceChainID ?? new Uint8Array(0);\n        message.destinationChainID = object.destinationChainID ?? new Uint8Array(0);\n        message.sourceTokenAddress = object.sourceTokenAddress ?? new Uint8Array(0);\n        message.destinationTokenAddress =\n            object.destinationTokenAddress ?? new Uint8Array(0);\n        message.feeBP = object.feeBP ?? 0;\n        return message;\n    },\n};\nfunction createBaseSolverAddress() {\n    return {\n        universe: 0,\n        address: new Uint8Array(0),\n        signature: new Uint8Array(0),\n    };\n}\nconst SolverAddress = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.universe !== 0) {\n            writer.uint32(8).int32(message.universe);\n        }\n        if (message.address.length !== 0) {\n            writer.uint32(18).bytes(message.address);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(26).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSolverAddress();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.universe = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.address = reader.bytes();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.signature = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            universe: isSet(object.universe) ? universeFromJSON(object.universe) : 0,\n            address: isSet(object.address)\n                ? bytesFromBase64(object.address)\n                : new Uint8Array(0),\n            signature: isSet(object.signature)\n                ? bytesFromBase64(object.signature)\n                : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.universe !== 0) {\n            obj.universe = universeToJSON(message.universe);\n        }\n        if (message.address.length !== 0) {\n            obj.address = base64FromBytes(message.address);\n        }\n        if (message.signature.length !== 0) {\n            obj.signature = base64FromBytes(message.signature);\n        }\n        return obj;\n    },\n    create(base) {\n        return SolverAddress.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseSolverAddress();\n        message.universe = object.universe ?? 0;\n        message.address = object.address ?? new Uint8Array(0);\n        message.signature = object.signature ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseSolverData() {\n    return { cosmosAddress: \"\", advertisedFees: [], addresses: [] };\n}\nconst SolverData = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.cosmosAddress !== \"\") {\n            writer.uint32(10).string(message.cosmosAddress);\n        }\n        for (const v of message.advertisedFees) {\n            RouteFee.encode(v, writer.uint32(18).fork()).join();\n        }\n        for (const v of message.addresses) {\n            SolverAddress.encode(v, writer.uint32(26).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSolverData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.cosmosAddress = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.advertisedFees.push(RouteFee.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.addresses.push(SolverAddress.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            cosmosAddress: isSet(object.cosmosAddress)\n                ? globalThis.String(object.cosmosAddress)\n                : \"\",\n            advertisedFees: globalThis.Array.isArray(object?.advertisedFees)\n                ? object.advertisedFees.map((e) => RouteFee.fromJSON(e))\n                : [],\n            addresses: globalThis.Array.isArray(object?.addresses)\n                ? object.addresses.map((e) => SolverAddress.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cosmosAddress !== \"\") {\n            obj.cosmosAddress = message.cosmosAddress;\n        }\n        if (message.advertisedFees?.length) {\n            obj.advertisedFees = message.advertisedFees.map((e) => RouteFee.toJSON(e));\n        }\n        if (message.addresses?.length) {\n            obj.addresses = message.addresses.map((e) => SolverAddress.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return SolverData.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseSolverData();\n        message.cosmosAddress = object.cosmosAddress ?? \"\";\n        message.advertisedFees =\n            object.advertisedFees?.map((e) => RouteFee.fromPartial(e)) || [];\n        message.addresses =\n            object.addresses?.map((e) => SolverAddress.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseQueryGetSolverDataRequest() {\n    return { cosmosAddress: \"\" };\n}\nconst QueryGetSolverDataRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.cosmosAddress !== \"\") {\n            writer.uint32(10).string(message.cosmosAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetSolverDataRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.cosmosAddress = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            cosmosAddress: isSet(object.cosmosAddress)\n                ? globalThis.String(object.cosmosAddress)\n                : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cosmosAddress !== \"\") {\n            obj.cosmosAddress = message.cosmosAddress;\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetSolverDataRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetSolverDataRequest();\n        message.cosmosAddress = object.cosmosAddress ?? \"\";\n        return message;\n    },\n};\nfunction createBaseQueryGetSolverDataResponse() {\n    return { solverData: undefined };\n}\nconst QueryGetSolverDataResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.solverData !== undefined) {\n            SolverData.encode(message.solverData, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetSolverDataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.solverData = SolverData.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            solverData: isSet(object.solverData)\n                ? SolverData.fromJSON(object.solverData)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.solverData !== undefined) {\n            obj.solverData = SolverData.toJSON(message.solverData);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetSolverDataResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetSolverDataResponse();\n        message.solverData =\n            object.solverData !== undefined && object.solverData !== null\n                ? SolverData.fromPartial(object.solverData)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseQueryAllSolverDataRequest() {\n    return { pagination: undefined };\n}\nconst QueryAllSolverDataRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllSolverDataRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            pagination: isSet(object.pagination)\n                ? PageRequest.fromJSON(object.pagination)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pagination !== undefined) {\n            obj.pagination = PageRequest.toJSON(message.pagination);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryAllSolverDataRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllSolverDataRequest();\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? PageRequest.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseQueryAllSolverDataResponse() {\n    return { solverData: [], pagination: undefined };\n}\nconst QueryAllSolverDataResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        for (const v of message.solverData) {\n            SolverData.encode(v, writer.uint32(10).fork()).join();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllSolverDataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.solverData.push(SolverData.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            solverData: globalThis.Array.isArray(object?.solverData)\n                ? object.solverData.map((e) => SolverData.fromJSON(e))\n                : [],\n            pagination: isSet(object.pagination)\n                ? PageResponse.fromJSON(object.pagination)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.solverData?.length) {\n            obj.solverData = message.solverData.map((e) => SolverData.toJSON(e));\n        }\n        if (message.pagination !== undefined) {\n            obj.pagination = PageResponse.toJSON(message.pagination);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryAllSolverDataResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllSolverDataResponse();\n        message.solverData =\n            object.solverData?.map((e) => SolverData.fromPartial(e)) || [];\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? PageResponse.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseMsgCreateSolverData() {\n    return { cosmosAddress: \"\", advertisedFees: [], addresses: [] };\n}\nconst MsgCreateSolverData = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.cosmosAddress !== \"\") {\n            writer.uint32(10).string(message.cosmosAddress);\n        }\n        for (const v of message.advertisedFees) {\n            RouteFee.encode(v, writer.uint32(18).fork()).join();\n        }\n        for (const v of message.addresses) {\n            SolverAddress.encode(v, writer.uint32(26).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateSolverData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.cosmosAddress = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.advertisedFees.push(RouteFee.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.addresses.push(SolverAddress.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            cosmosAddress: isSet(object.cosmosAddress)\n                ? globalThis.String(object.cosmosAddress)\n                : \"\",\n            advertisedFees: globalThis.Array.isArray(object?.advertisedFees)\n                ? object.advertisedFees.map((e) => RouteFee.fromJSON(e))\n                : [],\n            addresses: globalThis.Array.isArray(object?.addresses)\n                ? object.addresses.map((e) => SolverAddress.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cosmosAddress !== \"\") {\n            obj.cosmosAddress = message.cosmosAddress;\n        }\n        if (message.advertisedFees?.length) {\n            obj.advertisedFees = message.advertisedFees.map((e) => RouteFee.toJSON(e));\n        }\n        if (message.addresses?.length) {\n            obj.addresses = message.addresses.map((e) => SolverAddress.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgCreateSolverData.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateSolverData();\n        message.cosmosAddress = object.cosmosAddress ?? \"\";\n        message.advertisedFees =\n            object.advertisedFees?.map((e) => RouteFee.fromPartial(e)) || [];\n        message.addresses =\n            object.addresses?.map((e) => SolverAddress.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgCreateSolverDataResponse() {\n    return {};\n}\nconst MsgCreateSolverDataResponse = {\n    encode(_, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateSolverDataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return MsgCreateSolverDataResponse.fromPartial(base ?? {});\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCreateSolverDataResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateSolverData() {\n    return { cosmosAddress: \"\", advertisedFees: [], addresses: [] };\n}\nconst MsgUpdateSolverData = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.cosmosAddress !== \"\") {\n            writer.uint32(10).string(message.cosmosAddress);\n        }\n        for (const v of message.advertisedFees) {\n            RouteFee.encode(v, writer.uint32(18).fork()).join();\n        }\n        for (const v of message.addresses) {\n            SolverAddress.encode(v, writer.uint32(26).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateSolverData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.cosmosAddress = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.advertisedFees.push(RouteFee.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.addresses.push(SolverAddress.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            cosmosAddress: isSet(object.cosmosAddress)\n                ? globalThis.String(object.cosmosAddress)\n                : \"\",\n            advertisedFees: globalThis.Array.isArray(object?.advertisedFees)\n                ? object.advertisedFees.map((e) => RouteFee.fromJSON(e))\n                : [],\n            addresses: globalThis.Array.isArray(object?.addresses)\n                ? object.addresses.map((e) => SolverAddress.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cosmosAddress !== \"\") {\n            obj.cosmosAddress = message.cosmosAddress;\n        }\n        if (message.advertisedFees?.length) {\n            obj.advertisedFees = message.advertisedFees.map((e) => RouteFee.toJSON(e));\n        }\n        if (message.addresses?.length) {\n            obj.addresses = message.addresses.map((e) => SolverAddress.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgUpdateSolverData.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateSolverData();\n        message.cosmosAddress = object.cosmosAddress ?? \"\";\n        message.advertisedFees =\n            object.advertisedFees?.map((e) => RouteFee.fromPartial(e)) || [];\n        message.addresses =\n            object.addresses?.map((e) => SolverAddress.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgUpdateSolverDataResponse() {\n    return {};\n}\nconst MsgUpdateSolverDataResponse = {\n    encode(_, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateSolverDataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return MsgUpdateSolverDataResponse.fromPartial(base ?? {});\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateSolverDataResponse();\n        return message;\n    },\n};\nfunction createBaseSettlement() {\n    return {\n        id: new Uint8Array(0),\n        universe: 0,\n        chainId: new Uint8Array(0),\n        amounts: [],\n        tokenAddress: [],\n        filler: [],\n        success: false,\n    };\n}\nconst Settlement = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.id.length !== 0) {\n            writer.uint32(10).bytes(message.id);\n        }\n        if (message.universe !== 0) {\n            writer.uint32(16).int32(message.universe);\n        }\n        if (message.chainId.length !== 0) {\n            writer.uint32(26).bytes(message.chainId);\n        }\n        for (const v of message.amounts) {\n            writer.uint32(34).bytes(v);\n        }\n        for (const v of message.tokenAddress) {\n            writer.uint32(42).bytes(v);\n        }\n        for (const v of message.filler) {\n            writer.uint32(50).bytes(v);\n        }\n        if (message.success !== false) {\n            writer.uint32(56).bool(message.success);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSettlement();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.bytes();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.universe = reader.int32();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.chainId = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.amounts.push(reader.bytes());\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.tokenAddress.push(reader.bytes());\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.filler.push(reader.bytes());\n                    continue;\n                }\n                case 7: {\n                    if (tag !== 56) {\n                        break;\n                    }\n                    message.success = reader.bool();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            id: isSet(object.id) ? bytesFromBase64(object.id) : new Uint8Array(0),\n            universe: isSet(object.universe) ? universeFromJSON(object.universe) : 0,\n            chainId: isSet(object.chainId)\n                ? bytesFromBase64(object.chainId)\n                : new Uint8Array(0),\n            amounts: globalThis.Array.isArray(object?.amounts)\n                ? object.amounts.map((e) => bytesFromBase64(e))\n                : [],\n            tokenAddress: globalThis.Array.isArray(object?.tokenAddress)\n                ? object.tokenAddress.map((e) => bytesFromBase64(e))\n                : [],\n            filler: globalThis.Array.isArray(object?.filler)\n                ? object.filler.map((e) => bytesFromBase64(e))\n                : [],\n            success: isSet(object.success)\n                ? globalThis.Boolean(object.success)\n                : false,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.id.length !== 0) {\n            obj.id = base64FromBytes(message.id);\n        }\n        if (message.universe !== 0) {\n            obj.universe = universeToJSON(message.universe);\n        }\n        if (message.chainId.length !== 0) {\n            obj.chainId = base64FromBytes(message.chainId);\n        }\n        if (message.amounts?.length) {\n            obj.amounts = message.amounts.map((e) => base64FromBytes(e));\n        }\n        if (message.tokenAddress?.length) {\n            obj.tokenAddress = message.tokenAddress.map((e) => base64FromBytes(e));\n        }\n        if (message.filler?.length) {\n            obj.filler = message.filler.map((e) => base64FromBytes(e));\n        }\n        if (message.success !== false) {\n            obj.success = message.success;\n        }\n        return obj;\n    },\n    create(base) {\n        return Settlement.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseSettlement();\n        message.id = object.id ?? new Uint8Array(0);\n        message.universe = object.universe ?? 0;\n        message.chainId = object.chainId ?? new Uint8Array(0);\n        message.amounts = object.amounts?.map((e) => e) || [];\n        message.tokenAddress = object.tokenAddress?.map((e) => e) || [];\n        message.filler = object.filler?.map((e) => e) || [];\n        message.success = object.success ?? false;\n        return message;\n    },\n};\nfunction createBaseQueryGetSettlementRequest() {\n    return { id: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n}\nconst QueryGetSettlementRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(8).uint64(message.id.toString());\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetSettlementRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.id = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { id: isSet(object.id) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.id = (message.id || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetSettlementRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetSettlementRequest();\n        message.id =\n            object.id !== undefined && object.id !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        return message;\n    },\n};\nfunction createBaseQueryGetSettlementResponse() {\n    return { Settlement: undefined };\n}\nconst QueryGetSettlementResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.Settlement !== undefined) {\n            Settlement.encode(message.Settlement, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetSettlementResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.Settlement = Settlement.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            Settlement: isSet(object.Settlement)\n                ? Settlement.fromJSON(object.Settlement)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.Settlement !== undefined) {\n            obj.Settlement = Settlement.toJSON(message.Settlement);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetSettlementResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetSettlementResponse();\n        message.Settlement =\n            object.Settlement !== undefined && object.Settlement !== null\n                ? Settlement.fromPartial(object.Settlement)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseQueryAllSettlementRequest() {\n    return { pagination: undefined };\n}\nconst QueryAllSettlementRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllSettlementRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            pagination: isSet(object.pagination)\n                ? PageRequest.fromJSON(object.pagination)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pagination !== undefined) {\n            obj.pagination = PageRequest.toJSON(message.pagination);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryAllSettlementRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllSettlementRequest();\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? PageRequest.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseQueryAllSettlementResponse() {\n    return { Settlement: [], pagination: undefined };\n}\nconst QueryAllSettlementResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        for (const v of message.Settlement) {\n            Settlement.encode(v, writer.uint32(10).fork()).join();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryAllSettlementResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.Settlement.push(Settlement.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            Settlement: globalThis.Array.isArray(object?.Settlement)\n                ? object.Settlement.map((e) => Settlement.fromJSON(e))\n                : [],\n            pagination: isSet(object.pagination)\n                ? PageResponse.fromJSON(object.pagination)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.Settlement?.length) {\n            obj.Settlement = message.Settlement.map((e) => Settlement.toJSON(e));\n        }\n        if (message.pagination !== undefined) {\n            obj.pagination = PageResponse.toJSON(message.pagination);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryAllSettlementResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryAllSettlementResponse();\n        message.Settlement =\n            object.Settlement?.map((e) => Settlement.fromPartial(e)) || [];\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? PageResponse.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseQueryRequestForFundsByAddressRequest() {\n    return { account: \"\", pagination: undefined };\n}\nconst QueryRequestForFundsByAddressRequest = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.account !== \"\") {\n            writer.uint32(10).string(message.account);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryRequestForFundsByAddressRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.account = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            account: isSet(object.account) ? globalThis.String(object.account) : \"\",\n            pagination: isSet(object.pagination)\n                ? PageRequest.fromJSON(object.pagination)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.account !== \"\") {\n            obj.account = message.account;\n        }\n        if (message.pagination !== undefined) {\n            obj.pagination = PageRequest.toJSON(message.pagination);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryRequestForFundsByAddressRequest.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryRequestForFundsByAddressRequest();\n        message.account = object.account ?? \"\";\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? PageRequest.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseFixedFeeTuple() {\n    return {\n        universe: 0,\n        chainID: new Uint8Array(0),\n        tokenAddress: new Uint8Array(0),\n        fee: new Uint8Array(0),\n    };\n}\nconst FixedFeeTuple = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.universe !== 0) {\n            writer.uint32(8).int32(message.universe);\n        }\n        if (message.chainID.length !== 0) {\n            writer.uint32(18).bytes(message.chainID);\n        }\n        if (message.tokenAddress.length !== 0) {\n            writer.uint32(26).bytes(message.tokenAddress);\n        }\n        if (message.fee.length !== 0) {\n            writer.uint32(34).bytes(message.fee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFixedFeeTuple();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.universe = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.chainID = reader.bytes();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.tokenAddress = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.fee = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            universe: isSet(object.universe) ? universeFromJSON(object.universe) : 0,\n            chainID: isSet(object.chainID)\n                ? bytesFromBase64(object.chainID)\n                : new Uint8Array(0),\n            tokenAddress: isSet(object.tokenAddress)\n                ? bytesFromBase64(object.tokenAddress)\n                : new Uint8Array(0),\n            fee: isSet(object.fee) ? bytesFromBase64(object.fee) : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.universe !== 0) {\n            obj.universe = universeToJSON(message.universe);\n        }\n        if (message.chainID.length !== 0) {\n            obj.chainID = base64FromBytes(message.chainID);\n        }\n        if (message.tokenAddress.length !== 0) {\n            obj.tokenAddress = base64FromBytes(message.tokenAddress);\n        }\n        if (message.fee.length !== 0) {\n            obj.fee = base64FromBytes(message.fee);\n        }\n        return obj;\n    },\n    create(base) {\n        return FixedFeeTuple.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseFixedFeeTuple();\n        message.universe = object.universe ?? 0;\n        message.chainID = object.chainID ?? new Uint8Array(0);\n        message.tokenAddress = object.tokenAddress ?? new Uint8Array(0);\n        message.fee = object.fee ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseAdminFeeRecipient() {\n    return { universe: 0, address: new Uint8Array(0) };\n}\nconst AdminFeeRecipient = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.universe !== 0) {\n            writer.uint32(8).int32(message.universe);\n        }\n        if (message.address.length !== 0) {\n            writer.uint32(18).bytes(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAdminFeeRecipient();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.universe = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.address = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            universe: isSet(object.universe) ? universeFromJSON(object.universe) : 0,\n            address: isSet(object.address)\n                ? bytesFromBase64(object.address)\n                : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.universe !== 0) {\n            obj.universe = universeToJSON(message.universe);\n        }\n        if (message.address.length !== 0) {\n            obj.address = base64FromBytes(message.address);\n        }\n        return obj;\n    },\n    create(base) {\n        return AdminFeeRecipient.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseAdminFeeRecipient();\n        message.universe = object.universe ?? 0;\n        message.address = object.address ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseProtocolFees() {\n    return {\n        feeBP: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        collectionFees: [],\n        fulfilmentFees: [],\n        admin: \"\",\n        feeRecipients: [],\n    };\n}\nconst ProtocolFees = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (!message.feeBP.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(8).uint64(message.feeBP.toString());\n        }\n        for (const v of message.collectionFees) {\n            FixedFeeTuple.encode(v, writer.uint32(18).fork()).join();\n        }\n        for (const v of message.fulfilmentFees) {\n            FixedFeeTuple.encode(v, writer.uint32(26).fork()).join();\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(34).string(message.admin);\n        }\n        for (const v of message.feeRecipients) {\n            AdminFeeRecipient.encode(v, writer.uint32(42).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseProtocolFees();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.feeBP = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.collectionFees.push(FixedFeeTuple.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.fulfilmentFees.push(FixedFeeTuple.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.admin = reader.string();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.feeRecipients.push(AdminFeeRecipient.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            feeBP: isSet(object.feeBP) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.feeBP) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            collectionFees: globalThis.Array.isArray(object?.collectionFees)\n                ? object.collectionFees.map((e) => FixedFeeTuple.fromJSON(e))\n                : [],\n            fulfilmentFees: globalThis.Array.isArray(object?.fulfilmentFees)\n                ? object.fulfilmentFees.map((e) => FixedFeeTuple.fromJSON(e))\n                : [],\n            admin: isSet(object.admin) ? globalThis.String(object.admin) : \"\",\n            feeRecipients: globalThis.Array.isArray(object?.feeRecipients)\n                ? object.feeRecipients.map((e) => AdminFeeRecipient.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (!message.feeBP.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.feeBP = (message.feeBP || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.collectionFees?.length) {\n            obj.collectionFees = message.collectionFees.map((e) => FixedFeeTuple.toJSON(e));\n        }\n        if (message.fulfilmentFees?.length) {\n            obj.fulfilmentFees = message.fulfilmentFees.map((e) => FixedFeeTuple.toJSON(e));\n        }\n        if (message.admin !== \"\") {\n            obj.admin = message.admin;\n        }\n        if (message.feeRecipients?.length) {\n            obj.feeRecipients = message.feeRecipients.map((e) => AdminFeeRecipient.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return ProtocolFees.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseProtocolFees();\n        message.feeBP =\n            object.feeBP !== undefined && object.feeBP !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.feeBP)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.collectionFees =\n            object.collectionFees?.map((e) => FixedFeeTuple.fromPartial(e)) || [];\n        message.fulfilmentFees =\n            object.fulfilmentFees?.map((e) => FixedFeeTuple.fromPartial(e)) || [];\n        message.admin = object.admin ?? \"\";\n        message.feeRecipients =\n            object.feeRecipients?.map((e) => AdminFeeRecipient.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseQueryGetProtocolFeesRequest() {\n    return {};\n}\nconst QueryGetProtocolFeesRequest = {\n    encode(_, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetProtocolFeesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return QueryGetProtocolFeesRequest.fromPartial(base ?? {});\n    },\n    fromPartial(_) {\n        const message = createBaseQueryGetProtocolFeesRequest();\n        return message;\n    },\n};\nfunction createBaseQueryGetProtocolFeesResponse() {\n    return { ProtocolFees: undefined };\n}\nconst QueryGetProtocolFeesResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.ProtocolFees !== undefined) {\n            ProtocolFees.encode(message.ProtocolFees, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetProtocolFeesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.ProtocolFees = ProtocolFees.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            ProtocolFees: isSet(object.ProtocolFees)\n                ? ProtocolFees.fromJSON(object.ProtocolFees)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ProtocolFees !== undefined) {\n            obj.ProtocolFees = ProtocolFees.toJSON(message.ProtocolFees);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetProtocolFeesResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetProtocolFeesResponse();\n        message.ProtocolFees =\n            object.ProtocolFees !== undefined && object.ProtocolFees !== null\n                ? ProtocolFees.fromPartial(object.ProtocolFees)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseMsgCreateProtocolFees() {\n    return {\n        creator: \"\",\n        feeBP: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        collectionFees: [],\n        fulfilmentFees: [],\n        feeRecipients: [],\n    };\n}\nconst MsgCreateProtocolFees = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (!message.feeBP.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(16).uint64(message.feeBP.toString());\n        }\n        for (const v of message.collectionFees) {\n            FixedFeeTuple.encode(v, writer.uint32(26).fork()).join();\n        }\n        for (const v of message.fulfilmentFees) {\n            FixedFeeTuple.encode(v, writer.uint32(34).fork()).join();\n        }\n        for (const v of message.feeRecipients) {\n            AdminFeeRecipient.encode(v, writer.uint32(42).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateProtocolFees();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.creator = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.feeBP = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.collectionFees.push(FixedFeeTuple.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.fulfilmentFees.push(FixedFeeTuple.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.feeRecipients.push(AdminFeeRecipient.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            creator: isSet(object.creator) ? globalThis.String(object.creator) : \"\",\n            feeBP: isSet(object.feeBP) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.feeBP) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            collectionFees: globalThis.Array.isArray(object?.collectionFees)\n                ? object.collectionFees.map((e) => FixedFeeTuple.fromJSON(e))\n                : [],\n            fulfilmentFees: globalThis.Array.isArray(object?.fulfilmentFees)\n                ? object.fulfilmentFees.map((e) => FixedFeeTuple.fromJSON(e))\n                : [],\n            feeRecipients: globalThis.Array.isArray(object?.feeRecipients)\n                ? object.feeRecipients.map((e) => AdminFeeRecipient.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.creator !== \"\") {\n            obj.creator = message.creator;\n        }\n        if (!message.feeBP.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.feeBP = (message.feeBP || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.collectionFees?.length) {\n            obj.collectionFees = message.collectionFees.map((e) => FixedFeeTuple.toJSON(e));\n        }\n        if (message.fulfilmentFees?.length) {\n            obj.fulfilmentFees = message.fulfilmentFees.map((e) => FixedFeeTuple.toJSON(e));\n        }\n        if (message.feeRecipients?.length) {\n            obj.feeRecipients = message.feeRecipients.map((e) => AdminFeeRecipient.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgCreateProtocolFees.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgCreateProtocolFees();\n        message.creator = object.creator ?? \"\";\n        message.feeBP =\n            object.feeBP !== undefined && object.feeBP !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.feeBP)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.collectionFees =\n            object.collectionFees?.map((e) => FixedFeeTuple.fromPartial(e)) || [];\n        message.fulfilmentFees =\n            object.fulfilmentFees?.map((e) => FixedFeeTuple.fromPartial(e)) || [];\n        message.feeRecipients =\n            object.feeRecipients?.map((e) => AdminFeeRecipient.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgCreateProtocolFeesResponse() {\n    return {};\n}\nconst MsgCreateProtocolFeesResponse = {\n    encode(_, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgCreateProtocolFeesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return MsgCreateProtocolFeesResponse.fromPartial(base ?? {});\n    },\n    fromPartial(_) {\n        const message = createBaseMsgCreateProtocolFeesResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateProtocolFees() {\n    return {\n        creator: \"\",\n        feeBP: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        collectionFees: [],\n        fulfilmentFees: [],\n        feeRecipients: [],\n    };\n}\nconst MsgUpdateProtocolFees = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (!message.feeBP.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(16).uint64(message.feeBP.toString());\n        }\n        for (const v of message.collectionFees) {\n            FixedFeeTuple.encode(v, writer.uint32(26).fork()).join();\n        }\n        for (const v of message.fulfilmentFees) {\n            FixedFeeTuple.encode(v, writer.uint32(34).fork()).join();\n        }\n        for (const v of message.feeRecipients) {\n            AdminFeeRecipient.encode(v, writer.uint32(42).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateProtocolFees();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.creator = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.feeBP = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.collectionFees.push(FixedFeeTuple.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.fulfilmentFees.push(FixedFeeTuple.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.feeRecipients.push(AdminFeeRecipient.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            creator: isSet(object.creator) ? globalThis.String(object.creator) : \"\",\n            feeBP: isSet(object.feeBP) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.feeBP) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            collectionFees: globalThis.Array.isArray(object?.collectionFees)\n                ? object.collectionFees.map((e) => FixedFeeTuple.fromJSON(e))\n                : [],\n            fulfilmentFees: globalThis.Array.isArray(object?.fulfilmentFees)\n                ? object.fulfilmentFees.map((e) => FixedFeeTuple.fromJSON(e))\n                : [],\n            feeRecipients: globalThis.Array.isArray(object?.feeRecipients)\n                ? object.feeRecipients.map((e) => AdminFeeRecipient.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.creator !== \"\") {\n            obj.creator = message.creator;\n        }\n        if (!message.feeBP.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.feeBP = (message.feeBP || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.collectionFees?.length) {\n            obj.collectionFees = message.collectionFees.map((e) => FixedFeeTuple.toJSON(e));\n        }\n        if (message.fulfilmentFees?.length) {\n            obj.fulfilmentFees = message.fulfilmentFees.map((e) => FixedFeeTuple.toJSON(e));\n        }\n        if (message.feeRecipients?.length) {\n            obj.feeRecipients = message.feeRecipients.map((e) => AdminFeeRecipient.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgUpdateProtocolFees.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateProtocolFees();\n        message.creator = object.creator ?? \"\";\n        message.feeBP =\n            object.feeBP !== undefined && object.feeBP !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.feeBP)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.collectionFees =\n            object.collectionFees?.map((e) => FixedFeeTuple.fromPartial(e)) || [];\n        message.fulfilmentFees =\n            object.fulfilmentFees?.map((e) => FixedFeeTuple.fromPartial(e)) || [];\n        message.feeRecipients =\n            object.feeRecipients?.map((e) => AdminFeeRecipient.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgUpdateProtocolFeesResponse() {\n    return {};\n}\nconst MsgUpdateProtocolFeesResponse = {\n    encode(_, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateProtocolFeesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return MsgUpdateProtocolFeesResponse.fromPartial(base ?? {});\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateProtocolFeesResponse();\n        return message;\n    },\n};\nfunction createBasePriceOracleDatum() {\n    return {\n        universe: 0,\n        chainID: new Uint8Array(0),\n        tokenAddress: new Uint8Array(0),\n        price: new Uint8Array(0),\n        decimals: 0,\n    };\n}\nconst PriceOracleDatum = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.universe !== 0) {\n            writer.uint32(8).int32(message.universe);\n        }\n        if (message.chainID.length !== 0) {\n            writer.uint32(18).bytes(message.chainID);\n        }\n        if (message.tokenAddress.length !== 0) {\n            writer.uint32(26).bytes(message.tokenAddress);\n        }\n        if (message.price.length !== 0) {\n            writer.uint32(34).bytes(message.price);\n        }\n        if (message.decimals !== 0) {\n            writer.uint32(40).uint32(message.decimals);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePriceOracleDatum();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.universe = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.chainID = reader.bytes();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.tokenAddress = reader.bytes();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.price = reader.bytes();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.decimals = reader.uint32();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            universe: isSet(object.universe) ? universeFromJSON(object.universe) : 0,\n            chainID: isSet(object.chainID)\n                ? bytesFromBase64(object.chainID)\n                : new Uint8Array(0),\n            tokenAddress: isSet(object.tokenAddress)\n                ? bytesFromBase64(object.tokenAddress)\n                : new Uint8Array(0),\n            price: isSet(object.price)\n                ? bytesFromBase64(object.price)\n                : new Uint8Array(0),\n            decimals: isSet(object.decimals) ? globalThis.Number(object.decimals) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.universe !== 0) {\n            obj.universe = universeToJSON(message.universe);\n        }\n        if (message.chainID.length !== 0) {\n            obj.chainID = base64FromBytes(message.chainID);\n        }\n        if (message.tokenAddress.length !== 0) {\n            obj.tokenAddress = base64FromBytes(message.tokenAddress);\n        }\n        if (message.price.length !== 0) {\n            obj.price = base64FromBytes(message.price);\n        }\n        if (message.decimals !== 0) {\n            obj.decimals = Math.round(message.decimals);\n        }\n        return obj;\n    },\n    create(base) {\n        return PriceOracleDatum.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBasePriceOracleDatum();\n        message.universe = object.universe ?? 0;\n        message.chainID = object.chainID ?? new Uint8Array(0);\n        message.tokenAddress = object.tokenAddress ?? new Uint8Array(0);\n        message.price = object.price ?? new Uint8Array(0);\n        message.decimals = object.decimals ?? 0;\n        return message;\n    },\n};\nfunction createBasePriceOracleData() {\n    return { priceData: [] };\n}\nconst PriceOracleData = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        for (const v of message.priceData) {\n            PriceOracleDatum.encode(v, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePriceOracleData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.priceData.push(PriceOracleDatum.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            priceData: globalThis.Array.isArray(object?.priceData)\n                ? object.priceData.map((e) => PriceOracleDatum.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.priceData?.length) {\n            obj.priceData = message.priceData.map((e) => PriceOracleDatum.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return PriceOracleData.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBasePriceOracleData();\n        message.priceData =\n            object.priceData?.map((e) => PriceOracleDatum.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseQueryGetPriceOracleDataRequest() {\n    return {};\n}\nconst QueryGetPriceOracleDataRequest = {\n    encode(_, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetPriceOracleDataRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return QueryGetPriceOracleDataRequest.fromPartial(base ?? {});\n    },\n    fromPartial(_) {\n        const message = createBaseQueryGetPriceOracleDataRequest();\n        return message;\n    },\n};\nfunction createBaseQueryGetPriceOracleDataResponse() {\n    return { PriceOracleData: undefined };\n}\nconst QueryGetPriceOracleDataResponse = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.PriceOracleData !== undefined) {\n            PriceOracleData.encode(message.PriceOracleData, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQueryGetPriceOracleDataResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.PriceOracleData = PriceOracleData.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            PriceOracleData: isSet(object.PriceOracleData)\n                ? PriceOracleData.fromJSON(object.PriceOracleData)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.PriceOracleData !== undefined) {\n            obj.PriceOracleData = PriceOracleData.toJSON(message.PriceOracleData);\n        }\n        return obj;\n    },\n    create(base) {\n        return QueryGetPriceOracleDataResponse.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseQueryGetPriceOracleDataResponse();\n        message.PriceOracleData =\n            object.PriceOracleData !== undefined && object.PriceOracleData !== null\n                ? PriceOracleData.fromPartial(object.PriceOracleData)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseMsgRefundReq() {\n    return { creator: \"\", rffID: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO };\n}\nconst MsgRefundReq = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (!message.rffID.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(16).uint64(message.rffID.toString());\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRefundReq();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.creator = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.rffID = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            creator: isSet(object.creator) ? globalThis.String(object.creator) : \"\",\n            rffID: isSet(object.rffID) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.rffID) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.creator !== \"\") {\n            obj.creator = message.creator;\n        }\n        if (!message.rffID.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.rffID = (message.rffID || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgRefundReq.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgRefundReq();\n        message.creator = object.creator ?? \"\";\n        message.rffID =\n            object.rffID !== undefined && object.rffID !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.rffID)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        return message;\n    },\n};\nfunction createBaseMsgRefundReqResponse() {\n    return {};\n}\nconst MsgRefundReqResponse = {\n    encode(_, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgRefundReqResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return MsgRefundReqResponse.fromPartial(base ?? {});\n    },\n    fromPartial(_) {\n        const message = createBaseMsgRefundReqResponse();\n        return message;\n    },\n};\nfunction createBaseDepositVEPacket() {\n    return { id: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO, gasRefunded: false };\n}\nconst DepositVEPacket = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(8).uint64(message.id.toString());\n        }\n        if (message.gasRefunded !== false) {\n            writer.uint32(16).bool(message.gasRefunded);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDepositVEPacket();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.id = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.gasRefunded = reader.bool();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            id: isSet(object.id) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            gasRefunded: isSet(object.gasRefunded)\n                ? globalThis.Boolean(object.gasRefunded)\n                : false,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.id = (message.id || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.gasRefunded !== false) {\n            obj.gasRefunded = message.gasRefunded;\n        }\n        return obj;\n    },\n    create(base) {\n        return DepositVEPacket.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseDepositVEPacket();\n        message.id =\n            object.id !== undefined && object.id !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.gasRefunded = object.gasRefunded ?? false;\n        return message;\n    },\n};\nfunction createBaseFillVEPacket() {\n    return {\n        id: long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n        fillerAddress: new Uint8Array(0),\n        transactionHash: new Uint8Array(0),\n    };\n}\nconst FillVEPacket = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            writer.uint32(8).uint64(message.id.toString());\n        }\n        if (message.fillerAddress.length !== 0) {\n            writer.uint32(18).bytes(message.fillerAddress);\n        }\n        if (message.transactionHash.length !== 0) {\n            writer.uint32(26).bytes(message.transactionHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFillVEPacket();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.id = long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromString(reader.uint64().toString(), true);\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.fillerAddress = reader.bytes();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.transactionHash = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            id: isSet(object.id) ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id) : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO,\n            fillerAddress: isSet(object.fillerAddress)\n                ? bytesFromBase64(object.fillerAddress)\n                : new Uint8Array(0),\n            transactionHash: isSet(object.transactionHash)\n                ? bytesFromBase64(object.transactionHash)\n                : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (!message.id.equals(long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO)) {\n            obj.id = (message.id || long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO).toString();\n        }\n        if (message.fillerAddress.length !== 0) {\n            obj.fillerAddress = base64FromBytes(message.fillerAddress);\n        }\n        if (message.transactionHash.length !== 0) {\n            obj.transactionHash = base64FromBytes(message.transactionHash);\n        }\n        return obj;\n    },\n    create(base) {\n        return FillVEPacket.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseFillVEPacket();\n        message.id =\n            object.id !== undefined && object.id !== null\n                ? long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromValue(object.id)\n                : long__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UZERO;\n        message.fillerAddress = object.fillerAddress ?? new Uint8Array(0);\n        message.transactionHash = object.transactionHash ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseMsgDoubleCheckTx() {\n    return {\n        creator: \"\",\n        txUniverse: 0,\n        txChainID: new Uint8Array(0),\n        packet: undefined,\n    };\n}\nconst MsgDoubleCheckTx = {\n    encode(message, writer = new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.txUniverse !== 0) {\n            writer.uint32(16).int32(message.txUniverse);\n        }\n        if (message.txChainID.length !== 0) {\n            writer.uint32(26).bytes(message.txChainID);\n        }\n        switch (message.packet?.$case) {\n            case \"depositPacket\":\n                DepositVEPacket.encode(message.packet.value, writer.uint32(42).fork()).join();\n                break;\n            case \"fillPacket\":\n                FillVEPacket.encode(message.packet.value, writer.uint32(50).fork()).join();\n                break;\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _bufbuild_protobuf_wire__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgDoubleCheckTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.creator = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.txUniverse = reader.int32();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.txChainID = reader.bytes();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.packet = {\n                        $case: \"depositPacket\",\n                        value: DepositVEPacket.decode(reader, reader.uint32()),\n                    };\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.packet = {\n                        $case: \"fillPacket\",\n                        value: FillVEPacket.decode(reader, reader.uint32()),\n                    };\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            creator: isSet(object.creator) ? globalThis.String(object.creator) : \"\",\n            txUniverse: isSet(object.txUniverse)\n                ? universeFromJSON(object.txUniverse)\n                : 0,\n            txChainID: isSet(object.txChainID)\n                ? bytesFromBase64(object.txChainID)\n                : new Uint8Array(0),\n            packet: isSet(object.depositPacket)\n                ? {\n                    $case: \"depositPacket\",\n                    value: DepositVEPacket.fromJSON(object.depositPacket),\n                }\n                : isSet(object.fillPacket)\n                    ? {\n                        $case: \"fillPacket\",\n                        value: FillVEPacket.fromJSON(object.fillPacket),\n                    }\n                    : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.creator !== \"\") {\n            obj.creator = message.creator;\n        }\n        if (message.txUniverse !== 0) {\n            obj.txUniverse = universeToJSON(message.txUniverse);\n        }\n        if (message.txChainID.length !== 0) {\n            obj.txChainID = base64FromBytes(message.txChainID);\n        }\n        if (message.packet?.$case === \"depositPacket\") {\n            obj.depositPacket = DepositVEPacket.toJSON(message.packet.value);\n        }\n        else if (message.packet?.$case === \"fillPacket\") {\n            obj.fillPacket = FillVEPacket.toJSON(message.packet.value);\n        }\n        return obj;\n    },\n    create(base) {\n        return MsgDoubleCheckTx.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseMsgDoubleCheckTx();\n        message.creator = object.creator ?? \"\";\n        message.txUniverse = object.txUniverse ?? 0;\n        message.txChainID = object.txChainID ?? new Uint8Array(0);\n        switch (object.packet?.$case) {\n            case \"depositPacket\": {\n                if (object.packet?.value !== undefined &&\n                    object.packet?.value !== null) {\n                    message.packet = {\n                        $case: \"depositPacket\",\n                        value: DepositVEPacket.fromPartial(object.packet.value),\n                    };\n                }\n                break;\n            }\n            case \"fillPacket\": {\n                if (object.packet?.value !== undefined &&\n                    object.packet?.value !== null) {\n                    message.packet = {\n                        $case: \"fillPacket\",\n                        value: FillVEPacket.fromPartial(object.packet.value),\n                    };\n                }\n                break;\n            }\n        }\n        return message;\n    },\n};\nfunction bytesFromBase64(b64) {\n    if (globalThis.Buffer) {\n        return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n    }\n    else {\n        const bin = globalThis.atob(b64);\n        const arr = new Uint8Array(bin.length);\n        for (let i = 0; i < bin.length; ++i) {\n            arr[i] = bin.charCodeAt(i);\n        }\n        return arr;\n    }\n}\nfunction base64FromBytes(arr) {\n    if (globalThis.Buffer) {\n        return globalThis.Buffer.from(arr).toString(\"base64\");\n    }\n    else {\n        const bin = [];\n        arr.forEach((byte) => {\n            bin.push(globalThis.String.fromCharCode(byte));\n        });\n        return globalThis.btoa(bin.join(\"\"));\n    }\n}\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/grpc.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/grpc.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GrpcWebError: () => (/* binding */ GrpcWebError),\n/* harmony export */   GrpcWebImpl: () => (/* binding */ GrpcWebImpl),\n/* harmony export */   QueryClientImpl: () => (/* binding */ QueryClientImpl),\n/* harmony export */   QueryDesc: () => (/* binding */ QueryDesc),\n/* harmony export */   QueryPriceOracleDataDesc: () => (/* binding */ QueryPriceOracleDataDesc),\n/* harmony export */   QueryProtocolFeesDesc: () => (/* binding */ QueryProtocolFeesDesc),\n/* harmony export */   QueryRequestForFundsAllDesc: () => (/* binding */ QueryRequestForFundsAllDesc),\n/* harmony export */   QueryRequestForFundsByAddressDesc: () => (/* binding */ QueryRequestForFundsByAddressDesc),\n/* harmony export */   QueryRequestForFundsDesc: () => (/* binding */ QueryRequestForFundsDesc),\n/* harmony export */   QuerySettlementAllDesc: () => (/* binding */ QuerySettlementAllDesc),\n/* harmony export */   QuerySettlementDesc: () => (/* binding */ QuerySettlementDesc),\n/* harmony export */   QuerySolverDataAllDesc: () => (/* binding */ QuerySolverDataAllDesc),\n/* harmony export */   QuerySolverDataDesc: () => (/* binding */ QuerySolverDataDesc),\n/* harmony export */   protobufPackage: () => (/* binding */ protobufPackage)\n/* harmony export */ });\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @improbable-eng/grpc-web */ \"(ssr)/./node_modules/.pnpm/@improbable-eng+grpc-web@0.15.0_google-protobuf@3.21.4/node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.js\");\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var browser_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-headers */ \"(ssr)/./node_modules/.pnpm/browser-headers@0.4.1/node_modules/browser-headers/dist/browser-headers.js\");\n/* harmony import */ var browser_headers__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(browser_headers__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _definition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.0\n//   protoc               v6.31.0\n// source: grpc.proto\n/* eslint-disable */\n\n\n\nconst protobufPackage = \"xarchain.chainabstraction\";\nclass QueryClientImpl {\n    rpc;\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.RequestForFunds = this.RequestForFunds.bind(this);\n        this.RequestForFundsAll = this.RequestForFundsAll.bind(this);\n        this.RequestForFundsByAddress = this.RequestForFundsByAddress.bind(this);\n        this.SolverData = this.SolverData.bind(this);\n        this.SolverDataAll = this.SolverDataAll.bind(this);\n        this.Settlement = this.Settlement.bind(this);\n        this.SettlementAll = this.SettlementAll.bind(this);\n        this.ProtocolFees = this.ProtocolFees.bind(this);\n        this.PriceOracleData = this.PriceOracleData.bind(this);\n    }\n    RequestForFunds(request, metadata) {\n        return this.rpc.unary(QueryRequestForFundsDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetRequestForFundsRequest.fromPartial(request), metadata);\n    }\n    RequestForFundsAll(request, metadata) {\n        return this.rpc.unary(QueryRequestForFundsAllDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllRequestForFundsRequest.fromPartial(request), metadata);\n    }\n    RequestForFundsByAddress(request, metadata) {\n        return this.rpc.unary(QueryRequestForFundsByAddressDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryRequestForFundsByAddressRequest.fromPartial(request), metadata);\n    }\n    SolverData(request, metadata) {\n        return this.rpc.unary(QuerySolverDataDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetSolverDataRequest.fromPartial(request), metadata);\n    }\n    SolverDataAll(request, metadata) {\n        return this.rpc.unary(QuerySolverDataAllDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllSolverDataRequest.fromPartial(request), metadata);\n    }\n    Settlement(request, metadata) {\n        return this.rpc.unary(QuerySettlementDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetSettlementRequest.fromPartial(request), metadata);\n    }\n    SettlementAll(request, metadata) {\n        return this.rpc.unary(QuerySettlementAllDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllSettlementRequest.fromPartial(request), metadata);\n    }\n    ProtocolFees(request, metadata) {\n        return this.rpc.unary(QueryProtocolFeesDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetProtocolFeesRequest.fromPartial(request), metadata);\n    }\n    PriceOracleData(request, metadata) {\n        return this.rpc.unary(QueryPriceOracleDataDesc, _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetPriceOracleDataRequest.fromPartial(request), metadata);\n    }\n}\nconst QueryDesc = { serviceName: \"xarchain.chainabstraction.Query\" };\nconst QueryRequestForFundsDesc = {\n    methodName: \"RequestForFunds\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetRequestForFundsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetRequestForFundsResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QueryRequestForFundsAllDesc = {\n    methodName: \"RequestForFundsAll\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllRequestForFundsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllRequestForFundsResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QueryRequestForFundsByAddressDesc = {\n    methodName: \"RequestForFundsByAddress\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryRequestForFundsByAddressRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllRequestForFundsResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QuerySolverDataDesc = {\n    methodName: \"SolverData\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetSolverDataRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetSolverDataResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QuerySolverDataAllDesc = {\n    methodName: \"SolverDataAll\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllSolverDataRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllSolverDataResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QuerySettlementDesc = {\n    methodName: \"Settlement\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetSettlementRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetSettlementResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QuerySettlementAllDesc = {\n    methodName: \"SettlementAll\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllSettlementRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryAllSettlementResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QueryProtocolFeesDesc = {\n    methodName: \"ProtocolFees\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetProtocolFeesRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetProtocolFeesResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nconst QueryPriceOracleDataDesc = {\n    methodName: \"PriceOracleData\",\n    service: QueryDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetPriceOracleDataRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = _definition__WEBPACK_IMPORTED_MODULE_2__.QueryGetPriceOracleDataResponse.decode(data);\n            return {\n                ...value,\n                toObject() {\n                    return value;\n                },\n            };\n        },\n    },\n};\nclass GrpcWebImpl {\n    host;\n    options;\n    constructor(host, options) {\n        this.host = host;\n        this.options = options;\n    }\n    unary(methodDesc, _request, metadata) {\n        const request = { ..._request, ...methodDesc.requestType };\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new browser_headers__WEBPACK_IMPORTED_MODULE_1__.BrowserHeaders({\n                ...this.options?.metadata.headersMap,\n                ...metadata?.headersMap,\n            })\n            : (metadata ?? this.options.metadata);\n        return new Promise((resolve, reject) => {\n            _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__.grpc.unary(methodDesc, {\n                request,\n                host: this.host,\n                metadata: maybeCombinedMetadata ?? {},\n                ...(this.options.transport !== undefined\n                    ? { transport: this.options.transport }\n                    : {}),\n                debug: this.options.debug ?? false,\n                onEnd: function (response) {\n                    if (response.status === _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__.grpc.Code.OK) {\n                        resolve(response.message.toObject());\n                    }\n                    else {\n                        const err = new GrpcWebError(response.statusMessage, response.status, response.trailers);\n                        reject(err);\n                    }\n                },\n            });\n        });\n    }\n}\nclass GrpcWebError extends globalThis.Error {\n    code;\n    metadata;\n    constructor(message, code, metadata) {\n        super(message);\n        this.code = code;\n        this.metadata = metadata;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/grpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/fuel.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/fuel.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fuelUniverseToProtobufUniverse: () => (/* binding */ fuelUniverseToProtobufUniverse),\n/* harmony export */   protobufUniverseToFuelUniverse: () => (/* binding */ protobufUniverseToFuelUniverse)\n/* harmony export */ });\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n/* harmony import */ var _fuelcontracts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fuelcontracts */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/fuelcontracts/index.js\");\n\n\nfunction protobufUniverseToFuelUniverse(input) {\n    switch (input) {\n        case _proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM:\n            return _fuelcontracts__WEBPACK_IMPORTED_MODULE_1__.UniverseInput.ETHEREUM;\n        case _proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.FUEL:\n            return _fuelcontracts__WEBPACK_IMPORTED_MODULE_1__.UniverseInput.FUEL;\n        case _proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.SOLANA:\n            return _fuelcontracts__WEBPACK_IMPORTED_MODULE_1__.UniverseInput.SOLANA;\n    }\n    throw new Error(\"Invalid universe\");\n}\nfunction fuelUniverseToProtobufUniverse(input) {\n    switch (input) {\n        case _fuelcontracts__WEBPACK_IMPORTED_MODULE_1__.UniverseOutput.ETHEREUM:\n            return _proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.ETHEREUM;\n        case _fuelcontracts__WEBPACK_IMPORTED_MODULE_1__.UniverseOutput.FUEL:\n            return _proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.FUEL;\n        case _fuelcontracts__WEBPACK_IMPORTED_MODULE_1__.UniverseOutput.SOLANA:\n            return _proto_definition__WEBPACK_IMPORTED_MODULE_0__.Universe.SOLANA;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9yZmYvZnVlbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStDO0FBQ2tCO0FBQzFEO0FBQ1A7QUFDQSxhQUFhLHVEQUFRO0FBQ3JCLG1CQUFtQix5REFBYTtBQUNoQyxhQUFhLHVEQUFRO0FBQ3JCLG1CQUFtQix5REFBYTtBQUNoQyxhQUFhLHVEQUFRO0FBQ3JCLG1CQUFtQix5REFBYTtBQUNoQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSwwREFBYztBQUMzQixtQkFBbUIsdURBQVE7QUFDM0IsYUFBYSwwREFBYztBQUMzQixtQkFBbUIsdURBQVE7QUFDM0IsYUFBYSwwREFBYztBQUMzQixtQkFBbUIsdURBQVE7QUFDM0I7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9yZmYvZnVlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVbml2ZXJzZSB9IGZyb20gXCIuLi9wcm90by9kZWZpbml0aW9uXCI7XG5pbXBvcnQgeyBVbml2ZXJzZUlucHV0LCBVbml2ZXJzZU91dHB1dCB9IGZyb20gXCIuLi9mdWVsY29udHJhY3RzXCI7XG5leHBvcnQgZnVuY3Rpb24gcHJvdG9idWZVbml2ZXJzZVRvRnVlbFVuaXZlcnNlKGlucHV0KSB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgICBjYXNlIFVuaXZlcnNlLkVUSEVSRVVNOlxuICAgICAgICAgICAgcmV0dXJuIFVuaXZlcnNlSW5wdXQuRVRIRVJFVU07XG4gICAgICAgIGNhc2UgVW5pdmVyc2UuRlVFTDpcbiAgICAgICAgICAgIHJldHVybiBVbml2ZXJzZUlucHV0LkZVRUw7XG4gICAgICAgIGNhc2UgVW5pdmVyc2UuU09MQU5BOlxuICAgICAgICAgICAgcmV0dXJuIFVuaXZlcnNlSW5wdXQuU09MQU5BO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHVuaXZlcnNlXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZ1ZWxVbml2ZXJzZVRvUHJvdG9idWZVbml2ZXJzZShpbnB1dCkge1xuICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgICAgY2FzZSBVbml2ZXJzZU91dHB1dC5FVEhFUkVVTTpcbiAgICAgICAgICAgIHJldHVybiBVbml2ZXJzZS5FVEhFUkVVTTtcbiAgICAgICAgY2FzZSBVbml2ZXJzZU91dHB1dC5GVUVMOlxuICAgICAgICAgICAgcmV0dXJuIFVuaXZlcnNlLkZVRUw7XG4gICAgICAgIGNhc2UgVW5pdmVyc2VPdXRwdXQuU09MQU5BOlxuICAgICAgICAgICAgcmV0dXJuIFVuaXZlcnNlLlNPTEFOQTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/fuel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/rff.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/rff.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OmniversalRFF: () => (/* binding */ OmniversalRFF)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/fromBytes.js\");\n/* harmony import */ var fuels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fuels */ \"(ssr)/./node_modules/.pnpm/fuels@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_jsdom@26.1_b20937e3f604b46d6217e388b4bd6dee/node_modules/fuels/dist/index.mjs\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n/* harmony import */ var _fuel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fuel */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/fuel.js\");\n\n\n\n\nclass OmniversalRFF {\n    protobufRFF;\n    evmRFF;\n    fuelRFF;\n    constructor(protobufRFF) {\n        this.protobufRFF = protobufRFF;\n    }\n    asEVMRFF() {\n        if (this.evmRFF == null) {\n            this.evmRFF = {\n                sources: this.protobufRFF.sources.map(s => ({\n                    universe: s.universe,\n                    chainID: (0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToBigInt)(s.chainID),\n                    tokenAddress: (0,_data__WEBPACK_IMPORTED_MODULE_1__.ezPadTo32Hex)(s.tokenAddress),\n                    value: (0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToBigInt)(s.value),\n                })),\n                destinationUniverse: this.protobufRFF.destinationUniverse,\n                destinationChainID: (0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToBigInt)(this.protobufRFF.destinationChainID),\n                destinations: this.protobufRFF.destinations.map(d => ({\n                    tokenAddress: (0,_data__WEBPACK_IMPORTED_MODULE_1__.ezPadTo32Hex)(d.tokenAddress),\n                    value: (0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToBigInt)(d.value),\n                })),\n                nonce: (0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToBigInt)(this.protobufRFF.nonce),\n                expiry: BigInt(this.protobufRFF.expiry.toString()),\n                parties: this.protobufRFF.signatureData.map(sd => ({\n                    universe: sd.universe,\n                    address_: (0,_data__WEBPACK_IMPORTED_MODULE_1__.ezPadTo32Hex)(sd.address),\n                }))\n            };\n        }\n        return this.evmRFF;\n    }\n    asFuelRFF() {\n        if (this.fuelRFF == null) {\n            this.fuelRFF = {\n                sources: this.protobufRFF.sources.map(s => ({\n                    universe: (0,_fuel__WEBPACK_IMPORTED_MODULE_2__.protobufUniverseToFuelUniverse)(s.universe),\n                    chain_id: new fuels__WEBPACK_IMPORTED_MODULE_0__.BN(s.chainID),\n                    asset_id: {\n                        bits: (0,_data__WEBPACK_IMPORTED_MODULE_1__.ezPadTo32Hex)(s.tokenAddress),\n                    },\n                    value: new fuels__WEBPACK_IMPORTED_MODULE_0__.BN(s.value),\n                })),\n                destination_chain_id: new fuels__WEBPACK_IMPORTED_MODULE_0__.BN(this.protobufRFF.destinationChainID),\n                destination_universe: (0,_fuel__WEBPACK_IMPORTED_MODULE_2__.protobufUniverseToFuelUniverse)(this.protobufRFF.destinationUniverse),\n                destinations: this.protobufRFF.destinations.map(d => ({\n                    asset_id: {\n                        bits: (0,_data__WEBPACK_IMPORTED_MODULE_1__.ezPadTo32Hex)(d.tokenAddress)\n                    },\n                    value: new fuels__WEBPACK_IMPORTED_MODULE_0__.BN(d.value)\n                })),\n                expiry: new fuels__WEBPACK_IMPORTED_MODULE_0__.BN(this.protobufRFF.expiry.toBytesBE()),\n                nonce: new fuels__WEBPACK_IMPORTED_MODULE_0__.BN(this.protobufRFF.nonce),\n                parties: this.protobufRFF.signatureData.map(sd => ({\n                    universe: (0,_fuel__WEBPACK_IMPORTED_MODULE_2__.protobufUniverseToFuelUniverse)(sd.universe),\n                    address: {\n                        bits: (0,_data__WEBPACK_IMPORTED_MODULE_1__.ezPadTo32Hex)(sd.address),\n                    }\n                })),\n            };\n        }\n        return this.fuelRFF;\n    }\n    asProtobufRFF() {\n        return this.protobufRFF;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS9yZmYvcmZmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFDO0FBQ1Y7QUFDWTtBQUNpQjtBQUNqRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsbURBQWE7QUFDMUMsa0NBQWtDLG1EQUFZO0FBQzlDLDJCQUEyQixtREFBYTtBQUN4QyxpQkFBaUI7QUFDakI7QUFDQSxvQ0FBb0MsbURBQWE7QUFDakQ7QUFDQSxrQ0FBa0MsbURBQVk7QUFDOUMsMkJBQTJCLG1EQUFhO0FBQ3hDLGlCQUFpQjtBQUNqQix1QkFBdUIsbURBQWE7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1EQUFZO0FBQzFDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHFFQUE4QjtBQUM1RCxrQ0FBa0MscUNBQUU7QUFDcEM7QUFDQSw4QkFBOEIsbURBQVk7QUFDMUMscUJBQXFCO0FBQ3JCLCtCQUErQixxQ0FBRTtBQUNqQyxpQkFBaUI7QUFDakIsMENBQTBDLHFDQUFFO0FBQzVDLHNDQUFzQyxxRUFBOEI7QUFDcEU7QUFDQTtBQUNBLDhCQUE4QixtREFBWTtBQUMxQyxxQkFBcUI7QUFDckIsK0JBQStCLHFDQUFFO0FBQ2pDLGlCQUFpQjtBQUNqQiw0QkFBNEIscUNBQUU7QUFDOUIsMkJBQTJCLHFDQUFFO0FBQzdCO0FBQ0EsOEJBQThCLHFFQUE4QjtBQUM1RDtBQUNBLDhCQUE4QixtREFBWTtBQUMxQztBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AYXJjYW5hK2NhLWNvbW1vbkAxLjAuMS1hbHBoYS42X0Bjb3NtanMrcHJvdG8tc2lnbmluZ0AwLjM0LjBfQGNvc21qcytzdGFyZ2F0ZUAwLjM0LjBfYnVfZjIyM2NjMGZmOWY4NjQ0NGRlMDg3N2U1OWE3OGU3Y2Evbm9kZV9tb2R1bGVzL0BhcmNhbmEvY2EtY29tbW9uL2Rpc3QvZXNtL3JmZi9yZmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnl0ZXNUb0JpZ0ludCB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyBCTiB9IGZyb20gXCJmdWVsc1wiO1xuaW1wb3J0IHsgZXpQYWRUbzMySGV4IH0gZnJvbSBcIi4uL2RhdGFcIjtcbmltcG9ydCB7IHByb3RvYnVmVW5pdmVyc2VUb0Z1ZWxVbml2ZXJzZSB9IGZyb20gXCIuL2Z1ZWxcIjtcbmV4cG9ydCBjbGFzcyBPbW5pdmVyc2FsUkZGIHtcbiAgICBwcm90b2J1ZlJGRjtcbiAgICBldm1SRkY7XG4gICAgZnVlbFJGRjtcbiAgICBjb25zdHJ1Y3Rvcihwcm90b2J1ZlJGRikge1xuICAgICAgICB0aGlzLnByb3RvYnVmUkZGID0gcHJvdG9idWZSRkY7XG4gICAgfVxuICAgIGFzRVZNUkZGKCkge1xuICAgICAgICBpZiAodGhpcy5ldm1SRkYgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5ldm1SRkYgPSB7XG4gICAgICAgICAgICAgICAgc291cmNlczogdGhpcy5wcm90b2J1ZlJGRi5zb3VyY2VzLm1hcChzID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIHVuaXZlcnNlOiBzLnVuaXZlcnNlLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklEOiBieXRlc1RvQmlnSW50KHMuY2hhaW5JRCksXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogZXpQYWRUbzMySGV4KHMudG9rZW5BZGRyZXNzKSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGJ5dGVzVG9CaWdJbnQocy52YWx1ZSksXG4gICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgIGRlc3RpbmF0aW9uVW5pdmVyc2U6IHRoaXMucHJvdG9idWZSRkYuZGVzdGluYXRpb25Vbml2ZXJzZSxcbiAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbkNoYWluSUQ6IGJ5dGVzVG9CaWdJbnQodGhpcy5wcm90b2J1ZlJGRi5kZXN0aW5hdGlvbkNoYWluSUQpLFxuICAgICAgICAgICAgICAgIGRlc3RpbmF0aW9uczogdGhpcy5wcm90b2J1ZlJGRi5kZXN0aW5hdGlvbnMubWFwKGQgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBlelBhZFRvMzJIZXgoZC50b2tlbkFkZHJlc3MpLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYnl0ZXNUb0JpZ0ludChkLnZhbHVlKSxcbiAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgbm9uY2U6IGJ5dGVzVG9CaWdJbnQodGhpcy5wcm90b2J1ZlJGRi5ub25jZSksXG4gICAgICAgICAgICAgICAgZXhwaXJ5OiBCaWdJbnQodGhpcy5wcm90b2J1ZlJGRi5leHBpcnkudG9TdHJpbmcoKSksXG4gICAgICAgICAgICAgICAgcGFydGllczogdGhpcy5wcm90b2J1ZlJGRi5zaWduYXR1cmVEYXRhLm1hcChzZCA9PiAoe1xuICAgICAgICAgICAgICAgICAgICB1bml2ZXJzZTogc2QudW5pdmVyc2UsXG4gICAgICAgICAgICAgICAgICAgIGFkZHJlc3NfOiBlelBhZFRvMzJIZXgoc2QuYWRkcmVzcyksXG4gICAgICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmV2bVJGRjtcbiAgICB9XG4gICAgYXNGdWVsUkZGKCkge1xuICAgICAgICBpZiAodGhpcy5mdWVsUkZGID09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuZnVlbFJGRiA9IHtcbiAgICAgICAgICAgICAgICBzb3VyY2VzOiB0aGlzLnByb3RvYnVmUkZGLnNvdXJjZXMubWFwKHMgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgdW5pdmVyc2U6IHByb3RvYnVmVW5pdmVyc2VUb0Z1ZWxVbml2ZXJzZShzLnVuaXZlcnNlKSxcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5faWQ6IG5ldyBCTihzLmNoYWluSUQpLFxuICAgICAgICAgICAgICAgICAgICBhc3NldF9pZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgYml0czogZXpQYWRUbzMySGV4KHMudG9rZW5BZGRyZXNzKSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG5ldyBCTihzLnZhbHVlKSxcbiAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb25fY2hhaW5faWQ6IG5ldyBCTih0aGlzLnByb3RvYnVmUkZGLmRlc3RpbmF0aW9uQ2hhaW5JRCksXG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb25fdW5pdmVyc2U6IHByb3RvYnVmVW5pdmVyc2VUb0Z1ZWxVbml2ZXJzZSh0aGlzLnByb3RvYnVmUkZGLmRlc3RpbmF0aW9uVW5pdmVyc2UpLFxuICAgICAgICAgICAgICAgIGRlc3RpbmF0aW9uczogdGhpcy5wcm90b2J1ZlJGRi5kZXN0aW5hdGlvbnMubWFwKGQgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgYXNzZXRfaWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJpdHM6IGV6UGFkVG8zMkhleChkLnRva2VuQWRkcmVzcylcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG5ldyBCTihkLnZhbHVlKVxuICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICBleHBpcnk6IG5ldyBCTih0aGlzLnByb3RvYnVmUkZGLmV4cGlyeS50b0J5dGVzQkUoKSksXG4gICAgICAgICAgICAgICAgbm9uY2U6IG5ldyBCTih0aGlzLnByb3RvYnVmUkZGLm5vbmNlKSxcbiAgICAgICAgICAgICAgICBwYXJ0aWVzOiB0aGlzLnByb3RvYnVmUkZGLnNpZ25hdHVyZURhdGEubWFwKHNkID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIHVuaXZlcnNlOiBwcm90b2J1ZlVuaXZlcnNlVG9GdWVsVW5pdmVyc2Uoc2QudW5pdmVyc2UpLFxuICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiaXRzOiBlelBhZFRvMzJIZXgoc2QuYWRkcmVzcyksXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmZ1ZWxSRkY7XG4gICAgfVxuICAgIGFzUHJvdG9idWZSRkYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3RvYnVmUkZGO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/rff/rff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/binarytypes.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/binarytypes.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS90eXBlcy9iaW5hcnl0eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20vdHlwZXMvYmluYXJ5dHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/binarytypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/index.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/index.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   msgpackableAxios: () => (/* reexport safe */ _msgpack_axios__WEBPACK_IMPORTED_MODULE_1__.msgpackableAxios)\n/* harmony export */ });\n/* harmony import */ var _binarytypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binarytypes */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/binarytypes.js\");\n/* harmony import */ var _msgpack_axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./msgpack-axios */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/msgpack-axios.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEI7QUFDRSIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS90eXBlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2JpbmFyeXR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vbXNncGFjay1heGlvcyc7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/msgpack-axios.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/msgpack-axios.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   msgpackableAxios: () => (/* binding */ msgpackableAxios)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/.pnpm/axios@1.12.2/node_modules/axios/lib/axios.js\");\n/* harmony import */ var msgpackr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! msgpackr */ \"(ssr)/./node_modules/.pnpm/msgpackr@1.11.5/node_modules/msgpackr/node-index.js\");\n\n\nconst noDataMethods = new Set(['get', 'head']);\nconst msgpackableAxios = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    responseType: \"arraybuffer\",\n    transformRequest: [\n        function (data, headers) {\n            if (noDataMethods.has(this.method.toLowerCase()))\n                return;\n            headers[\"Content-Type\"] = \"application/msgpack\";\n            return (0,msgpackr__WEBPACK_IMPORTED_MODULE_0__.pack)(data);\n        },\n    ],\n    transformResponse: [(data) => (0,msgpackr__WEBPACK_IMPORTED_MODULE_0__.unpack)(data)],\n    headers: {\n        Accept: \"application/msgpack\",\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS90eXBlcy9tc2dwYWNrLWF4aW9zLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQjtBQUNzQztBQUNoRTtBQUNPLHlCQUF5Qiw2Q0FBSztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsOENBQU87QUFDMUIsU0FBUztBQUNUO0FBQ0Esa0NBQWtDLGdEQUFTO0FBQzNDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS90eXBlcy9tc2dwYWNrLWF4aW9zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcbmltcG9ydCB7IHBhY2sgYXMgbXNncGFjaywgdW5wYWNrIGFzIG1zZ3VucGFjayB9IGZyb20gJ21zZ3BhY2tyJztcbmNvbnN0IG5vRGF0YU1ldGhvZHMgPSBuZXcgU2V0KFsnZ2V0JywgJ2hlYWQnXSk7XG5leHBvcnQgY29uc3QgbXNncGFja2FibGVBeGlvcyA9IGF4aW9zLmNyZWF0ZSh7XG4gICAgcmVzcG9uc2VUeXBlOiBcImFycmF5YnVmZmVyXCIsXG4gICAgdHJhbnNmb3JtUmVxdWVzdDogW1xuICAgICAgICBmdW5jdGlvbiAoZGF0YSwgaGVhZGVycykge1xuICAgICAgICAgICAgaWYgKG5vRGF0YU1ldGhvZHMuaGFzKHRoaXMubWV0aG9kLnRvTG93ZXJDYXNlKCkpKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGhlYWRlcnNbXCJDb250ZW50LVR5cGVcIl0gPSBcImFwcGxpY2F0aW9uL21zZ3BhY2tcIjtcbiAgICAgICAgICAgIHJldHVybiBtc2dwYWNrKGRhdGEpO1xuICAgICAgICB9LFxuICAgIF0sXG4gICAgdHJhbnNmb3JtUmVzcG9uc2U6IFsoZGF0YSkgPT4gbXNndW5wYWNrKGRhdGEpXSxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9tc2dwYWNrXCIsXG4gICAgfSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/types/msgpack-axios.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/evm.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/evm.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEVMVaultContract: () => (/* binding */ createEVMVaultContract)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n\n\nfunction createEVMVaultContract(address, client) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_1__.getContract)({\n        address,\n        client,\n        abi: _data__WEBPACK_IMPORTED_MODULE_0__.EVMVaultABI,\n    });\n}\n// one of the most bizarre type inferences of all time\n/* export type EVMRFF = Parameters<\n  ReturnType<typeof createEVMVaultContract>[\"read\"][\"verifyRequestSignature\"]\n>[0];*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS92YXVsdGNvbnRyYWN0cy9ldm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1DO0FBQ0c7QUFDL0I7QUFDUCxXQUFXLGlEQUFXO0FBQ3RCO0FBQ0E7QUFDQSxhQUFhLDhDQUFXO0FBQ3hCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUsiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20vdmF1bHRjb250cmFjdHMvZXZtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENvbnRyYWN0IH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCB7IEVWTVZhdWx0QUJJIH0gZnJvbSBcIi4uL2RhdGFcIjtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFVk1WYXVsdENvbnRyYWN0KGFkZHJlc3MsIGNsaWVudCkge1xuICAgIHJldHVybiBnZXRDb250cmFjdCh7XG4gICAgICAgIGFkZHJlc3MsXG4gICAgICAgIGNsaWVudCxcbiAgICAgICAgYWJpOiBFVk1WYXVsdEFCSSxcbiAgICB9KTtcbn1cbi8vIG9uZSBvZiB0aGUgbW9zdCBiaXphcnJlIHR5cGUgaW5mZXJlbmNlcyBvZiBhbGwgdGltZVxuLyogZXhwb3J0IHR5cGUgRVZNUkZGID0gUGFyYW1ldGVyczxcbiAgUmV0dXJuVHlwZTx0eXBlb2YgY3JlYXRlRVZNVmF1bHRDb250cmFjdD5bXCJyZWFkXCJdW1widmVyaWZ5UmVxdWVzdFNpZ25hdHVyZVwiXVxuPlswXTsqL1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/evm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/index.js":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/index.js ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Environment: () => (/* reexport safe */ _vaultcontracts__WEBPACK_IMPORTED_MODULE_0__.Environment),\n/* harmony export */   createEVMVaultContract: () => (/* reexport safe */ _evm__WEBPACK_IMPORTED_MODULE_1__.createEVMVaultContract),\n/* harmony export */   getVaultContractMap: () => (/* reexport safe */ _vaultcontracts__WEBPACK_IMPORTED_MODULE_0__.getVaultContractMap)\n/* harmony export */ });\n/* harmony import */ var _vaultcontracts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaultcontracts */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/vaultcontracts.js\");\n/* harmony import */ var _evm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./evm */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/evm.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS92YXVsdGNvbnRyYWN0cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpQztBQUNjIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AYXJjYW5hK2NhLWNvbW1vbkAxLjAuMS1hbHBoYS42X0Bjb3NtanMrcHJvdG8tc2lnbmluZ0AwLjM0LjBfQGNvc21qcytzdGFyZ2F0ZUAwLjM0LjBfYnVfZjIyM2NjMGZmOWY4NjQ0NGRlMDg3N2U1OWE3OGU3Y2Evbm9kZV9tb2R1bGVzL0BhcmNhbmEvY2EtY29tbW9uL2Rpc3QvZXNtL3ZhdWx0Y29udHJhY3RzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vdmF1bHRjb250cmFjdHMnO1xuZXhwb3J0IHsgY3JlYXRlRVZNVmF1bHRDb250cmFjdCB9IGZyb20gJy4vZXZtJztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/vaultcontracts.js":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/vaultcontracts.js ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Environment: () => (/* binding */ Environment),\n/* harmony export */   getVaultContractMap: () => (/* binding */ getVaultContractMap)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toBytes.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n\n\n\nvar Environment;\n(function (Environment) {\n    Environment[Environment[\"FOLLY\"] = 0] = \"FOLLY\";\n    Environment[Environment[\"CERISE\"] = 1] = \"CERISE\";\n    Environment[Environment[\"CORAL\"] = 2] = \"CORAL\";\n    Environment[Environment[\"JADE\"] = 3] = \"JADE\";\n})(Environment || (Environment = {}));\nconst dataSets = new Map([\n    [\n        Environment.FOLLY,\n        [\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 421614),\n                \"0xF0111EdE031a4377C34A4AD900f1E633E41055Dc\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 11155420),\n                \"0xF0111EdE031a4377C34A4AD900f1E633E41055Dc\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 80002),\n                \"0xF0111EdE031a4377C34A4AD900f1E633E41055Dc\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 84532),\n                \"0xF0111EdE031a4377C34A4AD900f1E633E41055Dc\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 11155111),\n                \"0xF0111EdE031a4377C34A4AD900f1E633E41055Dc\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 10143),\n                \"0xF0111EdE031a4377C34A4AD900f1E633E41055Dc\",\n            ],\n        ],\n    ],\n    [\n        Environment.CERISE,\n        [\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 137),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 10),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 42161),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 8453),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 43114),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 534352),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 8217),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 50104),\n                \"0x0A8eb0237524D1A8Fa8cbecF49e54FE627Ed781f\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 56),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 999),\n                \"0x0000002Ed0657b924b4AA83aD76CaB42DF90869D\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.FUEL, 9889),\n                \"0x6cd9b8d7e13762f4cb98cbd733640138aeb65395c4b38d84a7d46f6f6c6b42e4\",\n            ],\n        ],\n    ],\n    [\n        Environment.CORAL,\n        [\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 1),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 10),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 137),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 42161),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 534352),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 8453),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 43114),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 999),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 8217),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 50104),\n                \"0xB61fAdeBccCb15823b64bf47829d32eeb4A08930\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, 56),\n                \"0xBADA557252D286e45a1AD73f32479062D4E2e86B\",\n            ],\n            [\n                new _data__WEBPACK_IMPORTED_MODULE_0__.OmniversalChainID(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.FUEL, 9889),\n                \"0xe2586f908cc885e630cec6d8d578f02e6ade66983baf23f82757be502127dfb1\",\n            ],\n        ],\n    ],\n]);\nfunction getVaultContractMap(environment) {\n    const src = dataSets.get(environment);\n    if (src == null) {\n        throw new Error(\"Environment not found\");\n    }\n    return new _data__WEBPACK_IMPORTED_MODULE_0__.ChainIDKeyedMap(src.map((t) => [\n        t[0],\n        (0,_data__WEBPACK_IMPORTED_MODULE_0__.zeroExtendBufToGivenSize)((0,viem__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(t[1]), 32),\n    ]));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/vaultcontracts/vaultcontracts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/autochoice.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/autochoice.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoSelectionError: () => (/* binding */ AutoSelectionError),\n/* harmony export */   aggregateAggregators: () => (/* binding */ aggregateAggregators),\n/* harmony export */   autoSelectSources: () => (/* binding */ autoSelectSources),\n/* harmony export */   destinationSwapWithExactIn: () => (/* binding */ destinationSwapWithExactIn),\n/* harmony export */   determineDestinationSwaps: () => (/* binding */ determineDestinationSwaps),\n/* harmony export */   liquidateInputHoldings: () => (/* binding */ liquidateInputHoldings)\n/* harmony export */ });\n/* harmony import */ var es_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! es-toolkit */ \"(ssr)/./node_modules/.pnpm/es-toolkit@1.40.0/node_modules/es-toolkit/dist/array/groupBy.mjs\");\n/* harmony import */ var es_toolkit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! es-toolkit */ \"(ssr)/./node_modules/.pnpm/es-toolkit@1.40.0/node_modules/es-toolkit/dist/array/orderBy.mjs\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/fromBytes.js\");\n/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ \"(ssr)/./node_modules/.pnpm/decimal.js@10.6.0/node_modules/decimal.js/decimal.mjs\");\n/* harmony import */ var _iface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iface */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n\n\n\n\n\nclass AutoSelectionError extends Error {\n}\nconst safetyMultiplier = new decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"1.025\");\nasync function aggregateAggregators(requests, aggregators, mode) {\n    const responses = await Promise.all(aggregators.map(async (agg) => {\n        let quotes;\n        try {\n            quotes = await agg.getQuotes(requests);\n        }\n        catch (e) {\n            console.log(\"XCS | Failed to get quote from\", agg, \"in aggregateAggregators.\", requests, \"with:\", e);\n            quotes = new Array(requests.length).fill(null);\n        }\n        return {\n            quotes,\n            agg,\n        };\n    }));\n    const final = new Array(requests.length);\n    switch (mode) {\n        case 0 /* AggregateAggregatorsMode.MaximizeOutput */: {\n            for (let i = 0; i < requests.length; i++) {\n                const best = (0,_data__WEBPACK_IMPORTED_MODULE_2__.maxByBigInt)(responses.map((ra) => ({ quote: ra.quotes[i], aggregator: ra.agg })), (r) => r.quote?.outputAmountMinimum ?? 0n);\n                if (best != null) {\n                    final[i] = best;\n                }\n                else {\n                    final[i] = {\n                        quote: null,\n                        aggregator: aggregators[0],\n                    };\n                }\n            }\n            break;\n        }\n        case 1 /* AggregateAggregatorsMode.MinimizeInput */: {\n            for (let i = 0; i < requests.length; i++) {\n                const best = (0,_data__WEBPACK_IMPORTED_MODULE_2__.minByByBigInt)(responses.map((ra) => ({ quote: ra.quotes[i], aggregator: ra.agg })), (r) => r.quote?.inputAmount ?? 0n);\n                if (best != null) {\n                    final[i] = best;\n                }\n                else {\n                    final[i] = {\n                        quote: null,\n                        aggregator: aggregators[0],\n                    };\n                }\n            }\n            break;\n        }\n    }\n    return final;\n}\nasync function autoSelectSources(userAddress, holdings, outputRequired, aggregators, collectionFees, commonCurrencyID = _data__WEBPACK_IMPORTED_MODULE_2__.CurrencyID.USDC) {\n    console.log(\"XCS | SS | Holdings:\", holdings);\n    const groupedByChainID = (0,es_toolkit__WEBPACK_IMPORTED_MODULE_3__.groupBy)(holdings, (h) => (0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(h.chainID.toBytes()));\n    const fullLiquidationQuotes = [];\n    for (const holdings of Object.values(groupedByChainID)) {\n        const chain = _data__WEBPACK_IMPORTED_MODULE_2__.ChaindataMap.get(holdings[0].chainID);\n        if (chain == null) {\n            throw new AutoSelectionError(\"Chain not found\");\n        }\n        const correspondingCurrency = chain.Currencies.find((cur) => cur.currencyID === commonCurrencyID);\n        if (correspondingCurrency == null) {\n            console.log(\"XCS | SS | Skipping because correspondingCurrency is null\", {\n                chain,\n                correspondingCurrency,\n            });\n            continue;\n        }\n        const cfeeTuple = collectionFees.find((cf) => {\n            return (cf.universe === chain.Universe &&\n                Buffer.compare(cf.chainID, chain.ChainID32) === 0 &&\n                // output token is the CA one\n                Buffer.compare(cf.tokenAddress, correspondingCurrency.tokenAddress) ===\n                    0);\n        });\n        const cfee = cfeeTuple != null ? (0,viem__WEBPACK_IMPORTED_MODULE_5__.bytesToBigInt)(cfeeTuple.fee) : 0n;\n        for (const holding of holdings) {\n            if (Buffer.compare(holding.tokenAddress, correspondingCurrency.tokenAddress) === 0) {\n                console.log(\"XCS | SS | Disqualifying\", holding, \"because holding.tokenAddress = CA asset\");\n                continue;\n            }\n            fullLiquidationQuotes.push({\n                req: {\n                    userAddress,\n                    receiverAddress: null,\n                    type: _iface__WEBPACK_IMPORTED_MODULE_1__.QuoteType.ExactIn,\n                    chain: chain.ChainID,\n                    inputToken: holding.tokenAddress,\n                    inputAmount: holding.amount,\n                    outputToken: correspondingCurrency.tokenAddress,\n                },\n                // necessary for various purposes\n                cfee,\n                originalHolding: holding,\n                cur: correspondingCurrency,\n            });\n        }\n    }\n    // const groupedByChainID = groupBy(quoteOutputs, h => h.chainIDHex)\n    const quotesByValue = (0,es_toolkit__WEBPACK_IMPORTED_MODULE_6__.orderBy)(fullLiquidationQuotes, [\n        (quoteOut) => quoteOut.cfee,\n        (quoteOut) => quoteOut.originalHolding.value, // once optimized for collections, we select the biggest asset we hold\n    ], [\"asc\", \"desc\"]);\n    const responses = await aggregateAggregators(quotesByValue.map((fq) => fq.req), aggregators, 0 /* AggregateAggregatorsMode.MaximizeOutput */);\n    console.log(\"XCS | SS | Responses:\", responses);\n    const final = [];\n    let remainder = outputRequired; // assuming all that chains have the same amount of fixed point places\n    for (let i = 0; i < quotesByValue.length; i++) {\n        if (remainder.lte(0)) {\n            break;\n        }\n        const q = quotesByValue[i];\n        const { quote: resp, aggregator: agg } = responses[i];\n        if (resp == null) {\n            continue;\n        }\n        console.log(\"XCS | SS | 1\", {\n            i,\n            remainder,\n            q,\n            resp,\n            agg,\n        });\n        const divisor = decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pow(10, q.cur.decimals);\n        const oamD = (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(resp.outputAmountMinimum).div(divisor);\n        if (oamD.gt(remainder)) {\n            const indicativePrice = (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(resp.inputAmount).div((0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(resp.outputAmountMinimum));\n            const userBal = (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(q.originalHolding.amount);\n            // remainder is the output we want, so the input amount is remainder × indicativePrice\n            let expectedInput = decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].min(remainder.mul(divisor).mul(indicativePrice).mul(safetyMultiplier), userBal);\n            while (true) {\n                console.log(\"XCS | SS | 2⒜\", {\n                    indicativePrice,\n                    expectedInput,\n                    userBal,\n                });\n                const adequateQuoteResult = await aggregateAggregators([\n                    {\n                        ...q.req,\n                        inputAmount: (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertDecimalToBigInt)(expectedInput),\n                    },\n                ], aggregators, 0 /* AggregateAggregatorsMode.MaximizeOutput */);\n                if (adequateQuoteResult.length !== 1) {\n                    throw new AutoSelectionError(\"???\");\n                }\n                const adequateQuote = adequateQuoteResult[0];\n                if (adequateQuote.quote == null) {\n                    throw new AutoSelectionError(\"Couldn't get buy quote\");\n                }\n                console.log(\"XCS | SS | 2⒜⑴\", {\n                    adequateQuote,\n                });\n                const oam2D = (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(adequateQuote.quote.outputAmountMinimum).div(divisor);\n                if (oam2D.gte(remainder)) {\n                    final.push({\n                        ...q,\n                        quote: adequateQuote.quote,\n                        agg: adequateQuote.aggregator,\n                    });\n                    remainder = remainder.minus(oam2D);\n                    break;\n                }\n                else if (expectedInput.eq(userBal)) {\n                    throw new AutoSelectionError(\"Holding was supposedly enough to meet the full requirement but ceased to be so subsequently\");\n                }\n                else {\n                    expectedInput = decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].min(expectedInput.mul(safetyMultiplier), userBal); // try again with higher amount\n                }\n            }\n        }\n        else {\n            console.log(\"XCS | SS | 2⒝\", resp);\n            final.push({\n                ...q,\n                quote: resp,\n                agg,\n            });\n            remainder = remainder.minus((0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(resp.outputAmountMinimum).div(divisor));\n        }\n    }\n    console.log(\"XCS | SS | 3⒜\", {\n        remainder,\n        final,\n    });\n    if (remainder.gt(0)) {\n        throw new AutoSelectionError(\"Failed to accumulate enough swaps to meet requirement\");\n    }\n    console.log(\"XCS | SS | Final:\", final);\n    return final;\n}\nasync function determineDestinationSwaps(userAddress, receiverAddress, chainID, requirement, aggregators, commonCurrencyID = _data__WEBPACK_IMPORTED_MODULE_2__.CurrencyID.USDC) {\n    const chaindata = _data__WEBPACK_IMPORTED_MODULE_2__.ChaindataMap.get(chainID);\n    if (chaindata == null) {\n        throw new AutoSelectionError(\"Chain not found\");\n    }\n    const COT = chaindata.Currencies.find((cur) => cur.currencyID === commonCurrencyID);\n    if (COT == null) {\n        throw new AutoSelectionError(\"COT not present on the destination chain\");\n    }\n    // what happens if we happen to sell the requirement for the COT, what would the amount be?\n    const fullLiquidationQR = {\n        type: _iface__WEBPACK_IMPORTED_MODULE_1__.QuoteType.ExactIn,\n        chain: chainID,\n        userAddress,\n        receiverAddress: null,\n        inputToken: requirement.tokenAddress,\n        outputToken: COT.tokenAddress,\n        inputAmount: requirement.amount,\n    };\n    const fullLiquidationResult = await aggregateAggregators([fullLiquidationQR], aggregators, 0 /* AggregateAggregatorsMode.MaximizeOutput */);\n    if (fullLiquidationResult.length !== 1) {\n        throw new AutoSelectionError(\"???\");\n    }\n    const fullLiquidationQuote = fullLiquidationResult[0];\n    if (fullLiquidationQuote.quote == null) {\n        throw new AutoSelectionError(\"Couldn't get full liquidation quote\");\n    }\n    let curAmount = (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(fullLiquidationQuote.quote.outputAmountLikely).mul(safetyMultiplier);\n    console.log(\"XCS | DDS | 1⒜\", {\n        fullLiquidationQR,\n        fullLiquidationResult,\n        COT,\n    });\n    while (true) {\n        const buyQuoteResult = await aggregateAggregators([\n            {\n                type: _iface__WEBPACK_IMPORTED_MODULE_1__.QuoteType.ExactIn,\n                userAddress,\n                receiverAddress,\n                chain: chainID,\n                inputToken: COT.tokenAddress,\n                outputToken: requirement.tokenAddress,\n                inputAmount: (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertDecimalToBigInt)(curAmount),\n            },\n        ], aggregators, 0 /* AggregateAggregatorsMode.MaximizeOutput */);\n        if (buyQuoteResult.length !== 1) {\n            throw new AutoSelectionError(\"???\");\n        }\n        const buyQuote = buyQuoteResult[0];\n        if (buyQuote.quote == null) {\n            throw new AutoSelectionError(\"Couldn't get buy quote\");\n        }\n        console.log(\"XCS | DDS | 2⒜ iteration\", {\n            buyQuote,\n            curAmount,\n        });\n        if (buyQuote.quote.outputAmountMinimum >= requirement.amount) {\n            return {\n                ...buyQuote,\n                inputAmount: (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(buyQuote.quote.inputAmount).div(decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pow(10, COT.decimals)),\n                outputAmount: requirement.amount,\n            };\n        }\n        else {\n            curAmount = curAmount.mul(safetyMultiplier); // try again with higher amount\n        }\n    }\n}\nasync function liquidateInputHoldings(userAddress, holdings, aggregators, collectionFees, commonCurrencyID = _data__WEBPACK_IMPORTED_MODULE_2__.CurrencyID.USDC) {\n    console.log(\"XCS | LIH | Holdings:\", holdings);\n    const groupedByChainID = (0,es_toolkit__WEBPACK_IMPORTED_MODULE_3__.groupBy)(holdings, (h) => (0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(h.chainID.toBytes()));\n    const fullLiquidationQuotes = [];\n    for (const holdings of Object.values(groupedByChainID)) {\n        const chain = _data__WEBPACK_IMPORTED_MODULE_2__.ChaindataMap.get(holdings[0].chainID);\n        if (chain == null) {\n            throw new AutoSelectionError(\"Chain not found\");\n        }\n        const correspondingCurrency = chain.Currencies.find((cur) => cur.currencyID === commonCurrencyID);\n        if (correspondingCurrency == null) {\n            console.log(\"XCS | LIH | Skipping because correspondingCurrency is null\", {\n                chain,\n                correspondingCurrency,\n            });\n            continue;\n        }\n        const cfeeTuple = collectionFees.find((cf) => {\n            return (cf.universe === chain.Universe &&\n                Buffer.compare(cf.chainID, chain.ChainID32) === 0 &&\n                // output token is the CA one\n                Buffer.compare(cf.tokenAddress, correspondingCurrency.tokenAddress) ===\n                    0);\n        });\n        const cfee = cfeeTuple != null ? (0,viem__WEBPACK_IMPORTED_MODULE_5__.bytesToBigInt)(cfeeTuple.fee) : 0n;\n        for (const holding of holdings) {\n            if (Buffer.compare(holding.tokenAddress, correspondingCurrency.tokenAddress) === 0) {\n                console.log(\"XCS | LIH | Disqualifying\", holding, \"because holding.tokenAddress = CA asset\");\n                continue;\n            }\n            fullLiquidationQuotes.push({\n                req: {\n                    userAddress,\n                    type: _iface__WEBPACK_IMPORTED_MODULE_1__.QuoteType.ExactIn,\n                    chain: chain.ChainID,\n                    receiverAddress: null,\n                    inputToken: holding.tokenAddress,\n                    inputAmount: holding.amount,\n                    outputToken: correspondingCurrency.tokenAddress,\n                },\n                // necessary for various purposes\n                cfee,\n                originalHolding: holding,\n                cur: correspondingCurrency,\n            });\n        }\n    }\n    const responses = await aggregateAggregators(fullLiquidationQuotes.map((fq) => fq.req), aggregators, 0 /* AggregateAggregatorsMode.MaximizeOutput */);\n    console.log(\"XCS | LIH | Responses:\", responses);\n    const validResponses = responses\n        .filter((r) => r.quote !== null)\n        .map((r, i) => ({\n        ...r,\n        ...fullLiquidationQuotes[i],\n        agg: r.aggregator,\n        quote: r.quote,\n    }));\n    const total = validResponses.reduce((acc, r) => {\n        return acc.add(new decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](r.quote.outputAmountMinimum ?? 0n).div(decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pow(10, r.cur.decimals)));\n    }, new decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0));\n    return {\n        quotes: validResponses,\n        total,\n    };\n}\nasync function destinationSwapWithExactIn(userAddress, chainID, inputAmount, outputToken, aggregators, commonCurrencyID = _data__WEBPACK_IMPORTED_MODULE_2__.CurrencyID.USDC) {\n    const chaindata = _data__WEBPACK_IMPORTED_MODULE_2__.ChaindataMap.get(chainID);\n    if (chaindata == null) {\n        throw new AutoSelectionError(\"Chain not found\");\n    }\n    const COT = chaindata.Currencies.find((cur) => cur.currencyID === commonCurrencyID);\n    if (COT == null) {\n        throw new AutoSelectionError(\"COT not present on the destination chain\");\n    }\n    const fullLiquidationResult = await aggregateAggregators([\n        {\n            type: _iface__WEBPACK_IMPORTED_MODULE_1__.QuoteType.ExactIn,\n            chain: chainID,\n            userAddress,\n            receiverAddress: null,\n            inputToken: COT.tokenAddress,\n            outputToken: outputToken,\n            inputAmount: inputAmount,\n            // seriousness: QuoteSeriousness.SERIOUS,\n        },\n    ], aggregators, 0 /* AggregateAggregatorsMode.MaximizeOutput */);\n    if (fullLiquidationResult.length !== 1) {\n        throw new AutoSelectionError(\"???\");\n    }\n    const fullLiquidationQuote = fullLiquidationResult[0];\n    if (fullLiquidationQuote.quote == null) {\n        throw new AutoSelectionError(\"Couldn't get full liquidation quote\");\n    }\n    return {\n        ...fullLiquidationQuote,\n        inputAmount: (0,_data__WEBPACK_IMPORTED_MODULE_2__.convertBigIntToDecimal)(inputAmount).div(decimal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pow(10, COT.decimals)),\n        outputAmount: fullLiquidationQuote.quote.outputAmountMinimum,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/autochoice.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/bebop-agg.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/bebop-agg.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BebopAggregator: () => (/* binding */ BebopAggregator)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/.pnpm/axios@1.12.2/node_modules/axios/lib/axios.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/.pnpm/axios@1.12.2/node_modules/axios/index.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var _iface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iface */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n\n\n\n\n\n// https://api.bebop.xyz/{jam|pmm}/chains\nconst ChainNameMapping = new Map(Object.entries({\n    ethereum: 1,\n    arbitrum: 42161,\n    optimism: 10,\n    base: 8453,\n    taiko: 167000,\n    bsc: 56,\n    monadtestnet: 10143,\n    megaethtestnet: 6342,\n    berachain: 80094,\n    polygon: 137,\n    zksync: 324,\n    blast: 81457,\n    mode: 34443,\n    scroll: 534352,\n    superseed: 5330,\n}).map(([k, v]) => [(0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)((0,_data__WEBPACK_IMPORTED_MODULE_2__.encodeChainID36)(_proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM, v)), k]));\nclass BebopAggregator {\n    static BASE_URL = \"https://api.bebop.xyz/router\";\n    static COMMON_OPTIONS = {\n        approval_type: \"Standard\",\n        skip_validation: \"true\",\n        gasless: false,\n    };\n    axios;\n    constructor(apiKey) {\n        this.axios = axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].create({\n            baseURL: BebopAggregator.BASE_URL,\n            headers: {\n                \"Source-Auth\": apiKey,\n            },\n            params: {\n                source: \"arcana\",\n            },\n        });\n    }\n    async getQuotes(requests) {\n        const list = await Promise.allSettled(requests.map(async (r) => {\n            const chainName = ChainNameMapping.get((0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(r.chain.toBytes()));\n            if (chainName == null) {\n                return null;\n            }\n            let respPromise;\n            const inputTokenAddr = (0,viem__WEBPACK_IMPORTED_MODULE_5__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(r.inputToken.subarray(12)));\n            const outputTokenAddr = (0,viem__WEBPACK_IMPORTED_MODULE_5__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(r.outputToken.subarray(12)));\n            const userAddrHex = (0,viem__WEBPACK_IMPORTED_MODULE_5__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(r.userAddress.subarray(12)));\n            const receiverAddrHex = r.receiverAddress != null\n                ? (0,viem__WEBPACK_IMPORTED_MODULE_5__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(r.receiverAddress.subarray(12)))\n                : userAddrHex;\n            switch (r.type) {\n                case _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType.ExactIn: {\n                    respPromise = this.axios({\n                        method: \"GET\",\n                        url: `/${chainName}/v1/quote`,\n                        params: {\n                            sell_tokens: inputTokenAddr,\n                            buy_tokens: outputTokenAddr,\n                            taker_address: userAddrHex,\n                            receiver_address: receiverAddrHex,\n                            sell_amounts: r.inputAmount.toString(),\n                            ...BebopAggregator.COMMON_OPTIONS,\n                        },\n                    });\n                    break;\n                }\n                case _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType.ExactOut: {\n                    respPromise = this.axios({\n                        method: \"GET\",\n                        url: `/${chainName}/v1/quote`,\n                        params: {\n                            sell_tokens: inputTokenAddr,\n                            buy_tokens: outputTokenAddr,\n                            taker_address: userAddrHex,\n                            receiver_address: receiverAddrHex,\n                            buy_amounts: r.outputAmount.toString(),\n                            ...BebopAggregator.COMMON_OPTIONS,\n                        },\n                    });\n                    break;\n                }\n            }\n            let resp;\n            try {\n                resp = await respPromise;\n            }\n            catch (e) {\n                if (e instanceof axios__WEBPACK_IMPORTED_MODULE_6__.AxiosError && e.isAxiosError) {\n                    if (e.response?.status === 404 &&\n                        e.response.data.code === 1002 &&\n                        e.response.data.message ===\n                            \"No available quotes for the requested transfer\") {\n                        return null;\n                    }\n                }\n                throw e;\n            }\n            const bestRoute = resp.data.routes?.at(0);\n            if (bestRoute == null) {\n                return null;\n            }\n            const buyT = bestRoute.quote.buyTokens[outputTokenAddr];\n            return {\n                type: r.type,\n                inputAmount: BigInt(bestRoute.quote.sellTokens[inputTokenAddr].amount),\n                outputAmountMinimum: BigInt(buyT.minimumAmount),\n                outputAmountLikely: BigInt(buyT.amount),\n                originalResponse: bestRoute,\n            };\n        }));\n        return list.map((item) => {\n            switch (item.status) {\n                case \"fulfilled\": {\n                    return item.value;\n                }\n                case \"rejected\": {\n                    console.error(\"Caught error in fetching Bebop quotes:\", item.reason);\n                    return null;\n                }\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/bebop-agg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuoteType: () => (/* binding */ QuoteType)\n/* harmony export */ });\nvar QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"ExactIn\"] = 0] = \"ExactIn\";\n    QuoteType[QuoteType[\"ExactOut\"] = 1] = \"ExactOut\";\n})(QuoteType || (QuoteType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS94Y3MvaWZhY2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4QkFBOEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20veGNzL2lmYWNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgUXVvdGVUeXBlO1xuKGZ1bmN0aW9uIChRdW90ZVR5cGUpIHtcbiAgICBRdW90ZVR5cGVbUXVvdGVUeXBlW1wiRXhhY3RJblwiXSA9IDBdID0gXCJFeGFjdEluXCI7XG4gICAgUXVvdGVUeXBlW1F1b3RlVHlwZVtcIkV4YWN0T3V0XCJdID0gMV0gPSBcIkV4YWN0T3V0XCI7XG59KShRdW90ZVR5cGUgfHwgKFF1b3RlVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/index.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/index.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoSelectionError: () => (/* reexport safe */ _autochoice__WEBPACK_IMPORTED_MODULE_4__.AutoSelectionError),\n/* harmony export */   BebopAggregator: () => (/* reexport safe */ _bebop_agg__WEBPACK_IMPORTED_MODULE_3__.BebopAggregator),\n/* harmony export */   LiFiAggregator: () => (/* reexport safe */ _lifi_agg__WEBPACK_IMPORTED_MODULE_1__.LiFiAggregator),\n/* harmony export */   QuoteType: () => (/* reexport safe */ _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType),\n/* harmony export */   YieldYakAggregator: () => (/* reexport safe */ _yieldyak_agg__WEBPACK_IMPORTED_MODULE_2__.YieldYakAggregator),\n/* harmony export */   aggregateAggregators: () => (/* reexport safe */ _autochoice__WEBPACK_IMPORTED_MODULE_4__.aggregateAggregators),\n/* harmony export */   autoSelectSources: () => (/* reexport safe */ _autochoice__WEBPACK_IMPORTED_MODULE_4__.autoSelectSources),\n/* harmony export */   destinationSwapWithExactIn: () => (/* reexport safe */ _autochoice__WEBPACK_IMPORTED_MODULE_4__.destinationSwapWithExactIn),\n/* harmony export */   determineDestinationSwaps: () => (/* reexport safe */ _autochoice__WEBPACK_IMPORTED_MODULE_4__.determineDestinationSwaps),\n/* harmony export */   liquidateInputHoldings: () => (/* reexport safe */ _autochoice__WEBPACK_IMPORTED_MODULE_4__.liquidateInputHoldings)\n/* harmony export */ });\n/* harmony import */ var _iface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iface */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js\");\n/* harmony import */ var _lifi_agg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lifi-agg */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/lifi-agg.js\");\n/* harmony import */ var _yieldyak_agg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./yieldyak-agg */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/yieldyak-agg.js\");\n/* harmony import */ var _bebop_agg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bebop-agg */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/bebop-agg.js\");\n/* harmony import */ var _autochoice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./autochoice */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/autochoice.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS94Y3MvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdCO0FBQ0c7QUFDSTtBQUNIO0FBQ0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BhcmNhbmErY2EtY29tbW9uQDEuMC4xLWFscGhhLjZfQGNvc21qcytwcm90by1zaWduaW5nQDAuMzQuMF9AY29zbWpzK3N0YXJnYXRlQDAuMzQuMF9idV9mMjIzY2MwZmY5Zjg2NDQ0ZGUwODc3ZTU5YTc4ZTdjYS9ub2RlX21vZHVsZXMvQGFyY2FuYS9jYS1jb21tb24vZGlzdC9lc20veGNzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vaWZhY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWZpLWFnZyc7XG5leHBvcnQgKiBmcm9tICcuL3lpZWxkeWFrLWFnZyc7XG5leHBvcnQgKiBmcm9tICcuL2JlYm9wLWFnZyc7XG5leHBvcnQgKiBmcm9tICcuL2F1dG9jaG9pY2UnO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/lifi-agg.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/lifi-agg.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LiFiAggregator: () => (/* binding */ LiFiAggregator)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/.pnpm/axios@1.12.2/node_modules/axios/lib/axios.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/.pnpm/axios@1.12.2/node_modules/axios/index.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _iface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iface */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n\n\n\n\nclass LiFiAggregator {\n    static BASE_URL_V1 = \"https://li.quest/v1\";\n    static COMMON_OPTIONS = {\n        denyExchanges: \"openocean\",\n        slippage: \"0.01\",\n    };\n    axios;\n    constructor(apiKey) {\n        this.axios = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n            baseURL: LiFiAggregator.BASE_URL_V1,\n            headers: {\n                \"x-lifi-api-key\": apiKey,\n            },\n        });\n    }\n    async getQuotes(requests) {\n        const list = await Promise.allSettled(requests.map(async (r) => {\n            if (r.chain.universe !== _proto_definition__WEBPACK_IMPORTED_MODULE_1__.Universe.ETHEREUM) {\n                return null;\n            }\n            let respPromise;\n            const chIDStr = r.chain.chainID.toString();\n            const inputTokenAddr = (0,viem__WEBPACK_IMPORTED_MODULE_3__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(r.inputToken.subarray(12)));\n            const outputTokenAddr = (0,viem__WEBPACK_IMPORTED_MODULE_3__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(r.outputToken.subarray(12)));\n            const userAddrHex = (0,viem__WEBPACK_IMPORTED_MODULE_3__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(r.userAddress.subarray(12)));\n            const receiverAddrHex = r.receiverAddress != null\n                ? (0,viem__WEBPACK_IMPORTED_MODULE_3__.getAddress)((0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(r.receiverAddress.subarray(12)))\n                : userAddrHex;\n            switch (r.type) {\n                case _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType.ExactIn: {\n                    respPromise = this.axios({\n                        method: \"GET\",\n                        url: \"/quote\",\n                        params: {\n                            fromChain: chIDStr,\n                            toChain: chIDStr,\n                            fromToken: inputTokenAddr,\n                            toToken: outputTokenAddr,\n                            fromAddress: userAddrHex,\n                            toAddress: receiverAddrHex,\n                            fromAmount: r.inputAmount.toString(),\n                            ...LiFiAggregator.COMMON_OPTIONS,\n                        },\n                    });\n                    break;\n                }\n                case _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType.ExactOut: {\n                    respPromise = this.axios({\n                        method: \"GET\",\n                        url: \"/quote/toAmount\",\n                        params: {\n                            fromChain: chIDStr,\n                            toChain: chIDStr,\n                            fromToken: inputTokenAddr,\n                            toToken: outputTokenAddr,\n                            fromAddress: userAddrHex,\n                            toAddress: receiverAddrHex,\n                            toAmount: r.outputAmount.toString(),\n                            ...LiFiAggregator.COMMON_OPTIONS,\n                        },\n                    });\n                    break;\n                }\n            }\n            let resp;\n            try {\n                resp = await respPromise;\n            }\n            catch (e) {\n                if (e instanceof axios__WEBPACK_IMPORTED_MODULE_5__.AxiosError && e.isAxiosError) {\n                    if (e.response?.status === 404 &&\n                        e.response.data.code === 1002 &&\n                        e.response.data.message ===\n                            \"No available quotes for the requested transfer\") {\n                        return null;\n                    }\n                }\n                throw e;\n            }\n            return {\n                type: r.type,\n                inputAmount: BigInt(resp.data.estimate.fromAmount),\n                outputAmountMinimum: BigInt(resp.data.estimate.toAmountMin),\n                outputAmountLikely: BigInt(resp.data.estimate.toAmount),\n                originalResponse: resp.data,\n            };\n        }));\n        return list.map((item) => {\n            switch (item.status) {\n                case \"fulfilled\": {\n                    return item.value;\n                }\n                case \"rejected\": {\n                    console.error(\"Caught error in fetching LiFi quotes:\", item.reason);\n                    return null;\n                }\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS94Y3MvbGlmaS1hZ2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEwQztBQUNJO0FBQ1Q7QUFDVTtBQUN4QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDZDQUFLO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVEQUFRO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdEQUFVLENBQUMsZ0RBQVU7QUFDeEQsb0NBQW9DLGdEQUFVLENBQUMsZ0RBQVU7QUFDekQsZ0NBQWdDLGdEQUFVLENBQUMsZ0RBQVU7QUFDckQ7QUFDQSxrQkFBa0IsZ0RBQVUsQ0FBQyxnREFBVTtBQUN2QztBQUNBO0FBQ0EscUJBQXFCLDZDQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQiw2Q0FBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsNkNBQVU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGFyY2FuYStjYS1jb21tb25AMS4wLjEtYWxwaGEuNl9AY29zbWpzK3Byb3RvLXNpZ25pbmdAMC4zNC4wX0Bjb3NtanMrc3RhcmdhdGVAMC4zNC4wX2J1X2YyMjNjYzBmZjlmODY0NDRkZTA4NzdlNTlhNzhlN2NhL25vZGVfbW9kdWxlcy9AYXJjYW5hL2NhLWNvbW1vbi9kaXN0L2VzbS94Y3MvbGlmaS1hZ2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zLCB7IEF4aW9zRXJyb3IgfSBmcm9tIFwiYXhpb3NcIjtcbmltcG9ydCB7IGJ5dGVzVG9IZXgsIGdldEFkZHJlc3MgfSBmcm9tIFwidmllbVwiO1xuaW1wb3J0IHsgUXVvdGVUeXBlLCB9IGZyb20gXCIuL2lmYWNlXCI7XG5pbXBvcnQgeyBVbml2ZXJzZSB9IGZyb20gXCIuLi9wcm90by9kZWZpbml0aW9uXCI7XG5leHBvcnQgY2xhc3MgTGlGaUFnZ3JlZ2F0b3Ige1xuICAgIHN0YXRpYyBCQVNFX1VSTF9WMSA9IFwiaHR0cHM6Ly9saS5xdWVzdC92MVwiO1xuICAgIHN0YXRpYyBDT01NT05fT1BUSU9OUyA9IHtcbiAgICAgICAgZGVueUV4Y2hhbmdlczogXCJvcGVub2NlYW5cIixcbiAgICAgICAgc2xpcHBhZ2U6IFwiMC4wMVwiLFxuICAgIH07XG4gICAgYXhpb3M7XG4gICAgY29uc3RydWN0b3IoYXBpS2V5KSB7XG4gICAgICAgIHRoaXMuYXhpb3MgPSBheGlvcy5jcmVhdGUoe1xuICAgICAgICAgICAgYmFzZVVSTDogTGlGaUFnZ3JlZ2F0b3IuQkFTRV9VUkxfVjEsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJ4LWxpZmktYXBpLWtleVwiOiBhcGlLZXksXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0UXVvdGVzKHJlcXVlc3RzKSB7XG4gICAgICAgIGNvbnN0IGxpc3QgPSBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQocmVxdWVzdHMubWFwKGFzeW5jIChyKSA9PiB7XG4gICAgICAgICAgICBpZiAoci5jaGFpbi51bml2ZXJzZSAhPT0gVW5pdmVyc2UuRVRIRVJFVU0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCByZXNwUHJvbWlzZTtcbiAgICAgICAgICAgIGNvbnN0IGNoSURTdHIgPSByLmNoYWluLmNoYWluSUQudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGNvbnN0IGlucHV0VG9rZW5BZGRyID0gZ2V0QWRkcmVzcyhieXRlc1RvSGV4KHIuaW5wdXRUb2tlbi5zdWJhcnJheSgxMikpKTtcbiAgICAgICAgICAgIGNvbnN0IG91dHB1dFRva2VuQWRkciA9IGdldEFkZHJlc3MoYnl0ZXNUb0hleChyLm91dHB1dFRva2VuLnN1YmFycmF5KDEyKSkpO1xuICAgICAgICAgICAgY29uc3QgdXNlckFkZHJIZXggPSBnZXRBZGRyZXNzKGJ5dGVzVG9IZXgoci51c2VyQWRkcmVzcy5zdWJhcnJheSgxMikpKTtcbiAgICAgICAgICAgIGNvbnN0IHJlY2VpdmVyQWRkckhleCA9IHIucmVjZWl2ZXJBZGRyZXNzICE9IG51bGxcbiAgICAgICAgICAgICAgICA/IGdldEFkZHJlc3MoYnl0ZXNUb0hleChyLnJlY2VpdmVyQWRkcmVzcy5zdWJhcnJheSgxMikpKVxuICAgICAgICAgICAgICAgIDogdXNlckFkZHJIZXg7XG4gICAgICAgICAgICBzd2l0Y2ggKHIudHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgUXVvdGVUeXBlLkV4YWN0SW46IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzcFByb21pc2UgPSB0aGlzLmF4aW9zKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvcXVvdGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyb21DaGFpbjogY2hJRFN0cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b0NoYWluOiBjaElEU3RyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyb21Ub2tlbjogaW5wdXRUb2tlbkFkZHIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9Ub2tlbjogb3V0cHV0VG9rZW5BZGRyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyb21BZGRyZXNzOiB1c2VyQWRkckhleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b0FkZHJlc3M6IHJlY2VpdmVyQWRkckhleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tQW1vdW50OiByLmlucHV0QW1vdW50LnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uTGlGaUFnZ3JlZ2F0b3IuQ09NTU9OX09QVElPTlMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgUXVvdGVUeXBlLkV4YWN0T3V0OiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3BQcm9taXNlID0gdGhpcy5heGlvcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL3F1b3RlL3RvQW1vdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tQ2hhaW46IGNoSURTdHIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9DaGFpbjogY2hJRFN0cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tVG9rZW46IGlucHV0VG9rZW5BZGRyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvVG9rZW46IG91dHB1dFRva2VuQWRkcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tQWRkcmVzczogdXNlckFkZHJIZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9BZGRyZXNzOiByZWNlaXZlckFkZHJIZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9BbW91bnQ6IHIub3V0cHV0QW1vdW50LnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uTGlGaUFnZ3JlZ2F0b3IuQ09NTU9OX09QVElPTlMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHJlc3A7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc3AgPSBhd2FpdCByZXNwUHJvbWlzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBBeGlvc0Vycm9yICYmIGUuaXNBeGlvc0Vycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLnJlc3BvbnNlPy5zdGF0dXMgPT09IDQwNCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgZS5yZXNwb25zZS5kYXRhLmNvZGUgPT09IDEwMDIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucmVzcG9uc2UuZGF0YS5tZXNzYWdlID09PVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiTm8gYXZhaWxhYmxlIHF1b3RlcyBmb3IgdGhlIHJlcXVlc3RlZCB0cmFuc2ZlclwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiByLnR5cGUsXG4gICAgICAgICAgICAgICAgaW5wdXRBbW91bnQ6IEJpZ0ludChyZXNwLmRhdGEuZXN0aW1hdGUuZnJvbUFtb3VudCksXG4gICAgICAgICAgICAgICAgb3V0cHV0QW1vdW50TWluaW11bTogQmlnSW50KHJlc3AuZGF0YS5lc3RpbWF0ZS50b0Ftb3VudE1pbiksXG4gICAgICAgICAgICAgICAgb3V0cHV0QW1vdW50TGlrZWx5OiBCaWdJbnQocmVzcC5kYXRhLmVzdGltYXRlLnRvQW1vdW50KSxcbiAgICAgICAgICAgICAgICBvcmlnaW5hbFJlc3BvbnNlOiByZXNwLmRhdGEsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBsaXN0Lm1hcCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoIChpdGVtLnN0YXR1cykge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJmdWxmaWxsZWRcIjoge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS52YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcInJlamVjdGVkXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkNhdWdodCBlcnJvciBpbiBmZXRjaGluZyBMaUZpIHF1b3RlczpcIiwgaXRlbS5yZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/lifi-agg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/yieldyak-agg.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/yieldyak-agg.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YieldYakAggregator: () => (/* binding */ YieldYakAggregator)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var es_toolkit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! es-toolkit */ \"(ssr)/./node_modules/.pnpm/es-toolkit@1.40.0/node_modules/es-toolkit/dist/array/groupBy.mjs\");\n/* harmony import */ var es_toolkit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! es-toolkit */ \"(ssr)/./node_modules/.pnpm/es-toolkit@1.40.0/node_modules/es-toolkit/dist/object/clone.mjs\");\n/* harmony import */ var es_toolkit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! es-toolkit */ \"(ssr)/./node_modules/.pnpm/es-toolkit@1.40.0/node_modules/es-toolkit/dist/array/maxBy.mjs\");\n/* harmony import */ var es_toolkit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! es-toolkit */ \"(ssr)/./node_modules/.pnpm/es-toolkit@1.40.0/node_modules/es-toolkit/dist/array/last.mjs\");\n/* harmony import */ var _iface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iface */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/iface.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/index.js\");\n/* harmony import */ var _proto_definition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../proto/definition */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/proto/definition.js\");\n/* harmony import */ var _data_yakaggregator_evm_abi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/yakaggregator.evm.abi */ \"(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/data/yakaggregator.evm.abi.js\");\n\n\n\n\n\n\nconst YakAggregatorAddresses = new Map([\n    [(0,_data__WEBPACK_IMPORTED_MODULE_1__.encodeChainID36)(_proto_definition__WEBPACK_IMPORTED_MODULE_2__.Universe.ETHEREUM, 42161), '0xb32C79a25291265eF240Eb32E9faBbc6DcEE3cE3'],\n    [(0,_data__WEBPACK_IMPORTED_MODULE_1__.encodeChainID36)(_proto_definition__WEBPACK_IMPORTED_MODULE_2__.Universe.ETHEREUM, 10), '0xCd887F78c77b36B0b541E77AfD6F91C0253182A2'],\n    [(0,_data__WEBPACK_IMPORTED_MODULE_1__.encodeChainID36)(_proto_definition__WEBPACK_IMPORTED_MODULE_2__.Universe.ETHEREUM, 43114), '0xC4729E56b831d74bBc18797e0e17A295fA77488c'],\n].map(([chainID, addr]) => {\n    return [(0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(chainID), addr];\n}));\nclass YieldYakAggregator {\n    clients = new Map();\n    constructor(clients) {\n        for (const client of clients) {\n            const chainIDHex = (0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(client.chainID.toBytes());\n            const aggAddr = YakAggregatorAddresses.get(chainIDHex);\n            if (aggAddr == null) {\n                continue;\n            }\n            this.clients.set(chainIDHex, {\n                chainID: client.chainID,\n                client: client.client,\n                aggregatorAddress: aggAddr\n            });\n        }\n    }\n    async getQuotes(_requests) {\n        const requestsWithOriginalIndexes = _requests.map((r, rid) => {\n            return {\n                req: r,\n                idx: rid,\n            };\n        });\n        const responses = new Array(_requests.length).fill(null);\n        // it's so sad that JS doesn't have a proper binary data type\n        const groupedByChainID = (0,es_toolkit__WEBPACK_IMPORTED_MODULE_5__.groupBy)(requestsWithOriginalIndexes, r => (0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(r.req.chain.toBytes()));\n        await Promise.all(Array.from(Object.entries(groupedByChainID)).map(async ([chainIDHex, requests]) => {\n            const config = this.clients.get(chainIDHex);\n            if (config == null) {\n                return;\n            }\n            const reverseIndexes = [];\n            const mc3calls = [];\n            for (const req of requests) {\n                const inputTokenHex = (0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(req.req.inputToken.subarray(12));\n                const outputTokenHex = (0,viem__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(req.req.outputToken.subarray(12));\n                let args;\n                switch (req.req.type) {\n                    case _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType.ExactIn: {\n                        args = [req.req.inputAmount, inputTokenHex, outputTokenHex, 0, 1];\n                        break;\n                    }\n                    case _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType.ExactOut: {\n                        args = [req.req.outputAmount, outputTokenHex, inputTokenHex, 0, 1];\n                        break;\n                    }\n                }\n                const indexes = [];\n                for (let steps = 1; steps !== 5; steps++) {\n                    const clonedArgs = (0,es_toolkit__WEBPACK_IMPORTED_MODULE_6__.clone)(args);\n                    clonedArgs[3] = steps;\n                    const idx = mc3calls.push({\n                        address: config.aggregatorAddress,\n                        abi: _data_yakaggregator_evm_abi__WEBPACK_IMPORTED_MODULE_3__.YakAggregatorEVMABI,\n                        functionName: 'findBestPathWithGas',\n                        args: clonedArgs\n                    });\n                    indexes.push(idx - 1);\n                }\n                reverseIndexes.push([req, indexes]);\n            }\n            const _final = await config.client.multicall({\n                allowFailure: false,\n                contracts: mc3calls,\n                multicallAddress: '0xcA11bde05977b3631167028862bE2a173976CA11'\n            });\n            for (const [req, indexes] of reverseIndexes) {\n                const collected = [];\n                for (const index of indexes) {\n                    collected.push(_final[index]);\n                }\n                // @ts-expect-error the typing in maxBy is wrong, it can work with anything that is comparable\n                const optimalChoice = (0,es_toolkit__WEBPACK_IMPORTED_MODULE_7__.maxBy)(collected, route => (0,es_toolkit__WEBPACK_IMPORTED_MODULE_8__.last)(route.amounts));\n                if (optimalChoice.path.length === 0) {\n                    responses[req.idx] = null;\n                    return;\n                }\n                // we have to reverse everything\n                if (req.req.type === _iface__WEBPACK_IMPORTED_MODULE_0__.QuoteType.ExactOut) {\n                    optimalChoice.adapters.reverse();\n                    optimalChoice.amounts.reverse();\n                    optimalChoice.path.reverse();\n                }\n                const output = (0,es_toolkit__WEBPACK_IMPORTED_MODULE_8__.last)(optimalChoice.amounts);\n                responses[req.idx] = {\n                    type: req.req.type,\n                    inputAmount: optimalChoice.amounts[0],\n                    outputAmountLikely: output,\n                    outputAmountMinimum: output,\n                    offer: optimalChoice\n                };\n            }\n        }));\n        return responses;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@arcana+ca-common@1.0.1-alpha.6_@cosmjs+proto-signing@0.34.0_@cosmjs+stargate@0.34.0_bu_f223cc0ff9f86444de0877e59a78e7ca/node_modules/@arcana/ca-common/dist/esm/xcs/yieldyak-agg.js\n");

/***/ })

};
;