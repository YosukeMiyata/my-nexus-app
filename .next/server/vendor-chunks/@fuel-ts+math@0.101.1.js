"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@fuel-ts+math@0.101.1";
exports.ids = ["vendor-chunks/@fuel-ts+math@0.101.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+math@0.101.1/node_modules/@fuel-ts/math/dist/configs.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+math@0.101.1/node_modules/@fuel-ts/math/dist/configs.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DECIMAL_FUEL: () => (/* binding */ DECIMAL_FUEL),\n/* harmony export */   DECIMAL_GWEI: () => (/* binding */ DECIMAL_GWEI),\n/* harmony export */   DECIMAL_KWEI: () => (/* binding */ DECIMAL_KWEI),\n/* harmony export */   DECIMAL_MWEI: () => (/* binding */ DECIMAL_MWEI),\n/* harmony export */   DECIMAL_WEI: () => (/* binding */ DECIMAL_WEI),\n/* harmony export */   DEFAULT_DECIMAL_UNITS: () => (/* binding */ DEFAULT_DECIMAL_UNITS),\n/* harmony export */   DEFAULT_MIN_PRECISION: () => (/* binding */ DEFAULT_MIN_PRECISION),\n/* harmony export */   DEFAULT_PRECISION: () => (/* binding */ DEFAULT_PRECISION)\n/* harmony export */ });\n// src/configs.ts\nvar DEFAULT_PRECISION = 9;\nvar DEFAULT_MIN_PRECISION = 3;\nvar DEFAULT_DECIMAL_UNITS = 9;\nvar DECIMAL_FUEL = 9;\nvar DECIMAL_WEI = 18;\nvar DECIMAL_KWEI = 15;\nvar DECIMAL_MWEI = 12;\nvar DECIMAL_GWEI = 9;\n\n//# sourceMappingURL=configs.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGZ1ZWwtdHMrbWF0aEAwLjEwMS4xL25vZGVfbW9kdWxlcy9AZnVlbC10cy9tYXRoL2Rpc3QvY29uZmlncy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFVRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AZnVlbC10cyttYXRoQDAuMTAxLjEvbm9kZV9tb2R1bGVzL0BmdWVsLXRzL21hdGgvZGlzdC9jb25maWdzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29uZmlncy50c1xudmFyIERFRkFVTFRfUFJFQ0lTSU9OID0gOTtcbnZhciBERUZBVUxUX01JTl9QUkVDSVNJT04gPSAzO1xudmFyIERFRkFVTFRfREVDSU1BTF9VTklUUyA9IDk7XG52YXIgREVDSU1BTF9GVUVMID0gOTtcbnZhciBERUNJTUFMX1dFSSA9IDE4O1xudmFyIERFQ0lNQUxfS1dFSSA9IDE1O1xudmFyIERFQ0lNQUxfTVdFSSA9IDEyO1xudmFyIERFQ0lNQUxfR1dFSSA9IDk7XG5leHBvcnQge1xuICBERUNJTUFMX0ZVRUwsXG4gIERFQ0lNQUxfR1dFSSxcbiAgREVDSU1BTF9LV0VJLFxuICBERUNJTUFMX01XRUksXG4gIERFQ0lNQUxfV0VJLFxuICBERUZBVUxUX0RFQ0lNQUxfVU5JVFMsXG4gIERFRkFVTFRfTUlOX1BSRUNJU0lPTixcbiAgREVGQVVMVF9QUkVDSVNJT05cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWdzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+math@0.101.1/node_modules/@fuel-ts/math/dist/configs.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+math@0.101.1/node_modules/@fuel-ts/math/dist/index.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+math@0.101.1/node_modules/@fuel-ts/math/dist/index.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BN: () => (/* binding */ BN),\n/* harmony export */   bn: () => (/* binding */ bn),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   formatUnits: () => (/* binding */ formatUnits),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   toFixed: () => (/* binding */ toFixed),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toNumber: () => (/* binding */ toNumber)\n/* harmony export */ });\n/* harmony import */ var _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fuel-ts/errors */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+errors@0.101.1/node_modules/@fuel-ts/errors/dist/index.mjs\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/bn.ts\n\n\n\n// src/configs.ts\nvar DEFAULT_PRECISION = 9;\nvar DEFAULT_MIN_PRECISION = 3;\nvar DEFAULT_DECIMAL_UNITS = 9;\n\n// src/bn.ts\nvar BN = class _BN extends bn_js__WEBPACK_IMPORTED_MODULE_1__ {\n  static {\n    __name(this, \"BN\");\n  }\n  MAX_U64 = \"0xFFFFFFFFFFFFFFFF\";\n  constructor(value, base, endian) {\n    let bnValue = value;\n    let bnBase = base;\n    if (_BN.isBN(value)) {\n      bnValue = value.toArray();\n    } else if (typeof value === \"string\" && value.slice(0, 2) === \"0x\") {\n      bnValue = value.substring(2);\n      bnBase = base || \"hex\";\n    }\n    if (typeof bnValue === \"number\" && bnValue > Number.MAX_SAFE_INTEGER) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.ErrorCode.NUMBER_TOO_BIG,\n        `Value ${bnValue} is too large to be represented as a number, use string instead.`\n      );\n    }\n    super(bnValue == null ? 0 : bnValue, bnBase, endian);\n  }\n  // ANCHOR: HELPERS\n  // make sure we always include `0x` in hex strings\n  toString(base, length) {\n    const output = super.toString(base, length);\n    if (base === 16 || base === \"hex\") {\n      return `0x${output}`;\n    }\n    return output;\n  }\n  toHex(bytesPadding) {\n    const bytes = bytesPadding || 0;\n    const bytesLength = bytes * 2;\n    if (this.isNeg()) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.ErrorCode.CONVERTING_FAILED, \"Cannot convert negative value to hex.\");\n    }\n    if (bytesPadding && this.byteLength() > bytesPadding) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.ErrorCode.CONVERTING_FAILED,\n        `Provided value ${this} is too large. It should fit within ${bytesPadding} bytes.`\n      );\n    }\n    return this.toString(16, bytesLength);\n  }\n  toBytes(bytesPadding) {\n    if (this.isNeg()) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.ErrorCode.CONVERTING_FAILED, \"Cannot convert negative value to bytes.\");\n    }\n    return Uint8Array.from(this.toArray(void 0, bytesPadding));\n  }\n  toJSON() {\n    return this.toString(16);\n  }\n  valueOf() {\n    return this.toString();\n  }\n  format(options) {\n    const {\n      units = DEFAULT_DECIMAL_UNITS,\n      precision: initialPrecision = DEFAULT_PRECISION,\n      minPrecision: initialMinPrecision = DEFAULT_MIN_PRECISION\n    } = options || {};\n    if (units === 0) {\n      return this.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n    const minPrecision = initialMinPrecision > initialPrecision ? initialPrecision : initialMinPrecision;\n    const precision = initialPrecision > initialMinPrecision ? initialPrecision : initialMinPrecision;\n    const formattedUnits = this.formatUnits(units);\n    const [integerPart, fractionalPart = \"\"] = formattedUnits.split(\".\");\n    const formattedInteger = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    if (precision === 0) {\n      return formattedInteger;\n    }\n    let formattedFractional = fractionalPart.replace(/0+$/, \"\");\n    if (formattedFractional.length > precision) {\n      if (integerPart === \"0\") {\n        const firstNonZeroIndex = formattedFractional.search(/[1-9]/);\n        if (firstNonZeroIndex >= 0 && firstNonZeroIndex < precision) {\n          formattedFractional = formattedFractional.slice(0, precision);\n        } else {\n          formattedFractional = formattedFractional.slice(0, firstNonZeroIndex + 1);\n        }\n      } else {\n        formattedFractional = formattedFractional.slice(0, precision);\n      }\n    } else {\n      formattedFractional = formattedFractional.slice(0, precision);\n    }\n    if (formattedFractional.length < minPrecision) {\n      formattedFractional = formattedFractional.padEnd(minPrecision, \"0\");\n    }\n    if (formattedFractional === \"\" && minPrecision === 0) {\n      return formattedInteger;\n    }\n    return formattedFractional ? `${formattedInteger}.${formattedFractional}` : formattedInteger;\n  }\n  formatUnits(units = DEFAULT_DECIMAL_UNITS) {\n    const valueString = this.toString();\n    const valueLength = valueString.length;\n    if (valueLength <= units) {\n      const paddedZeros = \"0\".repeat(units - valueLength);\n      return `0.${paddedZeros}${valueString}`;\n    }\n    const integerPart = valueString.slice(0, valueLength - units);\n    const fractionalPart = valueString.slice(valueLength - units);\n    return `${integerPart}.${fractionalPart}`;\n  }\n  // END ANCHOR: HELPERS\n  // ANCHOR: OVERRIDES to accept better inputs\n  add(v) {\n    return this.caller(v, \"add\");\n  }\n  pow(v) {\n    return this.caller(v, \"pow\");\n  }\n  sub(v) {\n    return this.caller(v, \"sub\");\n  }\n  div(v) {\n    return this.caller(v, \"div\");\n  }\n  mul(v) {\n    return this.caller(v, \"mul\");\n  }\n  mod(v) {\n    return this.caller(v, \"mod\");\n  }\n  divRound(v) {\n    return this.caller(v, \"divRound\");\n  }\n  lt(v) {\n    return this.caller(v, \"lt\");\n  }\n  lte(v) {\n    return this.caller(v, \"lte\");\n  }\n  gt(v) {\n    return this.caller(v, \"gt\");\n  }\n  gte(v) {\n    return this.caller(v, \"gte\");\n  }\n  eq(v) {\n    return this.caller(v, \"eq\");\n  }\n  cmp(v) {\n    return this.caller(v, \"cmp\");\n  }\n  // END ANCHOR: OVERRIDES to accept better inputs\n  // ANCHOR: OVERRIDES to output our BN type\n  sqr() {\n    return new _BN(super.sqr().toArray());\n  }\n  neg() {\n    return new _BN(super.neg().toArray());\n  }\n  abs() {\n    return new _BN(super.abs().toArray());\n  }\n  toTwos(width) {\n    return new _BN(super.toTwos(width).toArray());\n  }\n  fromTwos(width) {\n    return new _BN(super.fromTwos(width).toArray());\n  }\n  // END ANCHOR: OVERRIDES to output our BN type\n  // ANCHOR: OVERRIDES to avoid losing references\n  caller(v, methodName) {\n    const output = super[methodName](new _BN(v));\n    if (_BN.isBN(output)) {\n      return new _BN(output.toArray());\n    }\n    if (typeof output === \"boolean\") {\n      return output;\n    }\n    return output;\n  }\n  clone() {\n    return new _BN(this.toArray());\n  }\n  mulTo(num, out) {\n    const output = new bn_js__WEBPACK_IMPORTED_MODULE_1__(this.toArray()).mulTo(num, out);\n    return new _BN(output.toArray());\n  }\n  egcd(p) {\n    const { a, b, gcd } = new bn_js__WEBPACK_IMPORTED_MODULE_1__(this.toArray()).egcd(p);\n    return {\n      a: new _BN(a.toArray()),\n      b: new _BN(b.toArray()),\n      gcd: new _BN(gcd.toArray())\n    };\n  }\n  divmod(num, mode, positive) {\n    const { div, mod } = new bn_js__WEBPACK_IMPORTED_MODULE_1__(this.toArray()).divmod(new _BN(num), mode, positive);\n    return {\n      div: new _BN(div?.toArray()),\n      mod: new _BN(mod?.toArray())\n    };\n  }\n  maxU64() {\n    return this.gte(this.MAX_U64) ? new _BN(this.MAX_U64) : this;\n  }\n  max(num) {\n    return this.gte(num) ? new _BN(num) : this;\n  }\n  normalizeZeroToOne() {\n    return this.isZero() ? new _BN(1) : this;\n  }\n  // END ANCHOR: OVERRIDES to avoid losing references\n};\nvar bn = /* @__PURE__ */ __name((value, base, endian) => new BN(value, base, endian), \"bn\");\nbn.parseUnits = (value, units = DEFAULT_DECIMAL_UNITS) => {\n  const valueToParse = value === \".\" ? \"0.\" : value;\n  const [valueUnits = \"0\", valueDecimals = \"0\"] = valueToParse.split(\".\");\n  const length = valueDecimals.length;\n  if (units === 0) {\n    const valueWithoutDecimals = valueToParse.replace(\",\", \"\").split(\".\")[0];\n    return bn(valueWithoutDecimals);\n  }\n  if (length > units) {\n    throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n      _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.ErrorCode.CONVERTING_FAILED,\n      `Decimal can't have more than ${units} digits.`\n    );\n  }\n  const decimals = Array.from({ length: units }).fill(\"0\");\n  decimals.splice(0, length, valueDecimals);\n  const amount = `${valueUnits.replaceAll(\",\", \"\")}${decimals.join(\"\")}`;\n  return bn(amount);\n};\n\n// src/decimal.ts\nfunction toFixed(value, options) {\n  const { precision = DEFAULT_PRECISION, minPrecision = DEFAULT_MIN_PRECISION } = options || {};\n  const [valueUnits = \"0\", valueDecimals = \"0\"] = String(value || \"0.0\").split(\".\");\n  const groupRegex = /(\\d)(?=(\\d{3})+\\b)/g;\n  const units = valueUnits.replace(groupRegex, \"$1,\");\n  let decimals = valueDecimals.slice(0, precision);\n  if (minPrecision < precision) {\n    const trimmedDecimal = decimals.match(/.*[1-9]{1}/);\n    const lastNonZeroIndex = trimmedDecimal?.[0].length || 0;\n    const keepChars = Math.max(minPrecision, lastNonZeroIndex);\n    decimals = decimals.slice(0, keepChars);\n  }\n  const decimalPortion = decimals ? `.${decimals}` : \"\";\n  return `${units}${decimalPortion}`;\n}\n__name(toFixed, \"toFixed\");\n\n// src/functional.ts\nfunction toNumber(value) {\n  return bn(value).toNumber();\n}\n__name(toNumber, \"toNumber\");\nfunction toHex(value, bytesPadding) {\n  return bn(value).toHex(bytesPadding);\n}\n__name(toHex, \"toHex\");\nfunction toBytes(value, bytesPadding) {\n  return bn(value).toBytes(bytesPadding);\n}\n__name(toBytes, \"toBytes\");\nfunction formatUnits(value, units) {\n  return bn(value).formatUnits(units);\n}\n__name(formatUnits, \"formatUnits\");\nfunction format(value, options) {\n  return bn(value).format(options);\n}\n__name(format, \"format\");\n\n// src/math.ts\nfunction max(...numbers) {\n  return numbers.reduce((prev, cur) => bn(cur).gt(prev) ? bn(cur) : prev, bn(0));\n}\n__name(max, \"max\");\nfunction multiply(...numbers) {\n  return bn(Math.ceil(numbers.reduce((a, b) => bn(a).mul(b), bn(1)).toNumber()));\n}\n__name(multiply, \"multiply\");\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+math@0.101.1/node_modules/@fuel-ts/math/dist/index.mjs\n");

/***/ })

};
;