"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c";
exports.ids = ["vendor-chunks/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c/node_modules/@fuel-ts/address/dist/configs.mjs":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c/node_modules/@fuel-ts/address/dist/configs.mjs ***!
  \****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmptyRoot: () => (/* binding */ EmptyRoot),\n/* harmony export */   ZeroBytes32: () => (/* binding */ ZeroBytes32)\n/* harmony export */ });\n// src/configs.ts\nvar ZeroBytes32 = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nvar EmptyRoot = \"0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n\n//# sourceMappingURL=configs.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGZ1ZWwtdHMrYWRkcmVzc0AwLjEwMS4xX3ZpdGVzdEAzLjIuNF9AdHlwZXMrZGVidWdANC4xLjEyX0B0eXBlcytub2RlQDI0LjcuMl9qaXRpQDIuNi4xXzEyODA4YzFlMTg5MjUwNzBiZjgzNzhiZjllYWQ4OTBjL25vZGVfbW9kdWxlcy9AZnVlbC10cy9hZGRyZXNzL2Rpc3QvY29uZmlncy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AZnVlbC10cythZGRyZXNzQDAuMTAxLjFfdml0ZXN0QDMuMi40X0B0eXBlcytkZWJ1Z0A0LjEuMTJfQHR5cGVzK25vZGVAMjQuNy4yX2ppdGlAMi42LjFfMTI4MDhjMWUxODkyNTA3MGJmODM3OGJmOWVhZDg5MGMvbm9kZV9tb2R1bGVzL0BmdWVsLXRzL2FkZHJlc3MvZGlzdC9jb25maWdzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29uZmlncy50c1xudmFyIFplcm9CeXRlczMyID0gXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIjtcbnZhciBFbXB0eVJvb3QgPSBcIjB4ZTNiMGM0NDI5OGZjMWMxNDlhZmJmNGM4OTk2ZmI5MjQyN2FlNDFlNDY0OWI5MzRjYTQ5NTk5MWI3ODUyYjg1NVwiO1xuZXhwb3J0IHtcbiAgRW1wdHlSb290LFxuICBaZXJvQnl0ZXMzMlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmZpZ3MubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c/node_modules/@fuel-ts/address/dist/configs.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c/node_modules/@fuel-ts/address/dist/index.mjs":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c/node_modules/@fuel-ts/address/dist/index.mjs ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Address: () => (/* binding */ Address),\n/* harmony export */   addressify: () => (/* binding */ addressify),\n/* harmony export */   fromDynamicInputToB256: () => (/* binding */ fromDynamicInputToB256),\n/* harmony export */   fromEvmAddressToB256: () => (/* binding */ fromEvmAddressToB256),\n/* harmony export */   fromPublicKeyToB256: () => (/* binding */ fromPublicKeyToB256),\n/* harmony export */   getRandomB256: () => (/* binding */ getRandomB256),\n/* harmony export */   isAddress: () => (/* binding */ isAddress),\n/* harmony export */   isB256: () => (/* binding */ isB256),\n/* harmony export */   isEvmAddress: () => (/* binding */ isEvmAddress),\n/* harmony export */   isPublicKey: () => (/* binding */ isPublicKey),\n/* harmony export */   normalizeB256: () => (/* binding */ normalizeB256),\n/* harmony export */   padFirst12BytesOfEvmAddress: () => (/* binding */ padFirst12BytesOfEvmAddress),\n/* harmony export */   toB256AddressEvm: () => (/* binding */ toB256AddressEvm)\n/* harmony export */ });\n/* harmony import */ var _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fuel-ts/errors */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+errors@0.101.1/node_modules/@fuel-ts/errors/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fuel-ts/utils */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+utils@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_j_f5ff000e110be614030afd6e0fd99f41/node_modules/@fuel-ts/utils/dist/index.mjs\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _fuel_ts_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fuel-ts/crypto */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+crypto@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__2af6281b4693138068177942c72da7d9/node_modules/@fuel-ts/crypto/dist/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/address.ts\n\n\n\n\n// src/utils.ts\n\n\n\n\nfunction isB256(address) {\n  return address.length === 66 && /(0x)[0-9a-f]{64}$/i.test(address);\n}\n__name(isB256, \"isB256\");\nfunction isPublicKey(address) {\n  return address.length === 130 && /(0x)[0-9a-f]{128}$/i.test(address);\n}\n__name(isPublicKey, \"isPublicKey\");\nfunction isEvmAddress(address) {\n  return address.length === 42 && /(0x)[0-9a-f]{40}$/i.test(address);\n}\n__name(isEvmAddress, \"isEvmAddress\");\nfunction normalizeB256(address) {\n  return address.toLowerCase();\n}\n__name(normalizeB256, \"normalizeB256\");\nfunction isAddress(address) {\n  return \"b256Address\" in address;\n}\n__name(isAddress, \"isAddress\");\nvar addressify = /* @__PURE__ */ __name((addressLike) => {\n  if (isAddress(addressLike)) {\n    return addressLike;\n  }\n  if (\"address\" in addressLike && isAddress(addressLike.address)) {\n    return addressLike.address;\n  }\n  if (\"id\" in addressLike && isAddress(addressLike.id)) {\n    return addressLike.id;\n  }\n  throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.INVALID_ADDRESS, \"Invalid address\");\n}, \"addressify\");\nvar getRandomB256 = /* @__PURE__ */ __name(() => (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.hexlify)((0,_fuel_ts_crypto__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32)), \"getRandomB256\");\nvar toB256AddressEvm = /* @__PURE__ */ __name((b256) => {\n  try {\n    if (!isB256(b256)) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.INVALID_B256_ADDRESS, `Invalid B256 Address: ${b256}.`);\n    }\n    const evmBytes = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.arrayify)(b256).slice(12);\n    const paddedBytes = new Uint8Array(12).fill(0);\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.hexlify)((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.concat)([paddedBytes, evmBytes]));\n  } catch (error) {\n    throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n      _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.PARSE_FAILED,\n      `Cannot generate EVM Address B256 from: ${b256}.`\n    );\n  }\n}, \"toB256AddressEvm\");\nvar padFirst12BytesOfEvmAddress = /* @__PURE__ */ __name((address) => {\n  if (!isEvmAddress(address)) {\n    throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.INVALID_EVM_ADDRESS, \"Invalid EVM address format.\");\n  }\n  return address.replace(\"0x\", \"0x000000000000000000000000\");\n}, \"padFirst12BytesOfEvmAddress\");\nvar fromEvmAddressToB256 = /* @__PURE__ */ __name((address) => padFirst12BytesOfEvmAddress(address), \"fromEvmAddressToB256\");\nvar fromPublicKeyToB256 = /* @__PURE__ */ __name((publicKey) => {\n  if (!isPublicKey(publicKey)) {\n    throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.INVALID_PUBLIC_KEY, `Invalid Public Key: ${publicKey}.`);\n  }\n  return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.hexlify)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_3__.sha256)((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.arrayify)(publicKey)));\n}, \"fromPublicKeyToB256\");\nvar fromDynamicInputToB256 = /* @__PURE__ */ __name((address) => {\n  if (typeof address !== \"string\" && \"toB256\" in address) {\n    return address.toB256();\n  }\n  if (isB256(address)) {\n    return address;\n  }\n  if (isPublicKey(address)) {\n    return fromPublicKeyToB256(address);\n  }\n  if (isEvmAddress(address)) {\n    return fromEvmAddressToB256(address);\n  }\n  throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n    _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.PARSE_FAILED,\n    `Unknown address format: only 'B256', 'Public Key (512)', or 'EVM Address' are supported.`\n  );\n}, \"fromDynamicInputToB256\");\n\n// src/address.ts\nvar Address = class _Address {\n  static {\n    __name(this, \"Address\");\n  }\n  // #region address-2\n  b256Address;\n  // #endregion address-2\n  /**\n   * @param address - A B256 address, public key, EVM address, or Address instance\n   */\n  constructor(address) {\n    const b256Address = fromDynamicInputToB256(address);\n    this.b256Address = normalizeB256(b256Address);\n  }\n  /**\n   * Takes an B256 Address and returns back an checksum address.\n   * The implementation follows the ERC-55 https://github.com/ethereum/ercs/blob/master/ERCS/erc-55.md.\n   *\n   * @returns A new `ChecksumAddress` instance\n   */\n  toChecksum() {\n    return _Address.toChecksum(this.b256Address);\n  }\n  /**\n   * Returns the `b256Address` property\n   */\n  toAddress() {\n    return this.b256Address;\n  }\n  /**\n   * Returns the B256 hash address as a string\n   *\n   * @returns The B256 address\n   */\n  toB256() {\n    return this.b256Address;\n  }\n  /**\n   * Returns the B256 hash address as a Uint8Array\n   *\n   * @returns The B256 address as a Uint8Array\n   */\n  toBytes() {\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.arrayify)(this.b256Address);\n  }\n  /**\n   * Returns the B256 hash address as a string\n   *\n   * @returns The B256 address\n   */\n  toHexString() {\n    return this.toB256();\n  }\n  /**\n   * returns the address `checksum` as a string\n   *\n   * @returns The `b256Address` property as a string\n   */\n  toString() {\n    return this.toChecksum();\n  }\n  /**\n   * Converts and returns the `b256Address` property as a string\n   * @returns The `b256Address` property as a JSON string\n   */\n  toJSON() {\n    return this.b256Address;\n  }\n  /**\n   * Converts to an EVM address\n   *\n   * @returns an {@link EvmAddress | `EvmAddress`} representation of the address\n   */\n  toEvmAddress() {\n    return {\n      bits: toB256AddressEvm(this.b256Address)\n    };\n  }\n  /**\n   * Wraps the B256 property and returns as an `AssetId`.\n   * @returns The B256 property as an {@link AssetId | `AssetId`}\n   */\n  toAssetId() {\n    return {\n      bits: this.b256Address\n    };\n  }\n  /**\n   * Wraps the B256 address `checksum` and returns it as a string\n   * @returns The B256 address `checksum` as a string\n   */\n  valueOf() {\n    return this.toChecksum();\n  }\n  /**\n   * Compares this the `b256Address` property to another for direct equality\n   * @param other - Another address to compare against\n   * @returns The equality of the comparison\n   */\n  equals(other) {\n    return this.toChecksum() === other.toChecksum();\n  }\n  /**\n   * Takes a Public Key, hashes it, and creates an `Address`\n   *\n   * @param publicKey - A wallets public key\n   * @returns A new `Address` instance\n   *\n   * @deprecated Use `new Address` instead\n   */\n  static fromPublicKey(publicKey) {\n    const b256Address = fromPublicKeyToB256(publicKey);\n    return new _Address(b256Address);\n  }\n  /**\n   * Takes a B256 Address and creates an `Address`\n   *\n   * @param b256Address - A b256 hash\n   * @returns A new `Address` instance\n   *\n   * @deprecated Use `new Address` instead\n   */\n  static fromB256(b256Address) {\n    if (!isB256(b256Address)) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.INVALID_B256_ADDRESS,\n        `Invalid B256 Address: ${b256Address}.`\n      );\n    }\n    return new _Address(b256Address);\n  }\n  /**\n   * Creates an `Address` with a randomized `b256Address` property\n   *\n   * @returns A new `Address` instance\n   */\n  static fromRandom() {\n    return new _Address(getRandomB256());\n  }\n  /**\n   * Takes an ambiguous string and attempts to create an `Address`\n   *\n   * @param address - An ambiguous string\n   * @returns A new `Address` instance\n   *\n   * @deprecated Use `new Address` instead\n   */\n  static fromString(address) {\n    return new _Address(address);\n  }\n  /**\n   * Takes an ambiguous string or address and creates an `Address`\n   *\n   * @returns a new `Address` instance\n   *\n   * @deprecated Use `new Address` instead\n   */\n  static fromAddressOrString(address) {\n    return new _Address(address);\n  }\n  /**\n   * Takes a dynamic string or `Address` and creates an `Address`\n   *\n   * @param addressId - A string containing B256, or Public Key\n   * @throws Error - Unknown address if the format is not recognized\n   * @returns A new `Address` instance\n   *\n   * @deprecated Use `new Address` instead\n   */\n  static fromDynamicInput(address) {\n    return new _Address(address);\n  }\n  /**\n   * Takes an Evm Address and returns back an `Address`\n   *\n   * @returns A new `Address` instance\n   *\n   * @deprecated Use `new Address` instead\n   */\n  static fromEvmAddress(evmAddress) {\n    if (!isEvmAddress(evmAddress)) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.INVALID_EVM_ADDRESS,\n        `Invalid Evm Address: ${evmAddress}.`\n      );\n    }\n    return new _Address(evmAddress);\n  }\n  /**\n   * Takes an ChecksumAddress and validates if it is a valid checksum address.\n   *\n   * @returns A `boolean` instance indicating if the address is valid.\n   */\n  static isChecksumValid(address) {\n    let addressParsed = address;\n    if (!address.startsWith(\"0x\")) {\n      addressParsed = `0x${address}`;\n    }\n    if (addressParsed.trim().length !== 66) {\n      return false;\n    }\n    return _Address.toChecksum((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.hexlify)(addressParsed)) === addressParsed;\n  }\n  /** @hidden */\n  static toChecksum(address) {\n    if (!isB256(address)) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_0__.FuelError.CODES.INVALID_B256_ADDRESS,\n        `Invalid B256 Address: ${address}.`\n      );\n    }\n    const addressHex = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_1__.hexlify)(address).toLowerCase().slice(2);\n    const checksum = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_3__.sha256)(addressHex);\n    let ret = \"0x\";\n    for (let i = 0; i < 32; ++i) {\n      const byte = checksum[i];\n      const ha = addressHex.charAt(i * 2);\n      const hb = addressHex.charAt(i * 2 + 1);\n      ret += (byte & 240) >= 128 ? ha.toUpperCase() : ha;\n      ret += (byte & 15) >= 8 ? hb.toUpperCase() : hb;\n    }\n    return ret;\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+address@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_12808c1e18925070bf8378bf9ead890c/node_modules/@fuel-ts/address/dist/index.mjs\n");

/***/ })

};
;