"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12";
exports.ids = ["vendor-chunks/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/index.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/index.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SafeAppProvider = void 0;\nvar provider_1 = __webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/provider.js\");\nObject.defineProperty(exports, \"SafeAppProvider\", ({ enumerable: true, get: function () { return provider_1.SafeAppProvider; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3NhZmUtYXBwcy1wcm92aWRlckAwLjE4LjZfYnVmZmVydXRpbEA0LjAuOV90eXBlc2NyaXB0QDUuOS4zX3V0Zi04LXZhbGlkYXRlQDUuMC4xMF96b2RANC4xLjEyL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvc2FmZS1hcHBzLXByb3ZpZGVyL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGlCQUFpQixtQkFBTyxDQUFDLHNOQUFZO0FBQ3JDLG1EQUFrRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUNoSSIsInNvdXJjZXMiOlsiL1VzZXJzL3lvdXN1a2UvTXlQcm9qZWN0L215LW5leHVzLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3NhZmUtYXBwcy1wcm92aWRlckAwLjE4LjZfYnVmZmVydXRpbEA0LjAuOV90eXBlc2NyaXB0QDUuOS4zX3V0Zi04LXZhbGlkYXRlQDUuMC4xMF96b2RANC4xLjEyL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvc2FmZS1hcHBzLXByb3ZpZGVyL2Rpc3QvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNhZmVBcHBQcm92aWRlciA9IHZvaWQgMDtcbnZhciBwcm92aWRlcl8xID0gcmVxdWlyZShcIi4vcHJvdmlkZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTYWZlQXBwUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3ZpZGVyXzEuU2FmZUFwcFByb3ZpZGVyOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/provider.js":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/provider.js ***!
  \****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SafeAppProvider = void 0;\nconst safe_apps_sdk_1 = __webpack_require__(/*! @safe-global/safe-apps-sdk */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-sdk@9.1.0_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-sdk/dist/cjs/index.js\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/utils.js\");\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nclass SafeAppProvider extends events_1.EventEmitter {\n    constructor(safe, sdk) {\n        super();\n        this.submittedTxs = new Map();\n        this.safe = safe;\n        this.sdk = sdk;\n    }\n    async connect() {\n        this.emit('connect', { chainId: this.chainId });\n        return;\n    }\n    async disconnect() {\n        return;\n    }\n    get chainId() {\n        return this.safe.chainId;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(request) {\n        const { method, params = [] } = request;\n        switch (method) {\n            case 'eth_accounts':\n                return [this.safe.safeAddress];\n            case 'net_version':\n            case 'eth_chainId':\n                return (0, utils_1.numberToHex)(this.chainId);\n            case 'personal_sign': {\n                const [message, address] = params;\n                if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n                    throw new Error('The address or message hash is invalid');\n                }\n                const response = await this.sdk.txs.signMessage(message);\n                const signature = 'signature' in response ? response.signature : undefined;\n                return signature || '0x';\n            }\n            case 'eth_sign': {\n                const [address, messageHash] = params;\n                if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase() || !messageHash.startsWith('0x')) {\n                    throw new Error('The address or message hash is invalid');\n                }\n                const response = await this.sdk.txs.signMessage(messageHash);\n                const signature = 'signature' in response ? response.signature : undefined;\n                return signature || '0x';\n            }\n            case 'eth_signTypedData':\n            case 'eth_signTypedData_v4': {\n                const [address, typedData] = params;\n                const parsedTypedData = typeof typedData === 'string' ? JSON.parse(typedData) : typedData;\n                if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n                    throw new Error('The address is invalid');\n                }\n                const response = await this.sdk.txs.signTypedMessage(parsedTypedData);\n                const signature = 'signature' in response ? response.signature : undefined;\n                return signature || '0x';\n            }\n            case 'eth_sendTransaction':\n                // `value` or `data` can be explicitly set as `undefined` for example in Viem. The spread will overwrite the fallback value.\n                const tx = {\n                    ...params[0],\n                    value: params[0].value || '0',\n                    data: params[0].data || '0x',\n                };\n                // Some ethereum libraries might pass the gas as a hex-encoded string\n                // We need to convert it to a number because the SDK expects a number and our backend only supports\n                // Decimal numbers\n                if (typeof tx.gas === 'string' && tx.gas.startsWith('0x')) {\n                    tx.gas = parseInt(tx.gas, 16);\n                }\n                const resp = await this.sdk.txs.send({\n                    txs: [tx],\n                    params: { safeTxGas: tx.gas },\n                });\n                // Store fake transaction\n                this.submittedTxs.set(resp.safeTxHash, {\n                    from: this.safe.safeAddress,\n                    hash: resp.safeTxHash,\n                    gas: 0,\n                    gasPrice: '0x00',\n                    nonce: 0,\n                    input: tx.data,\n                    value: tx.value,\n                    to: tx.to,\n                    blockHash: null,\n                    blockNumber: null,\n                    transactionIndex: null,\n                });\n                return resp.safeTxHash;\n            case 'eth_blockNumber':\n                const block = await this.sdk.eth.getBlockByNumber(['latest']);\n                return block.number;\n            case 'eth_getBalance':\n                return this.sdk.eth.getBalance([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n            case 'eth_getCode':\n                return this.sdk.eth.getCode([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n            case 'eth_getTransactionCount':\n                return this.sdk.eth.getTransactionCount([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n            case 'eth_getStorageAt':\n                return this.sdk.eth.getStorageAt([(0, utils_1.getLowerCase)(params[0]), params[1], params[2]]);\n            case 'eth_getBlockByNumber':\n                return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n            case 'eth_getBlockByHash':\n                return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n            case 'eth_getTransactionByHash':\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.txHash || txHash;\n                }\n                catch (e) { }\n                // Use fake transaction if we don't have a real tx hash\n                if (this.submittedTxs.has(txHash)) {\n                    return this.submittedTxs.get(txHash);\n                }\n                return this.sdk.eth.getTransactionByHash([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.hash = params[0];\n                    }\n                    return tx;\n                });\n            case 'eth_getTransactionReceipt': {\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.txHash || txHash;\n                }\n                catch (e) { }\n                return this.sdk.eth.getTransactionReceipt([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.transactionHash = params[0];\n                    }\n                    return tx;\n                });\n            }\n            case 'eth_estimateGas': {\n                return this.sdk.eth.getEstimateGas(params[0]);\n            }\n            case 'eth_call': {\n                return this.sdk.eth.call([params[0], params[1]]);\n            }\n            case 'eth_getLogs':\n                return this.sdk.eth.getPastLogs([params[0]]);\n            case 'eth_gasPrice':\n                return this.sdk.eth.getGasPrice();\n            case 'wallet_getPermissions':\n                return this.sdk.wallet.getPermissions();\n            case 'wallet_requestPermissions':\n                return this.sdk.wallet.requestPermissions(params[0]);\n            case 'safe_setSettings':\n                return this.sdk.eth.setSafeSettings([params[0]]);\n            case 'wallet_sendCalls': {\n                const { from, calls, chainId } = params[0];\n                if (chainId !== (0, utils_1.numberToHex)(this.chainId)) {\n                    throw new Error(`Safe is not on chain ${chainId}`);\n                }\n                if (from !== this.safe.safeAddress) {\n                    throw Error('Invalid from address');\n                }\n                const txs = calls.map((call, i) => {\n                    if (!call.to) {\n                        throw new Error(`Invalid call #${i}: missing \"to\" field`);\n                    }\n                    return {\n                        to: call.to,\n                        data: call.data ?? '0x',\n                        value: call.value ?? (0, utils_1.numberToHex)(0),\n                    };\n                });\n                const { safeTxHash } = await this.sdk.txs.send({ txs });\n                const result = {\n                    id: safeTxHash,\n                };\n                return result;\n            }\n            case 'wallet_getCallsStatus': {\n                const safeTxHash = params[0];\n                const CallStatus = {\n                    [safe_apps_sdk_1.TransactionStatus.AWAITING_CONFIRMATIONS]: 100,\n                    [safe_apps_sdk_1.TransactionStatus.AWAITING_EXECUTION]: 100,\n                    [safe_apps_sdk_1.TransactionStatus.SUCCESS]: 200,\n                    [safe_apps_sdk_1.TransactionStatus.CANCELLED]: 400,\n                    [safe_apps_sdk_1.TransactionStatus.FAILED]: 500,\n                };\n                const tx = await this.sdk.txs.getBySafeTxHash(safeTxHash);\n                const result = {\n                    version: '1.0',\n                    id: safeTxHash,\n                    chainId: (0, utils_1.numberToHex)(this.chainId),\n                    status: CallStatus[tx.txStatus],\n                };\n                // Transaction is queued\n                if (!tx.txHash) {\n                    return result;\n                }\n                // If transaction is executing, receipt is null\n                const receipt = await this.sdk.eth.getTransactionReceipt([tx.txHash]);\n                if (!receipt) {\n                    return result;\n                }\n                const calls = tx.txData?.dataDecoded?.method !== 'multiSend'\n                    ? 1\n                    : // Number of batched transactions\n                        tx.txData.dataDecoded.parameters?.[0].valueDecoded?.length ?? 1;\n                // Typed as number; is hex\n                const blockNumber = Number(receipt.blockNumber);\n                const gasUsed = Number(receipt.gasUsed);\n                result.receipts = Array(calls).fill({\n                    logs: receipt.logs,\n                    status: (0, utils_1.numberToHex)(tx.txStatus === safe_apps_sdk_1.TransactionStatus.SUCCESS ? 1 : 0),\n                    blockHash: receipt.blockHash,\n                    blockNumber: (0, utils_1.numberToHex)(blockNumber),\n                    gasUsed: (0, utils_1.numberToHex)(gasUsed),\n                    transactionHash: tx.txHash,\n                });\n                return result;\n            }\n            case 'wallet_showCallsStatus': {\n                // Cannot open transaction details page via SDK\n                throw new Error(`\"${request.method}\" not supported`);\n            }\n            case 'wallet_getCapabilities': {\n                return {\n                    [(0, utils_1.numberToHex)(this.chainId)]: {\n                        atomicBatch: {\n                            supported: true,\n                        },\n                    },\n                };\n            }\n            default:\n                throw Error(`\"${request.method}\" not implemented`);\n        }\n    }\n    // this method is needed for ethers v4\n    // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n    send(request, callback) {\n        if (!request)\n            callback('Undefined request');\n        this.request(request)\n            .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n            .catch((error) => callback(error, null));\n    }\n}\nexports.SafeAppProvider = SafeAppProvider;\n//# sourceMappingURL=provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/utils.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/utils.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.numberToHex = exports.getLowerCase = void 0;\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nexports.getLowerCase = getLowerCase;\nfunction numberToHex(value) {\n    return `0x${value.toString(16)}`;\n}\nexports.numberToHex = numberToHex;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3NhZmUtYXBwcy1wcm92aWRlckAwLjE4LjZfYnVmZmVydXRpbEA0LjAuOV90eXBlc2NyaXB0QDUuOS4zX3V0Zi04LXZhbGlkYXRlQDUuMC4xMF96b2RANC4xLjEyL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvc2FmZS1hcHBzLXByb3ZpZGVyL2Rpc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CLEdBQUcsb0JBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy95b3VzdWtlL015UHJvamVjdC9teS1uZXh1cy1hcHAvbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtzYWZlLWFwcHMtcHJvdmlkZXJAMC4xOC42X2J1ZmZlcnV0aWxANC4wLjlfdHlwZXNjcmlwdEA1LjkuM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfem9kQDQuMS4xMi9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3NhZmUtYXBwcy1wcm92aWRlci9kaXN0L3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5udW1iZXJUb0hleCA9IGV4cG9ydHMuZ2V0TG93ZXJDYXNlID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0TG93ZXJDYXNlKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG5leHBvcnRzLmdldExvd2VyQ2FzZSA9IGdldExvd2VyQ2FzZTtcbmZ1bmN0aW9uIG51bWJlclRvSGV4KHZhbHVlKSB7XG4gICAgcmV0dXJuIGAweCR7dmFsdWUudG9TdHJpbmcoMTYpfWA7XG59XG5leHBvcnRzLm51bWJlclRvSGV4ID0gbnVtYmVyVG9IZXg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+safe-apps-provider@0.18.6_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/@safe-global/safe-apps-provider/dist/utils.js\n");

/***/ })

};
;