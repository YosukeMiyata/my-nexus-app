"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339";
exports.ids = ["vendor-chunks/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339/node_modules/@fuel-ts/transactions/dist/configs.mjs":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339/node_modules/@fuel-ts/transactions/dist/configs.mjs ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONTRACT_MAX_SIZE: () => (/* binding */ CONTRACT_MAX_SIZE),\n/* harmony export */   FAILED_ASSERT_EQ_SIGNAL: () => (/* binding */ FAILED_ASSERT_EQ_SIGNAL),\n/* harmony export */   FAILED_ASSERT_NE_SIGNAL: () => (/* binding */ FAILED_ASSERT_NE_SIGNAL),\n/* harmony export */   FAILED_ASSERT_SIGNAL: () => (/* binding */ FAILED_ASSERT_SIGNAL),\n/* harmony export */   FAILED_REQUIRE_SIGNAL: () => (/* binding */ FAILED_REQUIRE_SIGNAL),\n/* harmony export */   FAILED_TRANSFER_TO_ADDRESS_SIGNAL: () => (/* binding */ FAILED_TRANSFER_TO_ADDRESS_SIGNAL),\n/* harmony export */   FAILED_UNKNOWN_SIGNAL: () => (/* binding */ FAILED_UNKNOWN_SIGNAL),\n/* harmony export */   MAX_PREDICATE_DATA_LENGTH: () => (/* binding */ MAX_PREDICATE_DATA_LENGTH),\n/* harmony export */   MAX_PREDICATE_LENGTH: () => (/* binding */ MAX_PREDICATE_LENGTH),\n/* harmony export */   MAX_SCRIPT_DATA_LENGTH: () => (/* binding */ MAX_SCRIPT_DATA_LENGTH),\n/* harmony export */   MAX_SCRIPT_LENGTH: () => (/* binding */ MAX_SCRIPT_LENGTH),\n/* harmony export */   MAX_STATIC_CONTRACTS: () => (/* binding */ MAX_STATIC_CONTRACTS),\n/* harmony export */   MAX_WITNESSES: () => (/* binding */ MAX_WITNESSES),\n/* harmony export */   PANIC_DOC_URL: () => (/* binding */ PANIC_DOC_URL),\n/* harmony export */   PANIC_REASONS: () => (/* binding */ PANIC_REASONS)\n/* harmony export */ });\n// src/configs.ts\nvar CONTRACT_MAX_SIZE = 16 * 1024;\nvar MAX_WITNESSES = 16;\nvar MAX_SCRIPT_LENGTH = 1024 * 1024 * 1024;\nvar MAX_SCRIPT_DATA_LENGTH = 1024 * 1024 * 1024;\nvar MAX_STATIC_CONTRACTS = 255;\nvar MAX_PREDICATE_LENGTH = 1024 * 1024;\nvar MAX_PREDICATE_DATA_LENGTH = 1024 * 1024;\nvar FAILED_REQUIRE_SIGNAL = \"0xffffffffffff0000\";\nvar FAILED_TRANSFER_TO_ADDRESS_SIGNAL = \"0xffffffffffff0001\";\nvar FAILED_ASSERT_EQ_SIGNAL = \"0xffffffffffff0003\";\nvar FAILED_ASSERT_SIGNAL = \"0xffffffffffff0004\";\nvar FAILED_ASSERT_NE_SIGNAL = \"0xffffffffffff0005\";\nvar FAILED_UNKNOWN_SIGNAL = \"0x0\";\nvar PANIC_REASONS = [\n  \"ArithmeticError\",\n  \"ArithmeticOverflow\",\n  \"AssetIdNotFound\",\n  \"BalanceOverflow\",\n  \"BlobIdAlreadyUploaded\",\n  \"BlobNotFound\",\n  \"BytecodeAlreadyUploaded\",\n  \"CanNotGetGasPriceInPredicate\",\n  \"ContractIdAlreadyDeployed\",\n  \"ContractInstructionNotAllowed\",\n  \"ContractMaxSize\",\n  \"ContractMismatch\",\n  \"ContractNotFound\",\n  \"ContractNotInInputs\",\n  \"EcalError\",\n  \"ExpectedCoinInput\",\n  \"ExpectedInternalContext\",\n  \"ExpectedNestedCaller\",\n  \"ExpectedOutputVariable\",\n  \"ExpectedParentInternalContext\",\n  \"ExpectedUnallocatedStack\",\n  \"GasCostNotDefined\",\n  \"InputContractDoesNotExist\",\n  \"InputNotFound\",\n  \"InternalBalanceOverflow\",\n  \"InvalidBlockHeight\",\n  \"InvalidEllipticCurvePoint\",\n  \"InvalidFlags\",\n  \"InvalidImmediateValue\",\n  \"InvalidInstruction\",\n  \"InvalidMetadataIdentifier\",\n  \"InvalidUpgradePurposeType\",\n  \"MalformedCallStructure\",\n  \"MaxStaticContractsReached\",\n  \"MemoryGrowthOverlap\",\n  \"MemoryNotExecutable\",\n  \"MemoryOverflow\",\n  \"MemoryOwnership\",\n  \"MemoryWriteOverlap\",\n  \"MessageDataTooLong\",\n  \"NotEnoughBalance\",\n  \"OutOfGas\",\n  \"OutputNotFound\",\n  \"OverridingConsensusParameters\",\n  \"OverridingStateTransactionBytecode\",\n  \"PolicyIsNotSet\",\n  \"PolicyNotFound\",\n  \"PredicateReturnedNonOne\",\n  \"ProofInUploadNotFound\",\n  \"ReservedRegisterNotWritable\",\n  \"Revert\",\n  \"StorageSlotsNotFound\",\n  \"ThePartIsNotSequentiallyConnected\",\n  \"TooManyReceipts\",\n  \"TooManySlots\",\n  \"TransactionMaturity\",\n  \"TransactionValidity\",\n  \"TransferAmountCannotBeZero\",\n  \"TransferZeroCoins\",\n  \"UninitalizedMemoryAccess\",\n  \"UnknownPanicReason\",\n  \"UnknownStateTransactionBytecodeRoot\",\n  \"UnsupportedCurveId\",\n  \"UnsupportedOperationType\",\n  \"WitnessNotFound\"\n];\nvar PANIC_DOC_URL = \"https://docs.rs/fuel-asm/latest/fuel_asm/enum.PanicReason.html\";\n\n//# sourceMappingURL=configs.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGZ1ZWwtdHMrdHJhbnNhY3Rpb25zQDAuMTAxLjFfdml0ZXN0QDMuMi40X0B0eXBlcytkZWJ1Z0A0LjEuMTJfQHR5cGVzK25vZGVAMjQuNy4yX2ppdGlAX2RjNjgxM2VhMTRjNTNmZmQ4N2NlMzJjN2NjNjJhMzM5L25vZGVfbW9kdWxlcy9AZnVlbC10cy90cmFuc2FjdGlvbnMvZGlzdC9jb25maWdzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWlCRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMveW91c3VrZS9NeVByb2plY3QvbXktbmV4dXMtYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AZnVlbC10cyt0cmFuc2FjdGlvbnNAMC4xMDEuMV92aXRlc3RAMy4yLjRfQHR5cGVzK2RlYnVnQDQuMS4xMl9AdHlwZXMrbm9kZUAyNC43LjJfaml0aUBfZGM2ODEzZWExNGM1M2ZmZDg3Y2UzMmM3Y2M2MmEzMzkvbm9kZV9tb2R1bGVzL0BmdWVsLXRzL3RyYW5zYWN0aW9ucy9kaXN0L2NvbmZpZ3MubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb25maWdzLnRzXG52YXIgQ09OVFJBQ1RfTUFYX1NJWkUgPSAxNiAqIDEwMjQ7XG52YXIgTUFYX1dJVE5FU1NFUyA9IDE2O1xudmFyIE1BWF9TQ1JJUFRfTEVOR1RIID0gMTAyNCAqIDEwMjQgKiAxMDI0O1xudmFyIE1BWF9TQ1JJUFRfREFUQV9MRU5HVEggPSAxMDI0ICogMTAyNCAqIDEwMjQ7XG52YXIgTUFYX1NUQVRJQ19DT05UUkFDVFMgPSAyNTU7XG52YXIgTUFYX1BSRURJQ0FURV9MRU5HVEggPSAxMDI0ICogMTAyNDtcbnZhciBNQVhfUFJFRElDQVRFX0RBVEFfTEVOR1RIID0gMTAyNCAqIDEwMjQ7XG52YXIgRkFJTEVEX1JFUVVJUkVfU0lHTkFMID0gXCIweGZmZmZmZmZmZmZmZjAwMDBcIjtcbnZhciBGQUlMRURfVFJBTlNGRVJfVE9fQUREUkVTU19TSUdOQUwgPSBcIjB4ZmZmZmZmZmZmZmZmMDAwMVwiO1xudmFyIEZBSUxFRF9BU1NFUlRfRVFfU0lHTkFMID0gXCIweGZmZmZmZmZmZmZmZjAwMDNcIjtcbnZhciBGQUlMRURfQVNTRVJUX1NJR05BTCA9IFwiMHhmZmZmZmZmZmZmZmYwMDA0XCI7XG52YXIgRkFJTEVEX0FTU0VSVF9ORV9TSUdOQUwgPSBcIjB4ZmZmZmZmZmZmZmZmMDAwNVwiO1xudmFyIEZBSUxFRF9VTktOT1dOX1NJR05BTCA9IFwiMHgwXCI7XG52YXIgUEFOSUNfUkVBU09OUyA9IFtcbiAgXCJBcml0aG1ldGljRXJyb3JcIixcbiAgXCJBcml0aG1ldGljT3ZlcmZsb3dcIixcbiAgXCJBc3NldElkTm90Rm91bmRcIixcbiAgXCJCYWxhbmNlT3ZlcmZsb3dcIixcbiAgXCJCbG9iSWRBbHJlYWR5VXBsb2FkZWRcIixcbiAgXCJCbG9iTm90Rm91bmRcIixcbiAgXCJCeXRlY29kZUFscmVhZHlVcGxvYWRlZFwiLFxuICBcIkNhbk5vdEdldEdhc1ByaWNlSW5QcmVkaWNhdGVcIixcbiAgXCJDb250cmFjdElkQWxyZWFkeURlcGxveWVkXCIsXG4gIFwiQ29udHJhY3RJbnN0cnVjdGlvbk5vdEFsbG93ZWRcIixcbiAgXCJDb250cmFjdE1heFNpemVcIixcbiAgXCJDb250cmFjdE1pc21hdGNoXCIsXG4gIFwiQ29udHJhY3ROb3RGb3VuZFwiLFxuICBcIkNvbnRyYWN0Tm90SW5JbnB1dHNcIixcbiAgXCJFY2FsRXJyb3JcIixcbiAgXCJFeHBlY3RlZENvaW5JbnB1dFwiLFxuICBcIkV4cGVjdGVkSW50ZXJuYWxDb250ZXh0XCIsXG4gIFwiRXhwZWN0ZWROZXN0ZWRDYWxsZXJcIixcbiAgXCJFeHBlY3RlZE91dHB1dFZhcmlhYmxlXCIsXG4gIFwiRXhwZWN0ZWRQYXJlbnRJbnRlcm5hbENvbnRleHRcIixcbiAgXCJFeHBlY3RlZFVuYWxsb2NhdGVkU3RhY2tcIixcbiAgXCJHYXNDb3N0Tm90RGVmaW5lZFwiLFxuICBcIklucHV0Q29udHJhY3REb2VzTm90RXhpc3RcIixcbiAgXCJJbnB1dE5vdEZvdW5kXCIsXG4gIFwiSW50ZXJuYWxCYWxhbmNlT3ZlcmZsb3dcIixcbiAgXCJJbnZhbGlkQmxvY2tIZWlnaHRcIixcbiAgXCJJbnZhbGlkRWxsaXB0aWNDdXJ2ZVBvaW50XCIsXG4gIFwiSW52YWxpZEZsYWdzXCIsXG4gIFwiSW52YWxpZEltbWVkaWF0ZVZhbHVlXCIsXG4gIFwiSW52YWxpZEluc3RydWN0aW9uXCIsXG4gIFwiSW52YWxpZE1ldGFkYXRhSWRlbnRpZmllclwiLFxuICBcIkludmFsaWRVcGdyYWRlUHVycG9zZVR5cGVcIixcbiAgXCJNYWxmb3JtZWRDYWxsU3RydWN0dXJlXCIsXG4gIFwiTWF4U3RhdGljQ29udHJhY3RzUmVhY2hlZFwiLFxuICBcIk1lbW9yeUdyb3d0aE92ZXJsYXBcIixcbiAgXCJNZW1vcnlOb3RFeGVjdXRhYmxlXCIsXG4gIFwiTWVtb3J5T3ZlcmZsb3dcIixcbiAgXCJNZW1vcnlPd25lcnNoaXBcIixcbiAgXCJNZW1vcnlXcml0ZU92ZXJsYXBcIixcbiAgXCJNZXNzYWdlRGF0YVRvb0xvbmdcIixcbiAgXCJOb3RFbm91Z2hCYWxhbmNlXCIsXG4gIFwiT3V0T2ZHYXNcIixcbiAgXCJPdXRwdXROb3RGb3VuZFwiLFxuICBcIk92ZXJyaWRpbmdDb25zZW5zdXNQYXJhbWV0ZXJzXCIsXG4gIFwiT3ZlcnJpZGluZ1N0YXRlVHJhbnNhY3Rpb25CeXRlY29kZVwiLFxuICBcIlBvbGljeUlzTm90U2V0XCIsXG4gIFwiUG9saWN5Tm90Rm91bmRcIixcbiAgXCJQcmVkaWNhdGVSZXR1cm5lZE5vbk9uZVwiLFxuICBcIlByb29mSW5VcGxvYWROb3RGb3VuZFwiLFxuICBcIlJlc2VydmVkUmVnaXN0ZXJOb3RXcml0YWJsZVwiLFxuICBcIlJldmVydFwiLFxuICBcIlN0b3JhZ2VTbG90c05vdEZvdW5kXCIsXG4gIFwiVGhlUGFydElzTm90U2VxdWVudGlhbGx5Q29ubmVjdGVkXCIsXG4gIFwiVG9vTWFueVJlY2VpcHRzXCIsXG4gIFwiVG9vTWFueVNsb3RzXCIsXG4gIFwiVHJhbnNhY3Rpb25NYXR1cml0eVwiLFxuICBcIlRyYW5zYWN0aW9uVmFsaWRpdHlcIixcbiAgXCJUcmFuc2ZlckFtb3VudENhbm5vdEJlWmVyb1wiLFxuICBcIlRyYW5zZmVyWmVyb0NvaW5zXCIsXG4gIFwiVW5pbml0YWxpemVkTWVtb3J5QWNjZXNzXCIsXG4gIFwiVW5rbm93blBhbmljUmVhc29uXCIsXG4gIFwiVW5rbm93blN0YXRlVHJhbnNhY3Rpb25CeXRlY29kZVJvb3RcIixcbiAgXCJVbnN1cHBvcnRlZEN1cnZlSWRcIixcbiAgXCJVbnN1cHBvcnRlZE9wZXJhdGlvblR5cGVcIixcbiAgXCJXaXRuZXNzTm90Rm91bmRcIlxuXTtcbnZhciBQQU5JQ19ET0NfVVJMID0gXCJodHRwczovL2RvY3MucnMvZnVlbC1hc20vbGF0ZXN0L2Z1ZWxfYXNtL2VudW0uUGFuaWNSZWFzb24uaHRtbFwiO1xuZXhwb3J0IHtcbiAgQ09OVFJBQ1RfTUFYX1NJWkUsXG4gIEZBSUxFRF9BU1NFUlRfRVFfU0lHTkFMLFxuICBGQUlMRURfQVNTRVJUX05FX1NJR05BTCxcbiAgRkFJTEVEX0FTU0VSVF9TSUdOQUwsXG4gIEZBSUxFRF9SRVFVSVJFX1NJR05BTCxcbiAgRkFJTEVEX1RSQU5TRkVSX1RPX0FERFJFU1NfU0lHTkFMLFxuICBGQUlMRURfVU5LTk9XTl9TSUdOQUwsXG4gIE1BWF9QUkVESUNBVEVfREFUQV9MRU5HVEgsXG4gIE1BWF9QUkVESUNBVEVfTEVOR1RILFxuICBNQVhfU0NSSVBUX0RBVEFfTEVOR1RILFxuICBNQVhfU0NSSVBUX0xFTkdUSCxcbiAgTUFYX1NUQVRJQ19DT05UUkFDVFMsXG4gIE1BWF9XSVRORVNTRVMsXG4gIFBBTklDX0RPQ19VUkwsXG4gIFBBTklDX1JFQVNPTlNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWdzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339/node_modules/@fuel-ts/transactions/dist/configs.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339/node_modules/@fuel-ts/transactions/dist/index.mjs":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339/node_modules/@fuel-ts/transactions/dist/index.mjs ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ByteArrayCoder: () => (/* binding */ ByteArrayCoder),\n/* harmony export */   InputCoder: () => (/* binding */ InputCoder),\n/* harmony export */   InputCoinCoder: () => (/* binding */ InputCoinCoder),\n/* harmony export */   InputContractCoder: () => (/* binding */ InputContractCoder),\n/* harmony export */   InputMessageCoder: () => (/* binding */ InputMessageCoder),\n/* harmony export */   InputType: () => (/* binding */ InputType),\n/* harmony export */   OutputChangeCoder: () => (/* binding */ OutputChangeCoder),\n/* harmony export */   OutputCoder: () => (/* binding */ OutputCoder),\n/* harmony export */   OutputCoinCoder: () => (/* binding */ OutputCoinCoder),\n/* harmony export */   OutputContractCoder: () => (/* binding */ OutputContractCoder),\n/* harmony export */   OutputContractCreatedCoder: () => (/* binding */ OutputContractCreatedCoder),\n/* harmony export */   OutputType: () => (/* binding */ OutputType),\n/* harmony export */   OutputVariableCoder: () => (/* binding */ OutputVariableCoder),\n/* harmony export */   PoliciesCoder: () => (/* binding */ PoliciesCoder),\n/* harmony export */   PolicyType: () => (/* binding */ PolicyType),\n/* harmony export */   ReceiptType: () => (/* binding */ ReceiptType),\n/* harmony export */   StorageSlotCoder: () => (/* binding */ StorageSlotCoder),\n/* harmony export */   TransactionBlobCoder: () => (/* binding */ TransactionBlobCoder),\n/* harmony export */   TransactionCoder: () => (/* binding */ TransactionCoder),\n/* harmony export */   TransactionCreateCoder: () => (/* binding */ TransactionCreateCoder),\n/* harmony export */   TransactionMintCoder: () => (/* binding */ TransactionMintCoder),\n/* harmony export */   TransactionScriptCoder: () => (/* binding */ TransactionScriptCoder),\n/* harmony export */   TransactionType: () => (/* binding */ TransactionType),\n/* harmony export */   TransactionUpgradeCoder: () => (/* binding */ TransactionUpgradeCoder),\n/* harmony export */   TransactionUploadCoder: () => (/* binding */ TransactionUploadCoder),\n/* harmony export */   TxPointerCoder: () => (/* binding */ TxPointerCoder),\n/* harmony export */   UpgradePurposeCoder: () => (/* binding */ UpgradePurposeCoder),\n/* harmony export */   UpgradePurposeTypeEnum: () => (/* binding */ UpgradePurposeTypeEnum),\n/* harmony export */   UtxoIdCoder: () => (/* binding */ UtxoIdCoder),\n/* harmony export */   WitnessCoder: () => (/* binding */ WitnessCoder),\n/* harmony export */   createAssetId: () => (/* binding */ createAssetId),\n/* harmony export */   getMessageId: () => (/* binding */ getMessageId),\n/* harmony export */   getMintedAssetId: () => (/* binding */ getMintedAssetId),\n/* harmony export */   sortPolicies: () => (/* binding */ sortPolicies)\n/* harmony export */ });\n/* harmony import */ var _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fuel-ts/abi-coder */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+abi-coder@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6_6403986254e63357a3dfff475209c93d/node_modules/@fuel-ts/abi-coder/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fuel-ts/errors */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+errors@0.101.1/node_modules/@fuel-ts/errors/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_hasher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fuel-ts/hasher */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+hasher@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__3de5373ec566d2f8672f34c376d1b1fa/node_modules/@fuel-ts/hasher/dist/index.mjs\");\n/* harmony import */ var _fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fuel-ts/utils */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+utils@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_j_f5ff000e110be614030afd6e0fd99f41/node_modules/@fuel-ts/utils/dist/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/coders/input.ts\n\n\n\n\n\n// src/coders/byte-array.ts\n\n\nvar ByteArrayCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"ByteArrayCoder\");\n  }\n  length;\n  #paddingLength;\n  constructor(length) {\n    const paddingLength = (8 - length % 8) % 8;\n    const encodedLength = length + paddingLength;\n    super(\n      \"ByteArray\",\n      // While this might sound like a [u8; N] coder it's actually not.\n      // A [u8; N] coder would pad every u8 to 8 bytes which would\n      // make every u8 have the same size as a u64.\n      // We are packing four u8s into u64s here, avoiding this padding.\n      `[u64; ${encodedLength / 4}]`,\n      encodedLength\n    );\n    this.length = length;\n    this.#paddingLength = paddingLength;\n  }\n  encode(value) {\n    const parts = [];\n    const data = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);\n    parts.push(data);\n    if (this.#paddingLength) {\n      parts.push(new Uint8Array(this.#paddingLength));\n    }\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = [(0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.hexlify)(data.slice(o, o + this.length)), o + this.length];\n    const value = decoded;\n    if (this.#paddingLength) {\n      [decoded, o] = [null, o + this.#paddingLength];\n    }\n    return [value, o];\n  }\n};\n\n// src/coders/tx-pointer.ts\n\n\nvar TxPointerCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.StructCoder {\n  static {\n    __name(this, \"TxPointerCoder\");\n  }\n  constructor() {\n    super(\"TxPointer\", {\n      blockHeight: new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }),\n      txIndex: new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true })\n    });\n  }\n  static decodeFromGqlScalar(value) {\n    if (value.length !== 12) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.DECODE_ERROR,\n        `Invalid TxPointer scalar string length ${value.length}. It must have length 12.`\n      );\n    }\n    const [blockHeight, txIndex] = [value.substring(0, 8), value.substring(8)];\n    return {\n      blockHeight: parseInt(blockHeight, 16),\n      txIndex: parseInt(txIndex, 16)\n    };\n  }\n};\n\n// src/coders/input.ts\nvar InputType = /* @__PURE__ */ ((InputType2) => {\n  InputType2[InputType2[\"Coin\"] = 0] = \"Coin\";\n  InputType2[InputType2[\"Contract\"] = 1] = \"Contract\";\n  InputType2[InputType2[\"Message\"] = 2] = \"Message\";\n  return InputType2;\n})(InputType || {});\nvar InputCoinCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"InputCoinCoder\");\n  }\n  constructor() {\n    super(\"InputCoin\", \"struct InputCoin\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.txID));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.outputIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.owner));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.amount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.assetId));\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.predicateGasUsed));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.predicateLength));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.predicateDataLength));\n    parts.push(new ByteArrayCoder(value.predicateLength.toNumber()).encode(value.predicate));\n    parts.push(\n      new ByteArrayCoder(value.predicateDataLength.toNumber()).encode(value.predicateData)\n    );\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const txID = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const outputIndex = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const owner = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessIndex = Number(decoded);\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const predicateGasUsed = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const predicateLength = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const predicateDataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateLength.toNumber()).decode(data, o);\n    const predicate = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateDataLength.toNumber()).decode(data, o);\n    const predicateData = decoded;\n    return [\n      {\n        type: 0 /* Coin */,\n        txID,\n        outputIndex,\n        owner,\n        amount,\n        assetId,\n        txPointer,\n        witnessIndex,\n        predicateGasUsed,\n        predicateLength,\n        predicateDataLength,\n        predicate,\n        predicateData\n      },\n      o\n    ];\n  }\n};\nvar InputContractCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"InputContractCoder\");\n  }\n  constructor() {\n    super(\"InputContract\", \"struct InputContract\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.txID));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.outputIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.balanceRoot));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.stateRoot));\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.contractID));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const txID = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const outputIndex = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const balanceRoot = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const stateRoot = decoded;\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const contractID = decoded;\n    return [\n      {\n        type: 1 /* Contract */,\n        txID,\n        outputIndex,\n        balanceRoot,\n        stateRoot,\n        txPointer,\n        contractID\n      },\n      o\n    ];\n  }\n};\nvar InputMessageCoder = class _InputMessageCoder extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"InputMessageCoder\");\n  }\n  constructor() {\n    super(\"InputMessage\", \"struct InputMessage\", 0);\n  }\n  static getMessageId(value) {\n    const parts = [];\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.amount));\n    parts.push((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value.data || \"0x\"));\n    return (0,_fuel_ts_hasher__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts));\n  }\n  static encodeData(messageData) {\n    const bytes = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(messageData || \"0x\");\n    const dataLength = bytes.length;\n    return new ByteArrayCoder(dataLength).encode(bytes);\n  }\n  encode(value) {\n    const parts = [];\n    const data = _InputMessageCoder.encodeData(value.data);\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.amount));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.predicateGasUsed));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(data.length));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.predicateLength));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.predicateDataLength));\n    parts.push(new ByteArrayCoder(data.length).encode(data));\n    parts.push(new ByteArrayCoder(value.predicateLength.toNumber()).encode(value.predicate));\n    parts.push(\n      new ByteArrayCoder(value.predicateDataLength.toNumber()).encode(value.predicateData)\n    );\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  static decodeData(messageData) {\n    const bytes = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(messageData);\n    const dataLength = bytes.length;\n    const [data] = new ByteArrayCoder(dataLength).decode(bytes, 0);\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const sender = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const recipient = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const nonce = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessIndex = Number(decoded);\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const predicateGasUsed = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(data, o);\n    const dataLength = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const predicateLength = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const predicateDataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(dataLength).decode(data, o);\n    const messageData = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateLength.toNumber()).decode(data, o);\n    const predicate = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateDataLength.toNumber()).decode(data, o);\n    const predicateData = decoded;\n    return [\n      {\n        type: 2 /* Message */,\n        sender,\n        recipient,\n        amount,\n        witnessIndex,\n        nonce,\n        predicateGasUsed,\n        dataLength,\n        predicateLength,\n        predicateDataLength,\n        data: messageData,\n        predicate,\n        predicateData\n      },\n      o\n    ];\n  }\n};\nvar InputCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"InputCoder\");\n  }\n  constructor() {\n    super(\"Input\", \"struct Input\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).encode(value.type));\n    const { type } = value;\n    switch (type) {\n      case 0 /* Coin */: {\n        parts.push(new InputCoinCoder().encode(value));\n        break;\n      }\n      case 1 /* Contract */: {\n        parts.push(new InputContractCoder().encode(value));\n        break;\n      }\n      case 2 /* Message */: {\n        parts.push(new InputMessageCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.INVALID_TRANSACTION_INPUT,\n          `Invalid transaction input type: ${type}.`\n        );\n      }\n    }\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).decode(data, o);\n    const type = decoded;\n    switch (type) {\n      case 0 /* Coin */: {\n        [decoded, o] = new InputCoinCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 1 /* Contract */: {\n        [decoded, o] = new InputContractCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 2 /* Message */: {\n        [decoded, o] = new InputMessageCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.INVALID_TRANSACTION_INPUT,\n          `Invalid transaction input type: ${type}.`\n        );\n      }\n    }\n  }\n};\n\n// src/coders/output.ts\n\n\n\nvar OutputType = /* @__PURE__ */ ((OutputType2) => {\n  OutputType2[OutputType2[\"Coin\"] = 0] = \"Coin\";\n  OutputType2[OutputType2[\"Contract\"] = 1] = \"Contract\";\n  OutputType2[OutputType2[\"Change\"] = 2] = \"Change\";\n  OutputType2[OutputType2[\"Variable\"] = 3] = \"Variable\";\n  OutputType2[OutputType2[\"ContractCreated\"] = 4] = \"ContractCreated\";\n  return OutputType2;\n})(OutputType || {});\nvar OutputCoinCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"OutputCoinCoder\");\n  }\n  constructor() {\n    super(\"OutputCoin\", \"struct OutputCoin\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.to));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.amount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.assetId));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const assetId = decoded;\n    return [\n      {\n        type: 0 /* Coin */,\n        to,\n        amount,\n        assetId\n      },\n      o\n    ];\n  }\n};\nvar OutputContractCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"OutputContractCoder\");\n  }\n  constructor() {\n    super(\"OutputContract\", \"struct OutputContract\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).encode(value.inputIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.balanceRoot));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.stateRoot));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).decode(data, o);\n    const inputIndex = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const balanceRoot = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const stateRoot = decoded;\n    return [\n      {\n        type: 1 /* Contract */,\n        inputIndex,\n        balanceRoot,\n        stateRoot\n      },\n      o\n    ];\n  }\n};\nvar OutputChangeCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"OutputChangeCoder\");\n  }\n  constructor() {\n    super(\"OutputChange\", \"struct OutputChange\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.to));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.amount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.assetId));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const assetId = decoded;\n    return [\n      {\n        type: 2 /* Change */,\n        to,\n        amount,\n        assetId\n      },\n      o\n    ];\n  }\n};\nvar OutputVariableCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"OutputVariableCoder\");\n  }\n  constructor() {\n    super(\"OutputVariable\", \"struct OutputVariable\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.to));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.amount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.assetId));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const assetId = decoded;\n    return [\n      {\n        type: 3 /* Variable */,\n        to,\n        amount,\n        assetId\n      },\n      o\n    ];\n  }\n};\nvar OutputContractCreatedCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"OutputContractCreatedCoder\");\n  }\n  constructor() {\n    super(\"OutputContractCreated\", \"struct OutputContractCreated\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.contractId));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.stateRoot));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const contractId = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const stateRoot = decoded;\n    return [\n      {\n        type: 4 /* ContractCreated */,\n        contractId,\n        stateRoot\n      },\n      o\n    ];\n  }\n};\nvar OutputCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"OutputCoder\");\n  }\n  constructor() {\n    super(\"Output\", \" struct Output\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).encode(value.type));\n    const { type } = value;\n    switch (type) {\n      case 0 /* Coin */: {\n        parts.push(new OutputCoinCoder().encode(value));\n        break;\n      }\n      case 1 /* Contract */: {\n        parts.push(new OutputContractCoder().encode(value));\n        break;\n      }\n      case 2 /* Change */: {\n        parts.push(new OutputChangeCoder().encode(value));\n        break;\n      }\n      case 3 /* Variable */: {\n        parts.push(new OutputVariableCoder().encode(value));\n        break;\n      }\n      case 4 /* ContractCreated */: {\n        parts.push(new OutputContractCreatedCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.INVALID_TRANSACTION_OUTPUT,\n          `Invalid transaction output type: ${type}.`\n        );\n      }\n    }\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).decode(data, o);\n    const type = decoded;\n    switch (type) {\n      case 0 /* Coin */: {\n        [decoded, o] = new OutputCoinCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 1 /* Contract */: {\n        [decoded, o] = new OutputContractCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 2 /* Change */: {\n        [decoded, o] = new OutputChangeCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 3 /* Variable */: {\n        [decoded, o] = new OutputVariableCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 4 /* ContractCreated */: {\n        [decoded, o] = new OutputContractCreatedCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.INVALID_TRANSACTION_OUTPUT,\n          `Invalid transaction output type: ${type}.`\n        );\n      }\n    }\n  }\n};\n\n// src/coders/policy.ts\n\n\n\nvar PolicyType = /* @__PURE__ */ ((PolicyType2) => {\n  PolicyType2[PolicyType2[\"Tip\"] = 1] = \"Tip\";\n  PolicyType2[PolicyType2[\"WitnessLimit\"] = 2] = \"WitnessLimit\";\n  PolicyType2[PolicyType2[\"Maturity\"] = 4] = \"Maturity\";\n  PolicyType2[PolicyType2[\"MaxFee\"] = 8] = \"MaxFee\";\n  PolicyType2[PolicyType2[\"Expiration\"] = 16] = \"Expiration\";\n  return PolicyType2;\n})(PolicyType || {});\nvar sortPolicies = /* @__PURE__ */ __name((policies) => policies.sort((a, b) => a.type - b.type), \"sortPolicies\");\nfunction validateDuplicatedPolicies(policies) {\n  const seenTypes = /* @__PURE__ */ new Set();\n  policies.forEach((policy) => {\n    if (seenTypes.has(policy.type)) {\n      throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n        _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.DUPLICATED_POLICY,\n        `Duplicate policy type found: ${8 /* MaxFee */}`\n      );\n    }\n    seenTypes.add(policy.type);\n  });\n}\n__name(validateDuplicatedPolicies, \"validateDuplicatedPolicies\");\nvar PoliciesCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"PoliciesCoder\");\n  }\n  constructor() {\n    super(\"Policies\", \"array Policy\", 0);\n  }\n  encode(policies) {\n    validateDuplicatedPolicies(policies);\n    const sortedPolicies = sortPolicies(policies);\n    const parts = [];\n    sortedPolicies.forEach(({ data, type }) => {\n      switch (type) {\n        case 8 /* MaxFee */:\n        case 1 /* Tip */:\n        case 2 /* WitnessLimit */:\n          parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(data));\n          break;\n        case 4 /* Maturity */:\n        case 16 /* Expiration */:\n          parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).encode(data));\n          break;\n        default: {\n          throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.INVALID_POLICY_TYPE, `Invalid policy type: ${type}`);\n        }\n      }\n    });\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset, policyTypes) {\n    let o = offset;\n    const policies = [];\n    if (policyTypes & 1 /* Tip */) {\n      const [tip, nextOffset] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n      o = nextOffset;\n      policies.push({ type: 1 /* Tip */, data: tip });\n    }\n    if (policyTypes & 2 /* WitnessLimit */) {\n      const [witnessLimit, nextOffset] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n      o = nextOffset;\n      policies.push({ type: 2 /* WitnessLimit */, data: witnessLimit });\n    }\n    if (policyTypes & 4 /* Maturity */) {\n      const [maturity, nextOffset] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(\n        data,\n        o\n      );\n      o = nextOffset;\n      policies.push({ type: 4 /* Maturity */, data: maturity });\n    }\n    if (policyTypes & 8 /* MaxFee */) {\n      const [maxFee, nextOffset] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n      o = nextOffset;\n      policies.push({ type: 8 /* MaxFee */, data: maxFee });\n    }\n    if (policyTypes & 16 /* Expiration */) {\n      const [expiration, nextOffset] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(\n        data,\n        o\n      );\n      o = nextOffset;\n      policies.push({ type: 16 /* Expiration */, data: expiration });\n    }\n    return [policies, o];\n  }\n};\n\n// src/receipt.ts\n\n\n\nvar ReceiptType = /* @__PURE__ */ ((ReceiptType2) => {\n  ReceiptType2[ReceiptType2[\"Call\"] = 0] = \"Call\";\n  ReceiptType2[ReceiptType2[\"Return\"] = 1] = \"Return\";\n  ReceiptType2[ReceiptType2[\"ReturnData\"] = 2] = \"ReturnData\";\n  ReceiptType2[ReceiptType2[\"Panic\"] = 3] = \"Panic\";\n  ReceiptType2[ReceiptType2[\"Revert\"] = 4] = \"Revert\";\n  ReceiptType2[ReceiptType2[\"Log\"] = 5] = \"Log\";\n  ReceiptType2[ReceiptType2[\"LogData\"] = 6] = \"LogData\";\n  ReceiptType2[ReceiptType2[\"Transfer\"] = 7] = \"Transfer\";\n  ReceiptType2[ReceiptType2[\"TransferOut\"] = 8] = \"TransferOut\";\n  ReceiptType2[ReceiptType2[\"ScriptResult\"] = 9] = \"ScriptResult\";\n  ReceiptType2[ReceiptType2[\"MessageOut\"] = 10] = \"MessageOut\";\n  ReceiptType2[ReceiptType2[\"Mint\"] = 11] = \"Mint\";\n  ReceiptType2[ReceiptType2[\"Burn\"] = 12] = \"Burn\";\n  return ReceiptType2;\n})(ReceiptType || {});\nvar getMintedAssetId = /* @__PURE__ */ __name((contractId, subId) => {\n  const contractIdBytes = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(contractId);\n  const subIdBytes = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(subId);\n  return (0,_fuel_ts_hasher__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)([contractIdBytes, subIdBytes]));\n}, \"getMintedAssetId\");\nvar createAssetId = /* @__PURE__ */ __name((contractId, subId) => ({\n  bits: getMintedAssetId(contractId, subId)\n}), \"createAssetId\");\nvar getMessageId = /* @__PURE__ */ __name((value) => {\n  const parts = [];\n  parts.push(new ByteArrayCoder(32).encode(value.sender));\n  parts.push(new ByteArrayCoder(32).encode(value.recipient));\n  parts.push(new ByteArrayCoder(32).encode(value.nonce));\n  parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.amount));\n  parts.push((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value.data || \"0x\"));\n  return (0,_fuel_ts_hasher__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts));\n}, \"getMessageId\");\n\n// src/coders/storage-slot.ts\n\nvar StorageSlotCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.StructCoder {\n  static {\n    __name(this, \"StorageSlotCoder\");\n  }\n  constructor() {\n    super(\"StorageSlot\", {\n      key: new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder(),\n      value: new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder()\n    });\n  }\n};\n\n// src/coders/transaction.ts\n\n\n\n\n// src/coders/upgrade-purpose.ts\n\n\n\nvar UpgradePurposeTypeEnum = /* @__PURE__ */ ((UpgradePurposeTypeEnum2) => {\n  UpgradePurposeTypeEnum2[UpgradePurposeTypeEnum2[\"ConsensusParameters\"] = 0] = \"ConsensusParameters\";\n  UpgradePurposeTypeEnum2[UpgradePurposeTypeEnum2[\"StateTransition\"] = 1] = \"StateTransition\";\n  return UpgradePurposeTypeEnum2;\n})(UpgradePurposeTypeEnum || {});\nvar UpgradePurposeCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"UpgradePurposeCoder\");\n  }\n  constructor() {\n    super(\"UpgradePurpose\", \"UpgradePurpose\", 0);\n  }\n  encode(upgradePurposeType) {\n    const parts = [];\n    const { type } = upgradePurposeType;\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).encode(type));\n    switch (type) {\n      case 0 /* ConsensusParameters */: {\n        const data = upgradePurposeType.data;\n        parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(data.witnessIndex));\n        parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(data.checksum));\n        break;\n      }\n      case 1 /* StateTransition */: {\n        const data = upgradePurposeType.data;\n        parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(data.bytecodeRoot));\n        break;\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.UNSUPPORTED_TRANSACTION_TYPE,\n          `Unsupported transaction type: ${type}`\n        );\n      }\n    }\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let o = offset;\n    let decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).decode(data, o);\n    const type = decoded;\n    switch (type) {\n      case 0 /* ConsensusParameters */: {\n        [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n        const witnessIndex = decoded;\n        [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n        const checksum = decoded;\n        return [{ type, data: { witnessIndex, checksum } }, o];\n      }\n      case 1 /* StateTransition */: {\n        [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n        const bytecodeRoot = decoded;\n        return [{ type, data: { bytecodeRoot } }, o];\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.UNSUPPORTED_TRANSACTION_TYPE,\n          `Unsupported transaction type: ${type}`\n        );\n      }\n    }\n  }\n};\n\n// src/coders/witness.ts\n\n\nvar WitnessCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"WitnessCoder\");\n  }\n  constructor() {\n    super(\n      \"Witness\",\n      // Types of dynamic length are not supported in the ABI\n      \"unknown\",\n      0\n    );\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).encode(value.dataLength));\n    parts.push(new ByteArrayCoder(value.dataLength).encode(value.data));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(data, o);\n    const dataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(dataLength).decode(data, o);\n    const witnessData = decoded;\n    return [\n      {\n        dataLength,\n        data: witnessData\n      },\n      o\n    ];\n  }\n};\n\n// src/coders/transaction.ts\nvar TransactionType = /* @__PURE__ */ ((TransactionType2) => {\n  TransactionType2[TransactionType2[\"Script\"] = 0] = \"Script\";\n  TransactionType2[TransactionType2[\"Create\"] = 1] = \"Create\";\n  TransactionType2[TransactionType2[\"Mint\"] = 2] = \"Mint\";\n  TransactionType2[TransactionType2[\"Upgrade\"] = 3] = \"Upgrade\";\n  TransactionType2[TransactionType2[\"Upload\"] = 4] = \"Upload\";\n  TransactionType2[TransactionType2[\"Blob\"] = 5] = \"Blob\";\n  return TransactionType2;\n})(TransactionType || {});\nvar TransactionScriptCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"TransactionScriptCoder\");\n  }\n  constructor() {\n    super(\"TransactionScript\", \"struct TransactionScript\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.scriptGasLimit));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.receiptsRoot));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.scriptLength));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.scriptDataLength));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).encode(value.policyTypes));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.inputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.outputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessesCount));\n    parts.push(new ByteArrayCoder(value.scriptLength.toNumber()).encode(value.script));\n    parts.push(new ByteArrayCoder(value.scriptDataLength.toNumber()).encode(value.scriptData));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const scriptGasLimit = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const receiptsRoot = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const scriptLength = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const scriptDataLength = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new ByteArrayCoder(scriptLength.toNumber()).decode(data, o);\n    const script = decoded;\n    [decoded, o] = new ByteArrayCoder(scriptDataLength.toNumber()).decode(data, o);\n    const scriptData = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n    return [\n      {\n        type: 0 /* Script */,\n        scriptGasLimit,\n        scriptLength,\n        scriptDataLength,\n        policyTypes,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        receiptsRoot,\n        script,\n        scriptData,\n        policies,\n        inputs,\n        outputs,\n        witnesses\n      },\n      o\n    ];\n  }\n};\nvar TransactionCreateCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"TransactionCreateCoder\");\n  }\n  constructor() {\n    super(\"TransactionCreate\", \"struct TransactionCreate\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.bytecodeWitnessIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.salt));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.storageSlotsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).encode(value.policyTypes));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.inputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.outputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessesCount));\n    parts.push(\n      new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new StorageSlotCoder(), value.storageSlotsCount.toNumber()).encode(\n        value.storageSlots\n      )\n    );\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const bytecodeWitnessIndex = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const salt = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const storageSlotsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new StorageSlotCoder(), storageSlotsCount.toNumber()).decode(\n      data,\n      o\n    );\n    const storageSlots = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n    return [\n      {\n        type: 1 /* Create */,\n        bytecodeWitnessIndex,\n        policyTypes,\n        storageSlotsCount,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        salt,\n        policies,\n        storageSlots,\n        inputs,\n        outputs,\n        witnesses\n      },\n      o\n    ];\n  }\n};\nvar TransactionMintCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"TransactionMintCoder\");\n  }\n  constructor() {\n    super(\"TransactionMint\", \"struct TransactionMint\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new InputContractCoder().encode(value.inputContract));\n    parts.push(new OutputContractCoder().encode(value.outputContract));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.mintAmount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.mintAssetId));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").encode(value.gasPrice));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new InputContractCoder().decode(data, o);\n    const inputContract = decoded;\n    [decoded, o] = new OutputContractCoder().decode(data, o);\n    const outputContract = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const mintAmount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const mintAssetId = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.BigNumberCoder(\"u64\").decode(data, o);\n    const gasPrice = decoded;\n    return [\n      {\n        type: 2 /* Mint */,\n        txPointer,\n        inputContract,\n        outputContract,\n        mintAmount,\n        mintAssetId,\n        gasPrice\n      },\n      o\n    ];\n  }\n};\nvar TransactionUpgradeCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"TransactionUpgradeCoder\");\n  }\n  constructor() {\n    super(\"TransactionUpgrade\", \"struct TransactionUpgrade\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new UpgradePurposeCoder().encode(value.upgradePurpose));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).encode(value.policyTypes));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.inputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.outputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessesCount));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new UpgradePurposeCoder().decode(data, o);\n    const upgradePurpose = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n    return [\n      {\n        type: 3 /* Upgrade */,\n        upgradePurpose,\n        policyTypes,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        policies,\n        inputs,\n        outputs,\n        witnesses\n      },\n      o\n    ];\n  }\n};\nvar TransactionUploadCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"TransactionUploadCoder\");\n  }\n  constructor() {\n    super(\"TransactionUpload\", \"struct TransactionUpload\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.root));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.subsectionIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.subsectionsNumber));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.proofSetCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).encode(value.policyTypes));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.inputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.outputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessesCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder(), value.proofSetCount).encode(value.proofSet));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const root = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessIndex = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const subsectionIndex = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const subsectionsNumber = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const proofSetCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder(), proofSetCount).decode(data, o);\n    const proofSet = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n    return [\n      {\n        type: 4 /* Upload */,\n        root,\n        witnessIndex,\n        subsectionIndex,\n        subsectionsNumber,\n        proofSetCount,\n        policyTypes,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        proofSet,\n        policies,\n        inputs,\n        outputs,\n        witnesses\n      },\n      o\n    ];\n  }\n};\nvar TransactionBlobCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"TransactionBlobCoder\");\n  }\n  constructor() {\n    super(\"TransactionBlob\", \"struct TransactionBlob\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().encode(value.blobId));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessIndex));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).encode(value.policyTypes));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.inputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.outputsCount));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).encode(value.witnessesCount));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder().decode(data, o);\n    const blobId = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessIndex = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u32\", { padToWordSize: true }).decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true }).decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n    return [\n      {\n        type: 5 /* Blob */,\n        blobId,\n        witnessIndex,\n        policyTypes,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        policies,\n        inputs,\n        outputs,\n        witnesses\n      },\n      o\n    ];\n  }\n};\nvar TransactionCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  static {\n    __name(this, \"TransactionCoder\");\n  }\n  constructor() {\n    super(\"Transaction\", \"struct Transaction\", 0);\n  }\n  encode(value) {\n    const parts = [];\n    parts.push(new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).encode(value.type));\n    const { type } = value;\n    switch (value.type) {\n      case 0 /* Script */: {\n        parts.push(\n          new TransactionScriptCoder().encode(value)\n        );\n        break;\n      }\n      case 1 /* Create */: {\n        parts.push(\n          new TransactionCreateCoder().encode(value)\n        );\n        break;\n      }\n      case 2 /* Mint */: {\n        parts.push(new TransactionMintCoder().encode(value));\n        break;\n      }\n      case 3 /* Upgrade */: {\n        parts.push(\n          new TransactionUpgradeCoder().encode(value)\n        );\n        break;\n      }\n      case 4 /* Upload */: {\n        parts.push(\n          new TransactionUploadCoder().encode(value)\n        );\n        break;\n      }\n      case 5 /* Blob */: {\n        parts.push(new TransactionBlobCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.UNSUPPORTED_TRANSACTION_TYPE,\n          `Unsupported transaction type: ${type}`\n        );\n      }\n    }\n    return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_3__.concat)(parts);\n  }\n  decode(data, offset) {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u8\", { padToWordSize: true }).decode(data, o);\n    const type = decoded;\n    switch (type) {\n      case 0 /* Script */: {\n        [decoded, o] = new TransactionScriptCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 1 /* Create */: {\n        [decoded, o] = new TransactionCreateCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 2 /* Mint */: {\n        [decoded, o] = new TransactionMintCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 3 /* Upgrade */: {\n        [decoded, o] = new TransactionUpgradeCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 4 /* Upload */: {\n        [decoded, o] = new TransactionUploadCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case 5 /* Blob */: {\n        [decoded, o] = new TransactionBlobCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.FuelError(\n          _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.UNSUPPORTED_TRANSACTION_TYPE,\n          `Unsupported transaction type: ${type}`\n        );\n      }\n    }\n  }\n};\n\n// src/coders/utxo-id.ts\n\nvar UtxoIdCoder = class extends _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.StructCoder {\n  static {\n    __name(this, \"UtxoIdCoder\");\n  }\n  constructor() {\n    super(\"UtxoId\", {\n      transactionId: new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.B256Coder(),\n      outputIndex: new _fuel_ts_abi_coder__WEBPACK_IMPORTED_MODULE_0__.NumberCoder(\"u16\", { padToWordSize: true })\n    });\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+transactions@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@_dc6813ea14c53ffd87ce32c7cc62a339/node_modules/@fuel-ts/transactions/dist/index.mjs\n");

/***/ })

};
;