"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@fuel-ts+crypto@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__2af6281b4693138068177942c72da7d9";
exports.ids = ["vendor-chunks/@fuel-ts+crypto@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__2af6281b4693138068177942c72da7d9"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@fuel-ts+crypto@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__2af6281b4693138068177942c72da7d9/node_modules/@fuel-ts/crypto/dist/index.mjs":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fuel-ts+crypto@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__2af6281b4693138068177942c72da7d9/node_modules/@fuel-ts/crypto/dist/index.mjs ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bufferFromString: () => (/* binding */ bufferFromString2),\n/* harmony export */   computeHmac: () => (/* binding */ computeHmac2),\n/* harmony export */   decrypt: () => (/* binding */ decrypt2),\n/* harmony export */   decryptJsonWalletData: () => (/* binding */ decryptJsonWalletData2),\n/* harmony export */   encrypt: () => (/* binding */ encrypt2),\n/* harmony export */   encryptJsonWalletData: () => (/* binding */ encryptJsonWalletData2),\n/* harmony export */   keccak256: () => (/* binding */ keccak2562),\n/* harmony export */   keyFromPassword: () => (/* binding */ keyFromPassword2),\n/* harmony export */   pbkdf2: () => (/* binding */ pbkdf22),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes2),\n/* harmony export */   randomUUID: () => (/* binding */ randomUUID2),\n/* harmony export */   ripemd160: () => (/* binding */ ripemd1602),\n/* harmony export */   scrypt: () => (/* binding */ scrypt2),\n/* harmony export */   stringFromBuffer: () => (/* binding */ stringFromBuffer2)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/scrypt */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/scrypt.js\");\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fuel-ts/utils */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+utils@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1_j_f5ff000e110be614030afd6e0fd99f41/node_modules/@fuel-ts/utils/dist/index.mjs\");\n/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/ripemd160.js\");\n/* harmony import */ var _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fuel-ts/errors */ \"(ssr)/./node_modules/.pnpm/@fuel-ts+errors@0.101.1/node_modules/@fuel-ts/errors/dist/index.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! crypto */ \"crypto\");\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/shared/scrypt.ts\n\nvar scrypt = /* @__PURE__ */ __name((params) => {\n  const { password, salt, n, p, r, dklen } = params;\n  const derivedKey = (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__.scrypt)(password, salt, { N: n, r, p, dkLen: dklen });\n  return derivedKey;\n}, \"scrypt\");\n\n// src/shared/keccak256.ts\n\nvar keccak256 = /* @__PURE__ */ __name((data) => (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_256)(data), \"keccak256\");\n\n// src/shared/ripemd160.ts\n\n\nfunction ripemd160(_data) {\n  const data = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_data, \"data\");\n  return (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_3__.ripemd160)(data);\n}\n__name(ripemd160, \"ripemd160\");\n\n// src/node/aes-ctr.ts\n\n\n\n\n// src/node/bufferFromString.ts\nvar bufferFromString = /* @__PURE__ */ __name((string, encoding = \"base64\") => Uint8Array.from(Buffer.from(string, encoding)), \"bufferFromString\");\n\n// src/node/pbkdf2.ts\n\n\nfunction pbkdf2(_password, _salt, iterations, keylen, algo) {\n  const password = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_password, \"password\");\n  const salt = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_salt, \"salt\");\n  return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.hexlify)((0,crypto__WEBPACK_IMPORTED_MODULE_5__.pbkdf2Sync)(password, salt, iterations, keylen, algo));\n}\n__name(pbkdf2, \"pbkdf2\");\n\n// src/node/randomBytes.ts\n\nvar randomBytes = /* @__PURE__ */ __name((length) => {\n  const randomValues = Uint8Array.from(crypto__WEBPACK_IMPORTED_MODULE_5__.randomBytes(length));\n  return randomValues;\n}, \"randomBytes\");\n\n// src/node/stringFromBuffer.ts\nvar stringFromBuffer = /* @__PURE__ */ __name((buffer, encoding = \"base64\") => Buffer.from(buffer).toString(encoding), \"stringFromBuffer\");\n\n// src/node/aes-ctr.ts\nvar ALGORITHM = \"aes-256-ctr\";\nvar keyFromPassword = /* @__PURE__ */ __name((password, saltBuffer) => {\n  const passBuffer = bufferFromString(String(password).normalize(\"NFKC\"), \"utf-8\");\n  const key = pbkdf2(passBuffer, saltBuffer, 1e5, 32, \"sha256\");\n  return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(key);\n}, \"keyFromPassword\");\nvar encrypt = /* @__PURE__ */ __name(async (password, data) => {\n  const iv = randomBytes(16);\n  const salt = randomBytes(32);\n  const secret = keyFromPassword(password, salt);\n  const dataBuffer = Uint8Array.from(Buffer.from(JSON.stringify(data), \"utf-8\"));\n  const cipher = await crypto__WEBPACK_IMPORTED_MODULE_5__.createCipheriv(ALGORITHM, secret, iv);\n  let cipherData = cipher.update(dataBuffer);\n  cipherData = Buffer.concat([cipherData, cipher.final()]);\n  return {\n    data: stringFromBuffer(cipherData),\n    iv: stringFromBuffer(iv),\n    salt: stringFromBuffer(salt)\n  };\n}, \"encrypt\");\nvar decrypt = /* @__PURE__ */ __name(async (password, keystore) => {\n  const iv = bufferFromString(keystore.iv);\n  const salt = bufferFromString(keystore.salt);\n  const secret = keyFromPassword(password, salt);\n  const encryptedText = bufferFromString(keystore.data);\n  const decipher = await crypto__WEBPACK_IMPORTED_MODULE_5__.createDecipheriv(ALGORITHM, secret, iv);\n  const decrypted = decipher.update(encryptedText);\n  const deBuff = Buffer.concat([decrypted, decipher.final()]);\n  const decryptedData = Buffer.from(deBuff).toString(\"utf-8\");\n  try {\n    return JSON.parse(decryptedData);\n  } catch {\n    throw new _fuel_ts_errors__WEBPACK_IMPORTED_MODULE_4__.FuelError(_fuel_ts_errors__WEBPACK_IMPORTED_MODULE_4__.ErrorCode.INVALID_CREDENTIALS, \"Invalid credentials.\");\n  }\n}, \"decrypt\");\n\n// src/node/encryptJsonWalletData.ts\n\nasync function encryptJsonWalletData(data, key, iv) {\n  const cipher = await crypto__WEBPACK_IMPORTED_MODULE_5__.createCipheriv(\"aes-128-ctr\", key.subarray(0, 16), iv);\n  const encrypted = Buffer.concat([cipher.update(data), cipher.final()]);\n  return new Uint8Array(encrypted);\n}\n__name(encryptJsonWalletData, \"encryptJsonWalletData\");\nasync function decryptJsonWalletData(data, key, iv) {\n  const decipher = crypto__WEBPACK_IMPORTED_MODULE_5__.createDecipheriv(\"aes-128-ctr\", key.subarray(0, 16), iv);\n  const decrypted = await Buffer.concat([decipher.update(data), decipher.final()]);\n  return new Uint8Array(decrypted);\n}\n__name(decryptJsonWalletData, \"decryptJsonWalletData\");\n\n// src/node/hmac.ts\n\n\nfunction computeHmac(algorithm, _key, _data) {\n  const key = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_key, \"key\");\n  const data = (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_data, \"data\");\n  return (0,_fuel_ts_utils__WEBPACK_IMPORTED_MODULE_2__.hexlify)((0,crypto__WEBPACK_IMPORTED_MODULE_5__.createHmac)(algorithm, key).update(data).digest());\n}\n__name(computeHmac, \"computeHmac\");\n\n// src/node/randomUUID.ts\n\nvar randomUUID = /* @__PURE__ */ __name(() => (0,crypto__WEBPACK_IMPORTED_MODULE_5__.randomUUID)(), \"randomUUID\");\n\n// src/node/index.ts\nvar api = {\n  bufferFromString,\n  stringFromBuffer,\n  decrypt,\n  encrypt,\n  keyFromPassword,\n  randomBytes,\n  scrypt,\n  keccak256,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n  computeHmac,\n  pbkdf2,\n  ripemd160,\n  randomUUID\n};\nvar node_default = api;\n\n// src/index.ts\nvar {\n  bufferFromString: bufferFromString2,\n  decrypt: decrypt2,\n  encrypt: encrypt2,\n  keyFromPassword: keyFromPassword2,\n  randomBytes: randomBytes2,\n  stringFromBuffer: stringFromBuffer2,\n  scrypt: scrypt2,\n  keccak256: keccak2562,\n  decryptJsonWalletData: decryptJsonWalletData2,\n  encryptJsonWalletData: encryptJsonWalletData2,\n  computeHmac: computeHmac2,\n  pbkdf2: pbkdf22,\n  ripemd160: ripemd1602,\n  randomUUID: randomUUID2\n} = node_default;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fuel-ts+crypto@0.101.1_vitest@3.2.4_@types+debug@4.1.12_@types+node@24.7.2_jiti@2.6.1__2af6281b4693138068177942c72da7d9/node_modules/@fuel-ts/crypto/dist/index.mjs\n");

/***/ })

};
;